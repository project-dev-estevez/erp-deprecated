<?php if (!defined('BASEPATH')) exit('No direct script access allowed');

class Almacen_model extends CI_Model {

	public function __construct() {
		parent::__construct();
		$this->load->database();
	}

	public function ecos() {
		$query = $this->db->query("SELECT * FROM dtl_almacen WHERE tbl_almacenes_idtbl_almacenes = 28");
		return $query->result();
	}

	public function movimientos($buscar = '', $inicio = false, $cantidadRegistro = false) {
		$limit = '';
		if ($inicio !== false && $cantidadRegistro !== false) {
			$limit = 'LIMIT ' . $inicio . "," . $cantidadRegistro;
		}
		$query = $this->db->query("SELECT tbl_users.nombre, tbl_proyectos.nombre_proyecto, tbl_proyectos.numero_proyecto, tbl_almacenes.almacen, tbl_almacen_movimientos.*, ctl_autorizados_entrega.nombre as nombre_autorizado FROM tbl_almacen_movimientos LEFT JOIN tbl_users ON tbl_almacen_movimientos.tbl_users_idtbl_users=tbl_users.idtbl_users LEFT JOIN tbl_proyectos ON tbl_almacen_movimientos.tbl_proyectos_idtbl_proyectos=tbl_proyectos.idtbl_proyectos LEFT JOIN tbl_almacenes ON tbl_almacen_movimientos.tbl_almacenes_idtbl_almacenes=tbl_almacenes.idtbl_almacenes LEFT JOIN ctl_autorizados_entrega ON tbl_almacen_movimientos.ctl_autorizados_entrega_idctl_autorizados_entrega=ctl_autorizados_entrega.idctl_autorizados_entrega WHERE tbl_almacen_movimientos.tbl_almacenes_idtbl_almacenes = 1 AND (tbl_almacen_movimientos.uid LIKE '%$buscar%' OR tbl_almacen_movimientos.folio LIKE '%$buscar%' OR tbl_proyectos.numero_proyecto LIKE '%$buscar%' OR tbl_users.nombre LIKE '%$buscar%' OR ctl_autorizados_entrega.nombre LIKE '%$buscar%' OR tbl_almacen_movimientos.tipo LIKE '%$buscar%') ORDER BY tbl_almacen_movimientos.idtbl_almacen_movimientos DESC " . $limit);
		return $query->result();
	}

	public function proyectos($buscar = '', $inicio = false, $cantidadRegistro = false) {
		$limit = '';
		if ($inicio !== false && $cantidadRegistro !== false) {
			$limit = 'LIMIT ' . $inicio . "," . $cantidadRegistro;
		}
		//$this->db->from('tbl_proyectos');
		//$this->db->from('tbl_almacenes');
		//$this->db->join('tbl_proyectos', 'tbl_proyectos.tbl_almacenes_idtbl_almacenes=tbl_almacenes.idtbl_almacenes', 'left');
		//$this->db->where('tbl_almacenes.idtbl_almacenes!=', ID_ALMACEN_SISTEMAS);
		//$this->db->where('tbl_almacenes.idtbl_almacenes!=', ID_ALMACEN_ALTO_COSTO);
		//$query = $this->db->get();
		$query = $this->db->query("SELECT * FROM tbl_proyectos WHERE uid LIKE '%$buscar%' OR numero_proyecto LIKE '%$buscar%' OR nombre_proyecto LIKE '%$buscar%' " . $limit);
		return $query->result();
	}

	public function inventarioAlmacenGeneral($buscar = '', $buscar2='', $inicio = false, $cantidadRegistro = false) {
		$limit = '';
		if ($inicio !== false && $cantidadRegistro !== false) {
			$limit = 'LIMIT ' . $inicio . "," . $cantidadRegistro;
		}
		if ($buscar2 == '') {
			$string = "";
		}
		if ($buscar2 != '') {
			$string = "AND (DA.estatus = '$buscar2')";
		}
		$query = $this->db->query("SELECT DA.*, TC.*, CC.*, CUM.* FROM dtl_almacen DA LEFT JOIN tbl_catalogo TC ON TC.idtbl_catalogo = DA.tbl_catalogo_idtbl_catalogo LEFT JOIN ctl_categorias CC ON CC.idctl_categorias = TC.ctl_categorias_idctl_categorias LEFT JOIN ctl_unidades_medida CUM ON CUM.idctl_unidades_medida = TC.ctl_unidades_medida_idctl_unidades_medida WHERE DA.tbl_almacenes_idtbl_almacenes = 1 AND (TC.neodata LIKE '%$buscar%' OR TC.marca LIKE '%$buscar%' OR TC.modelo LIKE '%$buscar%' OR TC.descripcion LIKE '%$buscar%' OR DA.estatus LIKE '%$buscar%') $string" . $limit);
		return $query->result();
	}

	public function inventarioAlmacenGeneralActivos($buscar = '', $buscar2='', $inicio = false, $cantidadRegistro = false) {
		$limit = '';
		if ($inicio !== false && $cantidadRegistro !== false) {
			$limit = 'LIMIT ' . $inicio . "," . $cantidadRegistro;
		}
		if ($buscar2 == '') {
			$string = "";
		}
		if ($buscar2 != '') {
			$string = "AND (DA.estatus = '$buscar2')";
		}
		$query = $this->db->query("SELECT DA.*, TC.*, CC.*, CUM.*, (SELECT precio FROM dtl_pedido_catalogo WHERE tbl_catalogo_idtbl_catalogo = DA.tbl_catalogo_idtbl_catalogo ORDER BY iddtl_pedido_catalogo DESC LIMIT 1) AS ultimo_precio FROM dtl_almacen DA LEFT JOIN tbl_catalogo TC ON TC.idtbl_catalogo = DA.tbl_catalogo_idtbl_catalogo LEFT JOIN ctl_categorias CC ON CC.idctl_categorias = TC.ctl_categorias_idctl_categorias LEFT JOIN ctl_unidades_medida CUM ON CUM.idctl_unidades_medida = TC.ctl_unidades_medida_idctl_unidades_medida WHERE DA.tbl_almacenes_idtbl_almacenes = 1 AND TC.estatus_producto = 1 AND (TC.ctl_categorias_idctl_categorias IN (7, 16) OR TC.idtbl_catalogo IN (22763, 22918, 22463, 22882, 22124, 22080, 14, 15, 25))
			AND (TC.neodata LIKE '%$buscar%' OR TC.marca LIKE '%$buscar%' OR DA.numero_serie LIKE '%$buscar%' OR DA.numero_interno LIKE '%$buscar%' OR TC.modelo LIKE '%$buscar%' OR TC.descripcion LIKE '%$buscar%' OR DA.estatus LIKE '%$buscar%') $string" . $limit);
		return $query->result();
	}

	public function inventarioAlmacenGeneralConsumibles($buscar = '', $buscar2='', $inicio = false, $cantidadRegistro = false) {
		$limit = '';
		if ($inicio !== false && $cantidadRegistro !== false) {
			$limit = 'LIMIT ' . $inicio . "," . $cantidadRegistro;
		}
		if ($buscar2 == '') {
			$string = "";
		}
		if ($buscar2 != '') {
			$string = " AND (DA.estatus = '$buscar2')";
		}
		$query = $this->db->query("SELECT DA.*, TC.*, CC.*, CUM.*, (SELECT precio FROM dtl_pedido_catalogo WHERE tbl_catalogo_idtbl_catalogo = DA.tbl_catalogo_idtbl_catalogo ORDER BY iddtl_pedido_catalogo DESC LIMIT 1) AS ultimo_precio FROM dtl_almacen DA LEFT JOIN tbl_catalogo TC ON TC.idtbl_catalogo = DA.tbl_catalogo_idtbl_catalogo LEFT JOIN ctl_categorias CC ON CC.idctl_categorias = TC.ctl_categorias_idctl_categorias LEFT JOIN ctl_unidades_medida CUM ON CUM.idctl_unidades_medida = TC.ctl_unidades_medida_idctl_unidades_medida WHERE DA.tbl_almacenes_idtbl_almacenes = 1 AND TC.estatus_producto = 1 AND TC.tipo = 3 AND DA.existencias > 0 AND TC.ctl_categorias_idctl_categorias NOT IN (7, 16, 31, 10)
			AND (TC.neodata LIKE '%$buscar%' OR TC.marca LIKE '%$buscar%' OR TC.modelo LIKE '%$buscar%' OR TC.descripcion LIKE '%$buscar%' OR DA.estatus LIKE '%$buscar%') $string" . $limit);
		return $query->result();
	}

	public function inventarioAlmacenGeneralHerramientas($buscar = '', $buscar2='', $inicio = false, $cantidadRegistro = false) {
		$limit = '';
		if ($inicio !== false && $cantidadRegistro !== false) {
			$limit = 'LIMIT ' . $inicio . "," . $cantidadRegistro;
		}
		if ($buscar2 == '') {
			$string = "";
		}
		if ($buscar2 != '') {
			$string = " AND (DA.estatus = '$buscar2')";
		}
		$query = $this->db->query("SELECT DA.*, TC.*, CC.*, CUM.*, (SELECT precio FROM dtl_pedido_catalogo WHERE tbl_catalogo_idtbl_catalogo = DA.tbl_catalogo_idtbl_catalogo ORDER BY iddtl_pedido_catalogo DESC LIMIT 1) AS ultimo_precio FROM dtl_almacen DA LEFT JOIN tbl_catalogo TC ON TC.idtbl_catalogo = DA.tbl_catalogo_idtbl_catalogo LEFT JOIN ctl_categorias CC ON CC.idctl_categorias = TC.ctl_categorias_idctl_categorias LEFT JOIN ctl_unidades_medida CUM ON CUM.idctl_unidades_medida = TC.ctl_unidades_medida_idctl_unidades_medida WHERE DA.tbl_almacenes_idtbl_almacenes = 1 AND TC.estatus_producto = 1 AND TC.tipo = 3 AND TC.ctl_categorias_idctl_categorias = 10 AND DA.existencias > 0 AND TC.idtbl_catalogo NOT IN (22763, 22918, 22463, 22882, 22124, 22080, 14, 15, 25)
			AND (TC.neodata LIKE '%$buscar%' OR TC.marca LIKE '%$buscar%' OR TC.modelo LIKE '%$buscar%' OR TC.descripcion LIKE '%$buscar%' OR DA.estatus LIKE '%$buscar%') $string" . $limit);
		return $query->result();
	}

	public function inventarioSeguridadHigiene($buscar = '', $buscar2='', $inicio = false, $cantidadRegistro = false) {
		$limit = '';
		if ($inicio !== false && $cantidadRegistro !== false) {
			$limit = 'LIMIT ' . $inicio . "," . $cantidadRegistro;
		}
		if ($buscar2 == '') {
			$string = "";
		}
		if ($buscar2 != '') {
			$string = " AND (DA.estatus = '$buscar2')";
		}
		$query = $this->db->query("SELECT DA.*, TC.*, CC.*, CUM.*, (SELECT precio FROM dtl_pedido_catalogo WHERE tbl_catalogo_idtbl_catalogo = DA.tbl_catalogo_idtbl_catalogo ORDER BY iddtl_pedido_catalogo DESC LIMIT 1) AS ultimo_precio FROM dtl_almacen DA LEFT JOIN tbl_catalogo TC ON TC.idtbl_catalogo = DA.tbl_catalogo_idtbl_catalogo LEFT JOIN ctl_categorias CC ON CC.idctl_categorias = TC.ctl_categorias_idctl_categorias LEFT JOIN ctl_unidades_medida CUM ON CUM.idctl_unidades_medida = TC.ctl_unidades_medida_idctl_unidades_medida WHERE DA.tbl_almacenes_idtbl_almacenes = 1 AND TC.estatus_producto = 1 AND TC.tipo = 1
			AND (TC.neodata LIKE '%$buscar%' OR TC.marca LIKE '%$buscar%' OR TC.modelo LIKE '%$buscar%' OR TC.descripcion LIKE '%$buscar%' OR DA.estatus LIKE '%$buscar%') $string" . $limit);
		return $query->result();
	}

	public function inventarioAlmacenAltoCosto($buscar = '', $select = '', $inicio = false, $cantidadRegistro = false) {
		$buscar2 = '';		
		$buscar3 = '';
		$limit = '';
		if ($inicio !== false && $cantidadRegistro !== false) {
			$limit = 'LIMIT ' . $inicio . "," . $cantidadRegistro;
		}
		if (strpos($buscar, " ")) {
			$buscar2 = substr($buscar, -2, 2); // Si la cadena tiene espacios trae los últimos dos caracteres
			$buscar3 = substr($buscar, 0, 5);
			if (strpos($buscar2, " ")) {
				$buscar2 = substr($buscar, -1, 1);
				//echo $buscar2;
			}
			//echo $buscar3;
			//echo $buscar2;
		}
		if($select == '') {
			$string = "AND (DA.estatus = 'almacen' OR DA.estatus = 'asignado' OR DA.estatus = 'justificacion' OR DA.estatus = 'dañado' OR DA.estatus = 'descompuesto' OR DA.estatus = 'robado' OR DA.estatus = 'traspaso' OR DA.estatus = 'abuso de confianza' OR DA.estatus = 'vendida' OR DA.estatus = 'baja') ";
		}
		if($select != '') {
			$string = "AND (DA.estatus = '$select') ";
		}
		if ($buscar2 != '') {
			$query = $this->db->query("SELECT DA.*, TC.*, CC.*, CUM.*, DAS.*, TU.uid AS uid_usuario, TAM.uid AS uid_movimiento, (SELECT MAX(precio) FROM dtl_pedido_catalogo WHERE dtl_pedido_catalogo.tbl_catalogo_idtbl_catalogo = TC.idtbl_catalogo) AS precio_max FROM dtl_almacen DA LEFT JOIN tbl_catalogo TC ON TC.idtbl_catalogo = DA.tbl_catalogo_idtbl_catalogo LEFT JOIN ctl_categorias CC ON CC.idctl_categorias = TC.ctl_categorias_idctl_categorias LEFT JOIN ctl_unidades_medida CUM ON CUM.idctl_unidades_medida = TC.ctl_unidades_medida_idctl_unidades_medida LEFT JOIN dtl_asignacion DAS ON DAS.dtl_almacen_iddtl_almacen = DA.iddtl_almacen LEFT JOIN tbl_usuarios TU ON TU.idtbl_usuarios = DAS.tbl_usuarios_idtbl_usuarios LEFT JOIN tbl_almacen_movimientos TAM ON TAM.idtbl_almacen_movimientos = DAS.tbl_almacen_movimientos_idtbl_almacen_movimientos WHERE DA.tbl_almacenes_idtbl_almacenes = 2 AND TC.tipo = 2 AND (CC.idctl_categorias = 16 OR CC.idctl_categorias = 10) AND (DAS.iddtl_asignacion = (SELECT MAX(iddtl_asignacion) FROM dtl_asignacion t1 WHERE DA.iddtl_almacen = t1.dtl_almacen_iddtl_almacen) OR DAS.estatus_asignacion IS NULL) $string AND (TC.uid LIKE '%$buscar%' OR TC.neodata LIKE '%$buscar%' OR TC.marca LIKE '%$buscar%' OR TC.modelo LIKE '%$buscar%' OR TC.descripcion LIKE '%$buscar%' OR DA.numero_serie LIKE '%$buscar%' OR (TC.descripcion LIKE '%$buscar3%' AND DA.numero_interno LIKE '%$buscar2%') OR DA.numero_interno LIKE '%$buscar%' OR CC.abreviatura LIKE '%$buscar%') GROUP BY DA.iddtl_almacen ORDER BY DAS.iddtl_asignacion, DA.numero_interno " . $limit);
		} else {
            if ($buscar == 'NULL' || $buscar == 'null') {
                $query = $this->db->query("SELECT DA.*, TC.*, CC.*, CUM.*, DAS.*, TU.uid AS uid_usuario, TAM.uid AS uid_movimiento, (SELECT MAX(precio) FROM dtl_pedido_catalogo WHERE dtl_pedido_catalogo.tbl_catalogo_idtbl_catalogo = TC.idtbl_catalogo) AS precio_max FROM dtl_almacen DA LEFT JOIN tbl_catalogo TC ON TC.idtbl_catalogo = DA.tbl_catalogo_idtbl_catalogo LEFT JOIN ctl_categorias CC ON CC.idctl_categorias = TC.ctl_categorias_idctl_categorias LEFT JOIN ctl_unidades_medida CUM ON CUM.idctl_unidades_medida = TC.ctl_unidades_medida_idctl_unidades_medida LEFT JOIN dtl_asignacion DAS ON DAS.dtl_almacen_iddtl_almacen = DA.iddtl_almacen LEFT JOIN tbl_usuarios TU ON TU.idtbl_usuarios = DAS.tbl_usuarios_idtbl_usuarios LEFT JOIN tbl_almacen_movimientos TAM ON TAM.idtbl_almacen_movimientos = DAS.tbl_almacen_movimientos_idtbl_almacen_movimientos WHERE DA.tbl_almacenes_idtbl_almacenes = 2 AND TC.tipo = 2 AND (CC.idctl_categorias = 16 OR CC.idctl_categorias = 10) AND (DAS.iddtl_asignacion = (SELECT MAX(iddtl_asignacion) FROM dtl_asignacion t1 WHERE DA.iddtl_almacen = t1.dtl_almacen_iddtl_almacen) OR DAS.estatus_asignacion IS NULL) $string AND (TC.uid IS NULL OR TC.neodata IS NULL OR TC.marca IS NULL OR TC.modelo IS NULL OR TC.descripcion IS NULL OR DA.numero_serie IS NULL OR DA.numero_interno IS NULL OR CC.abreviatura IS NULL) GROUP BY DA.iddtl_almacen ORDER BY DAS.iddtl_asignacion, DA.numero_interno " . $limit);
            }else{
				$query = $this->db->query("SELECT DA.*, TC.*, CC.*, CUM.*, DAS.*, TU.uid AS uid_usuario, TAM.uid AS uid_movimiento, CONCAT(TUS.nombres,' ',TUS.apellido_paterno,' ',TUS.apellido_materno) AS usuario, (SELECT MAX(precio) FROM dtl_pedido_catalogo WHERE dtl_pedido_catalogo.tbl_catalogo_idtbl_catalogo = TC.idtbl_catalogo) AS precio_max FROM dtl_almacen DA LEFT JOIN tbl_catalogo TC ON TC.idtbl_catalogo = DA.tbl_catalogo_idtbl_catalogo LEFT JOIN ctl_categorias CC ON CC.idctl_categorias = TC.ctl_categorias_idctl_categorias LEFT JOIN ctl_unidades_medida CUM ON CUM.idctl_unidades_medida = TC.ctl_unidades_medida_idctl_unidades_medida LEFT JOIN dtl_asignacion DAS ON DAS.dtl_almacen_iddtl_almacen = DA.iddtl_almacen LEFT JOIN tbl_usuarios TU ON TU.idtbl_usuarios = DAS.tbl_usuarios_idtbl_usuarios LEFT JOIN tbl_almacen_movimientos TAM ON TAM.idtbl_almacen_movimientos = DAS.tbl_almacen_movimientos_idtbl_almacen_movimientos LEFT JOIN tbl_usuarios TUS ON TUS.idtbl_usuarios = DAS.tbl_usuarios_idtbl_usuarios WHERE DA.tbl_almacenes_idtbl_almacenes = 2 AND TC.tipo = 2 AND (CC.idctl_categorias = 16 OR CC.idctl_categorias = 10) AND (DAS.iddtl_asignacion = (SELECT MAX(iddtl_asignacion) FROM dtl_asignacion t1 WHERE DA.iddtl_almacen = t1.dtl_almacen_iddtl_almacen) OR DAS.estatus_asignacion IS NULL) $string AND (TC.uid LIKE '%$buscar%' OR TC.neodata LIKE '%$buscar%' OR TC.marca LIKE '%$buscar%' OR TC.modelo LIKE '%$buscar%' OR TC.descripcion LIKE '%$buscar%' OR DA.numero_serie LIKE '%$buscar%' OR DA.numero_interno LIKE '%$buscar%' OR CC.abreviatura LIKE '%$buscar%') GROUP BY DA.iddtl_almacen ORDER BY DAS.iddtl_asignacion, DA.numero_interno " . $limit);
			}
		}
		return $query->result();
	}

	public function inventarioAlmacenSistemasEC($buscar = '', $select = '', $inicio = false, $cantidadRegistro = false) {
		$buscar2 = '';
		$buscar3 = '';
		$limit = '';
		if ($inicio !== false && $cantidadRegistro !== false) {
			$limit = 'LIMIT ' . $inicio . "," . $cantidadRegistro;
		}
		if (strpos($buscar, " ")) {
			$buscar2 = substr($buscar, -2, 2); // Si la cadena tiene espacios trae los últimos dos caracteres
			$buscar3 = substr($buscar, 0, 5);
			if (strpos($buscar2, " ")) {
				$buscar2 = substr($buscar, -1, 1);
				echo $buscar2;
			}
			//echo $buscar3;
			//echo $buscar2;
		}
		if($select == '') {
			$string = "AND (DA.estatus = 'almacen' OR DA.estatus = 'asignado' OR DA.estatus = 'dañado' OR DA.estatus = 'descompuesto' OR DA.estatus = 'obsolescencia' OR DA.estatus = 'justificacion' OR DA.estatus = 'baja' OR DA.estatus = 'robado' OR DA.estatus = 'abuso de confianza' OR DA.estatus = 'vendida') ";
		}
		if($select != '') {
			$string = "AND (DA.estatus = '$select') ";
		}
		if ($buscar2 != '') {
			//$query = $this->db->query("SELECT DA.*, TC.*, CC.*, CUM.* FROM dtl_almacen DA LEFT JOIN tbl_catalogo TC ON TC.idtbl_catalogo = DA.tbl_catalogo_idtbl_catalogo LEFT JOIN ctl_categorias CC ON CC.idctl_categorias = TC.ctl_categorias_idctl_categorias LEFT JOIN ctl_unidades_medida CUM ON CUM.idctl_unidades_medida = TC.ctl_unidades_medida_idctl_unidades_medida WHERE DA.tbl_almacenes_idtbl_almacenes = " . ID_ALMACEN_AUTOS_CONTROL_VEHICULAR . " AND (CC.idctl_categorias = 30) $string AND (TC.uid LIKE '%$buscar%' OR TC.neodata LIKE '%$buscar%' OR TC.marca LIKE '%$buscar%' OR TC.modelo LIKE '%$buscar%' OR TC.descripcion LIKE '%$buscar%' OR DA.numero_serie LIKE '%$buscar%' OR (TC.descripcion LIKE '%$buscar3%' AND DA.numero_interno LIKE '%$buscar2%') OR DA.numero_interno LIKE '%$buscar%' OR DA.estatus LIKE '%$buscar%' OR CC.abreviatura LIKE '%$buscar%') " . $limit);
			$query = $this->db->query("SELECT DA.*, DA.estatus AS estatusAlmacen, TC.*, CC.*, CUM.*, TU.nombres, TU.apellido_paterno, TU.apellido_materno, DAS.estatus_asignacion, DAS.fecha_asignacion, TU.idtbl_usuarios, tbl_proyectos.numero_proyecto, tbl_proyectos.nombre_proyecto, DA.marca_almacen AS marcaal, DA.modelo_almacen AS modelolo, CE.establecimiento AS establecimiento  FROM dtl_almacen DA LEFT JOIN tbl_catalogo TC ON TC.idtbl_catalogo = DA.tbl_catalogo_idtbl_catalogo LEFT JOIN ctl_categorias CC ON CC.idctl_categorias = TC.ctl_categorias_idctl_categorias LEFT JOIN ctl_unidades_medida CUM ON CUM.idctl_unidades_medida = TC.ctl_unidades_medida_idctl_unidades_medida LEFT JOIN dtl_asignacion DAS ON DAS.dtl_almacen_iddtl_almacen = DA.iddtl_almacen LEFT JOIN tbl_usuarios TU ON TU.idtbl_usuarios = DAS.tbl_usuarios_idtbl_usuarios LEFT JOIN tbl_proyectos ON TU.tbl_proyectos_idtbl_proyectos = tbl_proyectos.idtbl_proyectos LEFT JOIN ctl_establecimientos CE ON CE.idctl_establecimiento = TU.establecimiento    WHERE CC.idctl_categorias = 16 AND DA.tbl_almacenes_idtbl_almacenes = " . ID_ALMACEN_SISTEMAS . " AND (TC.tipo = 6) AND (DAS.iddtl_asignacion = (SELECT MAX(iddtl_asignacion) FROM dtl_asignacion t1 WHERE DA.iddtl_almacen = t1.dtl_almacen_iddtl_almacen) OR DAS.estatus_asignacion IS NULL) $string AND (CONCAT(TU.nombres, ' ', TU.apellido_paterno, ' ', TU.apellido_materno) LIKE '%$buscar%' OR TC.uid LIKE '%$buscar%' OR TC.neodata LIKE '%$buscar%' OR TC.marca LIKE '%$buscar%' OR TC.modelo LIKE '%$buscar%' OR TC.descripcion LIKE '%$buscar%' OR DA.numero_serie LIKE '%$buscar%' OR (TC.descripcion LIKE '%$buscar3%' AND DA.numero_interno LIKE '%$buscar2%') OR DA.numero_interno LIKE '%$buscar%' OR DA.estatus LIKE '%$buscar%' OR CC.abreviatura LIKE '%$buscar%') GROUP BY DA.numero_interno " . $limit);
		} else {
			//$query = $this->db->query("SELECT DA.*, TC.*, CC.*, CUM.* FROM dtl_almacen DA LEFT JOIN tbl_catalogo TC ON TC.idtbl_catalogo = DA.tbl_catalogo_idtbl_catalogo LEFT JOIN ctl_categorias CC ON CC.idctl_categorias = TC.ctl_categorias_idctl_categorias LEFT JOIN ctl_unidades_medida CUM ON CUM.idctl_unidades_medida = TC.ctl_unidades_medida_idctl_unidades_medida WHERE DA.tbl_almacenes_idtbl_almacenes = " . ID_ALMACEN_AUTOS_CONTROL_VEHICULAR . " AND (CC.idctl_categorias = 30) $string AND (TC.uid LIKE '%$buscar%' OR TC.neodata LIKE '%$buscar%' OR TC.marca LIKE '%$buscar%' OR TC.modelo LIKE '%$buscar%' OR TC.descripcion LIKE '%$buscar%' OR DA.numero_serie LIKE '%$buscar%' OR DA.numero_interno LIKE '%$buscar%' OR DA.estatus LIKE '%$buscar%' OR CC.abreviatura LIKE '%$buscar%') " . $limit);
			$query = $this->db->query("SELECT DA.*, DA.estatus AS estatusAlmacen, TC.*, CC.*, CUM.*, TU.nombres, TU.apellido_paterno, TU.apellido_materno, DAS.estatus_asignacion, DAS.fecha_asignacion, TU.idtbl_usuarios, tbl_proyectos.numero_proyecto, tbl_proyectos.nombre_proyecto, DA.marca_almacen AS marcaal, DA.modelo_almacen AS modelolo, TD.departamento, TAS.area, CE.establecimiento AS establecimiento, DA.precio AS precio_almacen FROM dtl_almacen DA LEFT JOIN tbl_catalogo TC ON TC.idtbl_catalogo = DA.tbl_catalogo_idtbl_catalogo LEFT JOIN ctl_categorias CC ON CC.idctl_categorias = TC.ctl_categorias_idctl_categorias LEFT JOIN ctl_unidades_medida CUM ON CUM.idctl_unidades_medida = TC.ctl_unidades_medida_idctl_unidades_medida LEFT JOIN dtl_asignacion DAS ON DAS.dtl_almacen_iddtl_almacen = DA.iddtl_almacen LEFT JOIN tbl_usuarios TU ON TU.idtbl_usuarios = DAS.tbl_usuarios_idtbl_usuarios LEFT JOIN tbl_perfiles ON TU.tbl_perfiles_idtbl_perfiles = tbl_perfiles.idtbl_perfiles LEFT JOIN tbl_departamentos TD ON TD.idtbl_departamentos = tbl_perfiles.tbl_departamentos_idtbl_departamentos LEFT JOIN tbl_areas TAS ON TAS.idtbl_areas = TD.tbl_areas_idtbl_areas LEFT JOIN tbl_proyectos ON TU.tbl_proyectos_idtbl_proyectos = tbl_proyectos.idtbl_proyectos LEFT JOIN ctl_establecimientos CE ON CE.idctl_establecimiento = TU.establecimiento WHERE CC.idctl_categorias = 16 AND DA.tbl_almacenes_idtbl_almacenes = " . ID_ALMACEN_SISTEMAS . " AND (TC.tipo = 6) AND (DAS.iddtl_asignacion = (SELECT MAX(iddtl_asignacion) FROM dtl_asignacion t1 WHERE DA.iddtl_almacen = t1.dtl_almacen_iddtl_almacen) OR DAS.estatus_asignacion IS NULL) $string AND (CONCAT(TU.nombres, ' ', TU.apellido_paterno, ' ', TU.apellido_materno) LIKE '%$buscar%' OR TC.uid LIKE '%$buscar%' OR TC.neodata LIKE '%$buscar%' OR TC.marca LIKE '%$buscar%' OR TC.modelo LIKE '%$buscar%' OR TC.descripcion LIKE '%$buscar%' OR DA.numero_serie LIKE '%$buscar%' OR DA.numero_interno LIKE '%$buscar%' OR DA.estatus LIKE '%$buscar%' OR CC.abreviatura LIKE '%$buscar%') ORDER BY DA.numero_interno " . $limit);
				//$this->db->join('tbl_tramites_vehiculares', 'tbl_tramites_vehiculares.dtl_almacen_iddtl_almacen = DAM.iddtl_almacen AND tbl_tramites_vehiculares.tipo_tramite = "seguro" AND tbl_tramites_vehiculares.idtbl_tramites_vehiculares = (SELECT MAX(tbl_tramites_vehiculares.idtbl_tramites_vehiculares) FROM tbl_tramites_vehiculares WHERE tbl_tramites_vehiculares.dtl_almacen_iddtl_almacen = DAM.iddtl_almacen AND tbl_tramites_vehiculares.tipo_tramite = "seguro")');	
		}
		return $query->result();
	}

	public function inventarioAlmacenAltoCostoConsumibles($buscar = '', $inicio = false, $cantidadRegistro = false) {
		$limit = '';
		if ($inicio !== false && $cantidadRegistro !== false) {
			$limit = 'LIMIT ' . $inicio . "," . $cantidadRegistro;
		}
		$query = $this->db->query("SELECT DA.*, TC.*, CC.*, CUM.*, DA.marca_almacen AS marcaal, DA.modelo_almacen AS modelolo, (SELECT MAX(precio) FROM dtl_pedido_catalogo WHERE dtl_pedido_catalogo.tbl_catalogo_idtbl_catalogo = TC.idtbl_catalogo) AS precio_max FROM dtl_almacen DA LEFT JOIN tbl_catalogo TC ON TC.idtbl_catalogo = DA.tbl_catalogo_idtbl_catalogo LEFT JOIN ctl_categorias CC ON CC.idctl_categorias = TC.ctl_categorias_idctl_categorias LEFT JOIN ctl_unidades_medida CUM ON CUM.idctl_unidades_medida = TC.ctl_unidades_medida_idctl_unidades_medida WHERE DA.tbl_almacenes_idtbl_almacenes = 2 AND DA.estatus='almacen' AND TC.tipo = 2 AND (CC.idctl_categorias = 2) AND (TC.neodata LIKE '%$buscar%' OR TC.uid LIKE '%$buscar%' OR TC.marca LIKE '%$buscar%' OR DA.estado LIKE '%$buscar%' OR TC.modelo LIKE '%$buscar%' OR TC.descripcion LIKE '%$buscar%') " . $limit);
		return $query->result();
	}

	public function inventarioAlmacenLineas($buscar = '', $inicio = false, $cantidadRegistro = false) {
		$limit = '';
		if ($inicio !== false && $cantidadRegistro !== false) {
			$limit = 'LIMIT ' . $inicio . "," . $cantidadRegistro;
		}
			$query = $this->db->query("SELECT DA.*, DA.estatus AS estatusAlmacen, TC.*, CC.*, CUM.*, TU.nombres, TU.apellido_paterno, TU.apellido_materno, DAS.estatus_asignacion, DAS.fecha_asignacion, TU.idtbl_usuarios, tbl_proyectos.numero_proyecto, tbl_proyectos.nombre_proyecto, DA.marca_almacen AS marcaal, DA.modelo_almacen AS modelolo, TD.departamento, TAS.area, CE.establecimiento AS establecimiento, DA.precio AS precio_almacen, DA.numero_serie AS SIM, DA.numero_interno AS Telefono FROM dtl_almacen DA LEFT JOIN tbl_catalogo TC ON TC.idtbl_catalogo = DA.tbl_catalogo_idtbl_catalogo LEFT JOIN ctl_categorias CC ON CC.idctl_categorias = TC.ctl_categorias_idctl_categorias LEFT JOIN ctl_unidades_medida CUM ON CUM.idctl_unidades_medida = TC.ctl_unidades_medida_idctl_unidades_medida LEFT JOIN dtl_asignacion DAS ON DAS.dtl_almacen_iddtl_almacen = DA.iddtl_almacen LEFT JOIN tbl_usuarios TU ON TU.idtbl_usuarios = DAS.tbl_usuarios_idtbl_usuarios LEFT JOIN tbl_perfiles ON TU.tbl_perfiles_idtbl_perfiles = tbl_perfiles.idtbl_perfiles LEFT JOIN tbl_departamentos TD ON TD.idtbl_departamentos = tbl_perfiles.tbl_departamentos_idtbl_departamentos LEFT JOIN tbl_areas TAS ON TAS.idtbl_areas = TD.tbl_areas_idtbl_areas LEFT JOIN tbl_proyectos ON TU.tbl_proyectos_idtbl_proyectos = tbl_proyectos.idtbl_proyectos LEFT JOIN ctl_establecimientos CE ON CE.idctl_establecimiento = TU.establecimiento WHERE CC.idctl_categorias = 14 AND DA.tbl_almacenes_idtbl_almacenes = 397 AND (TC.tipo = 6) AND (DAS.iddtl_asignacion = (SELECT MAX(iddtl_asignacion) FROM dtl_asignacion t1 WHERE DA.iddtl_almacen = t1.dtl_almacen_iddtl_almacen) OR DAS.estatus_asignacion IS NULL)  AND (CONCAT(TU.nombres, ' ', TU.apellido_paterno, ' ', TU.apellido_materno) LIKE '%$buscar%' OR TC.uid LIKE '%$buscar%' OR TC.neodata LIKE '%$buscar%' OR TC.marca LIKE '%$buscar%' OR TC.modelo LIKE '%$buscar%' OR TC.descripcion LIKE '%$buscar%' OR DA.numero_serie LIKE '%$buscar%' OR DA.numero_interno LIKE '%$buscar%' OR DA.estatus LIKE '%$buscar%' OR CC.abreviatura LIKE '%$buscar%') ORDER BY DA.numero_interno " . $limit);
		return $query->result();
	}

	public function inventarioAlmacenSistemasHerramienta($buscar = '', $select = '', $inicio = false, $cantidadRegistro = false) {
		$buscar2 = '';		
		$buscar3 = '';
		$limit = '';
		if ($inicio !== false && $cantidadRegistro !== false) {
			$limit = 'LIMIT ' . $inicio . "," . $cantidadRegistro;
		}
		if (strpos($buscar, " ")) {
			$buscar2 = substr($buscar, -2, 2); // Si la cadena tiene espacios trae los últimos dos caracteres
			$buscar3 = substr($buscar, 0, 5);
			if (strpos($buscar2, " ")) {
				$buscar2 = substr($buscar, -1, 1);
				echo $buscar2;
			}
			//echo $buscar3;
			//echo $buscar2;
		}
		if($select == '') {
			$string = "AND (DA.estatus = 'almacen' OR DA.estatus = 'asignado' OR DA.estatus = 'dañado' OR DA.estatus = 'obsolescencia' OR DA.estatus = 'descompuesto' OR DA.estatus = 'robado' OR DA.estatus = 'abuso de confianza' OR DA.estatus = 'vendida') ";
		}
		if($select != '') {
			$string = "AND (DA.estatus = '$select') ";
		}
		if ($buscar2 != '') {
			$query = $this->db->query("SELECT DA.*, DA.estatus AS estatusAlmacen, TC.*, CC.*, CUM.*, TU.nombres, TU.apellido_paterno, TU.apellido_materno, DAS.estatus_asignacion, DAS.fecha_asignacion, TU.idtbl_usuarios, tbl_proyectos.numero_proyecto, tbl_proyectos.nombre_proyecto, DA.marca_almacen AS marcaal, DA.modelo_almacen AS modelolo, TD.departamento, CE.establecimiento AS establecimiento FROM dtl_almacen DA LEFT JOIN tbl_catalogo TC ON TC.idtbl_catalogo = DA.tbl_catalogo_idtbl_catalogo LEFT JOIN ctl_categorias CC ON CC.idctl_categorias = TC.ctl_categorias_idctl_categorias LEFT JOIN ctl_unidades_medida CUM ON CUM.idctl_unidades_medida = TC.ctl_unidades_medida_idctl_unidades_medida LEFT JOIN dtl_asignacion DAS ON DAS.dtl_almacen_iddtl_almacen = DA.iddtl_almacen LEFT JOIN tbl_usuarios TU ON TU.idtbl_usuarios = DAS.tbl_usuarios_idtbl_usuarios LEFT JOIN tbl_perfiles ON TU.tbl_perfiles_idtbl_perfiles = tbl_perfiles.idtbl_perfiles LEFT JOIN tbl_departamentos TD ON TD.idtbl_departamentos = tbl_perfiles.tbl_departamentos_idtbl_departamentos LEFT JOIN tbl_proyectos ON TU.tbl_proyectos_idtbl_proyectos = tbl_proyectos.idtbl_proyectos  LEFT JOIN ctl_establecimientos CE ON CE.idctl_establecimiento = TU.establecimiento WHERE CC.idctl_categorias = 10 AND DA.tbl_almacenes_idtbl_almacenes = " . ID_ALMACEN_SISTEMAS . " AND (TC.tipo = 6) AND (DAS.iddtl_asignacion = (SELECT MAX(iddtl_asignacion) FROM dtl_asignacion t1 WHERE DA.iddtl_almacen = t1.dtl_almacen_iddtl_almacen) OR DAS.estatus_asignacion IS NULL) $string AND (CONCAT(TU.nombres, ' ', TU.apellido_paterno, ' ', TU.apellido_materno) LIKE '%$buscar%' OR TC.uid LIKE '%$buscar%' OR TC.neodata LIKE '%$buscar%' OR TC.marca LIKE '%$buscar%' OR TC.modelo LIKE '%$buscar%' OR TC.descripcion LIKE '%$buscar%' OR DA.numero_serie LIKE '%$buscar%' OR DA.numero_interno LIKE '%$buscar%' OR DA.estatus LIKE '%$buscar%' OR CC.abreviatura LIKE '%$buscar%') ORDER BY DA.numero_interno " . $limit);
		} else {
			$query = $this->db->query("SELECT DA.*, DA.estatus AS estatusAlmacen, TC.*, CC.*, CUM.*, TU.nombres, TU.apellido_paterno, TU.apellido_materno, DAS.estatus_asignacion, DAS.fecha_asignacion, TU.idtbl_usuarios, tbl_proyectos.numero_proyecto, tbl_proyectos.nombre_proyecto, DA.marca_almacen AS marcaal, DA.modelo_almacen AS modelolo, TD.departamento, TAS.area, CE.establecimiento AS establecimiento FROM dtl_almacen DA LEFT JOIN tbl_catalogo TC ON TC.idtbl_catalogo = DA.tbl_catalogo_idtbl_catalogo LEFT JOIN ctl_categorias CC ON CC.idctl_categorias = TC.ctl_categorias_idctl_categorias LEFT JOIN ctl_unidades_medida CUM ON CUM.idctl_unidades_medida = TC.ctl_unidades_medida_idctl_unidades_medida LEFT JOIN dtl_asignacion DAS ON DAS.dtl_almacen_iddtl_almacen = DA.iddtl_almacen LEFT JOIN tbl_usuarios TU ON TU.idtbl_usuarios = DAS.tbl_usuarios_idtbl_usuarios LEFT JOIN tbl_perfiles ON TU.tbl_perfiles_idtbl_perfiles = tbl_perfiles.idtbl_perfiles LEFT JOIN tbl_departamentos TD ON TD.idtbl_departamentos = tbl_perfiles.tbl_departamentos_idtbl_departamentos LEFT JOIN tbl_areas TAS ON TAS.idtbl_areas = TD.tbl_areas_idtbl_areas LEFT JOIN tbl_proyectos ON TU.tbl_proyectos_idtbl_proyectos = tbl_proyectos.idtbl_proyectos LEFT JOIN ctl_establecimientos CE ON CE.idctl_establecimiento = TU.establecimiento WHERE CC.idctl_categorias = 10 AND DA.tbl_almacenes_idtbl_almacenes = " . ID_ALMACEN_SISTEMAS . " AND (TC.tipo = 6) AND (DAS.iddtl_asignacion = (SELECT MAX(iddtl_asignacion) FROM dtl_asignacion t1 WHERE DA.iddtl_almacen = t1.dtl_almacen_iddtl_almacen) OR DAS.estatus_asignacion IS NULL) $string AND (CONCAT(TU.nombres, ' ', TU.apellido_paterno, ' ', TU.apellido_materno) LIKE '%$buscar%' OR TC.uid LIKE '%$buscar%' OR TC.neodata LIKE '%$buscar%' OR TC.marca LIKE '%$buscar%' OR TC.modelo LIKE '%$buscar%' OR TC.descripcion LIKE '%$buscar%' OR DA.numero_serie LIKE '%$buscar%' OR DA.numero_interno LIKE '%$buscar%' OR DA.estatus LIKE '%$buscar%' OR CC.abreviatura LIKE '%$buscar%') ORDER BY DA.numero_interno " . $limit);
		}
		return $query->result();
	}

	public function inventarioAlmacenSistemasConsumibles($buscar = '', $inicio = false, $cantidadRegistro = false) {
		$limit = '';
		if ($inicio !== false && $cantidadRegistro !== false) {
			$limit = 'LIMIT ' . $inicio . "," . $cantidadRegistro;
		}
		$query = $this->db->query("SELECT DA.*, TC.*, CC.*, CUM.* FROM dtl_almacen DA LEFT JOIN tbl_catalogo TC ON TC.idtbl_catalogo = DA.tbl_catalogo_idtbl_catalogo LEFT JOIN ctl_categorias CC ON CC.idctl_categorias = TC.ctl_categorias_idctl_categorias LEFT JOIN ctl_unidades_medida CUM ON CUM.idctl_unidades_medida = TC.ctl_unidades_medida_idctl_unidades_medida WHERE DA.tbl_almacenes_idtbl_almacenes = " . ID_ALMACEN_SISTEMAS . " AND TC.tipo = 6 AND DA.estatus='almacen' AND CC.idctl_categorias = 2 AND (TC.neodata LIKE '%$buscar%' OR TC.uid LIKE '%$buscar%' OR TC.marca LIKE '%$buscar%' OR TC.modelo LIKE '%$buscar%' OR TC.descripcion LIKE '%$buscar%') " . $limit);
		return $query->result();
	}
	
	public function inventarioAlmacenSistemasTelefonos($buscar = '', $inicio = false, $cantidadRegistro = false) {			
		$limit = '';
		if ($inicio !== false && $cantidadRegistro !== false) {
			$limit = 'LIMIT ' . $inicio . "," . $cantidadRegistro;
		}	
			$query = $this->db->query("SELECT tbl_catalogo.neodata, tbl_catalogo.precio, tbl_catalogo.uid, tbl_almacenes.almacen, dtl_almacen.iddtl_almacen, dtl_almacen.existencias, dtl_almacen.numero_serie AS SIM, dtl_almacen.numero_interno AS Telefono, dtl_almacen.dtl_almacen_iddtl_almacen, dtl_almacen.estatus, dtl_almacen.nota, dtl_almacen.iddtl_almacen, tbl_catalogo.descripcion, tbl_catalogo.marca FROM dtl_almacen LEFT JOIN tbl_almacenes ON dtl_almacen.tbl_almacenes_idtbl_almacenes = tbl_almacenes.idtbl_almacenes LEFT JOIN tbl_catalogo ON dtl_almacen.tbl_catalogo_idtbl_catalogo = tbl_catalogo.idtbl_catalogo WHERE tbl_almacenes.idtbl_almacenes = 397 AND (dtl_almacen.numero_serie LIKE '%$buscar%' OR dtl_almacen.numero_interno LIKE '%$buscar%') ORDER BY dtl_almacen.iddtl_almacen ASC " . $limit);			
		return $query->result();
	}

	public function celulares(){
		$query = $this->db->query("SELECT dtl_almacen.iddtl_almacen, dtl_almacen.numero_serie, dtl_almacen.numero_interno, dtl_almacen.dtl_almacen_iddtl_almacen, tbl_catalogo.descripcion, tbl_catalogo.uid, tbl_catalogo.marca, tbl_catalogo.neodata, tbl_catalogo.modelo FROM dtl_almacen LEFT JOIN tbl_catalogo ON dtl_almacen.tbl_catalogo_idtbl_catalogo = tbl_catalogo.idtbl_catalogo WHERE (dtl_almacen.dtl_almacen_iddtl_almacen IS NULL OR dtl_almacen.dtl_almacen_iddtl_almacen = ' ') AND (tbl_catalogo.descripcion LIKE '%celular%') AND (tbl_catalogo.ctl_categorias_idctl_categorias = 16) AND (dtl_almacen.estatus = 'almacen' || dtl_almacen.estatus = 'asignado')");
		return $query->result();
	}

	public function inventarioAlmacenAreaMedica($buscar = '', $inicio = false, $cantidadRegistro = false) {
		$buscar2 = '';
		$buscar3 = '';
		$limit = '';
		if ($inicio !== false && $cantidadRegistro !== false) {
			$limit = 'LIMIT ' . $inicio . "," . $cantidadRegistro;
		}
		if (strpos($buscar, " ")) {
			$buscar2 = substr($buscar, -2, 2); // Si la cadena tiene espacios trae los últimos dos caracteres
			$buscar3 = substr($buscar, 0, 5);
			if (strpos($buscar2, " ")) {
				$buscar2 = substr($buscar, -1, 1);
				echo $buscar2;
			}
			//echo $buscar3;
			//echo $buscar2;
		}
		if ($buscar2 != '') {
			$query = $this->db->query("SELECT DA.*, TC.*, CC.*, CUM.* FROM dtl_almacen DA LEFT JOIN tbl_catalogo TC ON TC.idtbl_catalogo = DA.tbl_catalogo_idtbl_catalogo LEFT JOIN ctl_categorias CC ON CC.idctl_categorias = TC.ctl_categorias_idctl_categorias LEFT JOIN ctl_unidades_medida CUM ON CUM.idctl_unidades_medida = TC.ctl_unidades_medida_idctl_unidades_medida WHERE DA.tbl_almacenes_idtbl_almacenes = 23 AND (CC.idctl_categorias = 7 OR CC.idctl_categorias = 1 OR CC.idctl_categorias = 5) AND (TC.uid LIKE '%$buscar%' OR TC.neodata LIKE '%$buscar%' OR TC.marca LIKE '%$buscar%' OR TC.modelo LIKE '%$buscar%' OR TC.descripcion LIKE '%$buscar%' OR DA.numero_serie LIKE '%$buscar%' OR (TC.descripcion LIKE '%$buscar3%' AND DA.numero_interno LIKE '%$buscar2%') OR DA.numero_interno LIKE '%$buscar%' OR DA.estatus LIKE '%$buscar%' OR CC.abreviatura LIKE '%$buscar%') " . $limit);
		} else {
			$query = $this->db->query("SELECT DA.*, TC.*, CC.*, CUM.* FROM dtl_almacen DA LEFT JOIN tbl_catalogo TC ON TC.idtbl_catalogo = DA.tbl_catalogo_idtbl_catalogo LEFT JOIN ctl_categorias CC ON CC.idctl_categorias = TC.ctl_categorias_idctl_categorias LEFT JOIN ctl_unidades_medida CUM ON CUM.idctl_unidades_medida = TC.ctl_unidades_medida_idctl_unidades_medida WHERE DA.tbl_almacenes_idtbl_almacenes = 23 AND (CC.idctl_categorias = 7 OR CC.idctl_categorias = 1 OR CC.idctl_categorias = 5) AND (TC.uid LIKE '%$buscar%' OR TC.neodata LIKE '%$buscar%' OR TC.marca LIKE '%$buscar%' OR TC.modelo LIKE '%$buscar%' OR TC.descripcion LIKE '%$buscar%' OR DA.numero_serie LIKE '%$buscar%' OR DA.numero_interno LIKE '%$buscar%' OR DA.estatus LIKE '%$buscar%' OR CC.abreviatura LIKE '%$buscar%') " . $limit);
		}
		return $query->result();
	}

	public function inventarioAlmacenAutosControlVehicular($buscar = '', $select = '', $inicio = false, $cantidadRegistro = false) {
		$buscar2 = '';
		$buscar3 = '';
		$limit = '';
		if ($inicio !== false && $cantidadRegistro !== false) {
			$limit = 'LIMIT ' . $inicio . "," . $cantidadRegistro;
		}
		if (strpos($buscar, " ")) {
			$buscar2 = substr($buscar, -2, 2); // Si la cadena tiene espacios trae los últimos dos caracteres
			$buscar3 = substr($buscar, 0, 5);
			if (strpos($buscar2, " ")) {
				$buscar2 = substr($buscar, -1, 1);
				echo $buscar2;
			}
			//echo $buscar3;
			//echo $buscar2;
		}
		if($select == '') {
			$string = "AND (DA.estatus = 'disponible' OR DA.estatus = 'asignado' OR DA.estatus = 'programado' OR DA.estatus = 'reparacion' OR DA.estatus = 'taller' OR DA.estatus = 'robado' OR DA.estatus = 'vendida' OR DA.estatus = 'perdida total' OR DA.estatus = 'vendida' OR DA.estatus = 'colision' OR DA.estatus = 'tramite vehicular')";
		}
		if($select != '') {
			$string = "AND (DA.estatus = '$select') ";
		}
		if ($buscar2 != '') {
			//$query = $this->db->query("SELECT DA.*, TC.*, CC.*, CUM.* FROM dtl_almacen DA LEFT JOIN tbl_catalogo TC ON TC.idtbl_catalogo = DA.tbl_catalogo_idtbl_catalogo LEFT JOIN ctl_categorias CC ON CC.idctl_categorias = TC.ctl_categorias_idctl_categorias LEFT JOIN ctl_unidades_medida CUM ON CUM.idctl_unidades_medida = TC.ctl_unidades_medida_idctl_unidades_medida WHERE DA.tbl_almacenes_idtbl_almacenes = " . ID_ALMACEN_AUTOS_CONTROL_VEHICULAR . " AND (CC.idctl_categorias = 30) $string AND (TC.uid LIKE '%$buscar%' OR TC.neodata LIKE '%$buscar%' OR TC.marca LIKE '%$buscar%' OR TC.modelo LIKE '%$buscar%' OR TC.descripcion LIKE '%$buscar%' OR DA.numero_serie LIKE '%$buscar%' OR (TC.descripcion LIKE '%$buscar3%' AND DA.numero_interno LIKE '%$buscar2%') OR DA.numero_interno LIKE '%$buscar%' OR DA.estatus LIKE '%$buscar%' OR CC.abreviatura LIKE '%$buscar%') " . $limit);
			$query = $this->db->query("SELECT DA.*, DA.placas AS placas_auto, DA.estatus AS estatusAlmacen, TC.*, CC.*, CUM.*, TU.nombres, TU.apellido_paterno, TU.apellido_materno, DAS.estatus_asignacion, TU.idtbl_usuarios, tbl_tramites_vehiculares.*, dtl_servicio.*, tbl_entidad.nombre_entidad, tbl_proyectos.numero_proyecto, tbl_proyectos.nombre_proyecto FROM dtl_almacen DA LEFT JOIN tbl_catalogo TC ON TC.idtbl_catalogo = DA.tbl_catalogo_idtbl_catalogo LEFT JOIN ctl_categorias CC ON CC.idctl_categorias = TC.ctl_categorias_idctl_categorias LEFT JOIN ctl_unidades_medida CUM ON CUM.idctl_unidades_medida = TC.ctl_unidades_medida_idctl_unidades_medida LEFT JOIN dtl_asignacion DAS ON DAS.dtl_almacen_iddtl_almacen = DA.iddtl_almacen LEFT JOIN tbl_usuarios TU ON TU.idtbl_usuarios = DAS.tbl_usuarios_idtbl_usuarios LEFT JOIN tbl_proyectos ON TU.tbl_proyectos_idtbl_proyectos = tbl_proyectos.idtbl_proyectos LEFT JOIN tbl_entidad ON tbl_entidad.idtbl_entidad = DA.entidad_federativa_placas LEFT JOIN tbl_tramites_vehiculares ON tbl_tramites_vehiculares.dtl_almacen_iddtl_almacen = DA.iddtl_almacen AND tbl_tramites_vehiculares.idtbl_tramites_vehiculares = (SELECT MAX(t1.idtbl_tramites_vehiculares) FROM tbl_tramites_vehiculares t1 WHERE t1.dtl_almacen_iddtl_almacen = DA.iddtl_almacen and t1.tipo_tramite = 'servicio') LEFT JOIN dtl_servicio ON dtl_servicio.tbl_tramites_vehiculares_idtbl_tramites_vehiculares = tbl_tramites_vehiculares.idtbl_tramites_vehiculares AND dtl_servicio.estatus != 'FINALIZADO' WHERE DA.tbl_almacenes_idtbl_almacenes = " . ID_ALMACEN_AUTOS_CONTROL_VEHICULAR . " AND (TC.tipo = 4) AND (DAS.iddtl_asignacion = (SELECT MAX(iddtl_asignacion) FROM dtl_asignacion t1 WHERE DA.iddtl_almacen = t1.dtl_almacen_iddtl_almacen) OR DAS.estatus_asignacion IS NULL) $string AND (CONCAT(TU.nombres, ' ', TU.apellido_paterno, ' ', TU.apellido_materno) LIKE '%$buscar%' OR TC.uid LIKE '%$buscar%' OR TC.neodata LIKE '%$buscar%' OR TC.marca LIKE '%$buscar%' OR TC.modelo LIKE '%$buscar%' OR TC.descripcion LIKE '%$buscar%' OR DA.numero_serie LIKE '%$buscar%' OR (TC.descripcion LIKE '%$buscar3%' AND DA.numero_interno LIKE '%$buscar2%') OR DA.numero_interno LIKE '%$buscar%' OR DA.estatus LIKE '%$buscar%' OR CC.abreviatura LIKE '%$buscar%') ORDER BY DA.numero_interno " . $limit);
		} else {
			//$query = $this->db->query("SELECT DA.*, TC.*, CC.*, CUM.* FROM dtl_almacen DA LEFT JOIN tbl_catalogo TC ON TC.idtbl_catalogo = DA.tbl_catalogo_idtbl_catalogo LEFT JOIN ctl_categorias CC ON CC.idctl_categorias = TC.ctl_categorias_idctl_categorias LEFT JOIN ctl_unidades_medida CUM ON CUM.idctl_unidades_medida = TC.ctl_unidades_medida_idctl_unidades_medida WHERE DA.tbl_almacenes_idtbl_almacenes = " . ID_ALMACEN_AUTOS_CONTROL_VEHICULAR . " AND (CC.idctl_categorias = 30) $string AND (TC.uid LIKE '%$buscar%' OR TC.neodata LIKE '%$buscar%' OR TC.marca LIKE '%$buscar%' OR TC.modelo LIKE '%$buscar%' OR TC.descripcion LIKE '%$buscar%' OR DA.numero_serie LIKE '%$buscar%' OR DA.numero_interno LIKE '%$buscar%' OR DA.estatus LIKE '%$buscar%' OR CC.abreviatura LIKE '%$buscar%') " . $limit);
			//$query = $this->db->query("SELECT DA.*, DA.placas AS placas_auto, DA.estatus AS estatusAlmacen, TC.*, CC.*, CUM.*, TU.nombres, TU.apellido_paterno, TU.apellido_materno, DAS.estatus_asignacion, TU.idtbl_usuarios, tbl_tramites_vehiculares.*, dtl_servicio.*, tbl_entidad.nombre_entidad, tbl_proyectos.numero_proyecto, tbl_proyectos.nombre_proyecto, tbl_tramites_vehiculares1.fecha_tramite, tbl_tramites_vehiculares1.proxima_fecha_tramite, tbl_tramites_vehiculares1.seguro, tbl_tramites_vehiculares1.costo AS costo_seguro FROM dtl_almacen DA LEFT JOIN tbl_catalogo TC ON TC.idtbl_catalogo = DA.tbl_catalogo_idtbl_catalogo LEFT JOIN ctl_categorias CC ON CC.idctl_categorias = TC.ctl_categorias_idctl_categorias LEFT JOIN ctl_unidades_medida CUM ON CUM.idctl_unidades_medida = TC.ctl_unidades_medida_idctl_unidades_medida LEFT JOIN dtl_asignacion DAS ON DAS.dtl_almacen_iddtl_almacen = DA.iddtl_almacen LEFT JOIN tbl_usuarios TU ON TU.idtbl_usuarios = DAS.tbl_usuarios_idtbl_usuarios LEFT JOIN tbl_proyectos ON TU.tbl_proyectos_idtbl_proyectos = tbl_proyectos.idtbl_proyectos LEFT JOIN tbl_entidad ON tbl_entidad.idtbl_entidad = DA.entidad_federativa_placas LEFT JOIN tbl_tramites_vehiculares ON tbl_tramites_vehiculares.dtl_almacen_iddtl_almacen = DA.iddtl_almacen AND tbl_tramites_vehiculares.idtbl_tramites_vehiculares = (SELECT MAX(t1.idtbl_tramites_vehiculares) FROM tbl_tramites_vehiculares t1 WHERE t1.dtl_almacen_iddtl_almacen = DA.iddtl_almacen and t1.tipo_tramite = 'servicio') LEFT JOIN dtl_servicio ON dtl_servicio.tbl_tramites_vehiculares_idtbl_tramites_vehiculares = tbl_tramites_vehiculares.idtbl_tramites_vehiculares AND dtl_servicio.estatus != 'FINALIZADO' LEFT JOIN tbl_tramites_vehiculares tbl_tramites_vehiculares1 ON tbl_tramites_vehiculares1.dtl_almacen_iddtl_almacen = DA.iddtl_almacen AND tbl_tramites_vehiculares1.tipo_tramite = 'seguro' AND tbl_tramites_vehiculares1.idtbl_tramites_vehiculares = (SELECT MAX(tbl_tramites_vehiculares2.idtbl_tramites_vehiculares) FROM tbl_tramites_vehiculares AS tbl_tramites_vehiculares2 WHERE tbl_tramites_vehiculares2.dtl_almacen_iddtl_almacen = DA.iddtl_almacen AND tbl_tramites_vehiculares2.tipo_tramite = 'seguro') WHERE DA.tbl_almacenes_idtbl_almacenes = " . ID_ALMACEN_AUTOS_CONTROL_VEHICULAR . " AND (TC.tipo = 4) AND (DAS.iddtl_asignacion = (SELECT MAX(iddtl_asignacion) FROM dtl_asignacion t1 WHERE DA.iddtl_almacen = t1.dtl_almacen_iddtl_almacen) OR DAS.estatus_asignacion IS NULL) $string AND (CONCAT(TU.nombres, ' ', TU.apellido_paterno, ' ', TU.apellido_materno) LIKE '%$buscar%' OR TC.uid LIKE '%$buscar%' OR TC.neodata LIKE '%$buscar%' OR TC.marca LIKE '%$buscar%' OR TC.modelo LIKE '%$buscar%' OR TC.descripcion LIKE '%$buscar%' OR DA.numero_serie LIKE '%$buscar%' OR DA.numero_interno LIKE '%$buscar%' OR DA.estatus LIKE '%$buscar%' OR CC.abreviatura LIKE '%$buscar%') ORDER BY DA.numero_interno " . $limit);
			$query = $this->db->query("SELECT DA.*, DA.placas AS placas_auto, DA.estatus AS estatusAlmacen, TC.*, TU.nombres, TU.apellido_paterno, TU.apellido_materno, DAS.estatus_asignacion, TU.idtbl_usuarios, tbl_entidad.nombre_entidad, tbl_proyectos.numero_proyecto, tbl_proyectos.nombre_proyecto FROM dtl_almacen DA LEFT JOIN tbl_catalogo TC ON TC.idtbl_catalogo = DA.tbl_catalogo_idtbl_catalogo LEFT JOIN dtl_asignacion DAS ON DAS.dtl_almacen_iddtl_almacen = DA.iddtl_almacen LEFT JOIN tbl_usuarios TU ON TU.idtbl_usuarios = DAS.tbl_usuarios_idtbl_usuarios LEFT JOIN tbl_proyectos ON TU.tbl_proyectos_idtbl_proyectos = tbl_proyectos.idtbl_proyectos LEFT JOIN tbl_entidad ON tbl_entidad.idtbl_entidad = DA.entidad_federativa_placas WHERE DA.tbl_almacenes_idtbl_almacenes = " . ID_ALMACEN_AUTOS_CONTROL_VEHICULAR . " AND (TC.tipo = 4) AND (DAS.iddtl_asignacion = (SELECT MAX(iddtl_asignacion) FROM dtl_asignacion t1 WHERE DA.iddtl_almacen = t1.dtl_almacen_iddtl_almacen) OR DAS.estatus_asignacion IS NULL) $string AND (CONCAT(TU.nombres, ' ', TU.apellido_paterno, ' ', TU.apellido_materno) LIKE '%$buscar%' OR TC.uid LIKE '%$buscar%' OR TC.neodata LIKE '%$buscar%' OR TC.marca LIKE '%$buscar%' OR TC.modelo LIKE '%$buscar%' OR TC.descripcion LIKE '%$buscar%' OR DA.numero_serie LIKE '%$buscar%' OR DA.numero_interno LIKE '%$buscar%' OR DA.estatus LIKE '%$buscar%') ORDER BY DA.numero_interno " . $limit);

				//$this->db->join('tbl_tramites_vehiculares', 'tbl_tramites_vehiculares.dtl_almacen_iddtl_almacen = DAM.iddtl_almacen AND tbl_tramites_vehiculares.tipo_tramite = "seguro" AND tbl_tramites_vehiculares.idtbl_tramites_vehiculares = (SELECT MAX(tbl_tramites_vehiculares.idtbl_tramites_vehiculares) FROM tbl_tramites_vehiculares WHERE tbl_tramites_vehiculares.dtl_almacen_iddtl_almacen = DAM.iddtl_almacen AND tbl_tramites_vehiculares.tipo_tramite = "seguro")');	
		}
		return $query->result();
	}


	public function inventarioAlmacenTarjetas($buscar = '', $select = '', $inicio = false, $cantidadRegistro = false) {
		$buscar2 = '';
		$buscar3 = '';
		$limit = '';
		if ($inicio !== false && $cantidadRegistro !== false) {
			$limit = 'LIMIT ' . $inicio . "," . $cantidadRegistro;
		}
		if (strpos($buscar, " ")) {
			$buscar2 = substr($buscar, -2, 2); // Si la cadena tiene espacios trae los últimos dos caracteres
			$buscar3 = substr($buscar, 0, 5);
			if (strpos($buscar2, " ")) {
				$buscar2 = substr($buscar, -1, 1);
				echo $buscar2;
			}
			//echo $buscar3;
			//echo $buscar2;
		}
		if($select == '') {
			$string = "AND (DA.estatus = 'almacen' OR DA.estatus = 'asignado' OR DA.estatus = 'reparacion' OR DA.estatus = 'taller' OR DA.estatus = 'robado' OR DA.estatus = 'vendida' OR DA.estatus = 'perdida total' OR DA.estatus = 'vendida' OR DA.estatus = 'colision' OR DA.estatus = 'tramite vehicular')";
		}
		if($select != '') {
			$string = "AND (DA.estatus = '$select') ";
		}
		if ($buscar2 != '') {
			//$query = $this->db->query("SELECT DA.*, TC.*, CC.*, CUM.* FROM dtl_almacen DA LEFT JOIN tbl_catalogo TC ON TC.idtbl_catalogo = DA.tbl_catalogo_idtbl_catalogo LEFT JOIN ctl_categorias CC ON CC.idctl_categorias = TC.ctl_categorias_idctl_categorias LEFT JOIN ctl_unidades_medida CUM ON CUM.idctl_unidades_medida = TC.ctl_unidades_medida_idctl_unidades_medida WHERE DA.tbl_almacenes_idtbl_almacenes = " . ID_ALMACEN_AUTOS_CONTROL_VEHICULAR . " AND (CC.idctl_categorias = 30) $string AND (TC.uid LIKE '%$buscar%' OR TC.neodata LIKE '%$buscar%' OR TC.marca LIKE '%$buscar%' OR TC.modelo LIKE '%$buscar%' OR TC.descripcion LIKE '%$buscar%' OR DA.numero_serie LIKE '%$buscar%' OR (TC.descripcion LIKE '%$buscar3%' AND DA.numero_interno LIKE '%$buscar2%') OR DA.numero_interno LIKE '%$buscar%' OR DA.estatus LIKE '%$buscar%' OR CC.abreviatura LIKE '%$buscar%') " . $limit);
			$query = $this->db->query("SELECT DA.*, DA.placas AS placas_auto, DA.estatus AS estatusAlmacen, TC.*, CC.*, CUM.*, TU.nombres, TU.apellido_paterno, TU.apellido_materno, DAS.estatus_asignacion, TU.idtbl_usuarios, tbl_proyectos.numero_proyecto, tbl_proyectos.nombre_proyecto FROM dtl_almacen DA LEFT JOIN tbl_catalogo TC ON TC.idtbl_catalogo = DA.tbl_catalogo_idtbl_catalogo LEFT JOIN ctl_categorias CC ON CC.idctl_categorias = TC.ctl_categorias_idctl_categorias LEFT JOIN ctl_unidades_medida CUM ON CUM.idctl_unidades_medida = TC.ctl_unidades_medida_idctl_unidades_medida LEFT JOIN dtl_asignacion DAS ON DAS.dtl_almacen_iddtl_almacen = DA.iddtl_almacen LEFT JOIN tbl_usuarios TU ON TU.idtbl_usuarios = DAS.tbl_usuarios_idtbl_usuarios LEFT JOIN tbl_proyectos ON TU.tbl_proyectos_idtbl_proyectos = tbl_proyectos.idtbl_proyectos WHERE DA.tbl_almacenes_idtbl_almacenes = " . ID_ALMACEN_TARJETAS_GASOLINA . " AND (DAS.iddtl_asignacion = (SELECT MAX(iddtl_asignacion) FROM dtl_asignacion t1 WHERE DA.iddtl_almacen = t1.dtl_almacen_iddtl_almacen) OR DAS.estatus_asignacion IS NULL) $string AND (CONCAT(TU.nombres, ' ', TU.apellido_paterno, ' ', TU.apellido_materno) LIKE '%$buscar%' OR TC.uid LIKE '%$buscar%' OR TC.neodata LIKE '%$buscar%' OR TC.marca LIKE '%$buscar%' OR TC.modelo LIKE '%$buscar%' OR TC.descripcion LIKE '%$buscar%' OR DA.numero_serie LIKE '%$buscar%' OR (TC.descripcion LIKE '%$buscar3%' AND DA.numero_interno LIKE '%$buscar2%') OR DA.numero_interno LIKE '%$buscar%' OR DA.estatus LIKE '%$buscar%' OR CC.abreviatura LIKE '%$buscar%') ORDER BY DA.numero_serie ASC" . $limit);
		} else {
			//$query = $this->db->query("SELECT DA.*, TC.*, CC.*, CUM.* FROM dtl_almacen DA LEFT JOIN tbl_catalogo TC ON TC.idtbl_catalogo = DA.tbl_catalogo_idtbl_catalogo LEFT JOIN ctl_categorias CC ON CC.idctl_categorias = TC.ctl_categorias_idctl_categorias LEFT JOIN ctl_unidades_medida CUM ON CUM.idctl_unidades_medida = TC.ctl_unidades_medida_idctl_unidades_medida WHERE DA.tbl_almacenes_idtbl_almacenes = " . ID_ALMACEN_AUTOS_CONTROL_VEHICULAR . " AND (CC.idctl_categorias = 30) $string AND (TC.uid LIKE '%$buscar%' OR TC.neodata LIKE '%$buscar%' OR TC.marca LIKE '%$buscar%' OR TC.modelo LIKE '%$buscar%' OR TC.descripcion LIKE '%$buscar%' OR DA.numero_serie LIKE '%$buscar%' OR DA.numero_interno LIKE '%$buscar%' OR DA.estatus LIKE '%$buscar%' OR CC.abreviatura LIKE '%$buscar%') " . $limit);
			$query = $this->db->query("SELECT DA.*, DA.placas AS placas_auto, DA.estatus AS estatusAlmacen, TC.*, CC.*, CUM.*, TU.nombres, TU.apellido_paterno, TU.apellido_materno, DAS.estatus_asignacion, TU.idtbl_usuarios, tbl_proyectos.numero_proyecto, tbl_proyectos.nombre_proyecto FROM dtl_almacen DA LEFT JOIN tbl_catalogo TC ON TC.idtbl_catalogo = DA.tbl_catalogo_idtbl_catalogo LEFT JOIN ctl_categorias CC ON CC.idctl_categorias = TC.ctl_categorias_idctl_categorias LEFT JOIN ctl_unidades_medida CUM ON CUM.idctl_unidades_medida = TC.ctl_unidades_medida_idctl_unidades_medida LEFT JOIN dtl_asignacion DAS ON DAS.dtl_almacen_iddtl_almacen = DA.iddtl_almacen LEFT JOIN tbl_usuarios TU ON TU.idtbl_usuarios = DAS.tbl_usuarios_idtbl_usuarios LEFT JOIN tbl_proyectos ON TU.tbl_proyectos_idtbl_proyectos = tbl_proyectos.idtbl_proyectos WHERE DA.tbl_almacenes_idtbl_almacenes = " . ID_ALMACEN_TARJETAS_GASOLINA . " AND (DAS.iddtl_asignacion = (SELECT MAX(iddtl_asignacion) FROM dtl_asignacion t1 WHERE DA.iddtl_almacen = t1.dtl_almacen_iddtl_almacen) OR DAS.estatus_asignacion IS NULL) $string AND (CONCAT(TU.nombres, ' ', TU.apellido_paterno, ' ', TU.apellido_materno) LIKE '%$buscar%' OR TC.uid LIKE '%$buscar%' OR TC.neodata LIKE '%$buscar%' OR TC.marca LIKE '%$buscar%' OR TC.modelo LIKE '%$buscar%' OR TC.descripcion LIKE '%$buscar%' OR DA.numero_serie LIKE '%$buscar%' OR DA.numero_interno LIKE '%$buscar%' OR DA.estatus LIKE '%$buscar%' OR CC.abreviatura LIKE '%$buscar%') ORDER BY DA.numero_serie ASC " . $limit);

				//$this->db->join('tbl_tramites_vehiculares', 'tbl_tramites_vehiculares.dtl_almacen_iddtl_almacen = DAM.iddtl_almacen AND tbl_tramites_vehiculares.tipo_tramite = "seguro" AND tbl_tramites_vehiculares.idtbl_tramites_vehiculares = (SELECT MAX(tbl_tramites_vehiculares.idtbl_tramites_vehiculares) FROM tbl_tramites_vehiculares WHERE tbl_tramites_vehiculares.dtl_almacen_iddtl_almacen = DAM.iddtl_almacen AND tbl_tramites_vehiculares.tipo_tramite = "seguro")');	
		}
		return $query->result();
	}

	public function inventarioAlmacenAreaMedicaConsumibles($buscar = '', $inicio = false, $cantidadRegistro = false) {
		$limit = '';
		if ($inicio !== false && $cantidadRegistro !== false) {
			$limit = 'LIMIT ' . $inicio . "," . $cantidadRegistro;
		}
		$query = $this->db->query("SELECT DA.*, TC.*, CC.*, CUM.* FROM dtl_almacen DA LEFT JOIN tbl_catalogo TC ON TC.idtbl_catalogo = DA.tbl_catalogo_idtbl_catalogo LEFT JOIN ctl_categorias CC ON CC.idctl_categorias = TC.ctl_categorias_idctl_categorias LEFT JOIN ctl_unidades_medida CUM ON CUM.idctl_unidades_medida = TC.ctl_unidades_medida_idctl_unidades_medida WHERE DA.tbl_almacenes_idtbl_almacenes = 23 AND DA.estatus='almacen' AND (TC.neodata LIKE '%$buscar%' OR TC.uid LIKE '%$buscar%' OR TC.marca LIKE '%$buscar%' OR TC.modelo LIKE '%$buscar%' OR TC.descripcion LIKE '%$buscar%') " . $limit);
		return $query->result();
	}

	public function productosAlmacenCli($id_almacen, $buscar = '', $inicio = false, $cantidadRegistro = false) {
		$limit = '';
		if ($inicio !== false && $cantidadRegistro !== false) {
			$limit = 'LIMIT ' . $inicio . "," . $cantidadRegistro;
		}
		$condition = "";
		if($this->session->userdata('tipo') == 3 || $this->session->userdata('tipo') == 15 || ($this->session->userdata('tipo') == 4 && $id_almacen == 29)){
			$condition = " AND TC.estatus_producto = 1 AND TC.tipo = 5 ";
		}
		//CC.tipo = 4 Quitado del query , dtl_pedido_catalogo.precio AS precio_pedido LEFT JOIN dtl_pedido_catalogo ON dtl_pedido_catalogo.tbl_catalogo_idtbl_catalogo = TC.idtbl_catalogo 
		$query = $this->db->query("SELECT TC.*, CC.*, CUM.*, DA.*, TC.precio, TC.precio AS precio_pedido FROM dtl_almacen DA LEFT JOIN tbl_catalogo TC ON TC.idtbl_catalogo = DA.tbl_catalogo_idtbl_catalogo LEFT JOIN ctl_categorias CC ON CC.idctl_categorias = TC.ctl_categorias_idctl_categorias LEFT JOIN ctl_unidades_medida CUM ON CUM.idctl_unidades_medida = TC.ctl_unidades_medida_idctl_unidades_medida WHERE (TC.neodata LIKE '%$buscar%' OR TC.descripcion LIKE '%$buscar%') AND DA.tbl_almacenes_idtbl_almacenes = $id_almacen  AND DA.estatus = 'almacen'" . $condition . "  " . $limit);
		return $query->result();
	}

	public function excel_kuali_herramientas($id_almacen, $buscar = '', $inicio = false, $cantidadRegistro = false) {
		$limit = '';
		if ($inicio !== false && $cantidadRegistro !== false) {
			$limit = 'LIMIT ' . $inicio . "," . $cantidadRegistro;
		}
		$condition = "";
		if($this->session->userdata('tipo') == 3 || $this->session->userdata('tipo') == 15 || ($this->session->userdata('tipo') == 4 && $id_almacen == 29)){
			$condition = " AND TC.estatus_producto = 1 AND TC.tipo = 5 ";
		}
		//CC.tipo = 4 Quitado del query
		$query = $this->db->query("SELECT TC.*, CC.*, CUM.*, DA.*, TC.precio FROM dtl_almacen DA LEFT JOIN tbl_catalogo TC ON TC.idtbl_catalogo = DA.tbl_catalogo_idtbl_catalogo LEFT JOIN ctl_categorias CC ON CC.idctl_categorias = TC.ctl_categorias_idctl_categorias LEFT JOIN ctl_unidades_medida CUM ON CUM.idctl_unidades_medida = TC.ctl_unidades_medida_idctl_unidades_medida WHERE (TC.neodata LIKE '%$buscar%' OR TC.descripcion LIKE '%$buscar%') AND CC.idctl_categorias = 10 AND DA.tbl_almacenes_idtbl_almacenes = $id_almacen " . $condition . $limit);
		return $query->result();
	}

	public function productosAlmacenCliActivo($id_almacen, $buscar = '', $buscar2='', $inicio = false, $cantidadRegistro = false) {
		
		$limit = '';
		if ($inicio !== false && $cantidadRegistro !== false) {
			$limit = 'LIMIT ' . $inicio . "," . $cantidadRegistro;
		}
		if ($buscar2 == '') {
			$string = "";
		}
		if ($buscar2 != '') {
			$string = " AND (DA.estatus = '$buscar2')";
		}	
		$condition = "";
		if($this->session->userdata('tipo') == 3 || $this->session->userdata('tipo') == 15 || ($this->session->userdata('tipo') == 4 && $id_almacen == 29)){
			$condition = " AND TC.estatus_producto = 1 AND TC.tipo = 5 ";
		}else{
		//CC.tipo = 4 Quitado del query
		$query = $this->db->query("SELECT DA.*, TC.*, CC.*, CUM.*, TC.precio FROM dtl_almacen DA LEFT JOIN tbl_catalogo TC ON TC.idtbl_catalogo = DA.tbl_catalogo_idtbl_catalogo LEFT JOIN ctl_categorias CC ON CC.idctl_categorias = TC.ctl_categorias_idctl_categorias LEFT JOIN ctl_unidades_medida CUM ON CUM.idctl_unidades_medida = TC.ctl_unidades_medida_idctl_unidades_medida WHERE (TC.neodata LIKE '%$buscar%' OR TC.descripcion LIKE '%$buscar%' OR DA.estatus LIKE '%$buscar%') $string AND TC.ctl_categorias_idctl_categorias = 16 AND DA.tbl_almacenes_idtbl_almacenes = $id_almacen " . $condition . $limit);
		}
		return $query->result();
	}

	public function productosAlmacenCliHerramienta($id_almacen, $buscar = '', $buscar2 = '', $inicio = false, $cantidadRegistro = false) {
		$limit = '';
		if ($inicio !== false && $cantidadRegistro !== false) {
			$limit = 'LIMIT ' . $inicio . "," . $cantidadRegistro;
		}		
		if($buscar2 == ''){
			$string = "";
		}
		if($buscar2 != ''){
			$string = " AND (DA.estatus = '$buscar2')";
		}
		$condition = "";
		if($this->session->userdata('tipo') == 3 || $this->session->userdata('tipo') == 15 || ($this->session->userdata('tipo') == 4 && $id_almacen == 29)){
			$condition = " AND TC.estatus_producto = 1 AND TC.tipo = 5 ";
		}else{
		//CC.tipo = 4 Quitado del query
		$query = $this->db->query("SELECT TC.*, CC.*, CUM.*, DA.*, TC.precio FROM dtl_almacen DA LEFT JOIN tbl_catalogo TC ON TC.idtbl_catalogo = DA.tbl_catalogo_idtbl_catalogo LEFT JOIN ctl_categorias CC ON CC.idctl_categorias = TC.ctl_categorias_idctl_categorias LEFT JOIN ctl_unidades_medida CUM ON CUM.idctl_unidades_medida = TC.ctl_unidades_medida_idctl_unidades_medida WHERE (TC.neodata LIKE '%$buscar%' OR TC.descripcion LIKE '%$buscar%' OR DA.estatus LIKE '%$buscar%') $string AND TC.ctl_categorias_idctl_categorias = 10 AND DA.tbl_almacenes_idtbl_almacenes = $id_almacen " . $condition . $limit);
		return $query->result();
	}}

	public function productosAlmacenCliConsumible($id_almacen, $buscar = '', $buscar2 = '', $inicio = false, $cantidadRegistro = false) {
		$limit = '';
		if ($inicio !== false && $cantidadRegistro !== false) {
			$limit = 'LIMIT ' . $inicio . "," . $cantidadRegistro;
		}
		if($buscar2 == ''){
			$string= "";
		}
		if($buscar2 != ''){
			$string = " AND (DA.estatus = '$buscar2')";
		}
			$condition = "";
		if($this->session->userdata('tipo') == 3 || $this->session->userdata('tipo') == 15 || ($this->session->userdata('tipo') == 4 && $id_almacen == 29)){
			$condition = " AND TC.estatus_producto = 1 AND TC.tipo = 5 ";
		} else{
			//CC.tipo = 4 Quitado del query
			$query = $this->db->query("SELECT TC.*, CC.*, CUM.*, DA.*, TC.precio FROM dtl_almacen DA LEFT JOIN tbl_catalogo TC ON TC.idtbl_catalogo = DA.tbl_catalogo_idtbl_catalogo LEFT JOIN ctl_categorias CC ON CC.idctl_categorias = TC.ctl_categorias_idctl_categorias LEFT JOIN ctl_unidades_medida CUM ON CUM.idctl_unidades_medida = TC.ctl_unidades_medida_idctl_unidades_medida WHERE (TC.neodata LIKE '%$buscar%' OR TC.descripcion LIKE '%$buscar%' OR DA.estatus LIKE '%$buscar%') $string AND TC.ctl_categorias_idctl_categorias = 2 AND DA.tbl_almacenes_idtbl_almacenes = $id_almacen " . $condition . $limit);
			return $query->result();
		}
	}

	public function explosionInsumosCli($id_almacen, $buscar = '', $inicio = false, $cantidadRegistro = false) {
		$limit = '';
		if ($inicio !== false && $cantidadRegistro !== false) {
			$limit = 'LIMIT ' . $inicio . "," . $cantidadRegistro;
		}
		//CC.tipo = 4 Quitado del query
		$query = $this->db->query("SELECT TC.*, CC.*, CUM.*, DAM.*, SUM(DAM.cantidad) AS total_explosion FROM dtl_almacen_movimientos DAM LEFT JOIN tbl_almacen_movimientos TAM ON TAM.idtbl_almacen_movimientos = DAM.tbl_almacen_movimientos_idtbl_almacen_movimientos LEFT JOIN tbl_catalogo TC ON TC.idtbl_catalogo = DAM.tbl_catalogo_idtbl_catalogo LEFT JOIN ctl_categorias CC ON CC.idctl_categorias = TC.ctl_categorias_idctl_categorias LEFT JOIN ctl_unidades_medida CUM ON CUM.idctl_unidades_medida = TC.ctl_unidades_medida_idctl_unidades_medida WHERE (TC.neodata LIKE '%$buscar%' OR TC.descripcion LIKE '%$buscar%') AND TAM.movimiento_virtual = 3 AND TAM.estatus = 1 AND TAM.tbl_almacenes_idtbl_almacenes = $id_almacen  GROUP BY TC.idtbl_catalogo " . $limit);
		return $query->result();
	}

	public function explosionInsumosCli111($id_almacen, $buscar = '', $inicio = false, $cantidadRegistro = false) {
		$limit = '';
		if ($inicio !== false && $cantidadRegistro !== false) {
			$limit = 'LIMIT ' . $inicio . "," . $cantidadRegistro;
		}
		//CC.tipo = 4 Quitado del query
		$query = $this->db->query("SELECT TC.*, CC.*, CUM.*, DAM.*, SUM(DAM.cantidad) AS total_explosion, (SELECT SUM(dtl_almacen_movimientos.cantidad) FROM tbl_almacen_movimientos LEFT JOIN dtl_almacen_movimientos ON dtl_almacen_movimientos.tbl_almacen_movimientos_idtbl_almacen_movimientos = tbl_almacen_movimientos.idtbl_almacen_movimientos WHERE tbl_almacen_movimientos.estatus = 1 AND tbl_almacen_movimientos.movimiento_virtual = 3 AND tbl_almacen_movimientos.tbl_almacenes_idtbl_almacenes = 290 AND dtl_almacen_movimientos.tbl_catalogo_idtbl_catalogo = DAM.tbl_catalogo_idtbl_catalogo) AS 'nuevo_leon', (SELECT SUM(dtl_almacen_movimientos.cantidad) FROM tbl_almacen_movimientos LEFT JOIN dtl_almacen_movimientos ON dtl_almacen_movimientos.tbl_almacen_movimientos_idtbl_almacen_movimientos = tbl_almacen_movimientos.idtbl_almacen_movimientos WHERE tbl_almacen_movimientos.estatus = 1 AND tbl_almacen_movimientos.movimiento_virtual = 3 AND tbl_almacen_movimientos.tbl_almacenes_idtbl_almacenes = 429 AND dtl_almacen_movimientos.tbl_catalogo_idtbl_catalogo = DAM.tbl_catalogo_idtbl_catalogo) AS 'ciudad_victoria', (SELECT SUM(dtl_almacen_movimientos.cantidad) FROM tbl_almacen_movimientos LEFT JOIN dtl_almacen_movimientos ON dtl_almacen_movimientos.tbl_almacen_movimientos_idtbl_almacen_movimientos = tbl_almacen_movimientos.idtbl_almacen_movimientos WHERE tbl_almacen_movimientos.estatus = 1 AND tbl_almacen_movimientos.movimiento_virtual = 3 AND tbl_almacen_movimientos.tbl_almacenes_idtbl_almacenes = 433 AND dtl_almacen_movimientos.tbl_catalogo_idtbl_catalogo = DAM.tbl_catalogo_idtbl_catalogo) AS 'trancoso_region3', (SELECT SUM(dtl_almacen_movimientos.cantidad) FROM tbl_almacen_movimientos LEFT JOIN dtl_almacen_movimientos ON dtl_almacen_movimientos.tbl_almacen_movimientos_idtbl_almacen_movimientos = tbl_almacen_movimientos.idtbl_almacen_movimientos WHERE tbl_almacen_movimientos.estatus = 1 AND tbl_almacen_movimientos.movimiento_virtual = 3 AND tbl_almacen_movimientos.tbl_almacenes_idtbl_almacenes = 315 AND dtl_almacen_movimientos.tbl_catalogo_idtbl_catalogo = DAM.tbl_catalogo_idtbl_catalogo) AS 'coahuila', (SELECT SUM(dtl_almacen_movimientos.cantidad) FROM tbl_almacen_movimientos LEFT JOIN dtl_almacen_movimientos ON dtl_almacen_movimientos.tbl_almacen_movimientos_idtbl_almacen_movimientos = tbl_almacen_movimientos.idtbl_almacen_movimientos WHERE tbl_almacen_movimientos.estatus = 1 AND tbl_almacen_movimientos.movimiento_virtual = 3 AND tbl_almacen_movimientos.tbl_almacenes_idtbl_almacenes = 339 AND dtl_almacen_movimientos.tbl_catalogo_idtbl_catalogo = DAM.tbl_catalogo_idtbl_catalogo) AS 'tamaulipas' FROM dtl_almacen_movimientos DAM LEFT JOIN tbl_almacen_movimientos TAM ON TAM.idtbl_almacen_movimientos = DAM.tbl_almacen_movimientos_idtbl_almacen_movimientos LEFT JOIN tbl_catalogo TC ON TC.idtbl_catalogo = DAM.tbl_catalogo_idtbl_catalogo LEFT JOIN ctl_categorias CC ON CC.idctl_categorias = TC.ctl_categorias_idctl_categorias LEFT JOIN ctl_unidades_medida CUM ON CUM.idctl_unidades_medida = TC.ctl_unidades_medida_idctl_unidades_medida WHERE (TC.neodata LIKE '%$buscar%' OR TC.descripcion LIKE '%$buscar%') AND TAM.movimiento_virtual = 3 AND TAM.estatus = 1 AND TAM.tbl_almacenes_idtbl_almacenes = $id_almacen  GROUP BY TC.idtbl_catalogo " . $limit);
		return $query->result();
	}

	public function explosionInsumosCli112($id_almacen, $buscar = '', $inicio = false, $cantidadRegistro = false) {
		$limit = '';
		if ($inicio !== false && $cantidadRegistro !== false) {
			$limit = 'LIMIT ' . $inicio . "," . $cantidadRegistro;
		}
		//CC.tipo = 4 Quitado del query
		$query = $this->db->query("SELECT TC.*, CC.*, CUM.*, DAM.*, SUM(DAM.cantidad) AS total_explosion, (SELECT SUM(dtl_almacen_movimientos.cantidad) FROM tbl_almacen_movimientos LEFT JOIN dtl_almacen_movimientos ON dtl_almacen_movimientos.tbl_almacen_movimientos_idtbl_almacen_movimientos = tbl_almacen_movimientos.idtbl_almacen_movimientos WHERE tbl_almacen_movimientos.estatus = 1 AND tbl_almacen_movimientos.movimiento_virtual = 3 AND tbl_almacen_movimientos.tbl_almacenes_idtbl_almacenes = 291 AND dtl_almacen_movimientos.tbl_catalogo_idtbl_catalogo = DAM.tbl_catalogo_idtbl_catalogo) AS 'juchitan', (SELECT SUM(dtl_almacen_movimientos.cantidad) FROM tbl_almacen_movimientos LEFT JOIN dtl_almacen_movimientos ON dtl_almacen_movimientos.tbl_almacen_movimientos_idtbl_almacen_movimientos = tbl_almacen_movimientos.idtbl_almacen_movimientos WHERE tbl_almacen_movimientos.estatus = 1 AND tbl_almacen_movimientos.movimiento_virtual = 3 AND tbl_almacen_movimientos.tbl_almacenes_idtbl_almacenes = 427 AND dtl_almacen_movimientos.tbl_catalogo_idtbl_catalogo = DAM.tbl_catalogo_idtbl_catalogo) AS 'arriaga', (SELECT SUM(dtl_almacen_movimientos.cantidad) FROM tbl_almacen_movimientos LEFT JOIN dtl_almacen_movimientos ON dtl_almacen_movimientos.tbl_almacen_movimientos_idtbl_almacen_movimientos = tbl_almacen_movimientos.idtbl_almacen_movimientos WHERE tbl_almacen_movimientos.estatus = 1 AND tbl_almacen_movimientos.movimiento_virtual = 3 AND tbl_almacen_movimientos.tbl_almacenes_idtbl_almacenes = 305 AND dtl_almacen_movimientos.tbl_catalogo_idtbl_catalogo = DAM.tbl_catalogo_idtbl_catalogo) AS 'chiapas', (SELECT SUM(dtl_almacen_movimientos.cantidad) FROM tbl_almacen_movimientos LEFT JOIN dtl_almacen_movimientos ON dtl_almacen_movimientos.tbl_almacen_movimientos_idtbl_almacen_movimientos = tbl_almacen_movimientos.idtbl_almacen_movimientos WHERE tbl_almacen_movimientos.estatus = 1 AND tbl_almacen_movimientos.movimiento_virtual = 3 AND tbl_almacen_movimientos.tbl_almacenes_idtbl_almacenes = 320 AND dtl_almacen_movimientos.tbl_catalogo_idtbl_catalogo = DAM.tbl_catalogo_idtbl_catalogo) AS 'oaxaca' FROM dtl_almacen_movimientos DAM LEFT JOIN tbl_almacen_movimientos TAM ON TAM.idtbl_almacen_movimientos = DAM.tbl_almacen_movimientos_idtbl_almacen_movimientos LEFT JOIN tbl_catalogo TC ON TC.idtbl_catalogo = DAM.tbl_catalogo_idtbl_catalogo LEFT JOIN ctl_categorias CC ON CC.idctl_categorias = TC.ctl_categorias_idctl_categorias LEFT JOIN ctl_unidades_medida CUM ON CUM.idctl_unidades_medida = TC.ctl_unidades_medida_idctl_unidades_medida WHERE (TC.neodata LIKE '%$buscar%' OR TC.descripcion LIKE '%$buscar%') AND TAM.movimiento_virtual = 3 AND TAM.estatus = 1 AND TAM.tbl_almacenes_idtbl_almacenes = $id_almacen  GROUP BY TC.idtbl_catalogo " . $limit);
		return $query->result();
	}

	public function explosionInsumosCli109($id_almacen, $buscar = '', $inicio = false, $cantidadRegistro = false) {
		$limit = '';
		if ($inicio !== false && $cantidadRegistro !== false) {
			$limit = 'LIMIT ' . $inicio . "," . $cantidadRegistro;
		}
		//CC.tipo = 4 Quitado del query
		$query = $this->db->query("SELECT TC.*, CC.*, CUM.*, DAM.*, SUM(DAM.cantidad) AS total_explosion, (SELECT SUM(dtl_almacen_movimientos.cantidad) FROM tbl_almacen_movimientos LEFT JOIN dtl_almacen_movimientos ON dtl_almacen_movimientos.tbl_almacen_movimientos_idtbl_almacen_movimientos = tbl_almacen_movimientos.idtbl_almacen_movimientos WHERE tbl_almacen_movimientos.estatus = 1 AND tbl_almacen_movimientos.movimiento_virtual = 3 AND tbl_almacen_movimientos.tbl_almacenes_idtbl_almacenes = 286 AND dtl_almacen_movimientos.tbl_catalogo_idtbl_catalogo = DAM.tbl_catalogo_idtbl_catalogo) AS 'fresnillo', (SELECT SUM(dtl_almacen_movimientos.cantidad) FROM tbl_almacen_movimientos LEFT JOIN dtl_almacen_movimientos ON dtl_almacen_movimientos.tbl_almacen_movimientos_idtbl_almacen_movimientos = tbl_almacen_movimientos.idtbl_almacen_movimientos WHERE tbl_almacen_movimientos.estatus = 1 AND tbl_almacen_movimientos.movimiento_virtual = 3 AND tbl_almacen_movimientos.tbl_almacenes_idtbl_almacenes = 288 AND dtl_almacen_movimientos.tbl_catalogo_idtbl_catalogo = DAM.tbl_catalogo_idtbl_catalogo) AS 'trancoso', (SELECT SUM(dtl_almacen_movimientos.cantidad) FROM tbl_almacen_movimientos LEFT JOIN dtl_almacen_movimientos ON dtl_almacen_movimientos.tbl_almacen_movimientos_idtbl_almacen_movimientos = tbl_almacen_movimientos.idtbl_almacen_movimientos WHERE tbl_almacen_movimientos.estatus = 1 AND tbl_almacen_movimientos.movimiento_virtual = 3 AND tbl_almacen_movimientos.tbl_almacenes_idtbl_almacenes = 308 AND dtl_almacen_movimientos.tbl_catalogo_idtbl_catalogo = DAM.tbl_catalogo_idtbl_catalogo) AS 'victoria', (SELECT SUM(dtl_almacen_movimientos.cantidad) FROM tbl_almacen_movimientos LEFT JOIN dtl_almacen_movimientos ON dtl_almacen_movimientos.tbl_almacen_movimientos_idtbl_almacen_movimientos = tbl_almacen_movimientos.idtbl_almacen_movimientos WHERE tbl_almacen_movimientos.estatus = 1 AND tbl_almacen_movimientos.movimiento_virtual = 3 AND tbl_almacen_movimientos.tbl_almacenes_idtbl_almacenes = 309 AND dtl_almacen_movimientos.tbl_catalogo_idtbl_catalogo = DAM.tbl_catalogo_idtbl_catalogo) AS 'virtual', (SELECT SUM(dtl_almacen_movimientos.cantidad) FROM tbl_almacen_movimientos LEFT JOIN dtl_almacen_movimientos ON dtl_almacen_movimientos.tbl_almacen_movimientos_idtbl_almacen_movimientos = tbl_almacen_movimientos.idtbl_almacen_movimientos WHERE tbl_almacen_movimientos.estatus = 1 AND tbl_almacen_movimientos.movimiento_virtual = 3 AND tbl_almacen_movimientos.tbl_almacenes_idtbl_almacenes = 410 AND dtl_almacen_movimientos.tbl_catalogo_idtbl_catalogo = DAM.tbl_catalogo_idtbl_catalogo) AS 'fisico' FROM dtl_almacen_movimientos DAM LEFT JOIN tbl_almacen_movimientos TAM ON TAM.idtbl_almacen_movimientos = DAM.tbl_almacen_movimientos_idtbl_almacen_movimientos LEFT JOIN tbl_catalogo TC ON TC.idtbl_catalogo = DAM.tbl_catalogo_idtbl_catalogo LEFT JOIN ctl_categorias CC ON CC.idctl_categorias = TC.ctl_categorias_idctl_categorias LEFT JOIN ctl_unidades_medida CUM ON CUM.idctl_unidades_medida = TC.ctl_unidades_medida_idctl_unidades_medida WHERE (TC.neodata LIKE '%$buscar%' OR TC.descripcion LIKE '%$buscar%') AND TAM.movimiento_virtual = 3 AND TAM.estatus = 1 AND TAM.tbl_almacenes_idtbl_almacenes = $id_almacen  GROUP BY TC.idtbl_catalogo " . $limit);
		return $query->result();
	}

	public function productosAlmacenCliAC($id_almacen, $buscar = '', $inicio = false, $cantidadRegistro = false) {
		$limit = '';
		if ($inicio !== false && $cantidadRegistro !== false) {
			$limit = 'LIMIT ' . $inicio . "," . $cantidadRegistro;
		}
		$query = $this->db->query("SELECT TC.*, CC.*, CUM.*, DA.* FROM dtl_almacen DA LEFT JOIN tbl_catalogo TC ON TC.idtbl_catalogo = DA.tbl_catalogo_idtbl_catalogo LEFT JOIN ctl_categorias CC ON CC.idctl_categorias = TC.ctl_categorias_idctl_categorias LEFT JOIN ctl_unidades_medida CUM ON CUM.idctl_unidades_medida = TC.ctl_unidades_medida_idctl_unidades_medida WHERE (TC.neodata LIKE '%$buscar%' OR TC.descripcion LIKE '%$buscar%') AND DA.tbl_almacenes_idtbl_almacenes = $id_almacen AND CC.tipo = 1 " . $limit);
		return $query->result();
	}

	public function inventario_almacen($id_almacen, $tipo = '', $buscar = false) {
		$this->db->from('dtl_almacen');

		$this->db->join('tbl_catalogo', 'tbl_catalogo.idtbl_catalogo=dtl_almacen.tbl_catalogo_idtbl_catalogo', 'left');
		$this->db->join('ctl_categorias', 'tbl_catalogo.ctl_categorias_idctl_categorias=ctl_categorias.idctl_categorias', 'left');
		$this->db->join('ctl_unidades_medida', 'tbl_catalogo.ctl_unidades_medida_idctl_unidades_medida=ctl_unidades_medida.idctl_unidades_medida', 'left');
		
		if($this->session->userdata('tipo') != 14 && $this->session->userdata('tipo')!=10 && $this->session->userdata('tipo')!=2 && ($this->session->userdata('tipo') != 3 || $this->session->userdata('tipo') == 1)){
		switch ($tipo) {
			case 'alto-costo':
				$this->db->where('dtl_almacen.estatus', 'almacen');
				$this->db->where('ctl_categorias.abreviatura', 'HAC');
				break;
			case 'material':
				$this->db->where('ctl_categorias.abreviatura', 'CN');
				$this->db->where('dtl_almacen.estatus', 'almacen');
				break;
			case 'hilti':
				$this->db->where('dtl_almacen.estatus', 'almacen');
				$this->db->where('ctl_categorias.abreviatura', 'HIL');
				break;

			case 'herramienta':
				$this->db->where('dtl_almacen.estatus', 'almacen');
				$this->db->where('ctl_categorias.abreviatura', 'HR');
				break;

			case 'alto-mediano-costo':
				$this->db->where('dtl_almacen.estatus', 'almacen');
				$this->db->where('ctl_categorias.abreviatura', 'AF');
				$this->db->or_where('ctl_categorias.abreviatura', 'HR');
				break;

			case 'general':
				$this->db->where('dtl_almacen.estatus', 'almacen');
				$this->db->where('tbl_catalogo.estatus_producto' , 1);
				break;

			default:
				$this->db->where('dtl_almacen.estatus', 'almacen');
				$this->db->where('tbl_catalogo.estatus_producto' , 1);
				break;
			}
		} elseif($this->session->userdata('tipo') == 2) {
			switch ($tipo) {
				case 'sistemas':
					$this->db->where('dtl_almacen.estatus', 'almacen');
					$this->db->group_start();
					$this->db->where('ctl_categorias.abreviatura', 'AF');
					$this->db->or_where('ctl_categorias.abreviatura', 'HR');
					$this->db->group_end();
					break;
				case 'herramienta':
					$this->db->where('dtl_almacen.estatus', 'almacen');
					$this->db->where('ctl_categorias.abreviatura', 'HR');
					break;
				case 'material':
					$this->db->where('dtl_almacen.estatus', 'almacen');
					$this->db->where('ctl_categorias.abreviatura', 'CN');
					break;
				default:
					break;
			}
			$this->db->where('tbl_catalogo.tipo', 6);
			$this->db->where('tbl_catalogo.estatus_producto' , 1);
		} elseif($this->session->userdata('tipo') == 3) {
			if($tipo == 'control-vehicular') {
				$this->db->where('dtl_almacen.estatus', 'disponible');
			} else {
				$this->db->where('dtl_almacen.estatus', 'almacen');
			}
			$this->db->where('tbl_catalogo.estatus_producto' , 1);
		} elseif($this->session->userdata('tipo')==10){
			$this->db->where('dtl_almacen.estatus', 'almacen');
			$this->db->where('tbl_catalogo.estatus_producto' , 1);
			$this->db->where('tbl_catalogo.tipo' , 1);
			$this->db->where_in('tbl_catalogo.neodata', ['EP-ARN-SEG-001', 'EP-ASE-FRE-001', 'EP-CAS-BLA-001', 'EP-CAS-NAR-001', 'EP-GUA-ANT-002', 'EP-GUA-PIE-001', 'EP-LAM-DES-001', 'EP-LEN-SEG-003', 'EP-LIN-VID-001', 'EP-LIN-VID-002', 'EP-MAL-BAR-001', 'EP-MAN-CHA-001', 'EP-MOS-ACE-001', 'EP-PET-CAR-001', 'EP-POL-CAR-001', 'EP-PON-IMP-001', 'EP-PRO-AUD-002', 'EP-ROD-PLA-001', 'HR-BOT-HUL-001', 'HR-BOT-HUL-002', 'HR-BOT-HUL-003', 'HR-BOT-HUL-004', 'HR-BOT-HUL-005', 'HR-CAR-PIL-001', 'HR-CON-PRE-002', 'HR-CON-PRE-003', 'HR-EXT-EME-003', 'HR-LAM-CAB-001', 'UN-BOT-SEG-001', 'UN-BOT-SEG-002', 'UN-BOT-SEG-003', 'UN-BOT-SEG-004', 'UN-BOT-SEG-005', 'UN-BOT-SEG-006', 'UN-BOT-SEG-007', 'EP-CHA-EST-002', 'AD-OFI-LON-015', 'EP-LEN-CON-002', 'AD-OFI-LON-017', 'EP-GUA-IND-003', 'UN-ZAP-VAN-001', 'EP-ESC-MEZ-001', 'EP-MAN-CAR-002', 'EP-MAS-GEN-001', 'EP-PAR-CAR-001', 'EP-PAR-GUA-001', 'EP-PAR-MAN-001', 'EP-LEN-SEG-005', 'EP-BAR-SME-001', 'EP-CAB-POS-001', 'EP-CIN-POS-002', 'EP-CIN-POS-001', 'EP-CIN-POS-003', 'EP-CAS-NAR-001', 'AD-OFI-BOT-002', 'AD-OFI-BOT-003', 'AD-MED-BOT-001', 'AD-OFI-TOA-001', 'EP-CIN-POS-004', 'AD-OFI-CUB-006', 'CN-CUE-RAP-001', 'EP-CUB-CLG-001', 'CN-CIN-PRE-001', 'EP-CHA-SEG-003']);
		} else {
			$this->db->where('dtl_almacen.estatus', 'almacen');
			$this->db->where('tbl_catalogo.estatus_producto' , 1);
		}
		$this->db->where('dtl_almacen.tbl_almacenes_idtbl_almacenes', $id_almacen);		
		if($buscar != false){
			$this->db->group_start();
			$this->db->like('descripcion', $buscar);
			$this->db->or_like('neodata', $buscar);
			$this->db->group_end();
		}
		$query = $this->db->get();
		return $query->result();
	}

	public function inventario_almacen_paginacion_acv($buscar = '', $inicio = false, $cantidadRegistro = false) {
		$limit = '';
		if ($inicio !== false && $cantidadRegistro !== false) {
			$limit = 'LIMIT ' . $inicio . "," . $cantidadRegistro;
		}
		//$query = $this->db->query("SELECT dtl_almacen.iddtl_almacen, dtl_almacen.tbl_almacenes_idtbl_almacenes, dtl_almacen.tbl_catalogo_idtbl_catalogo, dtl_almacen.existencias, dtl_almacen.numero_serie, dtl_almacen.numero_interno, dtl_almacen.estatus, dtl_almacen.nota, dtl_almacen.rack, dtl_almacen.nivel, dtl_almacen.placas, dtl_almacen.no_motor, dtl_almacen.tipo_vehiculo, dtl_almacen.estado_vehiculo, dtl_almacen.propietario, tbl_catalogo.*, ctl_categorias.*, ctl_unidades_medida.*, tbl_tramites_vehiculares.proxima_fecha_tramite, tbl_tramites_vehiculares.poliza, tbl_tramites_vehiculares.seguro FROM dtl_almacen LEFT JOIN tbl_catalogo ON tbl_catalogo.idtbl_catalogo = dtl_almacen.tbl_catalogo_idtbl_catalogo LEFT JOIN ctl_categorias ON ctl_categorias.idctl_categorias = tbl_catalogo.ctl_categorias_idctl_categorias LEFT JOIN ctl_unidades_medida ON ctl_unidades_medida.idctl_unidades_medida = tbl_catalogo.ctl_unidades_medida_idctl_unidades_medida LEFT JOIN tbl_tramites_vehiculares ON tbl_tramites_vehiculares.dtl_almacen_iddtl_almacen = dtl_almacen.iddtl_almacen WHERE dtl_almacen.tbl_almacenes_idtbl_almacenes = 28 AND (tbl_tramites_vehiculares.proxima_fecha_tramite = (SELECT MAX(proxima_fecha_tramite) FROM tbl_tramites_vehiculares t1 WHERE t1.dtl_almacen_iddtl_almacen = dtl_almacen.iddtl_almacen AND t1.tipo_tramite = 'seguro') OR tbl_tramites_vehiculares.proxima_fecha_tramite IS NULL) AND (dtl_almacen.estatus = 'DISPONIBLE' OR dtl_almacen.estatus = 'almacen') AND tbl_catalogo.descripcion != 'PERSONAL' AND (tbl_catalogo.uid LIKE '%$buscar%' OR tbl_catalogo.marca LIKE '%$buscar%' OR tbl_catalogo.modelo LIKE '%$buscar%' OR tbl_catalogo.descripcion LIKE '%$buscar%' OR dtl_almacen.numero_serie LIKE '%$buscar%' OR dtl_almacen.numero_interno LIKE '%$buscar%' OR ctl_unidades_medida.unidad_medida_abr LIKE '%$buscar%' OR ctl_categorias.abreviatura LIKE '%$buscar%' OR dtl_almacen.nota LIKE '%$buscar%') " . $limit);
		$query = $this->db->query("SELECT dtl_almacen.iddtl_almacen, dtl_almacen.tbl_almacenes_idtbl_almacenes, dtl_almacen.tbl_catalogo_idtbl_catalogo, dtl_almacen.existencias, dtl_almacen.numero_serie, dtl_almacen.numero_interno, dtl_almacen.estatus, dtl_almacen.nota, dtl_almacen.rack, dtl_almacen.nivel, dtl_almacen.placas, dtl_almacen.no_motor, dtl_almacen.tipo_vehiculo, dtl_almacen.estado, dtl_almacen.propietario, tbl_catalogo.*, ctl_categorias.*, ctl_unidades_medida.*, tbl_tramites_vehiculares.tipo_tramite, tbl_tramites_vehiculares.proxima_fecha_tramite, tbl_tramites_vehiculares.poliza, tbl_tramites_vehiculares.seguro FROM dtl_almacen LEFT JOIN tbl_catalogo ON tbl_catalogo.idtbl_catalogo = dtl_almacen.tbl_catalogo_idtbl_catalogo LEFT JOIN ctl_categorias ON ctl_categorias.idctl_categorias = tbl_catalogo.ctl_categorias_idctl_categorias LEFT JOIN ctl_unidades_medida ON ctl_unidades_medida.idctl_unidades_medida = tbl_catalogo.ctl_unidades_medida_idctl_unidades_medida LEFT JOIN tbl_tramites_vehiculares ON tbl_tramites_vehiculares.dtl_almacen_iddtl_almacen = dtl_almacen.iddtl_almacen AND tbl_tramites_vehiculares.tipo_tramite = 'seguro' WHERE dtl_almacen.tbl_almacenes_idtbl_almacenes = 28 AND (tbl_tramites_vehiculares.proxima_fecha_tramite = (SELECT MAX(proxima_fecha_tramite) FROM tbl_tramites_vehiculares t1 WHERE t1.dtl_almacen_iddtl_almacen = dtl_almacen.iddtl_almacen AND t1.tipo_tramite = 'seguro') OR tbl_tramites_vehiculares.proxima_fecha_tramite IS NULL) AND dtl_almacen.estatus = 'disponible' AND tbl_catalogo.descripcion != 'PERSONAL' AND (tbl_catalogo.uid LIKE '%$buscar%' OR tbl_catalogo.marca LIKE '%$buscar%' OR tbl_catalogo.modelo LIKE '%$buscar%' OR tbl_catalogo.descripcion LIKE '%$buscar%' OR dtl_almacen.numero_serie LIKE '%$buscar%' OR dtl_almacen.numero_interno LIKE '%$buscar%' OR ctl_unidades_medida.unidad_medida_abr LIKE '%$buscar%' OR ctl_categorias.abreviatura LIKE '%$buscar%' OR dtl_almacen.nota LIKE '%$buscar%') " . $limit);
		return $query->result();
	}

	public function inventario_almacen_paginacion($id_almacen, $tipo = '', $limit = false) {
		$buscar = $this->input->post('buscar');
    	$numeroPagina = $this->input->post('nropagina');
    	$cantidad = 10;
		$inicio = ($numeroPagina - 1) * $cantidad;

		if (strpos($buscar, " ")) {
			$buscar2 = substr($buscar, -2, 2); // Si la cadena tiene espacios trae los últimos dos caracteres
			$buscar3 = substr($buscar, 0, 5);
			if (strpos($buscar2, " ")) {
				$buscar2 = substr($buscar, -1, 1);
				echo $buscar2;
			}
			//echo $buscar3;
			//echo $buscar2;
		}

		$this->db->from('dtl_almacen');		

		$this->db->join('tbl_catalogo', 'tbl_catalogo.idtbl_catalogo=dtl_almacen.tbl_catalogo_idtbl_catalogo', 'left');
		$this->db->join('ctl_categorias', 'tbl_catalogo.ctl_categorias_idctl_categorias=ctl_categorias.idctl_categorias', 'left');
		$this->db->join('ctl_unidades_medida', 'tbl_catalogo.ctl_unidades_medida_idctl_unidades_medida=ctl_unidades_medida.idctl_unidades_medida', 'left');
		
		if($this->session->userdata('tipo') != 14 && $this->session->userdata('tipo')!=10 && $this->session->userdata('tipo')!=2 && ($this->session->userdata('tipo') != 3 || $this->session->userdata('tipo') == 1)){			
			switch ($tipo) {
				case 'alto-costo':
					$this->db->where('dtl_almacen.estatus', 'almacen');
					$this->db->where('ctl_categorias.abreviatura', 'AF');
					break;
				case 'material':
					$this->db->where('ctl_categorias.abreviatura', 'CN');
					$this->db->where('dtl_almacen.estatus', 'almacen');
					break;
				case 'hilti':
					$this->db->where('dtl_almacen.estatus', 'almacen');
					$this->db->where('ctl_categorias.abreviatura', 'HIL');
					break;

				case 'herramienta':
					$this->db->where('dtl_almacen.estatus', 'almacen');
					$this->db->where('ctl_categorias.abreviatura', 'HR');
					break;

				case 'general':
					$this->db->where('dtl_almacen.estatus', 'almacen');
					break;

				default:
					$this->db->where('dtl_almacen.estatus', 'almacen');
					break;
			}
			$this->db->where('tbl_catalogo.tipo', 2);
		} elseif($this->session->userdata('tipo') == 2) {
			switch ($tipo) {				
				case 'sistemas':
					$this->db->where('dtl_almacen.estatus', 'almacen');
					$this->db->group_start();
					$this->db->where('ctl_categorias.abreviatura', 'AF');
					$this->db->or_where('ctl_categorias.abreviatura', 'HR');
					$this->db->group_end();
					break;
				case 'herramienta':
					$this->db->where('dtl_almacen.estatus', 'almacen');															
					$this->db->where('ctl_categorias.abreviatura', 'HR');
					//$this->db->where('dtl_almacen.tbl_almacenes_idtbl_almacenes');
					break;
				case 'material':
					$this->db->where('dtl_almacen.estatus', 'almacen');
					$this->db->where('ctl_categorias.abreviatura', 'CSI');
					break;
				default:
					break;
			}
			$this->db->where('tbl_catalogo.tipo', 6);
		} elseif($this->session->userdata('tipo') == 3 && $tipo != 'tarjetas') {
			$this->db->where('dtl_almacen.estatus', 'disponible');
			$this->db->where('descripcion !=', 'PERSONAL');
		} else {
			$this->db->where('dtl_almacen.estatus', 'almacen');
		}
		if($buscar2 != ""){
			$this->db->group_start();
			$this->db->or_like('uid', $buscar);
			$this->db->or_like('marca', $buscar);
			$this->db->or_like('modelo', $buscar);
			$this->db->or_like('descripcion', $buscar);
			$this->db->or_like('numero_serie', $buscar);
			$this->db->or_like('numero_interno', $buscar);
			$this->db->or_like('unidad_medida_abr', $buscar);
			$this->db->or_like('abreviatura', $buscar);
			$this->db->or_like('nota', $buscar);
			$this->db->or_group_start();
			$this->db->or_like('descripcion',$buscar);
			$this->db->or_like('numero_interno',$buscar2);
			//$this->db->or($this->db->or_like('descripcion',$buscar),$this->db->or_like('numero_interno'),$buscar2);
			$this->db->group_end();
			$this->db->group_end();
		}else{
			$this->db->group_start();
			$this->db->or_like('uid', $buscar);
			$this->db->or_like('marca', $buscar);
			$this->db->or_like('modelo', $buscar);
			$this->db->or_like('descripcion', $buscar);
			$this->db->or_like('numero_serie', $buscar);
			$this->db->or_like('numero_interno', $buscar);
			$this->db->or_like('unidad_medida_abr', $buscar);
			$this->db->or_like('abreviatura', $buscar);
			$this->db->or_like('nota', $buscar);			
			$this->db->group_end();
		}
		if($limit){
			$this->db->limit($cantidad, $inicio);
		}
		if($this->session->userdata('tipo')==2 && $tipo=='herramienta'){
			$this->db->group_start();
			$this->db->where('dtl_almacen.tbl_almacenes_idtbl_almacenes', $id_almacen);
			$this->db->or_where('dtl_almacen.tbl_almacenes_idtbl_almacenes', 397);
			$this->db->group_end();
		}else{
		$this->db->where('dtl_almacen.tbl_almacenes_idtbl_almacenes', $id_almacen);
		}
		$query = $this->db->get();
		return $query->result();
	}

	public function registrarAlmacen($parametros) {
		$query = $this->db->get_where("tbl_proyectos", array("idtbl_proyectos" => $parametros['tbl_proyectos_idtbl_proyectos']));
		$result = $query->result()[0];
		$almacen = $result->numero_proyecto . " - " . $result->nombre_proyecto;
		if(isset($parametros['tbl_segmentos_proyecto_idtbl_segmentos_proyecto']) && $parametros['tbl_segmentos_proyecto_idtbl_segmentos_proyecto'] != null){
			$query = $this->db->get_where("tbl_segmentos_proyecto", array("idtbl_segmentos_proyecto" => $parametros['tbl_segmentos_proyecto_idtbl_segmentos_proyecto']));
			$result = $query->result()[0];
			$almacen = $almacen . " " . $result->segmento;
		}
		if(isset($parametros['tbl_sitios_idtbl_sitios']) AND $parametros['tbl_sitios_idtbl_sitios'] != null){
			$query =  $this->db->get_where("tbl_sitios", array("idtbl_sitios" => $parametros['tbl_sitios_idtbl_sitios']));
			$result = $query->result()[0];
			$almacen = $almacen . " " . $result->nombre;
		}
		$parametros['almacen'] = $almacen;
		return $this->db->insert('tbl_almacenes', $parametros);
	}

	public function registrarSubAlmacen($parametros) {		
		return $this->db->insert('tbl_almacenes', $parametros);
	}

	

	public function almacenes($buscar = '', $inicio = false, $cantidadRegistro = false) {
		$limit = '';
		if ($inicio !== false && $cantidadRegistro !== false) {
			$limit = 'LIMIT ' . $inicio . "," . $cantidadRegistro;
		}
		//$query = $this->db->query("
		//	SELECT tbl_almacenes.*, tbl_proyectos.nombre_proyecto, tbl_proyectos.numero_proyecto
		//	FROM tbl_almacenes
		//	LEFT JOIN tbl_proyectos
		//	ON tbl_proyectos.tbl_almacenes_idtbl_almacenes=tbl_almacenes.idtbl_almacenes
		//	WHERE tbl_almacenes.idtbl_almacenes!=" . UID_ALMACEN_GENERAL);
		//$query = $this->db->query("SELECT * FROM tbl_almacenes WHERE idtbl_almacenes = 1 OR idtbl_almacenes >= 16 AND (uid LIKE '%$buscar%' OR almacen LIKE '%$buscar%') " . $limit);
		if($this->session->userdata('tipo') == 4 && $this->session->userdata('id')!=50){
			$condition = "";
			if(null !== $this->input->post("tipo")){
				if($this->input->post("tipo") == 'externo'){
					$condition = " AND (tbl_almacenes.tipo = 'externo' OR tbl_almacenes.tipo = 'interno') ";
				}else{
                    $condition = " AND tbl_almacenes.tipo = '" . $this->input->post("tipo") ."' ";
                }
			}
			$query = $this->db->query("SELECT tbl_almacenes.*, tbl_proyectos.nombre_proyecto, tbl_segmentos_proyecto.segmento, tbl_sitios.nombre FROM tbl_almacenes LEFT JOIN tbl_proyectos ON tbl_proyectos.idtbl_proyectos = tbl_almacenes.tbl_proyectos_idtbl_proyectos LEFT JOIN tbl_segmentos_proyecto ON tbl_segmentos_proyecto.idtbl_segmentos_proyecto = tbl_almacenes.tbl_segmentos_proyecto_idtbl_segmentos_proyecto LEFT JOIN tbl_sitios ON tbl_sitios.idtbl_sitios = tbl_almacenes.tbl_sitios_idtbl_sitios WHERE tbl_almacenes.idtbl_almacenes != 22 AND tbl_almacenes.estatus = 1 AND (tbl_almacenes.uid LIKE '%$buscar%' OR tbl_almacenes.almacen LIKE '%$buscar%') " . $condition . $limit);

		}
		
		else if($this->session->userdata('tipo') == 17){
			//AND tbl_almacenes_idtbl_almacenes IS NULL
			$query = $this->db->query("SELECT * FROM tbl_almacenes WHERE idtbl_almacenes != 22 AND (tipo = 'externo' OR tipo = 'interno')  AND tbl_almacenes.estatus = 1 AND (uid LIKE '%$buscar%' OR almacen LIKE '%$buscar%') " . $limit);
		}else if($this->session->userdata('tipo') == 19){
			//if($this->session->userdata('id') == 167){
			//	$query = $this->db->query("SELECT tbl_almacenes.* FROM tbl_almacenes LEFT JOIN tbl_proyectos ON tbl_proyectos.idtbl_proyectos = tbl_almacenes.tbl_proyectos_idtbl_proyectos WHERE idtbl_almacenes != 22 AND tipo = 'interno' AND tbl_almacenes_idtbl_almacenes IS NULL AND tbl_almacenes.estatus = 1 AND tbl_proyectos.tbl_clientes_idtbl_clientes = 3 AND (tbl_almacenes.uid LIKE '%$buscar%' OR tbl_almacenes.almacen LIKE '%$buscar%') " . $limit);
			//}else{
				if($this->session->userdata('id') == 207){
					$query = $this->db->query("SELECT * FROM tbl_almacenes WHERE idtbl_almacenes != 22 AND (tipo = 'interno' OR tipo = 'externo') AND tbl_almacenes.estatus = 1 AND (uid LIKE '%$buscar%' OR almacen LIKE '%$buscar%') " . $limit);
				}else{
                    $query = $this->db->query("SELECT * FROM tbl_almacenes WHERE idtbl_almacenes != 22 AND (tipo = 'interno' OR tipo = 'externo') AND tbl_almacenes.estatus = 1 AND (uid LIKE '%$buscar%' OR almacen LIKE '%$buscar%') " . $limit);
                }
            //}
		}else if($this->session->userdata('tipo') == 11){
			$query = $this->db->query("SELECT * FROM tbl_almacenes WHERE idtbl_almacenes != 22 AND (tipo = 'interno' OR tipo = 'externo') AND tbl_almacenes_idtbl_almacenes IS NULL AND tbl_almacenes.estatus = 1 AND (uid LIKE '%$buscar%' OR almacen LIKE '%$buscar%') " . $limit);
		}else if($this->session->userdata('tipo') == 0){
			$query = $this->db->query("SELECT * FROM tbl_almacenes WHERE idtbl_almacenes != 22 AND tbl_almacenes.estatus = 1 AND (uid LIKE '%$buscar%' OR almacen LIKE '%$buscar%') " . $limit);
		}else if($this->session->userdata('id')==50){
			$query = $this->db->query("SELECT tbl_almacenes.* FROM tbl_almacenes JOIN tbl_proyectos ON tbl_proyectos.idtbl_proyectos = tbl_almacenes.tbl_proyectos_idtbl_proyectos WHERE tbl_proyectos.tbl_clientes_idtbl_clientes = 2 AND tbl_almacenes.estatus = 1 ");
		}
		else{
			$query = $this->db->query("SELECT * FROM tbl_almacenes WHERE idtbl_almacenes != 22 AND tbl_almacenes.estatus = 1 AND (uid LIKE '%$buscar%' OR almacen LIKE '%$buscar%') " . $limit);
		}
		return $query->result();
		
	}

	public function almacen_kuali(){
		$query = $this->db->query("SELECT * FROM tbl_almacenes WHERE idtbl_almacenes = 16 AND tbl_almacenes.estatus = 1 ");
		return $query->result();
		
	}

	public function almacenes_subalm($buscar = '', $inicio = false, $cantidadRegistro = false) {
		$limit = '';
		if ($inicio !== false && $cantidadRegistro !== false) {
			$limit = 'LIMIT ' . $inicio . "," . $cantidadRegistro;
		}
		//$query = $this->db->query("
		//	SELECT tbl_almacenes.*, tbl_proyectos.nombre_proyecto, tbl_proyectos.numero_proyecto
		//	FROM tbl_almacenes
		//	LEFT JOIN tbl_proyectos
		//	ON tbl_proyectos.tbl_almacenes_idtbl_almacenes=tbl_almacenes.idtbl_almacenes
		//	WHERE tbl_almacenes.idtbl_almacenes!=" . UID_ALMACEN_GENERAL);
		if($this->session->userdata('tipo') == 4){
			$condition = "";
			if(null !== $this->input->post("tipo")){
				if($this->input->post("tipo") == 'externo'){
					$condition = " AND (tbl_almacenes.tipo = 'externo' OR tbl_almacenes.tipo = 'interno') ";
				}else{
                    $condition = " AND tbl_almacenes.tipo = '" . $this->input->post("tipo") ."' ";
                }
			}
			$query = $this->db->query("SELECT tbl_almacenes.*, tbl_proyectos.nombre_proyecto, tbl_segmentos_proyecto.segmento, tbl_sitios.nombre FROM tbl_almacenes LEFT JOIN tbl_proyectos ON tbl_proyectos.idtbl_proyectos = tbl_almacenes.tbl_proyectos_idtbl_proyectos LEFT JOIN tbl_segmentos_proyecto ON tbl_segmentos_proyecto.idtbl_segmentos_proyecto = tbl_almacenes.tbl_segmentos_proyecto_idtbl_segmentos_proyecto LEFT JOIN tbl_sitios ON tbl_sitios.idtbl_sitios = tbl_almacenes.tbl_sitios_idtbl_sitios WHERE tbl_almacenes.idtbl_almacenes != 22 AND tbl_almacenes.estatus = 1 AND (tbl_almacenes.uid LIKE '%$buscar%' OR tbl_almacenes.almacen LIKE '%$buscar%') " . $condition . $limit);
		}else if($this->session->userdata('tipo') == 17){
			$query = $this->db->query("SELECT tbl_almacenes.*, tbl_proyectos.nombre_proyecto, tbl_segmentos_proyecto.segmento, tbl_sitios.nombre FROM tbl_almacenes LEFT JOIN tbl_proyectos ON tbl_proyectos.idtbl_proyectos = tbl_almacenes.tbl_proyectos_idtbl_proyectos LEFT JOIN tbl_segmentos_proyecto ON tbl_segmentos_proyecto.idtbl_segmentos_proyecto = tbl_almacenes.tbl_segmentos_proyecto_idtbl_segmentos_proyecto LEFT JOIN tbl_sitios ON tbl_sitios.idtbl_sitios = tbl_almacenes.tbl_sitios_idtbl_sitios WHERE tbl_almacenes.idtbl_almacenes != 22 AND tbl_almacenes.idtbl_almacenes != 1 AND tbl_almacenes.idtbl_almacenes != 2 AND tbl_almacenes.idtbl_almacenes != 16 AND tbl_almacenes.estatus = 1 AND (tbl_almacenes.uid LIKE '%$buscar%' OR tbl_almacenes.almacen LIKE '%$buscar%') " . " AND (tbl_almacenes.tipo = 'externo' OR tbl_almacenes.tipo = 'interno') " . $limit);
		}else if($this->session->userdata('tipo') == 19){
			//if($this->session->userdata('id') == 167){
			//	$query = $this->db->query("SELECT tbl_almacenes.* FROM tbl_almacenes LEFT JOIN tbl_proyectos ON tbl_proyectos.idtbl_proyectos = tbl_almacenes.tbl_proyectos_idtbl_proyectos WHERE idtbl_almacenes != 22 AND tipo = 'interno' AND tbl_almacenes.estatus = 1 AND tbl_proyectos.tbl_clientes_idtbl_clientes = 3 AND (tbl_almacenes.uid LIKE '%$buscar%' OR tbl_almacenes.almacen LIKE '%$buscar%') " . $limit);
			//}else{
				$query = $this->db->query("SELECT tbl_almacenes.*, tbl_proyectos.nombre_proyecto, tbl_segmentos_proyecto.segmento, tbl_sitios.nombre FROM tbl_almacenes LEFT JOIN tbl_proyectos ON tbl_proyectos.idtbl_proyectos = tbl_almacenes.tbl_proyectos_idtbl_proyectos LEFT JOIN tbl_segmentos_proyecto ON tbl_segmentos_proyecto.idtbl_segmentos_proyecto = tbl_almacenes.tbl_segmentos_proyecto_idtbl_segmentos_proyecto LEFT JOIN tbl_sitios ON tbl_sitios.idtbl_sitios = tbl_almacenes.tbl_sitios_idtbl_sitios WHERE tbl_almacenes.idtbl_almacenes != 22 AND tbl_almacenes.estatus = 1 AND (tbl_almacenes.uid LIKE '%$buscar%' OR tbl_almacenes.almacen LIKE '%$buscar%') " . " AND (tbl_almacenes.tipo = 'externo' OR tbl_almacenes.tipo = 'interno') " . $limit);
				//}
		}else if($this->session->userdata('tipo') == 11){
			$query = $this->db->query("SELECT * FROM tbl_almacenes WHERE idtbl_almacenes != 22 AND (tipo = 'interno' OR tipo = 'externo') AND tbl_almacenes.estatus = 1 AND (uid LIKE '%$buscar%' OR almacen LIKE '%$buscar%') " . $limit);
		}else if($this->session->userdata('tipo') == 0){
			$query = $this->db->query("SELECT * FROM tbl_almacenes WHERE idtbl_almacenes != 22 AND tipo != 'sub' AND tbl_almacenes.estatus = 1 AND (uid LIKE '%$buscar%' OR almacen LIKE '%$buscar%') " . $limit);
		}else{
			$query = $this->db->query("SELECT * FROM tbl_almacenes WHERE idtbl_almacenes != 22 AND tbl_almacenes.estatus = 1 AND (uid LIKE '%$buscar%' OR almacen LIKE '%$buscar%') " . $limit);
		}
		return $query->result();
	}

	public function getSubAlmacenes($buscar = '', $inicio = false, $cantidadRegistro = false) {
		$uid = $this->input->post('uid_almacen');
		$limit = '';
		if ($inicio !== false && $cantidadRegistro !== false) {
			$limit = 'LIMIT ' . $inicio . "," . $cantidadRegistro;
		}		

		$query = $this->db->query("SELECT * FROM tbl_almacenes ta JOIN tbl_almacenes tas ON ta.idtbl_almacenes = tas.tbl_almacenes_idtbl_almacenes WHERE ta.uid='$uid' AND (tas.uid LIKE '%$buscar%' OR tas.almacen LIKE '%$buscar%') " . $limit);
		
		return $query->result();
	}

	public function getSubProyectos($buscar = '', $inicio = false, $cantidadRegistro = false) {
		$uid = $this->input->post('uid_almacen');
		$limit = '';
		if ($inicio !== false && $cantidadRegistro !== false) {
			$limit = 'LIMIT ' . $inicio . "," . $cantidadRegistro;
		}		

		$query = $this->db->query("SELECT ta.*, tps.numero_proyecto AS almacen_subp FROM tbl_proyectos tp JOIN tbl_proyectos tpp ON tpp.tbl_proyectos_idtbl_proyectos = tp.idtbl_proyectos JOIN tbl_almacenes ta ON ta.tbl_proyectos_idtbl_proyectos = tpp.idtbl_proyectos JOIN tbl_almacenes tas ON tas.idtbl_almacenes = ta.tbl_almacenes_idtbl_almacenes JOIN tbl_proyectos tps ON tps.idtbl_proyectos = tas.tbl_proyectos_idtbl_proyectos WHERE tpp.tbl_proyectos_idtbl_proyectos = (SELECT tbl_proyectos_idtbl_proyectos FROM tbl_almacenes WHERE uid='$uid') AND ta.tbl_almacenes_idtbl_almacenes IS NOT NULL");
		
		return $query->result();
	}

	public function getAlmacenesSubProyectos($uid) {

		$query = $this->db->query("SELECT ta.* FROM tbl_proyectos tp JOIN tbl_proyectos tpp ON tpp.tbl_proyectos_idtbl_proyectos = tp.idtbl_proyectos JOIN tbl_almacenes ta ON ta.tbl_proyectos_idtbl_proyectos = tpp.idtbl_proyectos WHERE tpp.tbl_proyectos_idtbl_proyectos = (SELECT tbl_proyectos_idtbl_proyectos FROM tbl_almacenes WHERE uid='$uid') ");
		
		return $query->result();
	}

	public function getSubAlmacenesById($id) {	
		
		$query = '';
		if($this->session->userdata('tipo') == 4){
			$query = ' OR ta.idtbl_almacenes = 1';
		}

		$query = $this->db->query("SELECT * FROM tbl_almacenes ta WHERE ta.estatus = 1 AND ta.idtbl_almacenes = $id OR ta.tbl_almacenes_idtbl_almacenes=$id $query");		
		return $query->result();
	}

	public function almacenes_encargados($buscar = '', $inicio = false, $cantidadRegistro = false) {
		$limit = '';
		if ($inicio !== false && $cantidadRegistro !== false) {
			$limit = 'LIMIT ' . $inicio . "," . $cantidadRegistro;
		}
		//$query = $this->db->query("
		//	SELECT tbl_almacenes.*, tbl_proyectos.nombre_proyecto, tbl_proyectos.numero_proyecto
		//	FROM tbl_almacenes
		//	LEFT JOIN tbl_proyectos
		//	ON tbl_proyectos.tbl_almacenes_idtbl_almacenes=tbl_almacenes.idtbl_almacenes
		//	WHERE tbl_almacenes.idtbl_almacenes!=" . UID_ALMACEN_GENERAL);
		//$query = $this->db->query("SELECT * FROM tbl_almacenes WHERE idtbl_almacenes = 1 OR idtbl_almacenes >= 16 AND (uid LIKE '%$buscar%' OR almacen LIKE '%$buscar%') " . $limit);
		$index = 0;
		$lon = count($this->session->userdata('encargado_almacen'));
		$id_almacenes = '';
		foreach($this->session->userdata('encargado_almacen') AS $key => $value){
			if ($index == $lon - 1) {
					$id_almacenes .= $value;
			}else{
				$id_almacenes .= $value. ', ';
			}
			$index++;
		}
		if($id_almacenes != ''){
			$in = "IN ($id_almacenes)";
		}else{
			$in = '';
		}
		
		$query = $this->db->query("SELECT * FROM tbl_almacenes WHERE idtbl_almacenes $in  AND tbl_almacenes.tbl_almacenes_idtbl_almacenes IS NULL AND (uid LIKE '%$buscar%' OR almacen LIKE '%$buscar%') " . $limit);
		
		return $query->result();
	}

	public function almacenesClientes(){
				
	$query = $this->db->query("SELECT * FROM tbl_almacenes WHERE tbl_almacenes.tipo != 'sub' OR (tbl_almacenes.idtbl_almacenes = " . ID_ALMACEN_GENERAL . " OR tbl_almacenes.idtbl_almacenes = 16)");						
		return $query->result();
	}

	public function almacenesKuali(){
		$query = $this->db->query("SELECT * FROM tbl_almacenes WHERE tbl_almacenes.idtbl_almacenes = 16");
		return $query->result();
	}	

	public function almacenesCliente(){ 
				
		$query = $this->db->query("SELECT * FROM tbl_almacenes WHERE idtbl_almacenes = 1");						
			return $query->result();
		}
		
		public function almacenRefacciones(){
			$query = $this->db->query("SELECT * FROM tbl_almacenes WHERE idtbl_almacenes = 29");
			return $query->result();
		}

	//Función para traer los sitios
	public function sitios() {
		
		$query = $this->db->query("SELECT * FROM tbl_sitios");
		
		return $query->result();
	}

	public function getAlmacenByUid($uid) {
		$query = $this->db->query("SELECT almacen, tipo FROM tbl_almacenes WHERE uid = '$uid'");
		return $query->result_array();
	}

	public function autorizados_almacen() {
		$nombre = $this->session->userdata('nombre');
		if($this->session->userdata('id')==50){
			$query = $this->db->query("SELECT * FROM `ctl_autorizados_entrega` WHERE idctl_autorizados_entrega = 9");
		}elseif($this->session->userdata('encargado_almacen') != null && $this->session->userdata('encargado_almacen') != ''){
			$query = $this->db->query("SELECT * FROM `ctl_autorizados_entrega` WHERE nombre LIKE '%$nombre%'");
		}elseif($this->session->userdata('tipo') == 14){
			$query = $this->db->query("SELECT * FROM `ctl_autorizados_entrega` WHERE idctl_autorizados_entrega =20");
		}elseif($this->session->userdata('tipo') == 1){
			$query = $this->db->query("SELECT * FROM `ctl_autorizados_entrega` LEFT JOIN tbl_users ON tbl_users.idtbl_users = ctl_autorizados_entrega.tbl_users_idtbl_users WHERE tbl_users.tipo = 1");
		}elseif($this->session->userdata('tipo') == 2){
			$query = $this->db->query("SELECT * FROM `ctl_autorizados_entrega` LEFT JOIN tbl_users ON tbl_users.idtbl_users = ctl_autorizados_entrega.tbl_users_idtbl_users WHERE tbl_users.tipo = 2");
		}elseif($this->session->userdata('tipo') == 4){
			$query = $this->db->query("SELECT * FROM `ctl_autorizados_entrega` LEFT JOIN tbl_users ON tbl_users.idtbl_users = ctl_autorizados_entrega.tbl_users_idtbl_users WHERE (tbl_users.tipo = 4 OR tbl_users.tipo = 9 OR tbl_users.idtbl_users = 3 OR tbl_users.tipo = 23) AND ctl_autorizados_entrega.estatus = 1 AND tbl_users.estatus = 1");
		}else{
			$query = $this->db->query("SELECT * FROM `ctl_autorizados_entrega` WHERE (idctl_autorizados_entrega <> 9 AND idctl_autorizados_entrega <> 8 AND idctl_autorizados_entrega <> 17 AND idctl_autorizados_entrega <> 18 AND idctl_autorizados_entrega <> 20) AND estatus = 1");
		}
		return $query->result();
	}

	public function almacenes_generadores() {		
		
		$query = $this->db->query("SELECT tbl_proyectos.idtbl_proyectos, tbl_proyectos.nombre_proyecto, tbl_proyectos.numero_proyecto, tbl_almacenes.idtbl_almacenes, tbl_almacenes.almacen FROM tbl_almacenes JOIN tbl_proyectos ON tbl_proyectos.idtbl_proyectos = tbl_almacenes.tbl_proyectos_idtbl_proyectos WHERE almacen_generador = 1 AND tbl_almacenes.tbl_almacenes_idtbl_almacenes IS NULL");
		
		return $query->result();
	}

	public function almacenes_generadores_reportes() {		
		
		$query = $this->db->query("SELECT tbl_proyectos.idtbl_proyectos, tbl_proyectos.numero_proyecto, tbl_almacenes.idtbl_almacenes, tbl_almacenes.almacen FROM tbl_almacenes JOIN tbl_proyectos ON tbl_proyectos.idtbl_proyectos = tbl_almacenes.tbl_proyectos_idtbl_proyectos WHERE almacen_generador = 1");
		
		return $query->result();
	}

	public function almacenes_pedidos() {		
		
		$query = $this->db->query("SELECT tbl_almacenes.idtbl_almacenes, tbl_almacenes.almacen FROM `tbl_solicitudes_almacen` JOIN tbl_almacenes ON tbl_almacenes.idtbl_almacenes = tbl_solicitudes_almacen.tbl_almacenes_idtbl_almacenes GROUP BY tbl_solicitudes_almacen.tbl_almacenes_idtbl_almacenes");
		
		return $query->result();
	}

	public function todos_almacenes_clientes() {		
		
		$query = $this->db->query("SELECT tbl_almacenes.*, tbl_proyectos.numero_proyecto, tbl_clientes.nombre_comercial FROM tbl_almacenes JOIN tbl_proyectos ON tbl_proyectos.idtbl_proyectos = tbl_almacenes.tbl_proyectos_idtbl_proyectos JOIN tbl_clientes ON tbl_clientes.idtbl_clientes = tbl_proyectos.tbl_clientes_idtbl_clientes WHERE tbl_almacenes.almacen_generador = 1 AND tbl_almacenes.tbl_almacenes_idtbl_almacenes IS NULL GROUP BY tbl_proyectos.idtbl_proyectos");
		
		return $query->result();
	}

	public function todos_segmentos_clientes() {
		
		$query = $this->db->query("SELECT tbl_almacenes.*, tbl_segmentos_proyecto.* FROM tbl_almacenes JOIN tbl_proyectos ON tbl_proyectos.idtbl_proyectos = tbl_almacenes.tbl_proyectos_idtbl_proyectos JOIN tbl_segmentos_proyecto ON tbl_segmentos_proyecto.idtbl_segmentos_proyecto = tbl_almacenes.tbl_segmentos_proyecto_idtbl_segmentos_proyecto WHERE tbl_almacenes.almacen_generador = 1 AND tbl_almacenes.tbl_almacenes_idtbl_almacenes IS NOT NULL GROUP BY tbl_segmentos_proyecto.idtbl_segmentos_proyecto;");
		
		return $query->result();
	}

	public function todos_almacenes_generadores() {		
		
		$query = $this->db->query("SELECT tbl_mantenimientos.*, tbl_proyectos.numero_proyecto, tbl_clientes.nombre_comercial FROM tbl_mantenimientos JOIN tbl_proyectos ON tbl_proyectos.idtbl_proyectos = tbl_mantenimientos.tbl_proyectos_idtbl_proyectos JOIN tbl_clientes ON tbl_clientes.idtbl_clientes = tbl_proyectos.tbl_clientes_idtbl_clientes WHERE tbl_mantenimientos.zte = 1 GROUP BY tbl_proyectos.idtbl_proyectos");
		
		return $query->result();
	}

	public function todos_segmentos_generadores() {
		
		$query = $this->db->query("SELECT tbl_mantenimientos.*, tbl_segmentos_proyecto.* FROM tbl_mantenimientos JOIN tbl_proyectos ON tbl_proyectos.idtbl_proyectos = tbl_mantenimientos.tbl_proyectos_idtbl_proyectos JOIN tbl_segmentos_proyecto ON tbl_segmentos_proyecto.idtbl_segmentos_proyecto = tbl_mantenimientos.tbl_segmentos_proyecto_idtbl_segmentos_proyecto WHERE tbl_mantenimientos.zte = 1 GROUP BY tbl_segmentos_proyecto.idtbl_segmentos_proyecto;");
		
		return $query->result();
	}

	public function todos_clientes_generadores() {
		
		$query = $this->db->query("SELECT tbl_mantenimientos.*, tbl_proyectos.numero_proyecto, tbl_clientes.nombre_comercial FROM tbl_mantenimientos JOIN tbl_proyectos ON tbl_proyectos.idtbl_proyectos = tbl_mantenimientos.tbl_proyectos_idtbl_proyectos JOIN tbl_clientes ON tbl_clientes.idtbl_clientes = tbl_proyectos.tbl_clientes_idtbl_clientes WHERE tbl_mantenimientos.zte = 1 GROUP BY tbl_clientes.idtbl_clientes");
		
		return $query->result();
	}

	public function autorizados_control_vehicular() {
		$query = $this->db->query("SELECT * FROM tbl_users WHERE tipo = 3");
		return $query->result();
	}

	public function autorizados_sistemas() {
		$query = $this->db->query("SELECT * FROM tbl_users WHERE tipo = 2");
		return $query->result();
	}

	public function detalle_explosiones($uid) {
		$query = $this->db->query("SELECT tbl_catalogo.idtbl_catalogo, tbl_catalogo.neodata, tbl_catalogo.descripcion, tbl_catalogo.ctl_categorias_idctl_categorias, ctl_unidades_medida.unidad_medida_abr, dtl_almacen_movimientos.iddtl_almacen_entradas, dtl_almacen_movimientos.cantidad_anterior, dtl_almacen_movimientos.cantidad, dtl_almacen_movimientos.entregado, tas.idtbl_almacenes, tbl_almacen_movimientos.idtbl_almacen_movimientos FROM tbl_almacenes JOIN tbl_proyectos ON tbl_proyectos.idtbl_proyectos = tbl_almacenes.tbl_proyectos_idtbl_proyectos JOIN tbl_almacenes tas ON tas.tbl_proyectos_idtbl_proyectos = tbl_proyectos.tbl_proyectos_idtbl_proyectos JOIN tbl_almacen_movimientos ON tbl_almacen_movimientos.tbl_almacenes_idtbl_almacenes = tas.idtbl_almacenes JOIN dtl_almacen_movimientos ON tbl_almacen_movimientos.idtbl_almacen_movimientos = dtl_almacen_movimientos.tbl_almacen_movimientos_idtbl_almacen_movimientos JOIN tbl_catalogo ON tbl_catalogo.idtbl_catalogo = dtl_almacen_movimientos.tbl_catalogo_idtbl_catalogo JOIN ctl_unidades_medida ON tbl_catalogo.ctl_unidades_medida_idctl_unidades_medida = ctl_unidades_medida.idctl_unidades_medida WHERE tbl_almacen_movimientos.movimiento_virtual = 3 AND tbl_almacenes.uid='$uid'");
		return $query->result();
	}

	public function entrada_explosiones($uid) {
		$query = $this->db->query("SELECT tbl_almacen_movimientos.idtbl_almacen_movimientos FROM tbl_almacenes JOIN tbl_proyectos ON tbl_proyectos.idtbl_proyectos = tbl_almacenes.tbl_proyectos_idtbl_proyectos JOIN tbl_almacenes tas ON tas.tbl_proyectos_idtbl_proyectos = tbl_proyectos.tbl_proyectos_idtbl_proyectos JOIN tbl_almacen_movimientos ON tbl_almacen_movimientos.tbl_almacenes_idtbl_almacenes = tas.idtbl_almacenes JOIN dtl_almacen_movimientos ON tbl_almacen_movimientos.idtbl_almacen_movimientos = dtl_almacen_movimientos.tbl_almacen_movimientos_idtbl_almacen_movimientos JOIN tbl_catalogo ON tbl_catalogo.idtbl_catalogo = dtl_almacen_movimientos.tbl_catalogo_idtbl_catalogo JOIN ctl_unidades_medida ON tbl_catalogo.ctl_unidades_medida_idctl_unidades_medida = ctl_unidades_medida.idctl_unidades_medida WHERE tbl_almacen_movimientos.movimiento_virtual = 3 AND tbl_almacenes.uid='63c026029c005' GROUP BY tbl_almacen_movimientos.idtbl_almacen_movimientos");

		$explosiones['idtbl_almacen_movimientos'][''] = '';
		foreach($query->result() AS $key => $value){
			$query_explosiones = "";
			$explosiones['idtbl_almacen_movimientos'][$value->idtbl_almacen_movimientos];
		}

		return $query->result();
	}

	public function detalle_almacen($uid) {
		$this->db->select('tbl_almacenes.*, tbl_proyectos.tbl_proyectos_idtbl_proyectos AS proyecto_principal');
		//$this->db->select('tbl_proyectos.nombre_proyecto');
		//$this->db->select('tbl_proyectos.numero_proyecto');
		//$this->db->select('tbl_proyectos.idtbl_proyectos');
		//$this->db->select('tbl_proyectos.direccion');
		//$this->db->select('tbl_coordinador.idtbl_usuarios as idtbl_coordinador');
		//$this->db->select('CONCAT(tbl_coordinador.nombres," ",tbl_coordinador.apellido_materno," ",tbl_coordinador.apellido_paterno) as coordinador');
		//$this->db->select('tbl_responsable.idtbl_usuarios as idtbl_responsable');
		//$this->db->select('CONCAT(tbl_responsable.nombres," ",tbl_responsable.apellido_materno," ",tbl_responsable.apellido_paterno) as responsable');
		$this->db->from('tbl_almacenes');
		//$this->db->join('tbl_almacenes', 'tbl_almacenes.idtbl_almacenes=tbl_proyectos.tbl_almacenes_idtbl_almacenes', 'left');
		//$this->db->join('tbl_usuarios as tbl_coordinador','tbl_proyectos.coordinador=tbl_coordinador.idtbl_usuarios','left');
		//$this->db->join('tbl_usuarios as tbl_responsable','tbl_proyectos.responsable=tbl_responsable.idtbl_usuarios','left');
		$this->db->join('tbl_proyectos', 'tbl_proyectos.idtbl_proyectos = tbl_almacenes.tbl_proyectos_idtbl_proyectos', 'left');
		$this->db->where('tbl_almacenes.uid', $uid);
		$this->db->or_like('tbl_almacenes.idtbl_almacenes', $uid);	
		$query = $this->db->get();
		if ($query->num_rows() > 0) {
			return $query->result()[0];
		} else {
			return false;
		}
	}

	public function grafica_consumibles_sistemas($limit = false) {
		$this->db->select('tbl_catalogo.descripcion, tbl_catalogo.minimo, dtl_almacen.existencias');
		$this->db->from('dtl_almacen');
		$this->db->join('tbl_catalogo', 'tbl_catalogo.idtbl_catalogo=dtl_almacen.tbl_catalogo_idtbl_catalogo', 'left');
		$this->db->join('ctl_categorias', 'ctl_categorias.idctl_categorias=tbl_catalogo.ctl_categorias_idctl_categorias', 'left');
		$this->db->where('ctl_categorias.idctl_categorias', '2');
		$this->db->where('dtl_almacen.estatus', 'almacen');
		$this->db->where('dtl_almacen.tbl_almacenes_idtbl_almacenes', ID_ALMACEN_SISTEMAS);
		if($limit){
			$this->db->offset($this->input->post("offset"));
			$this->db->limit(25);
		}
		$this->db->like('tbl_catalogo.descripcion',$this->input->post("busqueda"));
		$query = $this->db->get();
		return $query->result();
	}

	public function grafica_consumibles_alto_costo($limit = false) {
		$this->db->select("tbl_catalogo.descripcion, tbl_catalogo.minimo, dtl_almacen.existencias");
		$this->db->from('dtl_almacen');
		$this->db->join('tbl_catalogo', 'tbl_catalogo.idtbl_catalogo=dtl_almacen.tbl_catalogo_idtbl_catalogo', 'left');
		$this->db->join('ctl_categorias', 'ctl_categorias.idctl_categorias=tbl_catalogo.ctl_categorias_idctl_categorias', 'left');
		$this->db->where('ctl_categorias.idctl_categorias', '2');
		$this->db->where('dtl_almacen.estatus', 'almacen');
		$this->db->where('dtl_almacen.estado', 'nuevo');
		$this->db->where('dtl_almacen.tbl_almacenes_idtbl_almacenes', ID_ALMACEN_ALTO_COSTO);
		if($limit){
			$this->db->offset($this->input->post("offset"));
			$this->db->limit(25);
		}
		$this->db->like('tbl_catalogo.descripcion',$this->input->post("busqueda"));
		$query = $this->db->get();
		return $query->result();
	}

	public function grafica_seguridad_higiene() {
		$query = $this->db->query("SELECT * FROM dtl_almacen LEFT JOIN tbl_catalogo ON tbl_catalogo.idtbl_catalogo=dtl_almacen.tbl_catalogo_idtbl_catalogo WHERE tbl_catalogo.tipo = 1");
		return $query->result();
	}

	public function grafica_control_vehicular_refacciones($limit = false) {
		$conditionLimit = "";
		if($this->input->post("busqueda") != NULL){
			$conditionLimit = " AND descripcion LIKE '%" . $this->input->post("busqueda") . "%'";
		}
		if($limit){
			$conditionLimit .= " LIMIT " .  $this->input->post("offset") . ", 25 ";
		}
		$query = $this->db->query("SELECT * FROM dtl_almacen LEFT JOIN tbl_catalogo ON tbl_catalogo.idtbl_catalogo=dtl_almacen.tbl_catalogo_idtbl_catalogo WHERE dtl_almacen.tbl_almacenes_idtbl_almacenes = 29" . $conditionLimit);
		return $query->result();
	}

	public function grafica_equipo_proteccion($limit = false) {
		$conditionLimit = "";
		if($this->input->post("busqueda") != NULL){
			$conditionLimit = " AND descripcion LIKE '%" . $this->input->post("busqueda") . "%'";
		}
		if($limit){
			$conditionLimit .= " LIMIT " .  $this->input->post("offset") . ", 25 ";
		}
		$query = $this->db->query("SELECT * FROM dtl_almacen LEFT JOIN tbl_catalogo ON tbl_catalogo.idtbl_catalogo=dtl_almacen.tbl_catalogo_idtbl_catalogo WHERE dtl_almacen.tbl_almacenes_idtbl_almacenes = 1 AND tbl_catalogo.tipo = 1" . $conditionLimit);
		return $query->result();
	}

	public function estatus_herramientas_alto_costo($tipo) {
		$query = $this->db->query("SELECT dtl_almacen.*, COUNT(estatus) as total FROM `dtl_almacen`  LEFT JOIN tbl_catalogo  ON dtl_almacen.tbl_catalogo_idtbl_catalogo=tbl_catalogo.idtbl_catalogo  WHERE tbl_catalogo.ctl_categorias_idctl_categorias=16 AND dtl_almacen.tbl_almacenes_idtbl_almacenes = 2  AND tbl_catalogo.descripcion='$tipo' GROUP BY dtl_almacen.estatus, tbl_catalogo.descripcion ORDER BY dtl_almacen.estatus ASC");
		return $query->result();
	}

	public function estatus_herramientas_alto_costo_like($tipo, $estatus = "") {
		
		if($estatus == ""){
			$query = $this->db->query("SELECT dtl_almacen.*, COUNT(estatus) as total FROM `dtl_almacen`  LEFT JOIN tbl_catalogo  ON dtl_almacen.tbl_catalogo_idtbl_catalogo=tbl_catalogo.idtbl_catalogo  WHERE tbl_catalogo.ctl_categorias_idctl_categorias=16  AND tbl_catalogo.descripcion LIKE '%$tipo%' AND dtl_almacen.tbl_almacenes_idtbl_almacenes = 2 AND dtl_almacen.estatus != '' AND dtl_almacen.numero_interno NOT LIKE '%VENTA%' AND dtl_almacen.numero_interno NOT LIKE '%RENTA%' GROUP BY dtl_almacen.estatus ORDER BY dtl_almacen.estatus ASC");
		}else{
			$query = $this->db->query("SELECT dtl_almacen.*, COUNT(estatus) as total FROM `dtl_almacen`  LEFT JOIN tbl_catalogo  ON dtl_almacen.tbl_catalogo_idtbl_catalogo=tbl_catalogo.idtbl_catalogo  WHERE tbl_catalogo.ctl_categorias_idctl_categorias=16  AND tbl_catalogo.descripcion LIKE '%$tipo%' AND dtl_almacen.tbl_almacenes_idtbl_almacenes = 2 AND  dtl_almacen.estatus != '' AND dtl_almacen.numero_interno LIKE '%$estatus%' GROUP BY dtl_almacen.estatus ORDER BY dtl_almacen.estatus ASC");
		}
		return $query->result();
	}

	public function estatus_almacen_sistemas($tipo, $estatus = ""){
		if($estatus == ""){
			//$query = $this->db->query("SELECT dtl_almacen.*, COUNT(estatus) as total from `dtl_almacen` LEFT JOIN tbl_catalogo ON dtl_almacen.tbl_catalogo_idtbl_catalogo = tbl_catalogo.idtbl_catalogo WHERE tbl_catalogo.ctl_categorias_idctl_categorias = 16 AND tbl_catalogo.descripcion LIKE '%$tipo%' AND dtl_almacen.tbl_almacenes_idtbl_almacenes = 30 AND dtl_almacen.estatus != '' AND dtl_almacen.numero_interno NOT LIKE '%ALMACEN%' AND dtl_almacen.numero_interno NOT LIKE '%ASIGNADO%' AND dtl_almacen.numero_interno NOT LIKE '%DESCOMPUESTO%' GROUP BY dtl_almacen.estatus ORDER BY dtl_almacen.estatus ASC");
			$query = $this->db->query("SELECT dtl_almacen.*, COUNT(estatus) as total from `dtl_almacen` LEFT JOIN tbl_catalogo ON dtl_almacen.tbl_catalogo_idtbl_catalogo = tbl_catalogo.idtbl_catalogo WHERE tbl_catalogo.ctl_categorias_idctl_categorias = 16 AND tbl_catalogo.descripcion LIKE '%$tipo%' AND dtl_almacen.tbl_almacenes_idtbl_almacenes = 30 AND dtl_almacen.estatus != '' AND dtl_almacen.numero_interno NOT LIKE '%ALMACEN%' AND dtl_almacen.numero_interno NOT LIKE '%ASIGNADO%' AND dtl_almacen.numero_interno NOT LIKE '%DESCOMPUESTO%' GROUP BY dtl_almacen.estatus ORDER BY dtl_almacen.estatus ASC");
		}else{
			//$query = $this->db->query("SELECT dtl_almacen.*, COUNT(estatus) as total FROM `dtl_almacen` LEFT JOIN tbl_catalogo ON dtl_almacen.tbl_catalogo_idtbl_catalogo = tbl_catalogo.idtbl_catalogo WHERE tbl_catalogo.ctl_categorias_idctl_categorias = 16 AND tbl_catalogo.descripcion LIKE '%$tipo%' AND dtl_almacen.tbl_almacenes_idtbl_almacenes = 30 AND dtl_almacen.estatus != '' AND dtl_almacen.numero_interno LIKE '%$estatus%' GROUP BY dtl_almacen.estatus ORDER BY dtl_almacen.estatus ASC");
			//$query = $this->db->query("SELECT dtl_almacen.*, tbl_catalogo.maximo, COUNT(estatus) as total FROM `dtl_almacen` LEFT JOIN tbl_catalogo ON dtl_almacen.tbl_catalogo_idtbl_catalogo=tbl_catalogo.idtbl_catalogo WHERE tbl_catalogo.tipo=6 AND dtl_almacen.tbl_almacenes_idtbl_almacenes = 30 and dtl_almacen.tbl_catalogo_idtbl_catalogo IN('21782') and dtl_almacen.estatus IN('asignado')");
			$query = $this->db->query("SELECT * FROM dtl_almacen where dtl_almacen.tbl_almacenes_idtbl_almacenes = 30");
		}
		return $query->result();
	}

	public function estatus_consumible_almacen_general($tipo) {
				
		$query = $this->db->query("SELECT dtl_almacen.*, tbl_catalogo.maximo, COUNT(estatus) as total FROM `dtl_almacen` LEFT JOIN tbl_catalogo ON dtl_almacen.tbl_catalogo_idtbl_catalogo=tbl_catalogo.idtbl_catalogo WHERE tbl_catalogo.neodata LIKE '%$tipo%' AND dtl_almacen.tbl_almacenes_idtbl_almacenes = 1 AND dtl_almacen.estatus != '' GROUP BY dtl_almacen.estatus ORDER BY dtl_almacen.estatus ASC");
		
		return $query->result();
	}

	public function unidades_control_vehicular() {
		$query = $this->db->query("SELECT dtl_almacen.*, COUNT(estatus) as total FROM `dtl_almacen`  LEFT JOIN tbl_catalogo  ON dtl_almacen.tbl_catalogo_idtbl_catalogo=tbl_catalogo.idtbl_catalogo  WHERE tbl_catalogo.tipo = 4  AND dtl_almacen.tbl_almacenes_idtbl_almacenes = 28 AND dtl_almacen.estatus != '' AND tbl_catalogo.descripcion != 'PERSONAL' GROUP BY dtl_almacen.estatus ORDER BY dtl_almacen.estatus ASC");
		return $query->result();
	}

	public function unidades_control_vehicular_marca(){
		$query = $this->db->query("SELECT tbl_catalogo.marca FROM `tbl_catalogo` JOIN ctl_categorias ON tbl_catalogo.ctl_categorias_idctl_categorias = ctl_categorias.idctl_categorias AND tbl_catalogo.tipo = 4 AND tbl_catalogo.descripcion != 'PERSONAL' GROUP BY tbl_catalogo.marca");
		return $query->result();
	}

	public function unidades_control_vehicular_modelo(){
		$marca = $this->input->post("marca");
		$categoria_vehiculo = $this->input->post("categoria_vehiculo");
		$condition = "";
		if($categoria_vehiculo != ""){
			$condition = "AND tbl_catalogo.categoria_vehiculo = '$categoria_vehiculo'";
		}
		$query = $this->db->query("SELECT tbl_catalogo.modelo FROM `tbl_catalogo` JOIN ctl_categorias ON tbl_catalogo.ctl_categorias_idctl_categorias = ctl_categorias.idctl_categorias AND tbl_catalogo.tipo = 4 WHERE tbl_catalogo.descripcion != 'PERSONAL' AND tbl_catalogo.marca = '$marca' $condition GROUP BY tbl_catalogo.marca, tbl_catalogo.modelo");
		return $query->result();
	}

	public function unidades_control_vehicular_marca_modelo(){
		$marca = $this->input->post("marca");
		$modelo = $this->input->post("modelo");
		$query = $this->db->query("SELECT dtl_almacen.*, COUNT(estatus) as total FROM `dtl_almacen`  LEFT JOIN tbl_catalogo  ON dtl_almacen.tbl_catalogo_idtbl_catalogo=tbl_catalogo.idtbl_catalogo  WHERE tbl_catalogo.tipo = 4  AND dtl_almacen.tbl_almacenes_idtbl_almacenes = 28 AND dtl_almacen.estatus != '' AND tbl_catalogo.descripcion != 'PERSONAL' AND tbl_catalogo.marca = '$marca' AND tbl_catalogo.modelo = '$modelo' GROUP BY dtl_almacen.estatus ORDER BY dtl_almacen.estatus ASC");
		return $query->result();
	}

	public function estatus_herramientas_mediano_costo($tipo) {
		$query = $this->db->query("SELECT dtl_almacen.*, COUNT(estatus) as total FROM `dtl_almacen`  LEFT JOIN tbl_catalogo  ON dtl_almacen.tbl_catalogo_idtbl_catalogo=tbl_catalogo.idtbl_catalogo  WHERE tbl_catalogo.ctl_categorias_idctl_categorias=10 AND dtl_almacen.tbl_almacenes_idtbl_almacenes = 2  AND tbl_catalogo.descripcion='$tipo' GROUP BY dtl_almacen.estatus, tbl_catalogo.descripcion ORDER BY dtl_almacen.estatus ASC");
		return $query->result();
	}

	public function estatus_herramientas_mediano_costo_like($tipo, $estatus = "") {
		if($estatus == ""){
			$query = $this->db->query("SELECT dtl_almacen.*, COUNT(estatus) as total FROM `dtl_almacen`  LEFT JOIN tbl_catalogo  ON dtl_almacen.tbl_catalogo_idtbl_catalogo=tbl_catalogo.idtbl_catalogo  WHERE tbl_catalogo.ctl_categorias_idctl_categorias=10 AND dtl_almacen.tbl_almacenes_idtbl_almacenes = 2  AND tbl_catalogo.descripcion LIKE '%$tipo%' AND dtl_almacen.estatus != '' GROUP BY dtl_almacen.estatus ORDER BY dtl_almacen.estatus ASC");
		}else{
			$query = $this->db->query("SELECT dtl_almacen.*, COUNT(estatus) as total FROM `dtl_almacen`  LEFT JOIN tbl_catalogo  ON dtl_almacen.tbl_catalogo_idtbl_catalogo=tbl_catalogo.idtbl_catalogo  WHERE tbl_catalogo.ctl_categorias_idctl_categorias=10 AND dtl_almacen.tbl_almacenes_idtbl_almacenes = 2  AND tbl_catalogo.descripcion LIKE '%$tipo%' AND dtl_almacen.estatus != '' AND dtl_almacen.numero_interno LIKE '%$estatus%' GROUP BY dtl_almacen.estatus ORDER BY dtl_almacen.estatus ASC");
		}
		return $query->result();
	}

	
	public function grafica_sistemas_laptops($limit = false) {
		$conditionLimit = "";
		if($this->input->post("busqueda") != NULL){
			$conditionLimit = " AND descripcion LIKE '%" . $this->input->post("busqueda") . "%'";
		}
		if($limit){
			$conditionLimit .= " LIMIT " .  $this->input->post("offset") . ", 25 ";
		}
		$query = $this->db->query("SELECT * FROM dtl_almacen LEFT JOIN tbl_catalogo ON tbl_catalogo.idtbl_catalogo=dtl_almacen.tbl_catalogo_idtbl_catalogo WHERE dtl_almacen.tbl_almacenes_idtbl_almacenes = 1 AND tbl_catalogo.tipo = 6" . $conditionLimit);
		return $query->result();
	}

	public function estatus_sistemas_laptops($neodata) {
		$query = $this->db->query("SELECT dtl_almacen.*, tbl_catalogo.maximo, COUNT(estatus) as total FROM `dtl_almacen` LEFT JOIN tbl_catalogo ON dtl_almacen.tbl_catalogo_idtbl_catalogo=tbl_catalogo.idtbl_catalogo WHERE tbl_catalogo.tipo=6 AND dtl_almacen.tbl_almacenes_idtbl_almacenes = 30 AND dtl_almacen.tbl_catalogo_idtbl_catalogo = 21782 AND dtl_almacen.estatus != '' GROUP BY dtl_almacen.estatus ORDER BY dtl_almacen.estatus ASC");
		return $query->result();
	}

	public function estatus_sistemas_laptops_especiales($neodata){
		$query = $this->db->query("SELECT dtl_almacen.*, tbl_catalogo.maximo, COUNT(estatus) as total FROM `dtl_almacen` LEFT JOIN tbl_catalogo ON dtl_almacen.tbl_catalogo_idtbl_catalogo = tbl_catalogo.idtbl_catalogo WHERE tbl_catalogo.tipo = 6 AND dtl_almacen.tbl_almacenes_idtbl_almacenes = 30 AND dtl_almacen.tbl_catalogo_idtbl_catalogo = 27343 AND dtl_almacen.estatus != '' GROUP BY dtl_almacen.estatus ORDER BY dtl_almacen.estatus ASC");
		return $query->result();
	}

	public function estatus_sistemas_desktops($neodata) {
		$query = $this->db->query("SELECT dtl_almacen.*, tbl_catalogo.maximo, COUNT(estatus) as total FROM `dtl_almacen` LEFT JOIN tbl_catalogo ON dtl_almacen.tbl_catalogo_idtbl_catalogo=tbl_catalogo.idtbl_catalogo WHERE tbl_catalogo.tipo=6 AND dtl_almacen.tbl_almacenes_idtbl_almacenes = 30 AND dtl_almacen.tbl_catalogo_idtbl_catalogo = 21759 AND dtl_almacen.estatus != '' GROUP BY dtl_almacen.estatus ORDER BY dtl_almacen.estatus ASC");
		return $query->result();
	}

	public function estatus_sistemas_celulares($neodata) {
		$query = $this->db->query("SELECT dtl_almacen.*, tbl_catalogo.maximo, COUNT(estatus) as total FROM `dtl_almacen` LEFT JOIN tbl_catalogo ON dtl_almacen.tbl_catalogo_idtbl_catalogo=tbl_catalogo.idtbl_catalogo WHERE tbl_catalogo.tipo=6 AND dtl_almacen.tbl_almacenes_idtbl_almacenes = 30 AND dtl_almacen.tbl_catalogo_idtbl_catalogo = 18546 AND dtl_almacen.estatus != '' GROUP BY dtl_almacen.estatus ORDER BY dtl_almacen.estatus ASC");
		return $query->result();
	}

	public function estatus_sistemas_impresoras($neodata) {
		$query = $this->db->query("SELECT dtl_almacen.*, tbl_catalogo.maximo, COUNT(estatus) as total FROM `dtl_almacen` LEFT JOIN tbl_catalogo ON dtl_almacen.tbl_catalogo_idtbl_catalogo=tbl_catalogo.idtbl_catalogo WHERE tbl_catalogo.tipo=6 AND dtl_almacen.tbl_almacenes_idtbl_almacenes = 30 AND dtl_almacen.tbl_catalogo_idtbl_catalogo IN('21776','21775') AND dtl_almacen.estatus != '' GROUP BY dtl_almacen.estatus ORDER BY dtl_almacen.estatus ASC");
		return $query->result();
	}

	public function estatus_sistemas_monitores($neodata){
		$query = $this->db->query("SELECT dtl_almacen.*, tbl_catalogo.maximo, COUNT(estatus) as total FROM `dtl_almacen` LEFT JOIN tbl_catalogo ON dtl_almacen.tbl_catalogo_idtbl_catalogo=tbl_catalogo.idtbl_catalogo WHERE tbl_catalogo.tipo = 6 AND dtl_almacen.tbl_almacenes_idtbl_almacenes = 30 AND dtl_almacen.tbl_catalogo_idtbl_catalogo = 26027 AND dtl_almacen.estatus != '' GROUP BY dtl_almacen.estatus ORDER BY dtl_almacen.estatus ASC");
		return $query->result();
	}

	public function estatus_sistemas_proyectores($neodata){
		$query = $this->db->query("SELECT dtl_almacen.*, tbl_catalogo.maximo, COUNT(estatus) as total FROM `dtl_almacen` LEFT JOIN tbl_catalogo ON dtl_almacen.tbl_catalogo_idtbl_catalogo=tbl_catalogo.idtbl_catalogo WHERE tbl_catalogo.tipo = 6 AND dtl_almacen.tbl_almacenes_idtbl_almacenes = 30 AND dtl_almacen.tbl_catalogo_idtbl_catalogo = 21794 AND dtl_almacen.estatus != '' GROUP BY dtl_almacen.estatus ORDER BY dtl_almacen.estatus ASC");
		return $query->result();
	}

	public function estatus_sistemas_plotters($neodate){
		$query = $this->db->query("SELECT dtl_almacen.*, tbl_catalogo.maximo, COUNT(estatus) as total FROM `dtl_almacen` LEFT JOIN tbl_catalogo ON dtl_almacen.tbl_catalogo_idtbl_catalogo=tbl_catalogo.idtbl_catalogo WHERE tbl_catalogo.tipo = 6 AND dtl_almacen.tbl_almacenes_idtbl_almacenes = 30 AND dtl_almacen.tbl_catalogo_idtbl_catalogo = 21793 AND dtl_almacen.estatus != '' GROUP BY dtl_almacen.estatus ORDER BY dtl_almacen.estatus ASC");
		return $query->result();
	}


	public function estatus_productos_seguridad_higiene($neodata) {
		$query = $this->db->query("SELECT dtl_almacen.*, tbl_catalogo.maximo, COUNT(estatus) as total FROM `dtl_almacen` LEFT JOIN tbl_catalogo  ON dtl_almacen.tbl_catalogo_idtbl_catalogo=tbl_catalogo.idtbl_catalogo  WHERE tbl_catalogo.tipo=1 AND dtl_almacen.tbl_almacenes_idtbl_almacenes = 1 AND tbl_catalogo.neodata = '$neodata' AND dtl_almacen.estatus != '' GROUP BY dtl_almacen.estatus ORDER BY dtl_almacen.estatus ASC");
		return $query->result();
	}

	public function estatus_productos_kuali($neodata) {
		$query = $this->db->query("SELECT dtl_almacen.*, tbl_catalogo.maximo, COUNT(estatus) as total FROM `dtl_almacen` LEFT JOIN tbl_catalogo  ON dtl_almacen.tbl_catalogo_idtbl_catalogo=tbl_catalogo.idtbl_catalogo  WHERE dtl_almacen.tbl_almacenes_idtbl_almacenes = 16 AND tbl_catalogo.neodata = '$neodata' AND dtl_almacen.estatus != '' AND dtl_almacen.estatus != 'asignado' AND dtl_almacen.numero_serie IS NOT NULL GROUP BY dtl_almacen.estatus ORDER BY dtl_almacen.estatus ASC");
		return $query->result();
	}

	public function estatus_productos_seguridad_higiene_bandolas() {
		$query = $this->db->query("SELECT dtl_almacen.iddtl_almacen, dtl_almacen.tbl_almacenes_idtbl_almacenes, dtl_almacen.tbl_catalogo_idtbl_catalogo, SUM(dtl_almacen.existencias) AS existencias, dtl_almacen.numero_serie, dtl_almacen.numero_interno, dtl_almacen.estatus, tbl_catalogo.maximo, COUNT(estatus) as total FROM `dtl_almacen` LEFT JOIN tbl_catalogo  ON dtl_almacen.tbl_catalogo_idtbl_catalogo=tbl_catalogo.idtbl_catalogo  WHERE tbl_catalogo.tipo=1 AND dtl_almacen.tbl_almacenes_idtbl_almacenes = 1 AND (tbl_catalogo.neodata = 'EP-CAB-POS-001' OR tbl_catalogo.neodata = 'EP-CUE-VID-001') AND dtl_almacen.estatus != '' GROUP BY dtl_almacen.estatus ORDER BY dtl_almacen.estatus ASC");
		return $query->result();
	}

	public function estatus_productos_seguridad_higiene_cinturones() {
		$query = $this->db->query("SELECT dtl_almacen.iddtl_almacen, dtl_almacen.tbl_almacenes_idtbl_almacenes, dtl_almacen.tbl_catalogo_idtbl_catalogo, SUM(dtl_almacen.existencias) AS existencias, dtl_almacen.numero_serie, dtl_almacen.numero_interno, dtl_almacen.estatus, tbl_catalogo.maximo, COUNT(estatus) as total FROM `dtl_almacen` LEFT JOIN tbl_catalogo  ON dtl_almacen.tbl_catalogo_idtbl_catalogo=tbl_catalogo.idtbl_catalogo  WHERE tbl_catalogo.tipo=1 AND dtl_almacen.tbl_almacenes_idtbl_almacenes = 1 AND (tbl_catalogo.neodata = 'EP-CIN-SEG-001' OR tbl_catalogo.neodata = 'EP-CIN-POS-001' OR tbl_catalogo.neodata = 'EP-CIN-POS-002' OR tbl_catalogo.neodata = 'EP-CIN-POS-003' OR tbl_catalogo.neodata = 'EP-CIN-POS-004' OR tbl_catalogo.neodata = 'EP-CIN-POR-001' OR tbl_catalogo.neodata = 'EP-CIN-POR-002') AND dtl_almacen.estatus != '' GROUP BY dtl_almacen.estatus ORDER BY dtl_almacen.estatus ASC");
		return $query->result();
	}

	public function estatus_herramientas_hilti($tipo) {
		$query = $this->db->query("SELECT dtl_almacen.*, COUNT(estatus) as total FROM `dtl_almacen`  LEFT JOIN tbl_catalogo  ON dtl_almacen.tbl_catalogo_idtbl_catalogo=tbl_catalogo.idtbl_catalogo  WHERE tbl_catalogo.ctl_categorias_idctl_categorias=7  AND tbl_catalogo.descripcion='$tipo' GROUP BY dtl_almacen.estatus, tbl_catalogo.descripcion ORDER BY dtl_almacen.estatus ASC");
		return $query->result();
	}

	public function asignaciones($buscar = '', $buscar2 = '', $inicio = false, $cantidadRegistro = false) {
		$limit = '';
		if ($inicio !== false && $cantidadRegistro !== false) {
			$limit = 'LIMIT ' . $inicio . "," . $cantidadRegistro;
		}
		if ($buscar2 == '') {
			$string = "AND (tbl_almacen_movimientos.estatus = 1 OR tbl_almacen_movimientos.estatus = 0 OR tbl_almacen_movimientos.estatus = 2)";
			
		}
		if ($buscar2 != '') {
			$string = "AND (tbl_almacen_movimientos.estatus = $buscar2)";
		}
		/*$this->db->select('tbl_almacen_movimientos.*');
		$this->db->select('tbl_almacen_movimientos.estatus as estatus_movimiento');
		$this->db->select('dtl_asignacion.*');
		$this->db->select('tbl_almacen_movimientos.uid as uid_movimiento');
		$this->db->select('tbl_usuarios.*');
		$this->db->select('tbl_usuarios.uid as uid_user');
		$this->db->select('tbl_users.*');
		$this->db->select('tbl_proyectos.*');

		$this->db->from('tbl_almacen_movimientos');

		$this->db->join('dtl_asignacion', 'tbl_almacen_movimientos.idtbl_almacen_movimientos=dtl_asignacion.tbl_almacen_movimientos_idtbl_almacen_movimientos', 'left');
		$this->db->join('tbl_usuarios', 'tbl_almacen_movimientos.tbl_usuarios_idtbl_usuarios=tbl_usuarios.idtbl_usuarios', 'left');
		$this->db->join('tbl_users', 'tbl_almacen_movimientos.tbl_users_idtbl_users=tbl_users.idtbl_users', 'left');
		$this->db->join('tbl_proyectos', 'tbl_almacen_movimientos.tbl_proyectos_idtbl_proyectos=tbl_proyectos.idtbl_proyectos', 'left');

		$this->db->where('tbl_almacen_movimientos.tipo', 'asignacion');

		$this->db->group_by("tbl_almacen_movimientos.folio");
		$this->db->order_by("tbl_almacen_movimientos.folio", "desc");

		$query = $this->db->get();*/
		if($this->session->userdata('tipo')==1){
			if($buscar=='null' || $buscar=='NULL'){
				$query = $this->db->query("SELECT tbl_almacen_movimientos.*, tbl_almacen_movimientos.estatus as estatus_movimiento, dtl_asignacion.*, tbl_almacen_movimientos.uid as uid_movimiento, tbl_usuarios.*, tbl_usuarios.uid as uid_user, tbl_users.*, tbl_proyectos.* FROM tbl_almacen_movimientos LEFT JOIN dtl_asignacion ON tbl_almacen_movimientos.idtbl_almacen_movimientos=dtl_asignacion.tbl_almacen_movimientos_idtbl_almacen_movimientos LEFT JOIN tbl_usuarios ON tbl_almacen_movimientos.tbl_usuarios_idtbl_usuarios=tbl_usuarios.idtbl_usuarios LEFT JOIN tbl_users ON tbl_almacen_movimientos.tbl_users_idtbl_users=tbl_users.idtbl_users LEFT JOIN tbl_proyectos ON tbl_almacen_movimientos.tbl_proyectos_idtbl_proyectos=tbl_proyectos.idtbl_proyectos WHERE tbl_almacen_movimientos.tipo = 'asignacion' AND tbl_almacen_movimientos.tbl_almacenes_idtbl_almacenes=2 $string AND(tbl_almacen_movimientos.folio LIKE '%$buscar%' OR tbl_almacen_movimientos.fecha LIKE '%$buscar%' OR dtl_asignacion.fecha_asignacion LIKE '%$buscar%' OR dtl_asignacion.fecha_asignacion LIKE '%$buscar%' OR dtl_asignacion.estatus_asignacion LIKE '%$buscar%' OR tbl_users.nombre LIKE '%$buscar%' OR tbl_usuarios.nombres LIKE '%$buscar%' OR tbl_usuarios.apellido_paterno LIKE '%$buscar%' OR tbl_usuarios.apellido_materno LIKE '%$buscar%' OR tbl_proyectos.nombre_proyecto LIKE '%$buscar%') GROUP BY tbl_almacen_movimientos.folio ORDER BY tbl_almacen_movimientos.folio DESC " . $limit);
			}else{
				$query = $this->db->query("SELECT tbl_almacen_movimientos.*, tbl_almacen_movimientos.estatus as estatus_movimiento, dtl_asignacion.*, tbl_almacen_movimientos.uid as uid_movimiento, tbl_usuarios.*, tbl_usuarios.uid as uid_user, tbl_users.*, tbl_proyectos.* FROM tbl_almacen_movimientos LEFT JOIN dtl_asignacion ON tbl_almacen_movimientos.idtbl_almacen_movimientos=dtl_asignacion.tbl_almacen_movimientos_idtbl_almacen_movimientos LEFT JOIN tbl_usuarios ON tbl_almacen_movimientos.tbl_usuarios_idtbl_usuarios=tbl_usuarios.idtbl_usuarios LEFT JOIN tbl_users ON tbl_almacen_movimientos.tbl_users_idtbl_users=tbl_users.idtbl_users LEFT JOIN tbl_proyectos ON tbl_almacen_movimientos.tbl_proyectos_idtbl_proyectos=tbl_proyectos.idtbl_proyectos WHERE tbl_almacen_movimientos.tipo = 'asignacion' AND tbl_almacen_movimientos.tbl_almacenes_idtbl_almacenes=2 $string AND(tbl_almacen_movimientos.folio LIKE '%$buscar%' OR tbl_almacen_movimientos.fecha LIKE '%$buscar%' OR dtl_asignacion.fecha_asignacion LIKE '%$buscar%' OR dtl_asignacion.estatus_asignacion LIKE '%$buscar%' OR tbl_users.nombre LIKE '%$buscar%' OR tbl_usuarios.nombres LIKE '%$buscar%' OR tbl_usuarios.apellido_paterno LIKE '%$buscar%' OR tbl_usuarios.apellido_materno LIKE '%$buscar%' OR tbl_proyectos.nombre_proyecto LIKE '%$buscar%') GROUP BY tbl_almacen_movimientos.folio ORDER BY tbl_almacen_movimientos.folio DESC " . $limit);
			}
		} elseif(($this->session->userdata('tipo') == 3 || $this->session->userdata('tipo') == 15) && isset($_POST['tipo_asignacion']) && $_POST['tipo_asignacion'] != 'refacciones') {
			if($buscar=='null' || $buscar=='NULL'){
				$query = $this->db->query("SELECT tbl_almacen_movimientos.*, tbl_almacen_movimientos.estatus as estatus_movimiento, dtl_asignacion.*, tbl_almacen_movimientos.uid as uid_movimiento, tbl_usuarios.*, tbl_usuarios.uid as uid_user, tbl_users.*, tbl_proyectos.*, dtl_almacen.numero_interno FROM tbl_almacen_movimientos LEFT JOIN dtl_asignacion ON tbl_almacen_movimientos.idtbl_almacen_movimientos=dtl_asignacion.tbl_almacen_movimientos_idtbl_almacen_movimientos LEFT JOIN tbl_usuarios ON tbl_almacen_movimientos.tbl_usuarios_idtbl_usuarios=tbl_usuarios.idtbl_usuarios LEFT JOIN tbl_users ON tbl_almacen_movimientos.tbl_users_idtbl_users=tbl_users.idtbl_users LEFT JOIN tbl_proyectos ON tbl_almacen_movimientos.tbl_proyectos_idtbl_proyectos=tbl_proyectos.idtbl_proyectos LEFT JOIN dtl_almacen ON dtl_almacen.iddtl_almacen = dtl_asignacion.dtl_almacen_iddtl_almacen WHERE tbl_almacen_movimientos.tipo = 'asignacion' AND tbl_almacen_movimientos.tbl_almacenes_idtbl_almacenes= " . ID_ALMACEN_AUTOS_CONTROL_VEHICULAR ." AND(tbl_almacen_movimientos.folio LIKE '%$buscar%' OR tbl_almacen_movimientos.fecha LIKE '%$buscar%' OR dtl_asignacion.fecha_asignacion LIKE $buscar OR dtl_asignacion.fecha_asignacion LIKE '%$buscar%' OR dtl_asignacion.estatus_asignacion LIKE '%$buscar%' OR tbl_users.nombre LIKE '%$buscar%' OR tbl_usuarios.nombres LIKE '%$buscar%' OR tbl_usuarios.apellido_paterno LIKE '%$buscar%' OR tbl_usuarios.apellido_materno LIKE '%$buscar%' OR tbl_proyectos.nombre_proyecto LIKE '%$buscar%' OR dtl_almacen.numero_interno LIKE '%$buscar%') GROUP BY tbl_almacen_movimientos.folio ORDER BY tbl_almacen_movimientos.folio DESC " . $limit);
			}else{
				$condition = "";
				if(isset($_POST['buscar2']) && ($_POST['buscar2'] == "0" || $_POST['buscar2'] == "1" || $_POST['buscar2'] == "2")){
					$condition = " AND tbl_almacen_movimientos.estatus = " . $_POST['buscar2'] . " ";
				}
				$query = $this->db->query("SELECT tbl_almacen_movimientos.*, tbl_almacen_movimientos.estatus as estatus_movimiento, dtl_asignacion.*, tbl_almacen_movimientos.uid as uid_movimiento, tbl_usuarios.*, tbl_usuarios.uid as uid_user, tbl_users.*, tbl_proyectos.*, dtl_almacen.numero_interno FROM tbl_almacen_movimientos LEFT JOIN dtl_asignacion ON tbl_almacen_movimientos.idtbl_almacen_movimientos=dtl_asignacion.tbl_almacen_movimientos_idtbl_almacen_movimientos LEFT JOIN tbl_usuarios ON tbl_almacen_movimientos.tbl_usuarios_idtbl_usuarios=tbl_usuarios.idtbl_usuarios LEFT JOIN tbl_users ON tbl_almacen_movimientos.tbl_users_idtbl_users=tbl_users.idtbl_users LEFT JOIN tbl_proyectos ON tbl_almacen_movimientos.tbl_proyectos_idtbl_proyectos=tbl_proyectos.idtbl_proyectos LEFT JOIN dtl_almacen ON dtl_almacen.iddtl_almacen = dtl_asignacion.dtl_almacen_iddtl_almacen WHERE tbl_almacen_movimientos.tipo = 'asignacion' AND tbl_almacen_movimientos.tbl_almacenes_idtbl_almacenes= " . ID_ALMACEN_AUTOS_CONTROL_VEHICULAR ." AND(tbl_almacen_movimientos.folio LIKE '%$buscar%' OR tbl_almacen_movimientos.fecha LIKE '%$buscar%' OR dtl_asignacion.fecha_asignacion LIKE '%$buscar%' OR dtl_asignacion.estatus_asignacion LIKE '%$buscar%' OR tbl_users.nombre LIKE '%$buscar%' OR tbl_usuarios.nombres LIKE '%$buscar%' OR tbl_usuarios.apellido_paterno LIKE '%$buscar%' OR tbl_usuarios.apellido_materno LIKE '%$buscar%' OR tbl_proyectos.nombre_proyecto LIKE '%$buscar%' OR dtl_almacen.numero_interno LIKE '%$buscar%') " . $condition . " GROUP BY tbl_almacen_movimientos.folio ORDER BY tbl_almacen_movimientos.folio DESC " . $limit);
			}
	    } elseif($this->session->userdata('tipo') == 3 && isset($_POST['tipo_asignacion']) && $_POST['tipo_asignacion'] == 'refacciones') {
			if($buscar=='null' || $buscar=='NULL'){
				$query = $this->db->query("SELECT tbl_almacen_movimientos.*, tbl_almacen_movimientos.estatus as estatus_movimiento, dtl_asignacion.*, tbl_almacen_movimientos.uid as uid_movimiento, tbl_usuarios.*, tbl_usuarios.uid as uid_user, tbl_users.*, tbl_proyectos.*, dtl_almacen.numero_interno FROM tbl_almacen_movimientos LEFT JOIN dtl_asignacion ON tbl_almacen_movimientos.idtbl_almacen_movimientos=dtl_asignacion.tbl_almacen_movimientos_idtbl_almacen_movimientos LEFT JOIN tbl_usuarios ON tbl_almacen_movimientos.tbl_usuarios_idtbl_usuarios=tbl_usuarios.idtbl_usuarios LEFT JOIN tbl_users ON tbl_almacen_movimientos.tbl_users_idtbl_users=tbl_users.idtbl_users LEFT JOIN tbl_proyectos ON tbl_almacen_movimientos.tbl_proyectos_idtbl_proyectos=tbl_proyectos.idtbl_proyectos LEFT JOIN dtl_almacen ON dtl_almacen.iddtl_almacen = dtl_asignacion.dtl_almacen_iddtl_almacen WHERE tbl_almacen_movimientos.tipo = 'salida-almacen' AND tbl_almacen_movimientos.tbl_almacenes_idtbl_almacenes= " . ID_ALMACEN_REFACCIONES_CONTROL_VEHICULAR ." AND(tbl_almacen_movimientos.folio LIKE '%$buscar%' OR tbl_almacen_movimientos.fecha LIKE '%$buscar%' OR dtl_asignacion.fecha_asignacion LIKE $buscar OR dtl_asignacion.fecha_asignacion LIKE '%$buscar%' OR dtl_asignacion.estatus_asignacion LIKE '%$buscar%' OR tbl_users.nombre LIKE '%$buscar%' OR tbl_usuarios.nombres LIKE '%$buscar%' OR tbl_usuarios.apellido_paterno LIKE '%$buscar%' OR tbl_usuarios.apellido_materno LIKE '%$buscar%' OR tbl_proyectos.nombre_proyecto LIKE '%$buscar%' OR dtl_almacen.numero_interno LIKE '%$buscar%') GROUP BY tbl_almacen_movimientos.folio ORDER BY tbl_almacen_movimientos.folio DESC " . $limit);
			}else{
				$query = $this->db->query("SELECT tbl_almacen_movimientos.*, tbl_almacen_movimientos.estatus as estatus_movimiento, dtl_asignacion.*, tbl_almacen_movimientos.uid as uid_movimiento, tbl_usuarios.*, tbl_usuarios.uid as uid_user, tbl_users.*, tbl_proyectos.*, dtl_almacen.numero_interno FROM tbl_almacen_movimientos LEFT JOIN dtl_asignacion ON tbl_almacen_movimientos.idtbl_almacen_movimientos=dtl_asignacion.tbl_almacen_movimientos_idtbl_almacen_movimientos LEFT JOIN tbl_usuarios ON tbl_almacen_movimientos.tbl_usuarios_idtbl_usuarios=tbl_usuarios.idtbl_usuarios LEFT JOIN tbl_users ON tbl_almacen_movimientos.tbl_users_idtbl_users=tbl_users.idtbl_users LEFT JOIN tbl_proyectos ON tbl_almacen_movimientos.tbl_proyectos_idtbl_proyectos=tbl_proyectos.idtbl_proyectos LEFT JOIN dtl_almacen ON dtl_almacen.iddtl_almacen = dtl_asignacion.dtl_almacen_iddtl_almacen WHERE tbl_almacen_movimientos.tipo = 'salida-almacen' AND tbl_almacen_movimientos.tbl_almacenes_idtbl_almacenes= " . ID_ALMACEN_REFACCIONES_CONTROL_VEHICULAR ." AND(tbl_almacen_movimientos.folio LIKE '%$buscar%' OR tbl_almacen_movimientos.fecha LIKE '%$buscar%' OR dtl_asignacion.fecha_asignacion LIKE '%$buscar%' OR dtl_asignacion.estatus_asignacion LIKE '%$buscar%' OR tbl_users.nombre LIKE '%$buscar%' OR tbl_usuarios.nombres LIKE '%$buscar%' OR tbl_usuarios.apellido_paterno LIKE '%$buscar%' OR tbl_usuarios.apellido_materno LIKE '%$buscar%' OR tbl_proyectos.nombre_proyecto LIKE '%$buscar%' OR dtl_almacen.numero_interno LIKE '%$buscar%') GROUP BY tbl_almacen_movimientos.folio ORDER BY tbl_almacen_movimientos.folio DESC " . $limit);
			}
	    } elseif($this->session->userdata('tipo') == 2) {
			if($buscar=='null' || $buscar=='NULL'){
				$query = $this->db->query("SELECT tbl_almacen_movimientos.*, tbl_almacen_movimientos.estatus as estatus_movimiento, dtl_asignacion.*, tbl_almacen_movimientos.uid as uid_movimiento, tbl_usuarios.*, tbl_usuarios.uid as uid_user, tbl_users.*, tbl_proyectos.* FROM tbl_almacen_movimientos LEFT JOIN dtl_asignacion ON tbl_almacen_movimientos.idtbl_almacen_movimientos=dtl_asignacion.tbl_almacen_movimientos_idtbl_almacen_movimientos LEFT JOIN tbl_usuarios ON tbl_almacen_movimientos.tbl_usuarios_idtbl_usuarios=tbl_usuarios.idtbl_usuarios LEFT JOIN tbl_users ON tbl_almacen_movimientos.tbl_users_idtbl_users=tbl_users.idtbl_users LEFT JOIN tbl_proyectos ON tbl_almacen_movimientos.tbl_proyectos_idtbl_proyectos=tbl_proyectos.idtbl_proyectos WHERE tbl_almacen_movimientos.tipo = 'asignacion' AND tbl_almacen_movimientos.tbl_almacenes_idtbl_almacenes= " . ID_ALMACEN_SISTEMAS ." $string AND(tbl_almacen_movimientos.folio LIKE '%$buscar%' OR tbl_almacen_movimientos.fecha LIKE '%$buscar%' OR dtl_asignacion.fecha_asignacion LIKE '%$buscar%' OR dtl_asignacion.fecha_asignacion LIKE '%$buscar%' OR dtl_asignacion.estatus_asignacion LIKE '%$buscar%' OR tbl_users.nombre LIKE '%$buscar%' OR tbl_usuarios.nombres LIKE '%$buscar%' OR tbl_usuarios.apellido_paterno LIKE '%$buscar%' OR tbl_usuarios.apellido_materno LIKE '%$buscar%' OR tbl_proyectos.nombre_proyecto LIKE '%$buscar%') GROUP BY tbl_almacen_movimientos.folio ORDER BY tbl_almacen_movimientos.folio DESC " . $limit);
			}else{
				$query = $this->db->query("SELECT tbl_almacen_movimientos.*, tbl_almacen_movimientos.estatus as estatus_movimiento, dtl_asignacion.*, tbl_almacen_movimientos.uid as uid_movimiento, tbl_usuarios.*, tbl_usuarios.uid as uid_user, tbl_users.*, tbl_proyectos.* FROM tbl_almacen_movimientos LEFT JOIN dtl_asignacion ON tbl_almacen_movimientos.idtbl_almacen_movimientos=dtl_asignacion.tbl_almacen_movimientos_idtbl_almacen_movimientos LEFT JOIN tbl_usuarios ON tbl_almacen_movimientos.tbl_usuarios_idtbl_usuarios=tbl_usuarios.idtbl_usuarios LEFT JOIN tbl_users ON tbl_almacen_movimientos.tbl_users_idtbl_users=tbl_users.idtbl_users LEFT JOIN tbl_proyectos ON tbl_almacen_movimientos.tbl_proyectos_idtbl_proyectos=tbl_proyectos.idtbl_proyectos WHERE tbl_almacen_movimientos.tipo = 'asignacion' AND tbl_almacen_movimientos.tbl_almacenes_idtbl_almacenes= " . ID_ALMACEN_SISTEMAS ." $string AND(tbl_almacen_movimientos.folio LIKE '%$buscar%' OR tbl_almacen_movimientos.fecha LIKE '%$buscar%' OR dtl_asignacion.fecha_asignacion LIKE '%$buscar%' OR dtl_asignacion.estatus_asignacion LIKE '%$buscar%' OR tbl_users.nombre LIKE '%$buscar%' OR tbl_usuarios.nombres LIKE '%$buscar%' OR tbl_usuarios.apellido_paterno LIKE '%$buscar%' OR tbl_usuarios.apellido_materno LIKE '%$buscar%' OR tbl_proyectos.nombre_proyecto LIKE '%$buscar%') GROUP BY tbl_almacen_movimientos.folio ORDER BY tbl_almacen_movimientos.folio DESC " . $limit);
			}
	    } elseif($this->session->userdata('tipo') == 10) {
			if($buscar=='null' || $buscar=='NULL'){
				$query = $this->db->query("SELECT tbl_almacen_movimientos.*, tbl_almacen_movimientos.estatus as estatus_movimiento, dtl_asignacion.*, tbl_almacen_movimientos.uid as uid_movimiento, tbl_usuarios.*, tbl_usuarios.uid as uid_user, tbl_users.*, tbl_proyectos.* FROM tbl_almacen_movimientos LEFT JOIN dtl_asignacion ON tbl_almacen_movimientos.idtbl_almacen_movimientos=dtl_asignacion.tbl_almacen_movimientos_idtbl_almacen_movimientos LEFT JOIN tbl_usuarios ON tbl_almacen_movimientos.tbl_usuarios_idtbl_usuarios=tbl_usuarios.idtbl_usuarios LEFT JOIN tbl_users ON tbl_almacen_movimientos.tbl_users_idtbl_users=tbl_users.idtbl_users LEFT JOIN tbl_proyectos ON tbl_almacen_movimientos.tbl_proyectos_idtbl_proyectos=tbl_proyectos.idtbl_proyectos WHERE tbl_almacen_movimientos.tipo = 'asignacion' AND tbl_almacen_movimientos.seguridad_e_higiene = 1 AND tbl_almacen_movimientos.tbl_almacenes_idtbl_almacenes= " . ID_ALMACEN_GENERAL ." AND(tbl_almacen_movimientos.folio LIKE '%$buscar%' OR tbl_almacen_movimientos.fecha LIKE '%$buscar%' OR dtl_asignacion.fecha_asignacion LIKE '%$buscar%' OR dtl_asignacion.fecha_asignacion LIKE '%$buscar%' OR dtl_asignacion.estatus_asignacion LIKE '%$buscar%' OR tbl_users.nombre LIKE '%$buscar%' OR tbl_usuarios.nombres LIKE '%$buscar%' OR tbl_usuarios.apellido_paterno LIKE '%$buscar%' OR tbl_usuarios.apellido_materno LIKE '%$buscar%' OR tbl_proyectos.nombre_proyecto LIKE '%$buscar%') GROUP BY tbl_almacen_movimientos.folio ORDER BY tbl_almacen_movimientos.folio DESC " . $limit);
			}else{
				$query = $this->db->query("SELECT tbl_almacen_movimientos.*, tbl_almacen_movimientos.estatus as estatus_movimiento, dtl_asignacion.*, tbl_almacen_movimientos.uid as uid_movimiento, tbl_usuarios.*, tbl_usuarios.uid as uid_user, tbl_users.*, tbl_proyectos.* FROM tbl_almacen_movimientos LEFT JOIN dtl_asignacion ON tbl_almacen_movimientos.idtbl_almacen_movimientos=dtl_asignacion.tbl_almacen_movimientos_idtbl_almacen_movimientos LEFT JOIN tbl_usuarios ON tbl_almacen_movimientos.tbl_usuarios_idtbl_usuarios=tbl_usuarios.idtbl_usuarios LEFT JOIN tbl_users ON tbl_almacen_movimientos.tbl_users_idtbl_users=tbl_users.idtbl_users LEFT JOIN tbl_proyectos ON tbl_almacen_movimientos.tbl_proyectos_idtbl_proyectos=tbl_proyectos.idtbl_proyectos WHERE tbl_almacen_movimientos.tipo = 'asignacion' AND tbl_almacen_movimientos.seguridad_e_higiene = 1 AND tbl_almacen_movimientos.tbl_almacenes_idtbl_almacenes= " . ID_ALMACEN_GENERAL ." AND(tbl_almacen_movimientos.folio LIKE '%$buscar%' OR tbl_almacen_movimientos.fecha LIKE '%$buscar%' OR dtl_asignacion.fecha_asignacion LIKE '%$buscar%' OR dtl_asignacion.estatus_asignacion LIKE '%$buscar%' OR tbl_users.nombre LIKE '%$buscar%' OR tbl_usuarios.nombres LIKE '%$buscar%' OR tbl_usuarios.apellido_paterno LIKE '%$buscar%' OR tbl_usuarios.apellido_materno LIKE '%$buscar%' OR tbl_proyectos.nombre_proyecto LIKE '%$buscar%') GROUP BY tbl_almacen_movimientos.folio ORDER BY tbl_almacen_movimientos.folio DESC " . $limit);
			}
	    } else{
			if($buscar=='null' || $buscar=='NULL'){
				$query = $this->db->query("SELECT tbl_almacen_movimientos.*, tbl_almacen_movimientos.estatus as estatus_movimiento, dtl_asignacion.*, tbl_almacen_movimientos.uid as uid_movimiento, tbl_usuarios.*, tbl_usuarios.uid as uid_user, tbl_users.*, tbl_proyectos.* FROM tbl_almacen_movimientos LEFT JOIN dtl_asignacion ON tbl_almacen_movimientos.idtbl_almacen_movimientos=dtl_asignacion.tbl_almacen_movimientos_idtbl_almacen_movimientos LEFT JOIN tbl_usuarios ON tbl_almacen_movimientos.tbl_usuarios_idtbl_usuarios=tbl_usuarios.idtbl_usuarios LEFT JOIN tbl_users ON tbl_almacen_movimientos.tbl_users_idtbl_users=tbl_users.idtbl_users LEFT JOIN tbl_proyectos ON tbl_almacen_movimientos.tbl_proyectos_idtbl_proyectos=tbl_proyectos.idtbl_proyectos WHERE tbl_almacen_movimientos.tipo = 'asignacion' AND tbl_almacen_movimientos.tbl_almacenes_idtbl_almacenes=23 AND(tbl_almacen_movimientos.folio LIKE '%$buscar%' OR tbl_almacen_movimientos.fecha LIKE '%$buscar%' OR dtl_asignacion.fecha_asignacion IS $buscar OR dtl_asignacion.fecha_asignacion LIKE '%$buscar%' OR dtl_asignacion.estatus_asignacion LIKE '%$buscar%' OR tbl_users.nombre LIKE '%$buscar%' OR tbl_usuarios.nombres LIKE '%$buscar%' OR tbl_usuarios.apellido_paterno LIKE '%$buscar%' OR tbl_usuarios.apellido_materno LIKE '%$buscar%' OR tbl_proyectos.nombre_proyecto LIKE '%$buscar%') GROUP BY tbl_almacen_movimientos.folio ORDER BY tbl_almacen_movimientos.folio DESC " . $limit);
			}else{
				if($this->session->userdata('tipo') == 3 || $this->session->userdata('tipo') == 15){
					$query = $this->db->query("SELECT tbl_almacen_movimientos.*, tbl_almacen_movimientos.estatus as estatus_movimiento, dtl_asignacion.*, tbl_almacen_movimientos.uid as uid_movimiento, tbl_usuarios.*, tbl_usuarios.uid as uid_user, tbl_users.*, tbl_proyectos.*, dtl_almacen.numero_interno FROM tbl_almacen_movimientos LEFT JOIN dtl_asignacion ON tbl_almacen_movimientos.idtbl_almacen_movimientos=dtl_asignacion.tbl_almacen_movimientos_idtbl_almacen_movimientos LEFT JOIN tbl_usuarios ON tbl_almacen_movimientos.tbl_usuarios_idtbl_usuarios=tbl_usuarios.idtbl_usuarios LEFT JOIN tbl_users ON tbl_almacen_movimientos.tbl_users_idtbl_users=tbl_users.idtbl_users LEFT JOIN tbl_proyectos ON tbl_almacen_movimientos.tbl_proyectos_idtbl_proyectos=tbl_proyectos.idtbl_proyectos LEFT JOIN dtl_almacen ON dtl_almacen.iddtl_almacen = dtl_asignacion.dtl_almacen_iddtl_almacen WHERE tbl_almacen_movimientos.tipo = 'asignacion' AND tbl_almacen_movimientos.tbl_almacenes_idtbl_almacenes= " . ID_ALMACEN_AUTOS_CONTROL_VEHICULAR ." AND(tbl_almacen_movimientos.folio LIKE '%$buscar%' OR tbl_almacen_movimientos.fecha LIKE '%$buscar%' OR dtl_asignacion.fecha_asignacion LIKE '%$buscar%' OR dtl_asignacion.estatus_asignacion LIKE '%$buscar%' OR tbl_users.nombre LIKE '%$buscar%' OR tbl_usuarios.nombres LIKE '%$buscar%' OR tbl_usuarios.apellido_paterno LIKE '%$buscar%' OR tbl_usuarios.apellido_materno LIKE '%$buscar%' OR tbl_proyectos.nombre_proyecto LIKE '%$buscar%' OR dtl_almacen.numero_interno LIKE '%$buscar%') GROUP BY tbl_almacen_movimientos.folio ORDER BY tbl_almacen_movimientos.folio DESC " . $limit);
				}else{
					$query = $this->db->query("SELECT tbl_almacen_movimientos.*, tbl_almacen_movimientos.estatus as estatus_movimiento, dtl_asignacion.*, tbl_almacen_movimientos.uid as uid_movimiento, tbl_usuarios.*, tbl_usuarios.uid as uid_user, tbl_users.*, tbl_proyectos.* FROM tbl_almacen_movimientos LEFT JOIN dtl_asignacion ON tbl_almacen_movimientos.idtbl_almacen_movimientos=dtl_asignacion.tbl_almacen_movimientos_idtbl_almacen_movimientos LEFT JOIN tbl_usuarios ON tbl_almacen_movimientos.tbl_usuarios_idtbl_usuarios=tbl_usuarios.idtbl_usuarios LEFT JOIN tbl_users ON tbl_almacen_movimientos.tbl_users_idtbl_users=tbl_users.idtbl_users LEFT JOIN tbl_proyectos ON tbl_almacen_movimientos.tbl_proyectos_idtbl_proyectos=tbl_proyectos.idtbl_proyectos WHERE tbl_almacen_movimientos.tipo = 'asignacion' AND tbl_almacen_movimientos.tbl_almacenes_idtbl_almacenes=23 AND(tbl_almacen_movimientos.folio LIKE '%$buscar%' OR tbl_almacen_movimientos.fecha LIKE '%$buscar%' OR dtl_asignacion.fecha_asignacion LIKE '%$buscar%' OR dtl_asignacion.estatus_asignacion LIKE '%$buscar%' OR tbl_users.nombre LIKE '%$buscar%' OR tbl_usuarios.nombres LIKE '%$buscar%' OR tbl_usuarios.apellido_paterno LIKE '%$buscar%' OR tbl_usuarios.apellido_materno LIKE '%$buscar%' OR tbl_proyectos.nombre_proyecto LIKE '%$buscar%') GROUP BY tbl_almacen_movimientos.folio ORDER BY tbl_almacen_movimientos.folio DESC " . $limit);
				}
			}
		}
		
		return $query->result();
	}

	//Función para calcular costos en AC
	public function costosAltoCosto($estatus, $dolar){
		if($estatus == ''){
			$query = $this->db->query("SELECT CC.categoria, IF(TC.tipo_moneda='d',SUM((TC.precio * $dolar)*DA.existencias),SUM(TC.precio * DA.existencias)) AS precio FROM dtl_almacen DA LEFT JOIN tbl_catalogo TC ON DA.tbl_catalogo_idtbl_catalogo = TC.idtbl_catalogo LEFT JOIN ctl_categorias CC ON CC.idctl_categorias = TC.ctl_categorias_idctl_categorias WHERE (CC.idctl_categorias = 16 OR CC.idctl_categorias = 2 OR CC.idctl_categorias = 10) AND (DA.estatus = 'almacen' OR DA.estatus = 'asignado') AND DA.tbl_almacenes_idtbl_almacenes = 2 AND TC.tipo = 2 GROUP BY CC.idctl_categorias");
		}else{
			$query = $this->db->query("SELECT CC.categoria, IF(TC.tipo_moneda='d',SUM((TC.precio * $dolar)*DA.existencias),SUM(TC.precio * DA.existencias)) AS precio FROM dtl_almacen DA LEFT JOIN tbl_catalogo TC ON DA.tbl_catalogo_idtbl_catalogo = TC.idtbl_catalogo LEFT JOIN ctl_categorias CC ON CC.idctl_categorias = TC.ctl_categorias_idctl_categorias WHERE (CC.idctl_categorias = 16 OR CC.idctl_categorias = 2 OR CC.idctl_categorias = 10) AND (DA.estatus = '$estatus') AND tbl_almacenes_idtbl_almacenes = 2 AND TC.tipo = 2 GROUP BY CC.idctl_categorias");
		}
        return $query->result();
    }

	//Función para avance de generador
	public function graficaAvanceGeneradores($proyecto){
		
			$query = $this->db->query("SELECT tbl_segmentos_proyecto.idtbl_segmentos_proyecto, tbl_segmentos_proyecto.segmento, SUM(tbl_justificacion_generador.kilometraje) AS total_justificado, (SELECT SUM(dtl_mantenimientos.cantidad) FROM tbl_mantenimientos LEFT JOIN dtl_mantenimientos ON dtl_mantenimientos.tbl_mantenimientos_idtbl_mantenimientos = tbl_mantenimientos.idtbl_mantenimientos WHERE tbl_mantenimientos.tbl_segmentos_proyecto_idtbl_segmentos_proyecto = idtbl_segmentos_proyecto AND tbl_mantenimientos.tbl_tipo_red_idtbl_tipo_red = 2 GROUP BY tbl_mantenimientos.tbl_segmentos_proyecto_idtbl_segmentos_proyecto) AS total_primaria, (SELECT SUM(dtl_mantenimientos.cantidad) FROM tbl_mantenimientos LEFT JOIN dtl_mantenimientos ON dtl_mantenimientos.tbl_mantenimientos_idtbl_mantenimientos = tbl_mantenimientos.idtbl_mantenimientos WHERE tbl_mantenimientos.tbl_segmentos_proyecto_idtbl_segmentos_proyecto = idtbl_segmentos_proyecto AND tbl_mantenimientos.tbl_tipo_red_idtbl_tipo_red = 3 GROUP BY tbl_mantenimientos.tbl_segmentos_proyecto_idtbl_segmentos_proyecto) AS total_secundaria, (SELECT SUM(dtl_mantenimientos.cantidad) FROM tbl_mantenimientos LEFT JOIN dtl_mantenimientos ON dtl_mantenimientos.tbl_mantenimientos_idtbl_mantenimientos = tbl_mantenimientos.idtbl_mantenimientos WHERE tbl_mantenimientos.tbl_segmentos_proyecto_idtbl_segmentos_proyecto = idtbl_segmentos_proyecto AND tbl_mantenimientos.tbl_tipo_red_idtbl_tipo_red = 4 GROUP BY tbl_mantenimientos.tbl_segmentos_proyecto_idtbl_segmentos_proyecto) AS total_distribucion, (SELECT SUM(dtl_mantenimientos.cantidad) FROM tbl_mantenimientos LEFT JOIN dtl_mantenimientos ON dtl_mantenimientos.tbl_mantenimientos_idtbl_mantenimientos = tbl_mantenimientos.idtbl_mantenimientos WHERE tbl_mantenimientos.tbl_segmentos_proyecto_idtbl_segmentos_proyecto = idtbl_segmentos_proyecto AND tbl_mantenimientos.tbl_tipo_red_idtbl_tipo_red = 6 GROUP BY tbl_mantenimientos.tbl_segmentos_proyecto_idtbl_segmentos_proyecto) AS total_1n, (SELECT SUM(dtl_mantenimientos.cantidad) FROM tbl_mantenimientos LEFT JOIN dtl_mantenimientos ON dtl_mantenimientos.tbl_mantenimientos_idtbl_mantenimientos = tbl_mantenimientos.idtbl_mantenimientos WHERE tbl_mantenimientos.tbl_segmentos_proyecto_idtbl_segmentos_proyecto = idtbl_segmentos_proyecto AND tbl_mantenimientos.tbl_tipo_red_idtbl_tipo_red = 7 GROUP BY tbl_mantenimientos.tbl_segmentos_proyecto_idtbl_segmentos_proyecto) AS total_2n, (SELECT SUM(tbl_justificacion_generador.kilometraje) FROM tbl_mantenimientos LEFT JOIN tbl_justificacion_generador ON tbl_justificacion_generador.tbl_mantenimientos_idtbl_mantenimientos = tbl_mantenimientos.idtbl_mantenimientos WHERE tbl_mantenimientos.tbl_segmentos_proyecto_idtbl_segmentos_proyecto = idtbl_segmentos_proyecto AND tbl_mantenimientos.tbl_tipo_red_idtbl_tipo_red = 2 GROUP BY tbl_mantenimientos.tbl_segmentos_proyecto_idtbl_segmentos_proyecto) AS justificado_primaria, (SELECT SUM(tbl_justificacion_generador.kilometraje) FROM tbl_mantenimientos LEFT JOIN tbl_justificacion_generador ON tbl_justificacion_generador.tbl_mantenimientos_idtbl_mantenimientos = tbl_mantenimientos.idtbl_mantenimientos WHERE tbl_mantenimientos.tbl_segmentos_proyecto_idtbl_segmentos_proyecto = idtbl_segmentos_proyecto AND tbl_mantenimientos.tbl_tipo_red_idtbl_tipo_red = 3 GROUP BY tbl_mantenimientos.tbl_segmentos_proyecto_idtbl_segmentos_proyecto) AS justificado_secundaria, (SELECT SUM(tbl_justificacion_generador.kilometraje) FROM tbl_mantenimientos LEFT JOIN tbl_justificacion_generador ON tbl_justificacion_generador.tbl_mantenimientos_idtbl_mantenimientos = tbl_mantenimientos.idtbl_mantenimientos WHERE tbl_mantenimientos.tbl_segmentos_proyecto_idtbl_segmentos_proyecto = idtbl_segmentos_proyecto AND tbl_mantenimientos.tbl_tipo_red_idtbl_tipo_red = 4 GROUP BY tbl_mantenimientos.tbl_segmentos_proyecto_idtbl_segmentos_proyecto) AS justificado_distribucion, (SELECT SUM(tbl_justificacion_generador.kilometraje) FROM tbl_mantenimientos LEFT JOIN tbl_justificacion_generador ON tbl_justificacion_generador.tbl_mantenimientos_idtbl_mantenimientos = tbl_mantenimientos.idtbl_mantenimientos WHERE tbl_mantenimientos.tbl_segmentos_proyecto_idtbl_segmentos_proyecto = idtbl_segmentos_proyecto AND tbl_mantenimientos.tbl_tipo_red_idtbl_tipo_red = 6 GROUP BY tbl_mantenimientos.tbl_segmentos_proyecto_idtbl_segmentos_proyecto) AS justificado_1n, (SELECT SUM(tbl_justificacion_generador.kilometraje) FROM tbl_mantenimientos LEFT JOIN tbl_justificacion_generador ON tbl_justificacion_generador.tbl_mantenimientos_idtbl_mantenimientos = tbl_mantenimientos.idtbl_mantenimientos WHERE tbl_mantenimientos.tbl_segmentos_proyecto_idtbl_segmentos_proyecto = idtbl_segmentos_proyecto AND tbl_mantenimientos.tbl_tipo_red_idtbl_tipo_red = 7 GROUP BY tbl_mantenimientos.tbl_segmentos_proyecto_idtbl_segmentos_proyecto) AS justificado_2n FROM tbl_mantenimientos LEFT JOIN tbl_justificacion_generador ON tbl_justificacion_generador.tbl_mantenimientos_idtbl_mantenimientos = tbl_mantenimientos.idtbl_mantenimientos LEFT JOIN tbl_segmentos_proyecto ON tbl_segmentos_proyecto.idtbl_segmentos_proyecto = tbl_mantenimientos.tbl_segmentos_proyecto_idtbl_segmentos_proyecto WHERE tbl_mantenimientos.tbl_proyectos_idtbl_proyectos = $proyecto GROUP BY tbl_mantenimientos.tbl_segmentos_proyecto_idtbl_segmentos_proyecto");
		
        return $query->result();
    }

	public function traspasos($buscar = '', $buscar2 = '', $inicio = false, $cantidadRegistro = false) {
		$limit = '';
		$almacen=$this->input->post('almacen');
		if ($inicio !== false && $cantidadRegistro !== false) {
			$limit = 'LIMIT ' . $inicio . "," . $cantidadRegistro;
		}
		if ($buscar2 == '') {
			$string = "AND (tbl_almacen_movimientos.estatus = 1 OR tbl_almacen_movimientos.estatus = 0)";
		}
		if ($buscar2 != '') {
			$string = "AND (tbl_almacen_movimientos.estatus = $buscar2)";
		}
		
		
			if($buscar=='null' || $buscar=='NULL'){
				$query = $this->db->query("SELECT tbl_almacen_movimientos.*, tbl_almacen_movimientos.estatus as estatus_movimiento, tbl_almacen_movimientos.uid as uid_movimiento, tbl_users.*, tbl_proyectos.*, tbl_almacenes.almacen, tbl_almacenes.uid as uid_almacen FROM tbl_almacen_movimientos LEFT JOIN tbl_users ON tbl_almacen_movimientos.tbl_users_idtbl_users=tbl_users.idtbl_users LEFT JOIN tbl_proyectos ON tbl_almacen_movimientos.tbl_proyectos_idtbl_proyectos_destino=tbl_proyectos.idtbl_proyectos LEFT JOIN tbl_almacenes ON tbl_almacenes.idtbl_almacenes=tbl_almacen_movimientos.tbl_almacenes_idtbl_almacenes_destino WHERE tbl_almacen_movimientos.tipo = 'traspaso-almacen' AND tbl_almacen_movimientos.tbl_almacenes_idtbl_almacenes=$almacen $string AND(tbl_almacen_movimientos.folio LIKE '%$buscar%' OR tbl_almacen_movimientos.fecha LIKE '%$buscar%' OR tbl_users.nombre LIKE '%$buscar%' OR tbl_proyectos.nombre_proyecto LIKE '%$buscar%') GROUP BY tbl_almacen_movimientos.folio ORDER BY tbl_almacen_movimientos.folio DESC " . $limit);
			}else{
				$query = $this->db->query("SELECT tbl_almacen_movimientos.*, tbl_almacen_movimientos.estatus as estatus_movimiento, tbl_almacen_movimientos.uid as uid_movimiento, tbl_users.*, tbl_proyectos.*, tbl_almacenes.almacen, tbl_almacenes.uid as uid_almacen FROM tbl_almacen_movimientos LEFT JOIN tbl_users ON tbl_almacen_movimientos.tbl_users_idtbl_users=tbl_users.idtbl_users LEFT JOIN tbl_proyectos ON tbl_almacen_movimientos.tbl_proyectos_idtbl_proyectos_destino=tbl_proyectos.idtbl_proyectos LEFT JOIN tbl_almacenes ON tbl_almacenes.idtbl_almacenes=tbl_almacen_movimientos.tbl_almacenes_idtbl_almacenes_destino WHERE tbl_almacen_movimientos.tipo = 'traspaso-almacen' AND tbl_almacen_movimientos.tbl_almacenes_idtbl_almacenes=$almacen $string AND(tbl_almacen_movimientos.folio LIKE '%$buscar%' OR tbl_almacen_movimientos.fecha LIKE '%$buscar%' OR tbl_users.nombre LIKE '%$buscar%' OR tbl_proyectos.nombre_proyecto LIKE '%$buscar%') GROUP BY tbl_almacen_movimientos.folio ORDER BY tbl_almacen_movimientos.folio DESC " . $limit);
			}
		  
		
		return $query->result();
	}

	public function detalle_personal($uid_usuario) {
		$this->db->select('dtl_asignacion.*');
		$this->db->select('dtl_almacen.*');
		$this->db->select('tbl_catalogo.descripcion');
		$this->db->select('tbl_catalogo.uid as uid_producto');
		$this->db->select('tbl_catalogo.marca');
		$this->db->select('tbl_catalogo.modelo');
		$this->db->select('tbl_catalogo.precio');
		$this->db->select('ctl_unidades_medida.*');
		$this->db->select('ctl_unidades_medida.*');
		$this->db->select('ctl_categorias.*');
		$this->db->select('tbl_almacen_movimientos.*');
		$this->db->select('tbl_almacen_movimientos.uid as uid_movimiento');
		$this->db->select('tbl_almacen_movimientos.tipo as tipo_movimiento');
		$this->db->select('tbl_usuarios.*');
		$this->db->select('tbl_usuarios.uid as uid_user');
		$this->db->select('tbl_users.*');
		$this->db->select('tbl_proyectos.*');
		$this->db->select('tbl_almacenes.*');
		$this->db->from('tbl_usuarios');
		$this->db->join('dtl_asignacion', 'dtl_asignacion.tbl_usuarios_idtbl_usuarios=tbl_usuarios.idtbl_usuarios', 'left');
		$this->db->join('dtl_almacen', 'dtl_asignacion.dtl_almacen_iddtl_almacen=dtl_almacen.iddtl_almacen', 'left');
		$this->db->join('tbl_catalogo', 'tbl_catalogo.idtbl_catalogo=dtl_almacen.tbl_catalogo_idtbl_catalogo', 'left');
		$this->db->join('ctl_unidades_medida', 'tbl_catalogo.ctl_unidades_medida_idctl_unidades_medida=ctl_unidades_medida.idctl_unidades_medida', 'left');
		$this->db->join('ctl_categorias', 'tbl_catalogo.ctl_categorias_idctl_categorias=ctl_categorias.idctl_categorias', 'left');
		$this->db->join('tbl_almacen_movimientos', 'tbl_almacen_movimientos.idtbl_almacen_movimientos=dtl_asignacion.tbl_almacen_movimientos_idtbl_almacen_movimientos', 'left');
		$this->db->join('tbl_users', 'tbl_almacen_movimientos.tbl_users_idtbl_users=tbl_users.idtbl_users', 'left');
		$this->db->join('tbl_proyectos', 'tbl_almacen_movimientos.tbl_proyectos_idtbl_proyectos=tbl_proyectos.idtbl_proyectos', 'left');
		$this->db->join('tbl_almacenes', 'tbl_almacen_movimientos.tbl_almacenes_idtbl_almacenes=tbl_almacenes.idtbl_almacenes', 'left');
		$this->db->where('tbl_usuarios.uid', $uid_usuario);
		$this->db->order_by('dtl_asignacion.fecha_asignacion', 'DESC');
		$query = $this->db->get();
		return $query->result();
	}

	public function detalle_producto($iddtl_almacen) {
		$this->db->select('dtl_asignacion.*');
		$this->db->select('dtl_almacen.*');
		$this->db->select('tbl_catalogo.descripcion');
		$this->db->select('tbl_catalogo.uid as uid_producto');
		$this->db->select('tbl_catalogo.marca');
		$this->db->select('tbl_catalogo.modelo');
		$this->db->select('ctl_unidades_medida.*');
		$this->db->select('ctl_unidades_medida.*');
		$this->db->select('ctl_categorias.*');
		//$this->db->select('tbl_almacen_movimientos.*, tbl_almacen_movimientos.desasigno');
		$this->db->select('tbl_almacen_movimientos.*, tbl_almacen_movimientos.idtbl_almacen_movimientos');
		$this->db->select('tbl_almacen_movimientos.uid as uid_movimiento');		
		$this->db->select('tbl_almacen_movimientos.tipo as tipo_movimiento');
		//$this->db->select('tbl_almacen_movimientos.tipo as tipo_movimiento ');		
		$this->db->select('tbl_usuarios.*');
		$this->db->select('tbl_usuarios.uid as uid_user');
		$this->db->select('tbl_users.*, tbl_users.nombre AS asigno');		
		$this->db->select('tbl_proyectos.*');
		$this->db->select('tbl_almacenes.*');		
		//$this->db->select('tbl_checklist.*');
		$this->db->from('dtl_asignacion');
		$this->db->join('dtl_almacen', 'dtl_asignacion.dtl_almacen_iddtl_almacen=dtl_almacen.iddtl_almacen', 'left');
		$this->db->join('tbl_catalogo', 'tbl_catalogo.idtbl_catalogo=dtl_almacen.tbl_catalogo_idtbl_catalogo', 'left');
		$this->db->join('ctl_unidades_medida', 'tbl_catalogo.ctl_unidades_medida_idctl_unidades_medida=ctl_unidades_medida.idctl_unidades_medida', 'left');
		$this->db->join('ctl_categorias', 'tbl_catalogo.ctl_categorias_idctl_categorias=ctl_categorias.idctl_categorias', 'left');
		$this->db->join('tbl_almacen_movimientos', 'tbl_almacen_movimientos.idtbl_almacen_movimientos=dtl_asignacion.tbl_almacen_movimientos_idtbl_almacen_movimientos', 'left');
		$this->db->join('tbl_usuarios', 'tbl_almacen_movimientos.tbl_usuarios_idtbl_usuarios=tbl_usuarios.idtbl_usuarios', 'left');
		$this->db->join('tbl_users', 'tbl_almacen_movimientos.tbl_users_idtbl_users=tbl_users.idtbl_users', 'left');
		$this->db->join('tbl_proyectos', 'tbl_almacen_movimientos.tbl_proyectos_idtbl_proyectos=tbl_proyectos.idtbl_proyectos', 'left');
		$this->db->join('tbl_almacenes', 'tbl_almacen_movimientos.tbl_almacenes_idtbl_almacenes=tbl_almacenes.idtbl_almacenes', 'left');
		//$this->db->join('tbl_checklist', 'tbl_almacen_movimientos.imagenes_checklist= tbl_checklist.imagenes_checklist', 'left');
		//$this->db->join('tbl_solicitud_devolucion', 'tbl_solicitud_devolucion.uid = tbl_checklist.uid_devolucion', 'left');
		$this->db->where('dtl_almacen.iddtl_almacen', $iddtl_almacen);
		if($this->session->userdata('tipo') == 1 || $this->session->userdata('tipo') == 3 || $this->session->userdata('tipo') == 2){
			$this->db->where('tbl_almacen_movimientos.tipo', 'asignacion');
		}else{
			$this->db->where('tbl_almacen_movimientos.tipo', 'salida-almacen');
		}
		$this->db->order_by('dtl_asignacion.fecha_asignacion', 'DESC');
		$query = $this->db->get();
		return $query->result();
	}


	public function nombre_desasignacion(){
		$query = $this->db->query("SELECT dtl_asignacion.iddtl_asignacion, dtl_asignacion.fecha_asignacion, dtl_asignacion.tbl_usuarios_idtbl_usuarios, dtl_almacen.iddtl_almacen, dtl_almacen.numero_serie, dtl_almacen.numero_interno, tbl_catalogo.descripcion, tbl_catalogo.marca, tbl_catalogo.modelo, tbl_almacen_movimientos.idtbl_almacen_movimientos, tbl_almacen_movimientos.tipo, tbl_almacen_movimientos.desasigno, tbl_almacen_movimientos.tbl_usuarios_idtbl_usuarios, tbl_usuarios.nombres AS acreedor, tbl_users.nombre AS desasigna, tbl_proyectos.nombre_proyecto, tbl_almacenes.almacen FROM dtl_asignacion LEFT JOIN dtl_almacen ON dtl_asignacion.dtl_almacen_iddtl_almacen=dtl_almacen.iddtl_almacen LEFT JOIN tbl_catalogo ON tbl_catalogo.idtbl_catalogo=dtl_almacen.tbl_catalogo_idtbl_catalogo LEFT JOIN ctl_unidades_medida ON tbl_catalogo.ctl_unidades_medida_idctl_unidades_medida=ctl_unidades_medida.idctl_unidades_medida LEFT JOIN ctl_categorias ON tbl_catalogo.ctl_categorias_idctl_categorias=ctl_categorias.idctl_categorias LEFT JOIN tbl_almacen_movimientos ON tbl_almacen_movimientos.idtbl_almacen_movimientos=dtl_asignacion.tbl_almacen_movimientos_idtbl_almacen_movimientos LEFT JOIN tbl_usuarios ON tbl_almacen_movimientos.tbl_usuarios_idtbl_usuarios=tbl_usuarios.idtbl_usuarios LEFT JOIN tbl_users ON tbl_almacen_movimientos.tbl_users_idtbl_users=tbl_users.idtbl_users LEFT JOIN tbl_proyectos ON tbl_almacen_movimientos.tbl_proyectos_idtbl_proyectos=tbl_proyectos.idtbl_proyectos LEFT JOIN tbl_almacenes ON tbl_almacen_movimientos.tbl_almacenes_idtbl_almacenes=tbl_almacenes.idtbl_almacenes WHERE tbl_almacen_movimientos.idtbl_almacen_movimientos = 98204");
		return $query->result();
	}

	public function detalle_producto_combustible($iddtl_almacen) {
    	$query = $this->db->query("SELECT tbl_catalogo.marca, dtl_almacen.* , tbl_km_unidades_cv.*, tbl_users.* FROM tbl_km_unidades_cv JOIN dtl_almacen ON dtl_almacen.iddtl_almacen = dtl_almacen.dtl_almacen_iddtl_almacen JOIN tbl_catalogo ON tbl_catalogo.idtbl_catalogo = dtl_almacen.tbl_catalogo_idtbl_catalogo LEFT JOIN tbl_users ON tbl_users.idtbl_users = tbl_km_unidades_cv.tbl_users_idtbl_users WHERE dtl_almacen.iddtl_almacen = " . $iddtl_almacen . " ORDER BY tbl_km_unidades_cv.idtbl_km_unidades_cv DESC LIMIT 0,10 ");
    	return $query->result();
	}

	public function categorias($tipo_catalogo='') {
		$this->db->select('ctl_categorias.*');
		$this->db->from('ctl_categorias');
		$idctl_categorias = array('2', '10', '16', '14');
		if ($this->session->userdata('tipo') == 1) {
			$this->db->where_in('ctl_categorias.idctl_categorias', $idctl_categorias);
		} elseif(($this->session->userdata('tipo') == 3 || $this->session->userdata('tipo') == 15) && $tipo_catalogo == 'autos') {
			$this->db->where('ctl_categorias.idctl_categorias', 16);
		} elseif($this->session->userdata('tipo') == 3 && $tipo_catalogo == 'refacciones') {
			$this->db->where('ctl_categorias.idctl_categorias', 8);
		} elseif($this->session->userdata('tipo')==14){
			$this->db->where('ctl_categorias.tipo', 14);
		} elseif($this->session->userdata('tipo')==2){
			$this->db->where_in('ctl_categorias.idctl_categorias ', array(2, 10, 16));
		} elseif($this->session->userdata('tipo')==10){
			$this->db->where_in('ctl_categorias.idctl_categorias', array(2, 4, 10, 13));
		} elseif($this->session->userdata('tipo')==7){
			$this->db->where_in('ctl_categorias.idctl_categorias ', array(2, 8, 10, 16, 14, 13));
		} elseif($this->session->userdata('tipo')==4){
			$this->db->where_in('ctl_categorias.idctl_categorias ', array(2, 10, 16, 14, 13));
		} elseif($this->session->userdata('tipo')==6){
			$this->db->where_in('ctl_categorias.idctl_categorias ', array(2, 8, 10, 16, 14, 13));
		}else {
			//$this->db->where('ctl_categorias.tipo!=',1);
			//$this->db->where('ctl_categorias.tipo!=',14);
		}
		$query = $this->db->get();
		return $query->result();
	}

	public function unidades_medida() {
		$this->db->select('ctl_unidades_medida.*');
		$this->db->from('ctl_unidades_medida');
		$query = $this->db->get();
		return $query->result();
	}

	public function crear_almacen($proyecto) {
		$data = array(
			'uid' => uniqid(),
			'almacen' => $proyecto
		);
		$result = $this->db->insert('tbl_almacenes', $data);
		$insert_id = $this->db->insert_id();
		return  $insert_id;
	}

	public function nueva_categoria($categoria, $abreviatura) {
		$data = array(
			'categoria' => $categoria,
			'abreviatura' => $abreviatura,
			'tipo' => $this->session->userdata('tipo')
		);
		$result = $this->db->insert('ctl_categorias', $data);
		return  $result;
	}

	public function nueva_unidad_medida($unidad_medida, $abreviatura) {
		$data = array(
			'unidad_medida' => $unidad_medida,
			'unidad_medida_abr' => $abreviatura
		);
		$result = $this->db->insert('ctl_unidades_medida', $data);
		return  $result;
	}

	public function nuevo_producto_catalogo() {
		$abr = $this->abr_categoria($this->input->post('categoria'))[0]->abreviatura;
		$uid = strtoupper($abr . uniqid());
		if($this->session->userdata('tipo') == 3) {

			$config['upload_path']          = './uploads/autos/';
			$config['allowed_types']        = 'gif|jpg|jpeg|png';
			$config['max_size']             = 0;
			$config['max_width']            = 0;
			$config['max_height']           = 0;
			$config['encrypt_name'] 		=TRUE;
            $this->load->library('upload', $config);
            $this->upload->initialize($config);

            $this->upload->do_upload('foto1');
			$foto1 = $this->upload->data();
	    	$imagen1=$foto1['file_name'];
			//if (empty($imagen1)) {
			//	$imagen1="sin_foto.jpg";
			//}

			$config['upload_path']          = './uploads/autos/';
			$config['allowed_types']        = 'gif|jpg|jpeg|png';
			$config['max_size']             = 0;
			$config['max_width']            = 0;
			$config['max_height']           = 0;
			$config['encrypt_name'] 		=TRUE;
            $this->load->library('upload', $config);
            $this->upload->initialize($config);

            $this->upload->do_upload('foto2');
			$foto2 = $this->upload->data();
	    	$imagen2=$foto2['file_name'];
			//if (empty($imagen2)) {
			//	$imagen2="sin_foto.jpg";
			//}

			$config['upload_path']          = './uploads/autos/';
			$config['allowed_types']        = 'gif|jpg|jpeg|png';
			$config['max_size']             = 0;
			$config['max_width']            = 0;
			$config['max_height']           = 0;
			$config['encrypt_name'] 		=TRUE;
            $this->load->library('upload', $config);
            $this->upload->initialize($config);

            $this->upload->do_upload('foto3');
			$foto3 = $this->upload->data();
	    	$imagen3=$foto3['file_name'];
			//if (empty($imagen3)) {
			//	$imagen3="sin_foto.jpg";
			//}

			$imagenes = array(
				'imagen1' => $imagen1,
				'imagen2' => $imagen2,
				'imagen3' => $imagen3
			);
			
			$data = array(
				'descripcion' => strtoupper($this->input->post('descripcion')),
				'ctl_unidades_medida_idctl_unidades_medida' => $this->input->post('unidad_medida'),
				'ctl_categorias_idctl_categorias' => $this->input->post('categoria'),
				'uid' => $uid,
				'marca' => $this->input->post('marca'),
				'modelo' => $this->input->post('modelo'),
				'precio' => $this->input->post('precio'),
				'tipo_moneda' => $this->input->post('tipo_moneda'),
				'neodata' => $this->input->post('neodata'),				
				'tipo' => $this->input->post('tipo'),
				'imagenes' => json_encode($imagenes),
				'producto_kuali' => $this->input->post('r1') == 1 ? 1 : 0,
				'categoria_vehiculo' => $this->input->post('categoria_vehiculo') == NULL ? NULL : $this->input->post('categoria_vehiculo') 
			);
		} else {
			$data = array(
				'descripcion' => strtoupper($this->input->post('descripcion')),
				'ctl_unidades_medida_idctl_unidades_medida' => $this->input->post('unidad_medida'),
				'ctl_categorias_idctl_categorias' => $this->input->post('categoria'),
				'uid' => $uid,
				'marca' => $this->input->post('marca'),
				'modelo' => $this->input->post('modelo'),
				'precio' => $this->input->post('precio'),
				'tipo_moneda' => $this->input->post('tipo_moneda'),
				'neodata' => $this->input->post('neodata'),
				'producto_kuali' => $this->input->post('r1') == 1 ? 1 : 0,
				'tipo' => $this->input->post('tipo')
			);
		}
		$result = $this->db->insert('tbl_catalogo', $data);
		if($this->input->post('unidad_medida') == 10 && $this->session->userdata('tipo') == 14){
			$idtbl_catalogo_producto = $this->db->insert_id();
			foreach ($this->input->post('idtbl_catalogo_subproducto') as $key => $value) {
				$data = array(
					'tbl_catalogo_idtbl_catalogo_subproducto' => ($this->input->post('idtbl_catalogo_subproducto')[$key]),
					'cantidad' => strtoupper($this->input->post('cantidad_kit')[$key]),
					'tbl_catalogo_idtbl_catalogo_producto' => $idtbl_catalogo_producto
				);
				$result = $this->db->insert('dtl_kit_catalogo', $data);
			}
		}
		return  $result;
	}

	public function verificar_neodata(){
		$this->db->from("tbl_catalogo");
		$this->db->where("neodata", $this->input->post('neodata'));
		$this->db->where("tipo", $this->input->post('tipo'));
		$query = $this->db->get();
		//var_dump($query->result());
		return count($query->result()) > 0 ? true : false;
	}

	public function verificar_neodata_actualizar(){
		$this->db->from("tbl_catalogo");
		$this->db->where("neodata", $this->input->post('neodata'));
		$this->db->where("tipo", $this->input->post('tipo'));
		$this->db->where("idtbl_catalogo != ", $this->input->post('idtbl_catalogo'));
		$query = $this->db->get();
		return count($query->result()) > 0 ? true : false;
	}

	public function actualizar_producto_catalogo() {
		if ($this->session->userdata('tipo') == 7 || $this->session->userdata('tipo') == 6) {
			$data = array(
				'descripcion' => $this->input->post('descripcion'),
				'ctl_unidades_medida_idctl_unidades_medida' => $this->input->post('unidad_medida'),
				'marca' => $this->input->post('marca'),
				'modelo' => $this->input->post('modelo'),
				'precio' => $this->input->post('precio'),
				'tipo_moneda' => $this->input->post('tipo_moneda'),
				//'inventariado' => $this->input->post('inventariado'),
				//'minimo' => $this->input->post('minimo'),
				//'maximo' => $this->input->post('maximo'),
				'ctl_categorias_idctl_categorias' => $this->input->post('categoria'),
				'utilizacion' => $this->input->post('utilizacion'),
				'origen' => $this->input->post('origen'),
				'inventariado' => $this->input->post('inventariado'),
				'neodata' => $this->input->post('neodata'),				
				'tipo' => $this->input->post('tipo'),
				'producto_kuali' => $this->input->post('r1') == 1 ? 1 : 0
			);
		} else if ($this->session->userdata('tipo') != 7 && $this->session->userdata('tipo') != 6 && $this->session->userdata('tipo') != 1 && $this->session->userdata('tipo') != 14 && $this->session->userdata('tipo') != 3) {
			$data = array(
				//'descripcion' => $this->input->post('descripcion'),
				'ctl_unidades_medida_idctl_unidades_medida' => $this->input->post('unidad_medida'),
				//'marca' => $this->input->post('marca'),
				//'modelo' => $this->input->post('modelo'),
				'precio' => $this->input->post('precio'),
				'tipo_moneda' => $this->input->post('tipo_moneda'),
				'inventariado' => $this->input->post('inventariado'),
				'minimo' => $this->input->post('minimo'),
				'maximo' => $this->input->post('maximo'),
				//'tipo' => $this->input->post('tipo')
				//'categoria_vehiculo' => $this->input->post('categoria_vehiculo') == NULL ? NULL : $this->input->post('categoria_vehiculo') 
				//'utilizacion' => $this->input->post('utilizacion'),
				//'origen' => $this->input->post('origen'),
				//'inventariado' => $this->input->post('inventariado'),
			);
		}else if($this->session->userdata('tipo') == 3){			

				$config['upload_path']          = './uploads/autos/';
				$config['allowed_types']        = 'gif|jpg|jpeg|png';
				$config['max_size']             = 0;
				$config['max_width']            = 0;
				$config['max_height']           = 0;
				$config['encrypt_name'] 		=TRUE;
				$this->load->library('upload', $config);
				$this->upload->initialize($config);
	
				$this->upload->do_upload('foto1');
				$foto1 = $this->upload->data();
				$imagen1=$foto1['file_name'];
				//if (empty($imagen1)) {
				//	$imagen1="sin_foto.jpg";
				//}
	
				$config['upload_path']          = './uploads/autos/';
				$config['allowed_types']        = 'gif|jpg|jpeg|png';
				$config['max_size']             = 0;
				$config['max_width']            = 0;
				$config['max_height']           = 0;
				$config['encrypt_name'] 		=TRUE;
				$this->load->library('upload', $config);
				$this->upload->initialize($config);
	
				$this->upload->do_upload('foto2');
				$foto2 = $this->upload->data();
				$imagen2=$foto2['file_name'];
				//if (empty($imagen2)) {
				//	$imagen2="sin_foto.jpg";
				//}
	
				$config['upload_path']          = './uploads/autos/';
				$config['allowed_types']        = 'gif|jpg|jpeg|png';
				$config['max_size']             = 0;
				$config['max_width']            = 0;
				$config['max_height']           = 0;
				$config['encrypt_name'] 		=TRUE;
				$this->load->library('upload', $config);
				$this->upload->initialize($config);
	
				$this->upload->do_upload('foto3');
				$foto3 = $this->upload->data();
				$imagen3=$foto3['file_name'];
				//if (empty($imagen3)) {
				//	$imagen3="sin_foto.jpg";
				//}
	
				$imagenes = array(
					'imagen1' => $imagen1,
					'imagen2' => $imagen2,
					'imagen3' => $imagen3
				);
				
				$data = array(
					'descripcion' => strtoupper($this->input->post('descripcion')),
					'ctl_unidades_medida_idctl_unidades_medida' => $this->input->post('unidad_medida'),
					'ctl_categorias_idctl_categorias' => $this->input->post('categoria'),
					//'uid' => $uid,
					'marca' => $this->input->post('marca'),
					'modelo' => $this->input->post('modelo'),
					'precio' => $this->input->post('precio'),
					'tipo_moneda' => $this->input->post('tipo_moneda'),
					'neodata' => $this->input->post('neodata'),				
					'tipo' => $this->input->post('tipo'),
					'imagenes' => json_encode($imagenes),
					'producto_kuali' => $this->input->post('r1') == 1 ? 1 : 0,
					'categoria_vehiculo' => $this->input->post('categoria_vehiculo') == NULL ? NULL : $this->input->post('categoria_vehiculo') 
				);
				
			
		}else if ($this->session->userdata('tipo') == 1) {
			$data = array(
				'descripcion' => $this->input->post('descripcion'),
				'ctl_unidades_medida_idctl_unidades_medida' => $this->input->post('unidad_medida'),
				'marca' => $this->input->post('marca'),
				'modelo' => $this->input->post('modelo'),
				'precio' => $this->input->post('precio'),
				'tipo_moneda' => $this->input->post('tipo_moneda'),
				'inventariado' => $this->input->post('inventariado'),
				'minimo' => $this->input->post('minimo'),
				'maximo' => $this->input->post('maximo'),
				'ctl_categorias_idctl_categorias' => $this->input->post('categoria'),
				'utilizacion' => $this->input->post('utilizacion'),
				'origen' => $this->input->post('origen'),
				'inventariado' => $this->input->post('inventariado'),
				'neodata' => $this->input->post('neodata'),
				//'tipo' => $this->input->post('r1') == 1 ? 1 : NULL
				//'tipo' => $this->input->post('tipo')
			);
		} else if ($this->session->userdata('tipo') == 14) {
			$data = array(
				'descripcion' => $this->input->post('descripcion'),
				'ctl_unidades_medida_idctl_unidades_medida' => $this->input->post('unidad_medida'),
				'marca' => $this->input->post('marca'),
				'modelo' => $this->input->post('modelo'),
				'precio' => $this->input->post('precio'),
				'tipo_moneda' => $this->input->post('tipo_moneda'),
				'inventariado' => $this->input->post('inventariado'),
				'minimo' => $this->input->post('minimo'),
				'maximo' => $this->input->post('maximo'),
				'ctl_categorias_idctl_categorias' => $this->input->post('categoria'),
				'utilizacion' => $this->input->post('utilizacion'),
				'origen' => $this->input->post('origen'),
				'inventariado' => $this->input->post('inventariado'),
				'neodata' => $this->input->post('neodata'),
				//'tipo' => $this->input->post('r1') == 1 ? 1 : NULL
				//'tipo' => $this->input->post('tipo')
			);
		}
		$this->db->set($data);
		$this->db->where('uid', $this->input->post('uid'));
		$result = $this->db->update('tbl_catalogo');


		if($this->session->userdata('tipo') == 14 && $this->input->post('unidad_medida') == 10){
			foreach ($this->input->post('idtbl_catalogo_subproducto') as $key => $value) {
				$data = array(
					'tbl_catalogo_idtbl_catalogo_subproducto' => $this->input->post('idtbl_catalogo_subproducto')[$key],
					'cantidad' => strtoupper($this->input->post('cantidad_kit')[$key]),
					'tbl_catalogo_idtbl_catalogo_producto' => $this->input->post('idtbl_catalogo')
				);
				if($this->input->post('iddtl_kit_catalogo')[$key] == -1){
					$result = $this->db->insert('dtl_kit_catalogo', $data);
				}else{
					$this->db->where('iddtl_kit_catalogo', $this->input->post('iddtl_kit_catalogo')[$key]);
					$result = $this->db->update('dtl_kit_catalogo', $data);
				}
			}
		}

		return  $result;
	}

	//Función para actualizar la cantidad de un producto de explosion
	public function actualizar_explosion() {

			$data = array(
				'cantidad' => $this->input->post('cantidad'),				
			);
		
		$this->db->set($data);
		$this->db->where('iddtl_almacen_entradas', $this->input->post('iddtlentrada'));
		$result = $this->db->update('dtl_almacen_movimientos');		

		return  $result;
	}

	public function getCatalogoKit(){
		$this->db->select("dtl_kit_catalogo.*, tbl_catalogo.neodata, tbl_catalogo.descripcion, dtl_almacen.iddtl_almacen, dtl_almacen.existencias");
		$this->db->from("dtl_kit_catalogo");
		$this->db->join("tbl_catalogo", "dtl_kit_catalogo.tbl_catalogo_idtbl_catalogo_subproducto = tbl_catalogo.idtbl_catalogo");
		$this->db->join("dtl_almacen", "dtl_almacen.tbl_catalogo_idtbl_catalogo = dtl_kit_catalogo.tbl_catalogo_idtbl_catalogo_subproducto", "left");
		$this->db->where('tbl_catalogo_idtbl_catalogo_producto', $this->input->post('idtbl_catalogo'));
		$this->db->where('dtl_almacen.estatus', "almacen");
		$this->db->where('dtl_almacen.tbl_almacenes_idtbl_almacenes', "23");
		$query = $this->db->get();
		return $query->result();
	}

	public function obtenerCatalogoExistenciasKit(){
		$this->db->select("dtl_kit_catalogo.*, tbl_catalogo.neodata, tbl_catalogo.descripcion");
		$this->db->from("dtl_kit_catalogo");
		$this->db->join("tbl_catalogo", "dtl_kit_catalogo.tbl_catalogo_idtbl_catalogo_subproducto = tbl_catalogo.idtbl_catalogo");
		$this->db->join();
		$this->db->where('tbl_catalogo_idtbl_catalogo_producto', $this->input->post('idtbl_catalogo'));
		$query = $this->db->get();
		return $query->result();
	}

	public function actualizar_estatus_existencias() {		
		if ($this->session->userdata('tipo') == 4) {
			$query = $this->db->query("SELECT * FROM `tbl_catalogo` WHERE `uid` =" . "'" . $this->input->post('uid') . "'");
			$q = $this->db->query("SELECT * FROM dtl_almacen WHERE tbl_catalogo_idtbl_catalogo=" . $query->result()[0]->idtbl_catalogo . " AND tbl_almacenes_idtbl_almacenes=1 AND estatus=" . "'" . $this->input->post('estatus') . "'");
			if ($q->num_rows() > 0) {
				$this->db->set('existencias', 'existencias+' . $this->input->post('existenciascambiar'), FALSE);
				$this->db->where('tbl_catalogo_idtbl_catalogo', $query->result()[0]->idtbl_catalogo);
				$this->db->where('estatus', $this->input->post('estatus'));
				$this->db->where('tbl_almacenes_idtbl_almacenes', ID_ALMACEN_GENERAL);
				$result = $this->db->update('dtl_almacen');

				$this->db->set('existencias', 'existencias-' . $this->input->post('existenciascambiar'), FALSE);
				$this->db->where('tbl_catalogo_idtbl_catalogo', $query->result()[0]->idtbl_catalogo);
				$this->db->where('estatus', $this->input->post('estatusanterior'));
				$this->db->where('tbl_almacenes_idtbl_almacenes', ID_ALMACEN_GENERAL);
				$result2 = $this->db->update('dtl_almacen');
			} else {
				$data = array(
					'tbl_almacenes_idtbl_almacenes' => ID_ALMACEN_GENERAL,
					'tbl_catalogo_idtbl_catalogo' => $query->result()[0]->idtbl_catalogo,
					'existencias' => $this->input->post('existenciascambiar'),
					'estatus' => $this->input->post('estatus')
				);
				$this->db->insert('dtl_almacen', $data);

				$this->db->set('existencias', 'existencias-' . $this->input->post('existenciascambiar'), FALSE);
				$this->db->where('tbl_catalogo_idtbl_catalogo', $query->result()[0]->idtbl_catalogo);
				$this->db->where('estatus', $this->input->post('estatusanterior'));
				$this->db->where('tbl_almacenes_idtbl_almacenes', ID_ALMACEN_GENERAL);
				$result = $this->db->update('dtl_almacen');
			}
		}
		return $result;
	}

	public function verificarDevolucion() {
	
		$uid_devolucion = $this->input->post('uid_devolucion');
		$q = $this->db->query("SELECT * FROM tbl_solicitud_devolucion WHERE tbl_solicitud_devolucion.uid = '$uid_devolucion'");
		if ($q->num_rows() > 0) {
			$result = true;
		}else{
			$result = false;
		}
	
		return $result;
	}

	public function actualizar_producto_almacen() {
		if($this->session->userdata('tipo') == 3) {
			if(isset($_POST['nip'])){
				$data = array(
					'numero_serie' => $this->input->post('numero_serie'),
					'numero_interno' => $this->input->post('nip'),
					'nota' => $this->input->post('nota'),
					'estatus' => $this->input->post('estatus')
				);	
			}else{
				$data = array(
					'numero_serie' => $this->input->post('numero_serie'),
					'numero_interno' => $this->input->post('numero_interno'),
					'nota' => $this->input->post('nota'),
					'rack' => $this->input->post('rack'),
					'nivel' => $this->input->post('nivel'),
					'existencias' => $this->input->post('existencias'),
					'placas' => $this->input->post('placas'),
					'entidad_federativa_placas' => $this->input->post('entidad_federativa') == "" ? NULL : $this->input->post('entidad_federativa'),
					'no_motor' => $this->input->post('no_motor'),
					'tipo_combustible' => $this->input->post('tipo_combustible'),
					'poliza' => $this->input->post('poliza'),
					'seguro' => $this->input->post('seguro'),
					'vigencia' => $this->input->post('vigencia'),
					'tipo_vehiculo' => $this->input->post('tipo_vehiculo'),
					'estado' => $this->input->post('estado_vehiculo'),
					'km_actual' => $this->input->post('kmactual'),
					'km_servicio' => $this->input->post('kmservicio'),
					'ubicacion' => $this->input->post('ubicacion'),
					'propietario' => $this->input->post('propietario'),
					'anio' => $this->input->post('anio')
				);	
		}
		} else if($this->session->userdata('tipo') == 4){
			$data = array(
				'numero_serie' => $this->input->post('numero_serie'),
				'numero_interno' => $this->input->post('numero_interno'),
				'nota' => $this->input->post('nota'),
				'estatus' => $this->input->post('estatus'),
				'existencias' => $this->input->post('existencias'),
				'rack' => $this->input->post('rack'),
				'nivel' => $this->input->post('nivel')
				//'modulo' => $this->input->post('modulo')
			);
		} else if($this->session->userdata('tipo') == 2){
			$data = array(
				'numero_serie' => $this->input->post('numero_serie'),
				'numero_interno' => $this->input->post('numero_interno'),				
				'nota' => $this->input->post('nota'),				
				'estatus' => $this->input->post('estatus'),
				'rack' => $this->input->post('rack'),
				'nivel' => $this->input->post('nivel'),
				'existencias' => $this->input->post('existencias'),
				'estado' => $this->input->post('estado_consumible'),				
				'gabeta' => $this->input->post('gabeta'),
				'parte' => $this->input->post('parte'),	
				'precio' => $this->input->post('precio'),
				'marca_almacen' => $this->input->post('marca'),
				'modelo_almacen' => $this->input->post('modelo')			
			);
		}else {
			$data = array(
				'numero_serie' => $this->input->post('numero_serie'),
				'numero_interno' => $this->input->post('numero_interno'),
				'nota' => $this->input->post('nota'),
				'estatus' => $this->input->post('estatus'),
				'rack' => $this->input->post('rack'),
				'nivel' => $this->input->post('nivel'),
				'existencias' => $this->input->post('existencias'),
				'estado' => $this->input->post('estado_consumible'),
				'gabeta' => $this->input->post('gabeta'),
				'parte' => $this->input->post('parte')
			);
		}
		if($this->input->post('estatus') !== NULL){
			$this->db->set('estatus', $this->input->post('estatus'));
		}
		$this->db->set($data);
		$this->db->where('iddtl_almacen', $this->input->post('idalmacen'));
		$result = $this->db->update('dtl_almacen');
		return  $result;
	}

	public function actualizar_linea_almacen(){
			

		if(isset($_POST['celulares'])){
			$data = array(
				'numero_serie' => $this->input->post('numero_serie'),
				'numero_interno' => $this->input->post('numero_interno'),				
				'nota' => $this->input->post('nota'),
				'estatus' => 'asignado',
				'dtl_almacen_iddtl_almacen' => $this->input->post('celulares')			
			);
		}else{

			$data = array(
				'numero_serie' => $this->input->post('numero_serie'),
				'numero_interno' => $this->input->post('numero_interno'),				
				'nota' => $this->input->post('nota'),
				'estatus' => $this->input->post('estatus'),									
				'dtl_almacen_iddtl_almacen' => $this->input->post('celulares')				
			);	
		}
		$this->db->set($data);
		$this->db->where('iddtl_almacen', $this->input->post('idalmacen'));
		$result = $this->db->update('dtl_almacen');
		return $result;							
		
		}									

	public function todoCatalogo($tipo_catalogo = "null", $buscar = "", $inicio = false, $cantidadRegistro = false) {
		$wheretipo='';
		/*if($this->session->userdata('tipo')==1){
			$wheretipo= 'tbl_catalogo.tipo = 2';
		} elseif($this->session->userdata('tipo')==14) {
			$wheretipo='(tbl_catalogo.tipo = 7 OR tbl_catalogo.idtbl_catalogo = 26212)';
		} elseif(($this->session->userdata('tipo') == 3 || $this->session->userdata('tipo') == 15) && $tipo_catalogo == 'autos') {
			$wheretipo='tbl_catalogo.tipo = 4';
		} elseif($this->session->userdata('tipo') == 3 && $tipo_catalogo == 'refacciones') {
			$wheretipo='ctl_categorias.idctl_categorias = 8';
		} elseif($this->session->userdata('tipo') == 2) {
			$wheretipo='ctl_categorias.tipo = 2';
		} */

		if($tipo_catalogo != "null"){
			$wheretipo .= " tbl_catalogo.tipo = " . $tipo_catalogo;
			if($tipo_catalogo == 100){
				$wheretipo .= " OR tbl_catalogo.tipo IS NULL ";
			}
		}

		$limit = '';
		if ($inicio !== false && $cantidadRegistro !== false) {
			$limit = 'LIMIT ' . $inicio . "," . $cantidadRegistro;
		}
		if($wheretipo == ''){
			if($buscar != ''){
				$query = $this->db->query("SELECT tbl_catalogo.*, tbl_catalogo.tipo as tipo_producto, ctl_categorias.categoria,ctl_categorias.idctl_categorias,ctl_categorias.tipo, ctl_unidades_medida.idctl_unidades_medida, ctl_unidades_medida.unidad_medida FROM tbl_catalogo LEFT JOIN ctl_categorias ON tbl_catalogo.ctl_categorias_idctl_categorias=ctl_categorias.idctl_categorias LEFT JOIN ctl_unidades_medida ON tbl_catalogo.ctl_unidades_medida_idctl_unidades_medida=ctl_unidades_medida.idctl_unidades_medida WHERE (tbl_catalogo.neodata IS NULL OR tbl_catalogo.uid IS NULL OR tbl_catalogo.marca IS NULL OR tbl_catalogo.modelo IS NULL OR tbl_catalogo.descripcion IS NULL OR tbl_catalogo.utilizacion IS NULL OR tbl_catalogo.minimo IS NULL OR tbl_catalogo.maximo IS NULL OR tbl_catalogo.origen IS NULL OR ctl_categorias.categoria IS NULL OR ctl_unidades_medida.unidad_medida IS NULL OR tbl_catalogo.precio IS NULL) " . $limit);
			}else{
				$query = $this->db->query("SELECT tbl_catalogo.*, tbl_catalogo.tipo as tipo_producto, ctl_categorias.categoria,ctl_categorias.idctl_categorias,ctl_categorias.tipo, ctl_unidades_medida.idctl_unidades_medida, ctl_unidades_medida.unidad_medida FROM tbl_catalogo LEFT JOIN ctl_categorias ON tbl_catalogo.ctl_categorias_idctl_categorias=ctl_categorias.idctl_categorias LEFT JOIN ctl_unidades_medida ON tbl_catalogo.ctl_unidades_medida_idctl_unidades_medida=ctl_unidades_medida.idctl_unidades_medida WHERE (tbl_catalogo.neodata LIKE '%$buscar%' OR tbl_catalogo.uid LIKE '%$buscar%' OR tbl_catalogo.marca LIKE '%$buscar%' OR tbl_catalogo.modelo LIKE '%$buscar' OR tbl_catalogo.descripcion LIKE '%$buscar%' OR tbl_catalogo.utilizacion LIKE '%$buscar%' OR tbl_catalogo.minimo LIKE '%$buscar%' OR tbl_catalogo.maximo LIKE '%$buscar%' OR tbl_catalogo.origen LIKE '%$buscar%' OR ctl_categorias.categoria LIKE '%$buscar%' OR ctl_unidades_medida.unidad_medida LIKE '%$buscar%' OR tbl_catalogo.precio LIKE '%$buscar%') " . $limit);
			}
		}else{
			if($buscar != ''){
				$query = $this->db->query("SELECT tbl_catalogo.*, tbl_catalogo.tipo as tipo_producto, ctl_categorias.categoria,ctl_categorias.idctl_categorias,ctl_categorias.tipo, ctl_unidades_medida.idctl_unidades_medida, ctl_unidades_medida.unidad_medida FROM tbl_catalogo LEFT JOIN ctl_categorias ON tbl_catalogo.ctl_categorias_idctl_categorias=ctl_categorias.idctl_categorias LEFT JOIN ctl_unidades_medida ON tbl_catalogo.ctl_unidades_medida_idctl_unidades_medida=ctl_unidades_medida.idctl_unidades_medida WHERE $wheretipo AND (tbl_catalogo.neodata IS NULL OR tbl_catalogo.uid IS NULL OR tbl_catalogo.marca IS NULL OR tbl_catalogo.modelo IS NULL OR tbl_catalogo.descripcion IS NULL OR tbl_catalogo.utilizacion IS NULL OR tbl_catalogo.minimo IS NULL OR tbl_catalogo.maximo IS NULL OR tbl_catalogo.origen IS NULL OR ctl_categorias.categoria IS NULL OR ctl_unidades_medida.unidad_medida IS NULL OR tbl_catalogo.precio IS NULL) " . $limit);
			}else{
				$query = $this->db->query("SELECT tbl_catalogo.*, tbl_catalogo.tipo as tipo_producto, ctl_categorias.categoria,ctl_categorias.idctl_categorias,ctl_categorias.tipo, ctl_unidades_medida.idctl_unidades_medida, ctl_unidades_medida.unidad_medida FROM tbl_catalogo LEFT JOIN ctl_categorias ON tbl_catalogo.ctl_categorias_idctl_categorias=ctl_categorias.idctl_categorias LEFT JOIN ctl_unidades_medida ON tbl_catalogo.ctl_unidades_medida_idctl_unidades_medida=ctl_unidades_medida.idctl_unidades_medida WHERE $wheretipo AND (tbl_catalogo.neodata LIKE '%$buscar%' OR tbl_catalogo.uid LIKE '%$buscar%' OR tbl_catalogo.marca LIKE '%$buscar%' OR tbl_catalogo.modelo LIKE '%$buscar' OR tbl_catalogo.descripcion LIKE '%$buscar%' OR tbl_catalogo.utilizacion LIKE '%$buscar%' OR tbl_catalogo.minimo LIKE '%$buscar%' OR tbl_catalogo.maximo LIKE '%$buscar%' OR tbl_catalogo.origen LIKE '%$buscar%' OR ctl_categorias.categoria LIKE '%$buscar%' OR ctl_unidades_medida.unidad_medida LIKE '%$buscar%' OR tbl_catalogo.precio LIKE '%$buscar%') " . $limit);
			}
		}	
		return $query->result();
	}

	//Consulta el catalogo por almacén
	public function catalogoPorAlmacen($buscar = '', $inicio = false, $cantidadRegistro = false) {
		
		$wheretipo= $this->input->post('tipo');
		
		$limit = $cantidadRegistro;
		if ($inicio !== false && $cantidadRegistro !== false) {
			$limit = 'LIMIT ' . $inicio . "," . $cantidadRegistro;
		}
		
        if ($this->input->post('tipo') == 0) {
            if ($buscar == 'NULL' || $buscar == 'null') {
                $query = $this->db->query("SELECT tbl_catalogo.*, tbl_catalogo.tipo as tipo_producto, ctl_categorias.categoria,ctl_categorias.idctl_categorias,ctl_categorias.tipo, ctl_unidades_medida.idctl_unidades_medida, ctl_unidades_medida.unidad_medida FROM tbl_catalogo LEFT JOIN ctl_categorias ON tbl_catalogo.ctl_categorias_idctl_categorias=ctl_categorias.idctl_categorias LEFT JOIN ctl_unidades_medida ON tbl_catalogo.ctl_unidades_medida_idctl_unidades_medida=ctl_unidades_medida.idctl_unidades_medida WHERE tbl_catalogo.producto_kuali = 1 AND (tbl_catalogo.neodata IS NULL OR tbl_catalogo.uid IS NULL OR tbl_catalogo.marca IS NULL OR tbl_catalogo.modelo IS NULL OR tbl_catalogo.descripcion IS NULL OR tbl_catalogo.utilizacion IS NULL OR tbl_catalogo.minimo IS NULL OR tbl_catalogo.maximo IS NULL OR tbl_catalogo.origen IS NULL OR ctl_categorias.categoria IS NULL OR ctl_unidades_medida.unidad_medida IS NULL OR tbl_catalogo.precio IS NULL) " . $limit);
            } else {
                $query = $this->db->query("SELECT tbl_catalogo.*, tbl_catalogo.tipo as tipo_producto, ctl_categorias.categoria,ctl_categorias.idctl_categorias,ctl_categorias.tipo, ctl_unidades_medida.idctl_unidades_medida, ctl_unidades_medida.unidad_medida FROM tbl_catalogo LEFT JOIN ctl_categorias ON tbl_catalogo.ctl_categorias_idctl_categorias=ctl_categorias.idctl_categorias LEFT JOIN ctl_unidades_medida ON tbl_catalogo.ctl_unidades_medida_idctl_unidades_medida=ctl_unidades_medida.idctl_unidades_medida WHERE tbl_catalogo.producto_kuali = 1 AND (tbl_catalogo.neodata LIKE '%$buscar%' OR tbl_catalogo.uid LIKE '%$buscar%' OR tbl_catalogo.marca LIKE '%$buscar%' OR tbl_catalogo.modelo LIKE '%$buscar' OR tbl_catalogo.descripcion LIKE '%$buscar%' OR tbl_catalogo.utilizacion LIKE '%$buscar%' OR tbl_catalogo.minimo LIKE '%$buscar%' OR tbl_catalogo.maximo LIKE '%$buscar%' OR tbl_catalogo.origen LIKE '%$buscar%' OR ctl_categorias.categoria LIKE '%$buscar%' OR ctl_unidades_medida.unidad_medida LIKE '%$buscar%' OR tbl_catalogo.precio LIKE '%$buscar%') " . $limit);
            }
        }elseif($this->input->post('tipo') == 100){
			if ($buscar == 'NULL' || $buscar == 'null') {
                $query = $this->db->query("SELECT tbl_catalogo.*, tbl_catalogo.tipo as tipo_producto, ctl_categorias.categoria,ctl_categorias.idctl_categorias,ctl_categorias.tipo, ctl_unidades_medida.idctl_unidades_medida, ctl_unidades_medida.unidad_medida FROM tbl_catalogo LEFT JOIN ctl_categorias ON tbl_catalogo.ctl_categorias_idctl_categorias=ctl_categorias.idctl_categorias LEFT JOIN ctl_unidades_medida ON tbl_catalogo.ctl_unidades_medida_idctl_unidades_medida=ctl_unidades_medida.idctl_unidades_medida WHERE tbl_catalogo.tipo IS NULL AND (tbl_catalogo.neodata IS NULL OR tbl_catalogo.uid IS NULL OR tbl_catalogo.marca IS NULL OR tbl_catalogo.modelo IS NULL OR tbl_catalogo.descripcion IS NULL OR tbl_catalogo.utilizacion IS NULL OR tbl_catalogo.minimo IS NULL OR tbl_catalogo.maximo IS NULL OR tbl_catalogo.origen IS NULL OR ctl_categorias.categoria IS NULL OR ctl_unidades_medida.unidad_medida IS NULL OR tbl_catalogo.precio IS NULL) " . $limit);
            } else {
                $query = $this->db->query("SELECT tbl_catalogo.*, tbl_catalogo.tipo as tipo_producto, ctl_categorias.categoria,ctl_categorias.idctl_categorias,ctl_categorias.tipo, ctl_unidades_medida.idctl_unidades_medida, ctl_unidades_medida.unidad_medida FROM tbl_catalogo LEFT JOIN ctl_categorias ON tbl_catalogo.ctl_categorias_idctl_categorias=ctl_categorias.idctl_categorias LEFT JOIN ctl_unidades_medida ON tbl_catalogo.ctl_unidades_medida_idctl_unidades_medida=ctl_unidades_medida.idctl_unidades_medida WHERE tbl_catalogo.tipo IS NULL AND (tbl_catalogo.neodata LIKE '%$buscar%' OR tbl_catalogo.uid LIKE '%$buscar%' OR tbl_catalogo.marca LIKE '%$buscar%' OR tbl_catalogo.modelo LIKE '%$buscar' OR tbl_catalogo.descripcion LIKE '%$buscar%' OR tbl_catalogo.utilizacion LIKE '%$buscar%' OR tbl_catalogo.minimo LIKE '%$buscar%' OR tbl_catalogo.maximo LIKE '%$buscar%' OR tbl_catalogo.origen LIKE '%$buscar%' OR ctl_categorias.categoria LIKE '%$buscar%' OR ctl_unidades_medida.unidad_medida LIKE '%$buscar%' OR tbl_catalogo.precio LIKE '%$buscar%') " . $limit);
            }
		}else{
			if ($buscar == 'NULL' || $buscar == 'null') {
                $query = $this->db->query("SELECT tbl_catalogo.*, tbl_catalogo.tipo as tipo_producto, ctl_categorias.categoria,ctl_categorias.idctl_categorias,ctl_categorias.tipo, ctl_unidades_medida.idctl_unidades_medida, ctl_unidades_medida.unidad_medida FROM tbl_catalogo LEFT JOIN ctl_categorias ON tbl_catalogo.ctl_categorias_idctl_categorias=ctl_categorias.idctl_categorias LEFT JOIN ctl_unidades_medida ON tbl_catalogo.ctl_unidades_medida_idctl_unidades_medida=ctl_unidades_medida.idctl_unidades_medida WHERE tbl_catalogo.tipo = $wheretipo AND (tbl_catalogo.neodata IS NULL OR tbl_catalogo.uid IS NULL OR tbl_catalogo.marca IS NULL OR tbl_catalogo.modelo IS NULL OR tbl_catalogo.descripcion IS NULL OR tbl_catalogo.utilizacion IS NULL OR tbl_catalogo.minimo IS NULL OR tbl_catalogo.maximo IS NULL OR tbl_catalogo.origen IS NULL OR ctl_categorias.categoria IS NULL OR ctl_unidades_medida.unidad_medida IS NULL OR tbl_catalogo.precio IS NULL) " . $limit);
            } else {
                $query = $this->db->query("SELECT tbl_catalogo.*, tbl_catalogo.tipo as tipo_producto, ctl_categorias.categoria,ctl_categorias.idctl_categorias,ctl_categorias.tipo, ctl_unidades_medida.idctl_unidades_medida, ctl_unidades_medida.unidad_medida FROM tbl_catalogo LEFT JOIN ctl_categorias ON tbl_catalogo.ctl_categorias_idctl_categorias=ctl_categorias.idctl_categorias LEFT JOIN ctl_unidades_medida ON tbl_catalogo.ctl_unidades_medida_idctl_unidades_medida=ctl_unidades_medida.idctl_unidades_medida WHERE tbl_catalogo.tipo = $wheretipo AND (tbl_catalogo.neodata LIKE '%$buscar%' OR tbl_catalogo.uid LIKE '%$buscar%' OR tbl_catalogo.marca LIKE '%$buscar%' OR tbl_catalogo.modelo LIKE '%$buscar' OR tbl_catalogo.descripcion LIKE '%$buscar%' OR tbl_catalogo.utilizacion LIKE '%$buscar%' OR tbl_catalogo.minimo LIKE '%$buscar%' OR tbl_catalogo.maximo LIKE '%$buscar%' OR tbl_catalogo.origen LIKE '%$buscar%' OR ctl_categorias.categoria LIKE '%$buscar%' OR ctl_unidades_medida.unidad_medida LIKE '%$buscar%' OR tbl_catalogo.precio LIKE '%$buscar%') " . $limit);
            }
		}
		
		return $query->result();
	}

	public function catalogoMaterialInstalacionKuali($tipo_servicio) {
		$this->db->select('tbl_catalogo.*, dtl_almacen.*, tbl_catalogo.tipo as tipo_producto, ctl_categorias.categoria,ctl_categorias.idctl_categorias,ctl_categorias.tipo, ctl_unidades_medida.idctl_unidades_medida, ctl_unidades_medida.unidad_medida');
		$this->db->from('tbl_catalogo');
		$this->db->join('dtl_almacen', 'tbl_catalogo.idtbl_catalogo=dtl_almacen.tbl_catalogo_idtbl_catalogo', 'left');
		$this->db->join('ctl_categorias', 'tbl_catalogo.ctl_categorias_idctl_categorias=ctl_categorias.idctl_categorias', 'left');
		$this->db->join('ctl_unidades_medida', 'tbl_catalogo.ctl_unidades_medida_idctl_unidades_medida=ctl_unidades_medida.idctl_unidades_medida', 'left');
		$this->db->where('dtl_almacen.tbl_almacenes_idtbl_almacenes=', 16);
		if($tipo_servicio == 'F.O') {
			$this->db->where('ctl_categorias.abreviatura=','MIKFO');
		} else {
			$this->db->where('ctl_categorias.abreviatura=','MIKW');
		}
		$query = $this->db->get();
		return $query->result();
	}

	public function catalogo($tipo = '') {
		if ($tipo == 'almc_gen') {
			//$wheretipo = ($this->session->userdata('tipo') != 1) ? 'ctl_categorias.tipo!=' : 'ctl_categorias.tipo' ;
			$this->db->select('tbl_catalogo.*, tbl_catalogo.tipo as tipo_producto, ctl_categorias.categoria,ctl_categorias.idctl_categorias,ctl_categorias.tipo, ctl_unidades_medida.idctl_unidades_medida, ctl_unidades_medida.unidad_medida');
			$this->db->from('tbl_catalogo');
			$this->db->join('ctl_categorias', 'tbl_catalogo.ctl_categorias_idctl_categorias=ctl_categorias.idctl_categorias', 'left');
			$this->db->join('ctl_unidades_medida', 'tbl_catalogo.ctl_unidades_medida_idctl_unidades_medida=ctl_unidades_medida.idctl_unidades_medida', 'left');
			$this->db->where('ctl_categorias.tipo!=', 1);
			$this->db->where('tbl_catalogo.estatus_producto', 1);
			$query = $this->db->get();
		} elseif ($tipo == 'alto-costo') {
			//$wheretipo = ($this->session->userdata('tipo') != 1) ? 'ctl_categorias.tipo!=' : 'ctl_categorias.tipo' ;
			$this->db->select('tbl_catalogo.*, tbl_catalogo.tipo as tipo_producto, ctl_categorias.categoria,ctl_categorias.idctl_categorias,ctl_categorias.tipo, ctl_unidades_medida.idctl_unidades_medida, ctl_unidades_medida.unidad_medida');
			$this->db->from('tbl_catalogo');
			$this->db->join('ctl_categorias', 'tbl_catalogo.ctl_categorias_idctl_categorias=ctl_categorias.idctl_categorias', 'left');
			$this->db->join('ctl_unidades_medida', 'tbl_catalogo.ctl_unidades_medida_idctl_unidades_medida=ctl_unidades_medida.idctl_unidades_medida', 'left');
			$this->db->where('tbl_catalogo.tipo=', 2);
			$query = $this->db->get();
		} elseif ($tipo == 'kuali_digital') {
			//$wheretipo = ($this->session->userdata('tipo') != 1) ? 'ctl_categorias.tipo!=' : 'ctl_categorias.tipo' ;
			$this->db->select('tbl_catalogo.*, dtl_almacen.*, tbl_catalogo.tipo as tipo_producto, ctl_categorias.categoria,ctl_categorias.idctl_categorias,ctl_categorias.tipo, ctl_unidades_medida.idctl_unidades_medida, ctl_unidades_medida.unidad_medida');
			$this->db->from('tbl_catalogo');
			$this->db->join('dtl_almacen', 'tbl_catalogo.idtbl_catalogo=dtl_almacen.tbl_catalogo_idtbl_catalogo', 'left');
			$this->db->join('ctl_categorias', 'tbl_catalogo.ctl_categorias_idctl_categorias=ctl_categorias.idctl_categorias', 'left');
			$this->db->join('ctl_unidades_medida', 'tbl_catalogo.ctl_unidades_medida_idctl_unidades_medida=ctl_unidades_medida.idctl_unidades_medida', 'left');
			$this->db->where('dtl_almacen.tbl_almacenes_idtbl_almacenes=', 16);
			$query = $this->db->get();
		} elseif ($tipo == 'area_medica') {
			//$wheretipo = ($this->session->userdata('tipo') != 1) ? 'ctl_categorias.tipo!=' : 'ctl_categorias.tipo' ;
			$this->db->select('tbl_catalogo.*, dtl_almacen.*, tbl_catalogo.tipo as tipo_producto, ctl_categorias.categoria,ctl_categorias.idctl_categorias,ctl_categorias.tipo, ctl_unidades_medida.idctl_unidades_medida, ctl_unidades_medida.unidad_medida');
			$this->db->from('tbl_catalogo');
			$this->db->join('dtl_almacen', 'tbl_catalogo.idtbl_catalogo=dtl_almacen.tbl_catalogo_idtbl_catalogo', 'left');
			$this->db->join('ctl_categorias', 'tbl_catalogo.ctl_categorias_idctl_categorias=ctl_categorias.idctl_categorias', 'left');
			$this->db->join('ctl_unidades_medida', 'tbl_catalogo.ctl_unidades_medida_idctl_unidades_medida=ctl_unidades_medida.idctl_unidades_medida', 'left');
			$this->db->where('dtl_almacen.tbl_almacenes_idtbl_almacenes=', 23);
			$query = $this->db->get();
		} elseif ($tipo == 'control_vehicular') {
			//$wheretipo = ($this->session->userdata('tipo') != 1) ? 'ctl_categorias.tipo!=' : 'ctl_categorias.tipo' ;
			$this->db->select('tbl_catalogo.*, dtl_almacen.*, tbl_catalogo.tipo as tipo_producto, ctl_categorias.categoria,ctl_categorias.idctl_categorias,ctl_categorias.tipo, ctl_unidades_medida.idctl_unidades_medida, ctl_unidades_medida.unidad_medida');
			$this->db->from('tbl_catalogo');
			$this->db->join('dtl_almacen', 'tbl_catalogo.idtbl_catalogo=dtl_almacen.tbl_catalogo_idtbl_catalogo', 'left');
			$this->db->join('ctl_categorias', 'tbl_catalogo.ctl_categorias_idctl_categorias=ctl_categorias.idctl_categorias', 'left');
			$this->db->join('ctl_unidades_medida', 'tbl_catalogo.ctl_unidades_medida_idctl_unidades_medida=ctl_unidades_medida.idctl_unidades_medida', 'left');
			$this->db->where('dtl_almacen.tbl_almacenes_idtbl_almacenes=', ID_ALMACEN_AUTOS_CONTROL_VEHICULAR);			
			$this->db->group_by("tbl_catalogo.idtbl_catalogo");
			$query = $this->db->get();
		}elseif ($tipo == 'control_vehicular_detalle') {
			//$wheretipo = ($this->session->userdata('tipo') != 1) ? 'ctl_categorias.tipo!=' : 'ctl_categorias.tipo' ;
			$this->db->select('tbl_catalogo.*, dtl_almacen.*, tbl_catalogo.tipo as tipo_producto, ctl_categorias.categoria,ctl_categorias.idctl_categorias,ctl_categorias.tipo, ctl_unidades_medida.idctl_unidades_medida, ctl_unidades_medida.unidad_medida');
			$this->db->from('tbl_catalogo');
			$this->db->join('dtl_almacen', 'tbl_catalogo.idtbl_catalogo=dtl_almacen.tbl_catalogo_idtbl_catalogo', 'left');
			$this->db->join('ctl_categorias', 'tbl_catalogo.ctl_categorias_idctl_categorias=ctl_categorias.idctl_categorias', 'left');
			$this->db->join('ctl_unidades_medida', 'tbl_catalogo.ctl_unidades_medida_idctl_unidades_medida=ctl_unidades_medida.idctl_unidades_medida', 'left');
			$this->db->where('dtl_almacen.tbl_almacenes_idtbl_almacenes=', ID_ALMACEN_AUTOS_CONTROL_VEHICULAR);			
			$this->db->where('tbl_catalogo.descripcion!=', 'PERSONAL');
			$query = $this->db->get();
		} elseif ($tipo == 'refacciones_control_vehicular') {
			//$wheretipo = ($this->session->userdata('tipo') != 1) ? 'ctl_categorias.tipo!=' : 'ctl_categorias.tipo' ;
			$this->db->select('tbl_catalogo.*, dtl_almacen.*, tbl_catalogo.tipo as tipo_producto, ctl_categorias.categoria,ctl_categorias.idctl_categorias,ctl_categorias.tipo, ctl_unidades_medida.idctl_unidades_medida, ctl_unidades_medida.unidad_medida');
			$this->db->from('tbl_catalogo');
			$this->db->join('dtl_almacen', 'tbl_catalogo.idtbl_catalogo=dtl_almacen.tbl_catalogo_idtbl_catalogo', 'left');
			$this->db->join('ctl_categorias', 'tbl_catalogo.ctl_categorias_idctl_categorias=ctl_categorias.idctl_categorias', 'left');
			$this->db->join('ctl_unidades_medida', 'tbl_catalogo.ctl_unidades_medida_idctl_unidades_medida=ctl_unidades_medida.idctl_unidades_medida', 'left');
			$this->db->where('dtl_almacen.tbl_almacenes_idtbl_almacenes=', ID_ALMACEN_REFACCIONES_CONTROL_VEHICULAR);
			$this->db->where('dtl_almacen.existencias > ', 0);
			$this->db->where('dtl_almacen.estatus=', 'almacen');
			$query = $this->db->get();
		} elseif ($tipo == 'sistemas') {
			//$wheretipo = ($this->session->userdata('tipo') != 1) ? 'ctl_categorias.tipo!=' : 'ctl_categorias.tipo' ;
			//$this->db->select('tbl_catalogo.*, dtl_almacen.*, tbl_catalogo.tipo as tipo_producto, ctl_categorias.categoria,ctl_categorias.idctl_categorias,ctl_categorias.tipo, ctl_unidades_medida.idctl_unidades_medida, ctl_unidades_medida.unidad_medida');
			$this->db->select('tbl_catalogo.*, tbl_catalogo.tipo as tipo_producto, ctl_categorias.categoria,ctl_categorias.idctl_categorias,ctl_categorias.tipo, ctl_unidades_medida.idctl_unidades_medida, ctl_unidades_medida.unidad_medida');
			$this->db->from('tbl_catalogo');
			//$this->db->join('dtl_almacen', 'tbl_catalogo.idtbl_catalogo=dtl_almacen.tbl_catalogo_idtbl_catalogo', 'left');
			$this->db->join('ctl_categorias', 'tbl_catalogo.ctl_categorias_idctl_categorias=ctl_categorias.idctl_categorias', 'left');
			$this->db->join('ctl_unidades_medida', 'tbl_catalogo.ctl_unidades_medida_idctl_unidades_medida=ctl_unidades_medida.idctl_unidades_medida', 'left');
			//$this->db->where('dtl_almacen.tbl_almacenes_idtbl_almacenes=', ID_ALMACEN_SISTEMAS);
			$this->db->where('tbl_catalogo.tipo', 6);
			$query = $this->db->get();
		} elseif($tipo == 'att') {
			//$wheretipo = ($this->session->userdata('tipo') != 1) ? 'ctl_categorias.tipo!=' : 'ctl_categorias.tipo';
			$this->db->select('tbl_catalogo_mantenimientos.*, ctl_unidades_medida.idctl_unidades_medida, ctl_unidades_medida.unidad_medida');
			$this->db->from('tbl_catalogo_mantenimientos');			
			$this->db->join('ctl_unidades_medida', 'tbl_catalogo_mantenimientos.ctl_unidades_medida_idctl_unidades_medida=ctl_unidades_medida.idctl_unidades_medida', 'left');
			//$this->db->where('ctl_categorias.tipo!=1');
			$this->db->where('tbl_catalogo_mantenimientos.estatus_producto', 1);			
			$query = $this->db->get();
		} elseif($tipo == 'seguridad_e_higiene') {
			$this->db->select('tbl_catalogo.*, tbl_catalogo.tipo as tipo_producto, ctl_categorias.categoria,ctl_categorias.idctl_categorias,ctl_categorias.tipo, ctl_unidades_medida.idctl_unidades_medida, ctl_unidades_medida.unidad_medida');
			$this->db->from('tbl_catalogo');
			$this->db->join('ctl_categorias', 'tbl_catalogo.ctl_categorias_idctl_categorias=ctl_categorias.idctl_categorias', 'left');
			$this->db->join('ctl_unidades_medida', 'tbl_catalogo.ctl_unidades_medida_idctl_unidades_medida=ctl_unidades_medida.idctl_unidades_medida', 'left');
			$this->db->where('tbl_catalogo.tipo', 1);
			$this->db->where('tbl_catalogo.estatus_producto', 1);
			$query = $this->db->get();
		} else {
			//$wheretipo = ($this->session->userdata('tipo') != 1) ? 'ctl_categorias.tipo!=' : 'ctl_categorias.tipo';
			$this->db->select('tbl_catalogo.*, tbl_catalogo.tipo as tipo_producto, ctl_categorias.categoria,ctl_categorias.idctl_categorias,ctl_categorias.tipo, ctl_unidades_medida.idctl_unidades_medida, ctl_unidades_medida.unidad_medida');
			$this->db->from('tbl_catalogo');
			$this->db->join('ctl_categorias', 'tbl_catalogo.ctl_categorias_idctl_categorias=ctl_categorias.idctl_categorias', 'left');
			$this->db->join('ctl_unidades_medida', 'tbl_catalogo.ctl_unidades_medida_idctl_unidades_medida=ctl_unidades_medida.idctl_unidades_medida', 'left');
			//$this->db->where('ctl_categorias.tipo!=1');
			//$this->db->where('tbl_catalogo.estatus_producto', 1);
			$query = $this->db->get();
		}
		return $query->result();
	}

	public function chip() {
    	$query = $this->db->query("SELECT tbl_catalogo.*, ctl_unidades_medida.unidad_medida FROM tbl_catalogo LEFT JOIN ctl_unidades_medida ON tbl_catalogo.ctl_unidades_medida_idctl_unidades_medida = ctl_unidades_medida.idctl_unidades_medida WHERE idtbl_catalogo = 28270");
    	return $query->result();
	}

	public function tipo_documentos() {
		$query = $this->db->query("SELECT * FROM ctl_tipo_documento");
		return $query->result();
	}

	public function abr_categoria($idctl_categorias) {
		$this->db->select('abreviatura');
		$this->db->from('ctl_categorias');
		$this->db->where('idctl_categorias', $idctl_categorias);
		$query = $this->db->get();
		return $query->result();
	}

	public function eliminar_almacen($id_almacen) {
		$this->db->set('almacen', 'CONCAT(almacen, "(ELIMINADO)")', FALSE);
		$this->db->where('idtbl_almacenes', $id_almacen);
		return $this->db->update('tbl_almacenes');
	}

	public function almacen_tiene_material($id_almacen) {
		$this->db->select('iddtl_almacen');
		$this->db->from('dtl_almacen');
		$this->db->where('tbl_almacenes_idtbl_almacenes', $id_almacen);
		$query = $this->db->get();
		if ($query->num_rows() > 0)
			return true;
		else
			return false;
	}

	public function iniciar_asignacion($uid_almacen, $id_personal, $uid_asignacion, $tipo) {
		if($this->session->userdata('tipo')==1) {
			switch ($tipo) {
				case 'material':
					$query = $this->db->query("SELECT folio as total FROM `tbl_almacen_movimientos` WHERE `tipo` = 'asignacion' AND tbl_almacenes_idtbl_almacenes=" . ID_ALMACEN_ALTO_COSTO ." order by folio DESC limit 1");
					break;
				case 'alto-costo':
					$query = $this->db->query("SELECT folio as total FROM `tbl_almacen_movimientos` WHERE `tipo` = 'asignacion' AND tbl_almacenes_idtbl_almacenes=" . ID_ALMACEN_ALTO_COSTO ." order by folio DESC limit 1");
					break;
				case 'hilti':
					$query = $this->db->query("SELECT folio as total FROM `tbl_almacen_movimientos` WHERE `tipo` = 'asignacion' AND tbl_almacenes_idtbl_almacenes=" . ID_ALMACEN_ALTO_COSTO ." order by folio DESC limit 1");
					break;
				case 'herramienta':
					$query = $this->db->query("SELECT folio as total FROM `tbl_almacen_movimientos` WHERE `tipo` = 'asignacion' AND tbl_almacenes_idtbl_almacenes=" . ID_ALMACEN_ALTO_COSTO ." order by folio DESC limit 1");
					break;
				default:
					$query = $this->db->query("SELECT COUNT(idtbl_almacen_movimientos) as total FROM `tbl_almacen_movimientos` WHERE `tipo` = 'asignacion'");
					break;
			}
		} elseif($this->session->userdata('tipo') == 3) {
			$query = $this->db->query("SELECT COUNT(idtbl_almacen_movimientos) as total FROM `tbl_almacen_movimientos` WHERE `tipo` = 'asignacion' AND tbl_almacenes_idtbl_almacenes=" . ID_ALMACEN_AUTOS_CONTROL_VEHICULAR);
		} elseif($this->session->userdata('tipo')==14 || $this->departamentos_model->permisos('almacen_area_medica')>1) {
			$query = $this->db->query("SELECT COUNT(idtbl_almacen_movimientos) as total FROM `tbl_almacen_movimientos` WHERE `tipo` = 'asignacion' AND tbl_almacenes_idtbl_almacenes=" . ID_ALMACEN_AREA_MEDICA);
		} elseif($this->session->userdata('tipo')==2) {
			switch ($tipo) {
				case 'material':
					$query = $this->db->query("SELECT folio as total FROM `tbl_almacen_movimientos` WHERE `tipo` = 'asignacion' AND tbl_almacenes_idtbl_almacenes=" . ID_ALMACEN_SISTEMAS ." order by folio DESC limit 1");
					break;
				case 'sistemas':
					$query = $this->db->query("SELECT folio as total FROM `tbl_almacen_movimientos` WHERE `tipo` = 'asignacion' AND tbl_almacenes_idtbl_almacenes=" . ID_ALMACEN_SISTEMAS ." order by folio DESC limit 1");
					break;
				default:
					$query = $this->db->query("SELECT COUNT(idtbl_almacen_movimientos) as total FROM `tbl_almacen_movimientos` WHERE `tipo` = 'asignacion'");
					break;
			}
		} elseif($this->session->userdata('tipo')==10){
			$query = $this->db->query("SELECT folio as total FROM `tbl_almacen_movimientos` WHERE `tipo` = 'asignacion' AND tbl_almacenes_idtbl_almacenes=" . ID_ALMACEN_GENERAL ." AND tbl_almacen_movimientos.seguridad_e_higiene = 1 order by folio DESC limit 1");
			//$query = $this->db->query("SELECT COUNT(idtbl_almacen_movimientos) as total FROM `tbl_almacen_movimientos` WHERE `tipo` = 'asignacion' AND tbl_almacenes_idtbl_almacenes=" . ID_ALMACEN_GENERAL . " AND tbl_almacen_movimientos.seguridad_e_higiene = 1");
		}
		$data = array(
			'fecha' => date('Y-m-d H:i:s'),
			'tbl_usuarios_idtbl_usuarios' => $id_personal,
			'tbl_users_idtbl_users' => $this->session->userdata('id'),
			'tbl_almacenes_idtbl_almacenes' => $this->id_almacen($uid_almacen),
			'uid' => $uid_asignacion,
			'tipo' => 'asignacion',
			'estatus' => 0,
			'folio' => $query->result()[0]->total + 1,
			'tipo_movimiento' => $tipo,
			'seguridad_e_higiene' => $this->session->userdata('tipo') == 10 ? 1 : 0
		);
		//Se registra la entrada
		$this->db->insert('tbl_almacen_movimientos', $data);
		return $query->result()[0]->total + 1;
	}

	public function iniciar_traspaso($uid_almacen, $id_origen, $uid_traspaso) {
		
		$query = $this->db->query("SELECT COUNT(idtbl_almacen_movimientos) as total FROM `tbl_almacen_movimientos` WHERE `tipo` = 'traspaso-almacen'");
		
		$data = array(
			'fecha' => date('Y-m-d H:i:s'),			
			'tbl_users_idtbl_users' => $this->session->userdata('id'),
			'tbl_almacenes_idtbl_almacenes' => $this->id_almacen($id_origen),
			'tbl_almacenes_idtbl_almacenes_destino' => $uid_almacen,
			'uid' => $uid_traspaso,
			'tipo' => 'traspaso-almacen',
			'estatus' => 0,
			'folio' => $query->result()[0]->total + 1,
			'tipo_movimiento' => $this->input->post('tipo')
		);
		//Se registra la entrada
		$this->db->insert('tbl_almacen_movimientos', $data);
		$datos = array(
		'folio' => $query->result()[0]->total + 1,
		'id_movimiento' => $this->db->insert_id()
		);
		return $datos;
	}

	public function iniciar_asignacion_refaccion($uid_almacen, $id_personal, $uid_asignacion) {
		if($this->session->userdata('tipo') == 3) {
			$query = $this->db->query("SELECT COUNT(idtbl_almacen_movimientos) as total FROM `tbl_almacen_movimientos` WHERE `tipo` = 'asignacion' AND tbl_almacenes_idtbl_almacenes=" . ID_ALMACEN_REFACCIONES_CONTROL_VEHICULAR);
		}
		$data = array(
			'fecha' => date('Y-m-d H:i:s'),
			'tbl_usuarios_idtbl_usuarios' => $id_personal,
			'tbl_users_idtbl_users' => $this->session->userdata('id'),
			'tbl_almacenes_idtbl_almacenes' => $this->id_almacen($uid_almacen),
			'uid' => $uid_asignacion,
			'tipo' => 'asignacion',
			'estatus' => 0,
			'folio' => $query->result()[0]->total + 1,
			'tipo_movimiento' => 'refaccion'
		);
		//Se registra la entrada
		$this->db->insert('tbl_almacen_movimientos', $data);
		return $query->result()[0]->total + 1;
	}

	public function continuar_asignacion($uid) {
		$query = $this->db->query("SELECT folio, tipo_movimiento FROM `tbl_almacen_movimientos` WHERE uid='$uid'");
		if ($query->num_rows() > 0)
			return $query->result()[0];
		else
			return false;
	}

	public function continuar_traspaso($uid) {
		$query = $this->db->query("SELECT idtbl_almacen_movimientos, folio, tipo_movimiento, tbl_almacenes_idtbl_almacenes, tbl_almacenes_idtbl_almacenes_destino FROM `tbl_almacen_movimientos` WHERE uid='$uid'");
		if ($query->num_rows() > 0)
			return $query->result()[0];
		else
			return false;
	}
	public function guardar_asignacion_alto_costo($imagenes) {
		$this->db->trans_begin();
		$data = array(
			'estatus' => 1,
			'tbl_proyectos_idtbl_proyectos' => $this->input->post('proyecto'),
			'imagenes_checklist' => json_encode($imagenes)
		);
		$this->db->set($data);
		$this->db->where('uid', $this->input->post('uid_asignacion'));
		$result = $this->db->update('tbl_almacen_movimientos');
		foreach ($this->input->post('asignacion') as $key => $value) {
			$data = array(
				'dtl_almacen_iddtl_almacen' => $value,
				'tbl_usuarios_idtbl_usuarios' => $this->id_usuario($this->input->post('uid_usuario')),
				'tbl_almacen_movimientos_idtbl_almacen_movimientos' => $this->id_almacen_movimientos($this->input->post('uid_asignacion')),
				'estatus_asignacion' => 'activa',
				'cantidad' => 1,
				'observaciones' => $this->input->post('observaciones')
			);
			//Se registra la entrada
			$this->db->insert('dtl_asignacion', $data);
			$data = array(
				'estatus' => 'asignado',
			);
			$this->db->set($data);
			$this->db->where('iddtl_almacen', $value);
			$result = $this->db->update('dtl_almacen');
		}
		if ($this->db->trans_status() === FALSE) {
			$this->db->trans_rollback();
			return false;
		} else {
			$this->db->trans_commit();
			return true;
		}
	}

	public function guardar_asignacion() {
		$this->db->trans_begin();
		$data = array(
			'estatus' => 1,
			'tbl_proyectos_idtbl_proyectos' => $this->input->post('proyecto'),
			'seguridad_e_higiene' => $this->session->userdata('tipo') == 10 ? 1 : 0
		);
		$this->db->set($data);
		$this->db->where('uid', $this->input->post('uid_asignacion'));
		$result = $this->db->update('tbl_almacen_movimientos');
		foreach ($this->input->post('producto') as $key => $value) {
			if ($value > 0) {
				$data = array(
					'dtl_almacen_iddtl_almacen' => $value,
					'tbl_usuarios_idtbl_usuarios' => $this->id_usuario($this->input->post('uid_usuario')),
					'tbl_almacen_movimientos_idtbl_almacen_movimientos' => $this->id_almacen_movimientos($this->input->post('uid_asignacion')),
					'estatus_asignacion' => 'activa',
					'cantidad' => $this->input->post('cantidad')[$key],
					'observaciones' => $this->input->post('observaciones')
				);

				//Se registra la entrada
				$this->db->insert('dtl_asignacion', $data);

				$this->db->set('existencias', 'existencias-' . $this->input->post('cantidad')[$key], FALSE);
				$this->db->where('iddtl_almacen', $value);
				$result = $this->db->update('dtl_almacen');
			}
		}
		if ($this->db->trans_status() === FALSE) {
			$this->db->trans_rollback();
			return false;
		} else {
			$this->db->trans_commit();
			return true;
		}
	}

	public function guardar_salida($imagenes) {
		$this->db->trans_begin();
		//echo $this->input->post('uid');
		$query = $this->db->query("SELECT COUNT(idtbl_almacen_movimientos) as total FROM `tbl_almacen_movimientos` WHERE `tipo` = 'salida-almacen'");
		$data = array(
			'fecha' => date('Y-m-d H:i:s'),
			'tbl_usuarios_idtbl_usuarios' => $this->input->post('usuario_recibe'),
			'tbl_users_idtbl_users' => $this->session->userdata('id'),
			'tbl_almacenes_idtbl_almacenes' => $this->input->post('id_almacen'),
			'tbl_proyectos_idtbl_proyectos' => $this->input->post('idtbl_proyectos'),
			'tbl_segmentos_proyecto_idtbl_segmentos_proyecto' => (empty($this->input->post('idtbl_segmentos_proyecto'))) ? NULL : $this->input->post('idtbl_segmentos_proyecto'),
			'uid' => $this->input->post('uid_salida'),
			'tipo' => 'salida-almacen',
			'estatus' => 1,
			'folio' => $query->result()[0]->total + 1,
			'parent' => $this->input->post('idtbl_solicitud_material'),
			'ctl_autorizados_entrega_idctl_autorizados_entrega' => $this->input->post('usuario_entrega')
		);
		//Se registra la entrada
		$this->db->insert('tbl_almacen_movimientos', $data);
		$insert_id = $this->db->insert_id();
		$updateSolicitudMaterial = array(
			'parent' => $this->input->post('idtbl_solicitud_material')
		);

		$this->db->where('idtbl_solicitud_material', $this->input->post('idtbl_solicitud_material'));
		$this->db->set('imagenes_firmas', json_encode($imagenes));
		$this->db->update('tbl_solicitud_material');

		foreach ($this->input->post('producto') as $key => $value) {
			if ($value != 0 && $this->input->post('cantidad')[$key] > 0) {
				if($this->input->post('id_mantenimiento') != '' && $this->input->post('id_mantenimiento') != NULL){
					$id_mantenimiento = $this->input->post('id_mantenimiento');
					$usuario_recibe = $this->input->post('usuario_recibe');					
					$queryComprobar = $this->db->query("SELECT * FROM dtl_asignacion LEFT JOIN tbl_almacen_movimientos ON tbl_almacen_movimientos.idtbl_almacen_movimientos = dtl_asignacion.tbl_almacen_movimientos_idtbl_almacen_movimientos LEFT JOIN tbl_solicitud_material ON tbl_solicitud_material.idtbl_solicitud_material = tbl_almacen_movimientos.parent WHERE tbl_solicitud_material.tbl_mantenimientos_idtbl_mantenimientos = $id_mantenimiento AND tbl_solicitud_material.tbl_usuarios_idtbl_usuarios = $usuario_recibe AND dtl_asignacion.dtl_almacen_iddtl_almacen = $value AND dtl_asignacion.cantidad > 0 AND dtl_asignacion.estatus_asignacion = 'activa'");
					$len = count($queryComprobar->result());
					if($len > 0){
						$this->db->set('cantidad', 'cantidad+' . $this->input->post('cantidad')[$key], FALSE);
						$this->db->where('iddtl_asignacion', $queryComprobar->result()[0]->iddtl_asignacion);
						$this->db->update("dtl_asignacion");
					}else{
						$data = array(
							'dtl_almacen_iddtl_almacen' => $value,
							'tbl_usuarios_idtbl_usuarios' => $this->input->post('usuario_recibe'),
							'tbl_almacen_movimientos_idtbl_almacen_movimientos' => $insert_id,
							'estatus_asignacion' => 'activa',
							'cantidad' => $this->input->post('cantidad')[$key],
							'observaciones' => $this->input->post('notas')[$key]
						);
						//Se registra la entrada
						$this->db->insert('dtl_asignacion', $data);
					}
				}else{
                    $data = array(
                    	'dtl_almacen_iddtl_almacen' => $value,
                    	'tbl_usuarios_idtbl_usuarios' => $this->input->post('usuario_recibe'),
                    	'tbl_almacen_movimientos_idtbl_almacen_movimientos' => $insert_id,
                    	'estatus_asignacion' => 'activa',
                    	'cantidad' => $this->input->post('cantidad')[$key],
                    	'observaciones' => $this->input->post('notas')[$key]
                	);
                    //Se registra la entrada
                    $this->db->insert('dtl_asignacion', $data);
                }
				//Se hace la resta solo en Kuali
				/*if ($this->session->userdata('id') == 50) {
					$this->db->set('existencias', 'existencias-' . $this->input->post('cantidad')[$key], FALSE);
					$this->db->where('iddtl_almacen', $value);
					$result = $this->db->update('dtl_almacen');
				}*/
				if(($this->session->userdata('tipo') == 4 || ($this->session->userdata('encargado_almacen') != null && $this->session->userdata('encargado_almacen') != ''))){
					if($this->input->post('solicitado')[$key] > $this->input->post('cantidad')[$key]){
						if($this->input->post('cantidad')[$key] > 0){
							$total = $this->input->post('solicitado')[$key] - $this->input->post('cantidad')[$key];
						}else{
							$total = $this->input->post('solicitado')[$key];
						}
						$this->db->set('existencias', 'existencias+' . $total, FALSE);
						$this->db->where('tbl_almacenes_idtbl_almacenes', $this->input->post('id_almacen'));
						$this->db->where('iddtl_almacen', $value);						
						$this->db->update('dtl_almacen');
					}
				}
				$this->db->set('entregado', 'entregado+' . $this->input->post('cantidad')[$key], FALSE);
				$this->db->where('iddtl_solicitud_material', $this->input->post('iddtl_solicitud_material')[$key]);
				$this->db->update('dtl_solicitud_material');
			}else{
				if(($this->session->userdata('tipo') == 4 || ($this->session->userdata('encargado_almacen') != null && $this->session->userdata('encargado_almacen') != ''))){
					if($this->input->post('solicitado')[$key] > $this->input->post('cantidad')[$key]){
						if($this->input->post('cantidad')[$key] > 0){
							$total = $this->input->post('solicitado')[$key] - $this->input->post('cantidad')[$key];
						}else{
							$total = $this->input->post('solicitado')[$key];
						}
						$this->db->set('existencias', 'existencias+' . $total, FALSE);
						$this->db->where('tbl_almacenes_idtbl_almacenes', $this->input->post('id_almacen'));
						$this->db->where('iddtl_almacen', $value);						
						$this->db->update('dtl_almacen');
					}
				}
			}
		}
		if ($this->db->trans_status() === FALSE) {
			$this->db->trans_rollback();
			return false;
		} elseif($this->db->trans_status() != FALSE && $this->input->post('tipo_solicitud')=='Kuali'){
			$this->db->trans_commit();
			$this->aprobar_solicitud(2);
			return true;
		} elseif($this->db->trans_status() != FALSE && $this->input->post('tipo_solicitud')=='Material Instalacion Kuali'){
			$this->db->trans_commit();
			$this->aprobar_solicitud(2);
			return true;
		} elseif($this->db->trans_status() != FALSE && $this->input->post('tipo_solicitud')=='Refacciones Control Vehicular'){
			$this->db->trans_commit();
			$this->aprobar_solicitud(3);
			return true;
		} else {
			$this->db->trans_commit();
			$this->aprobar_solicitud(1);
			return true;
		}
	}

	public function devolucion_alto_costo($uid, $imagenes) {
		$iddtl_devolucion = $this->input->post('iddtl_devolucion')[$uid];
		$query = $this->db->query("SELECT cantidad, tbl_solicitud_devolucion_idtbl_solicitud_devolucion FROM `dtl_solicitud_devolucion` WHERE `iddtl_solicitud_devolucion` = $iddtl_devolucion ");
		$cantidad = $query->result()[0]->cantidad;
		$idtbl_dev = $query->result()[0]->tbl_solicitud_devolucion_idtbl_solicitud_devolucion;
		if(isset($_POST['estado'])){
			$data = array(
				'entregado' => $cantidad,
				'estado' => $this->input->post('estado')[$uid],
				'imagenes_checklist' => json_encode($imagenes)
			);
		}else{
			$data = array(
				'entregado' => $cantidad,
				'imagenes_checklist' => json_encode($imagenes)
			);
		}		
		$this->db->set($data);
		$this->db->where('iddtl_solicitud_devolucion', $iddtl_devolucion);
		$result = $this->db->update('dtl_solicitud_devolucion');
		$array = $this->db->query("SELECT entregado FROM `dtl_solicitud_devolucion` WHERE `tbl_solicitud_devolucion_idtbl_solicitud_devolucion` =  $idtbl_dev");
		$cantidades = $array->result_array();
		$busqueda = array_search("0.0000", array_column($cantidades, 'entregado'));
		//var_dump($busqueda);
		//var_dump($cantidades);
		if ($busqueda == false) {
			if ($this->session->userdata('tipo') == 1) {
				$datas = array(
					'estatus_solicitud' => 'entregado'
				);
				$this->db->set($datas);
				$this->db->where('idtbl_solicitud_devolucion', $idtbl_dev);
				$this->db->update('tbl_solicitud_devolucion');
		

				$query = $this->db->query("SELECT COUNT(idtbl_almacen_movimientos) as total FROM `tbl_almacen_movimientos` WHERE `tipo` = 'devolucion-almacen-alto-costo'");
				$data = array(
					'fecha' => date('Y-m-d H:i:s'),
					'tbl_almacenes_idtbl_almacenes' => ID_ALMACEN_ALTO_COSTO,
					'uid' => $this->input->post('uid_devolucion'),
					'tipo' => 'devolucion-almacen-alto-costo',
					'tbl_usuarios_idtbl_usuarios' => $this->input->post('entrega'),
					'estatus' => 1,
					//'tbl_users_idtbl_users' => $this->input->post('usuario_recibe'),
					'folio' => $query->result()[0]->total + 1,
					'tbl_proyectos_idtbl_proyectos' => $this->input->post('proyecto'),
					//'tbl_proyectos_idtbl_proyectos' => (empty($this->input->post('segmento'))) ? NULL : $this->input->post('segmento'),
					//'ctl_autorizados_entrega_idctl_autorizados_entrega' => $this->input->post('usuario_entrega'),
					'parent' => $this->input->post('parent')
				);
				//Se registra la devolucion
				$this->db->insert('tbl_almacen_movimientos', $data);
			} elseif ($this->session->userdata('tipo') == 4) {
				if($this->session->userdata('id')==50){
					$datas = array(
						'estatus_solicitud' => 'entregado',
						'tbl_users_idtbl_users_kuali' => $this->session->userdata('id')
					);
				} else {
					$datas = array(
						'estatus_solicitud' => 'entregado',
						'tbl_users_idtbl_users_ag' => $this->session->userdata('id')
					);
				}
				$this->db->set($datas);
				$this->db->where('idtbl_solicitud_devolucion', $idtbl_dev);
				$this->db->update('tbl_solicitud_devolucion');

				$query = $this->db->query("SELECT COUNT(idtbl_almacen_movimientos) as total FROM `tbl_almacen_movimientos` WHERE `tipo` = 'devolucion-almacen'");
				$data = array(
					'fecha' => date('Y-m-d H:i:s'),
					'tbl_almacenes_idtbl_almacenes' => $this->input->post('almacen'),
					'uid' => $this->input->post('uid_devolucion'),
					'tipo' => 'devolucion-almacen',
					'tbl_usuarios_idtbl_usuarios' => $this->input->post('entrega'),
					'estatus' => 1,
					'tbl_users_idtbl_users' => $this->session->userdata('id'),
					'folio' => $query->result()[0]->total + 1,
					'tbl_proyectos_idtbl_proyectos' => $this->input->post('proyecto'),
					//'tbl_proyectos_idtbl_proyectos' => (empty($this->input->post('segmento'))) ? NULL : $this->input->post('segmento'),
					'ctl_autorizados_entrega_idctl_autorizados_entrega' => $this->input->post('usuario_entrega'),
					'parent' => $this->input->post('parent')
				);
				//Se registra la devolucion
				$this->db->insert('tbl_almacen_movimientos', $data);
			} elseif ($this->session->userdata('tipo') == 3 && $_POST['tipo_devolucion'] == 'Refacciones Control Vehicular') {
				$datas = array(
					'estatus_solicitud' => 'entregado',
					'tbl_users_idtbl_users_rcv' => $this->input->post('usuario_recibe')
				);
				$this->db->set($datas);
				$this->db->where('idtbl_solicitud_devolucion', $idtbl_dev);
				$this->db->update('tbl_solicitud_devolucion');

				$query = $this->db->query("SELECT COUNT(idtbl_almacen_movimientos) as total FROM `tbl_almacen_movimientos` WHERE `tipo` = 'devolucion-almacen-refacciones-cv'");
				$data = array(
					'fecha' => date('Y-m-d H:i:s'),
					'tbl_almacenes_idtbl_almacenes' => ID_ALMACEN_REFACCIONES_CONTROL_VEHICULAR,
					'uid' => $this->input->post('uid_devolucion'),
					'tipo' => 'devolucion-almacen-refacciones-cv',
					'tbl_usuarios_idtbl_usuarios' => $this->input->post('entrega'),
					'estatus' => 1,
					'tbl_users_idtbl_users' => $this->input->post('usuario_recibe'),
					'folio' => $query->result()[0]->total + 1,
					'tbl_proyectos_idtbl_proyectos' => $this->input->post('proyecto'),
					//'tbl_proyectos_idtbl_proyectos' => (empty($this->input->post('segmento'))) ? NULL : $this->input->post('segmento'),
					//'ctl_autorizados_entrega_idctl_autorizados_entrega' => $this->input->post('usuario_entrega'),
					'parent' => $this->input->post('parent')
				);
				//Se registra la devolucion
				$this->db->insert('tbl_almacen_movimientos', $data);
			} elseif ($this->session->userdata('tipo') == 3 && $_POST['tipo_devolucion'] == 'Tarjetas') {
				$datas = array(
					'estatus_solicitud' => 'entregado',
					'tbl_users_idtbl_users_rcv' => $this->input->post('usuario_recibe')
				);
				$this->db->set($datas);
				$this->db->where('idtbl_solicitud_devolucion', $idtbl_dev);
				$this->db->update('tbl_solicitud_devolucion');

				$query = $this->db->query("SELECT COUNT(idtbl_almacen_movimientos) as total FROM `tbl_almacen_movimientos` WHERE `tipo` = 'devolucion-almacen-refacciones-cv'");
				$data = array(
					'fecha' => date('Y-m-d H:i:s'),
					'tbl_almacenes_idtbl_almacenes' => ID_ALMACEN_TARJETAS_GASOLINA,
					'uid' => $this->input->post('uid_devolucion'),
					'tipo' => 'devolucion-almacen-refacciones-cv',
					'tbl_usuarios_idtbl_usuarios' => $this->input->post('entrega'),
					'estatus' => 1,
					'tbl_users_idtbl_users' => $this->input->post('usuario_recibe'),
					'folio' => $query->result()[0]->total + 1,
					'tbl_proyectos_idtbl_proyectos' => $this->input->post('proyecto'),
					//'tbl_proyectos_idtbl_proyectos' => (empty($this->input->post('segmento'))) ? NULL : $this->input->post('segmento'),
					//'ctl_autorizados_entrega_idctl_autorizados_entrega' => $this->input->post('usuario_entrega'),
					'parent' => $this->input->post('parent')
				);
				//Se registra la devolucion
				$this->db->insert('tbl_almacen_movimientos', $data);
			} elseif ($this->session->userdata('tipo') == 3 && $_POST['tipo_devolucion'] == 'Autos Control Vehicular') {
				$datas = array(
					'estatus_solicitud' => 'entregado',
					'tbl_users_idtbl_users_acv' => $this->input->post('usuario_recibe')
				);
				$this->db->set($datas);
				$this->db->where('idtbl_solicitud_devolucion', $idtbl_dev);
				$this->db->update('tbl_solicitud_devolucion');

				$query = $this->db->query("SELECT COUNT(idtbl_almacen_movimientos) as total FROM `tbl_almacen_movimientos` WHERE `tipo` = 'devolucion-almacen-autos-cv'");
				$data = array(
					'fecha' => date('Y-m-d H:i:s'),
					'tbl_almacenes_idtbl_almacenes' => ID_ALMACEN_AUTOS_CONTROL_VEHICULAR,
					'uid' => $this->input->post('uid_devolucion'),
					'tipo' => 'devolucion-almacen-autos-cv',
					'tbl_usuarios_idtbl_usuarios' => $this->input->post('entrega'),
					'estatus' => 1,
					'tbl_users_idtbl_users' => $this->input->post('usuario_recibe'),
					'folio' => $query->result()[0]->total + 1,
					'tbl_proyectos_idtbl_proyectos' => $this->input->post('proyecto'),
					//'tbl_proyectos_idtbl_proyectos' => (empty($this->input->post('segmento'))) ? NULL : $this->input->post('segmento'),
					//'ctl_autorizados_entrega_idctl_autorizados_entrega' => $this->input->post('usuario_entrega'),
					'parent' => $this->input->post('parent')
				);
				//Se registra la devolucion
				$this->db->insert('tbl_almacen_movimientos', $data);
			} elseif ($this->session->userdata('tipo') == 2) {
				$datas = array(
					'estatus_solicitud' => 'entregado',
					'tbl_users_idtbl_users_sis' => $this->session->userdata('id')
				);
				$this->db->set($datas);
				$this->db->where('idtbl_solicitud_devolucion', $idtbl_dev);
				$this->db->update('tbl_solicitud_devolucion');

				$query = $this->db->query("SELECT COUNT(idtbl_almacen_movimientos) as total FROM `tbl_almacen_movimientos` WHERE `tipo` = 'devolucion-almacen-sistemas'");
				$data = array(
					'fecha' => date('Y-m-d H:i:s'),
					'tbl_almacenes_idtbl_almacenes' => ID_ALMACEN_SISTEMAS,
					'uid' => $this->input->post('uid_devolucion'),
					'tipo' => 'devolucion-almacen-sistemas',
					'tbl_usuarios_idtbl_usuarios' => $this->input->post('entrega'),
					'estatus' => 1,
					'tbl_users_idtbl_users' => $this->session->userdata('id'),
					'folio' => $query->result()[0]->total + 1,
					'tbl_proyectos_idtbl_proyectos' => $this->input->post('proyecto'),
					//'tbl_proyectos_idtbl_proyectos' => (empty($this->input->post('segmento'))) ? NULL : $this->input->post('segmento'),
					'ctl_autorizados_entrega_idctl_autorizados_entrega' => $this->input->post('usuario_entrega'),
					'parent' => $this->input->post('parent')
				);
				//Se registra la devolucion
				$this->db->insert('tbl_almacen_movimientos', $data);
			} elseif ($this->session->userdata('tipo') == 14) {
				$datas = array(
					'estatus_solicitud' => 'entregado',
					'tbl_users_idtbl_users_sis' => $this->session->userdata('id')
				);
				$this->db->set($datas);
				$this->db->where('idtbl_solicitud_devolucion', $idtbl_dev);
				$this->db->update('tbl_solicitud_devolucion');

				$query = $this->db->query("SELECT COUNT(idtbl_almacen_movimientos) as total FROM `tbl_almacen_movimientos` WHERE `tipo` = 'devolucion-area-medica'");
				$data = array(
					'fecha' => date('Y-m-d H:i:s'),
					'tbl_almacenes_idtbl_almacenes' => ID_ALMACEN_AREA_MEDICA,
					'uid' => $this->input->post('uid_devolucion'),
					'tipo' => 'devolucion-area-medica',
					'tbl_usuarios_idtbl_usuarios' => $this->input->post('entrega'),
					'estatus' => 1,
					'tbl_users_idtbl_users' => $this->session->userdata('id'),
					'folio' => $query->result()[0]->total + 1,
					'tbl_proyectos_idtbl_proyectos' => $this->input->post('proyecto'),
					//'tbl_proyectos_idtbl_proyectos' => (empty($this->input->post('segmento'))) ? NULL : $this->input->post('segmento'),
					'ctl_autorizados_entrega_idctl_autorizados_entrega' => $this->input->post('usuario_entrega'),
					'parent' => $this->input->post('parent')
				);
				//Se registra la devolucion
				$this->db->insert('tbl_almacen_movimientos', $data);
			}
		}
		return  $result;
	}

	public function devolucion_recursos($id) {
			

		$this->db->set('ciclo', 'ciclo+1', FALSE);
		$this->db->where('idtbl_solicitud_recursos', $id);
		$result = $this->db->update('tbl_solicitud_recursos');
		
		return  $result;
	}

	//Función para eliminar explosión por id
	public function eliminar_explosion(){
		$this->db->where('iddtl_almacen_entradas', $this->input->post('iddtl_almacen'));
		$result = $this->db->delete('dtl_almacen_movimientos');

		return $result;
	}


	//Completar las devoluciones de almacen
	public function completar_devolucion() {
        //$idtbl_dev = $this->input->post('parent');
                                    
        //if ($this->session->userdata('tipo') == 4 || ($this->session->userdata('encargado_almacen') != null && $this->session->userdata('encargado_almacen') != '')) {
            /*if ($this->session->userdata('id')==50) {
                $datas = array(
                        'estatus_solicitud' => 'entregado',
                        'tbl_users_idtbl_users_kuali' => $this->session->userdata('id')
                    );
            } else {
                $datas = array(
                        'estatus_solicitud' => 'entregado',
                        'tbl_users_idtbl_users_ag' => $this->session->userdata('id')
                    );
            }*/
            /*$this->db->set($datas);
            $this->db->where('idtbl_solicitud_devolucion', $idtbl_dev);
            $result = $this->db->update('tbl_solicitud_devolucion');*/

			/*foreach($this->input->post('iddtl_devolucion') AS $key => $value){
				$datadtl = array(
					'entregado' => $this->input->post('cantidad')[$key],
					'estado' => $this->input->post('estado')[$key]
				);
				$this->db->where('iddtl_solicitud_devolucion', $this->input->post('iddtl_devolucion')[$key]);
				$this->db->update('dtl_solicitud_devolucion', $datadtl);
			}*/

            $query = $this->db->query("SELECT COUNT(idtbl_almacen_movimientos) as total FROM `tbl_almacen_movimientos` WHERE `tipo` = 'devolucion-almacen'");
            $data = array(
                    'fecha' => date('Y-m-d H:i:s'),
                    'tbl_almacenes_idtbl_almacenes' => isset($_POST['uid_almacen']) ? $this->id_almacen($_POST['uid_almacen']) : 2,
                    'uid' => $this->input->post('uid_devolucion'),
                    'tipo' => 'devolucion-almacen',
                    'tbl_usuarios_idtbl_usuarios' => $this->input->post('entrega'),
                    'estatus' => 1,
                    'tbl_users_idtbl_users' => $this->session->userdata('id'),
                    'folio' => $query->result()[0]->total + 1,
                    'tbl_proyectos_idtbl_proyectos' => $this->input->post('proyecto'),
                    //'tbl_proyectos_idtbl_proyectos' => (empty($this->input->post('segmento'))) ? NULL : $this->input->post('segmento'),
                    'ctl_autorizados_entrega_idctl_autorizados_entrega' => $this->input->post('usuario_entrega'),
                    'parent' => $this->input->post('parent')
                );
            //Se registra la devolucion
            $result = $this->db->insert('tbl_almacen_movimientos', $data);
        //}
    
		return  $result;
	}

	public function movimientos_devoluciones() {
		$query = $this->db->query("SELECT * FROM `tbl_solicitud_devolucion` WHERE `estatus_solicitud` = 'entregado' AND `tipo_devolucion` = 'Alto Costo' ");
		$resultado = $query->result_array();
		//se recorre el arreglo
		foreach($resultado as $valores) {
			$arreglo[] = array (
				'fecha' => $valores['fecha_modificacion'],
				'tbl_almacenes_idtbl_almacenes' => ID_ALMACEN_ALTO_COSTO,
				//'uid' => uniqid(),
				'tipo' => 'devolucion-almacen-alto-costo',
				'tbl_usuarios_idtbl_usuarios' => $valores['tbl_usuarios_idtbl_usuarios'],
				'estatus' => 1,
				'tbl_proyectos_idtbl_proyectos' => $valores['tbl_proyectos_idtbl_proyectos'],
				'tbl_segmentos_proyecto_idtbl_segmentos_proyecto' => $valores['tbl_segmentos_proyecto_idtbl_segmentos_proyecto'],
				'parent' => $valores['idtbl_solicitud_devolucion']
			);
		}

		//se recorre el arreglo que trae los productos del formulario
		foreach ($arreglo as $key => $value) {
				
			$data = array(
				'fecha' => $query->result()[$key]->fecha_modificacion,
				'tbl_almacenes_idtbl_almacenes' => ID_ALMACEN_ALTO_COSTO,
				'uid' => uniqid(),
				'tipo' => 'devolucion-almacen-alto-costo',
				'tbl_usuarios_idtbl_usuarios' => $query->result()[$key]->tbl_usuarios_idtbl_usuarios,
				'estatus' => 1,
				'tbl_proyectos_idtbl_proyectos' => $query->result()[$key]->tbl_proyectos_idtbl_proyectos,
				'tbl_segmentos_proyecto_idtbl_segmentos_proyecto' => $query->result()[$key]->tbl_segmentos_proyecto_idtbl_segmentos_proyecto,
				'parent' => $query->result()[$key]->idtbl_solicitud_devolucion
			);
			$this->db->insert('tbl_almacen_movimientos', $data);								
		
		}
		
		$result = true;
		
		return  $result;
	}

	public function devolucion_material_alto_costo() {
		$catidad = $this->input->post('entregado');
		$estatus = $this->input->post('estado');
		$producto = $this->input->post('producto');
		$result = false;
		if($this->session->userdata('id')==50){
			$query = $this->db->query("SELECT * FROM `dtl_almacen` WHERE `tbl_catalogo_idtbl_catalogo` =" . $this->input->post('producto') . " AND estatus='" . $estatus . "' AND tbl_almacenes_idtbl_almacenes=16");
			if ($query->num_rows() > 0) {
				$this->db->set('existencias', 'existencias+' . $catidad, FALSE);
				$this->db->where('estatus', $estatus);
				$this->db->where('tbl_catalogo_idtbl_catalogo', $producto);
				$this->db->where('tbl_almacenes_idtbl_almacenes', 16);
				$result = $this->db->update('dtl_almacen');
			} else {
				$dataAlmacen = array(
					'tbl_almacenes_idtbl_almacenes' => '16',
					'tbl_catalogo_idtbl_catalogo' => $this->input->post('producto'),
					'existencias' => $catidad,
					'estatus' => $estatus
				);
				$result = $this->db->insert('dtl_almacen', $dataAlmacen);
			}
		} elseif($this->session->userdata('tipo')==4 || $this->session->userdata('tipo') == 9){
			$query_folio = $this->db->query("SELECT COUNT(idtbl_almacen_movimientos) as total FROM `tbl_almacen_movimientos` WHERE `tipo` = 'devolucion-almacen'");
			$data = array(
				'fecha' => date('Y-m-d H:i:s'),
				'tbl_usuarios_idtbl_usuarios' => $this->input->post('usuario'),
				'tbl_users_idtbl_users' => $this->session->userdata('id'),
				'tbl_almacenes_idtbl_almacenes' => $this->input->post('almacen_final'),
				'uid' => uniqid(),
				'tipo' => 'devolucion-almacen',
				'estatus' => 1,
				'tipo_movimiento' => NULL,
				'folio' => $query_folio->result()[0]->total + 1,
				'tbl_proyectos_idtbl_proyectos' => $this->input->post('proyecto'),
				'tbl_segmentos_proyecto_idtbl_segmentos_proyecto' => isset($_POST['segmento_final']) && $_POST['segmento_final'] != '' ? $this->input->post('segmento_final') : NULL
			);
			//Se registra la entrada
			$this->db->insert('tbl_almacen_movimientos', $data);
			$last = $this->db->insert_id();
			$query = $this->db->query("SELECT * FROM `dtl_almacen` WHERE `tbl_catalogo_idtbl_catalogo` =" . $this->input->post('producto') . " AND estatus='" . $estatus . "' AND tbl_almacenes_idtbl_almacenes=".$this->input->post('almacen_final'));					
			$len = count($query->result());
			if ($len > 0) {
				$this->db->set('existencias', 'existencias+' . $catidad, FALSE);
				$this->db->where('estatus', $estatus);
				$this->db->where('tbl_catalogo_idtbl_catalogo', $producto);
				$this->db->where('tbl_almacenes_idtbl_almacenes', $this->input->post('almacen_final'));
				$result = $this->db->update('dtl_almacen');
			} else {
				$dataAlmacen = array(
					'tbl_almacenes_idtbl_almacenes' => $this->input->post('almacen_final'),
					'tbl_catalogo_idtbl_catalogo' => $this->input->post('producto'),
					'existencias' => $catidad,
					'estatus' => $estatus
				);
				$result = $this->db->insert('dtl_almacen', $dataAlmacen);
			}
			$query_almacen = $this->db->query("SELECT * FROM `dtl_almacen` WHERE `tbl_catalogo_idtbl_catalogo` =" . $this->input->post('producto') . " AND estatus='" . $estatus . "' AND tbl_almacenes_idtbl_almacenes=".$this->input->post('almacen_final'));
			$data = array(
				'dtl_almacen_iddtl_almacen' => $query_almacen->result()[0]->iddtl_almacen,
				'tbl_usuarios_idtbl_usuarios' => $this->input->post('usuario'),
				'tbl_almacen_movimientos_idtbl_almacen_movimientos' => $last,
				'estatus_asignacion' => 'finalizada',
				'cantidad' => ($this->input->post('entregado') * (-1)),
				'estado_entrega' => $this->input->post('estado'),
				'entregado' => $this->input->post('entregado')
			);
			$this->db->insert('dtl_asignacion', $data);	
		}elseif($this->session->userdata('tipo')==1){
			$query = $this->db->query("SELECT * FROM `dtl_almacen` WHERE `tbl_catalogo_idtbl_catalogo` =" . $this->input->post('producto') . " AND estatus='" . $estatus . "' AND tbl_almacenes_idtbl_almacenes=2");
			if ($query->num_rows() > 0) {
				$this->db->set('existencias', 'existencias+' . $catidad, FALSE);
				$this->db->where('estatus', $estatus);
				$this->db->where('tbl_catalogo_idtbl_catalogo', $producto);
				$this->db->where('tbl_almacenes_idtbl_almacenes', ID_ALMACEN_ALTO_COSTO);
				$result = $this->db->update('dtl_almacen');
			} else {
				$dataAlmacen = array(
					'tbl_almacenes_idtbl_almacenes' => ID_ALMACEN_ALTO_COSTO,
					'tbl_catalogo_idtbl_catalogo' => $this->input->post('producto'),
					'existencias' => $catidad,
					'estatus' => $estatus
				);
				$result = $this->db->insert('dtl_almacen', $dataAlmacen);
			}
		}elseif($this->session->userdata('tipo')==2){
			$query_folio = $this->db->query("SELECT COUNT(idtbl_almacen_movimientos) as total FROM `tbl_almacen_movimientos` WHERE `tipo` = 'devolucion-almacen'");
			$data = array(
				'fecha' => date('Y-m-d H:i:s'),
				'tbl_usuarios_idtbl_usuarios' => $this->input->post('usuario'),
				'tbl_users_idtbl_users' => $this->session->userdata('id'),
				'tbl_almacenes_idtbl_almacenes' => ID_ALMACEN_SISTEMAS,
				'uid' => uniqid(),
				'tipo' => 'devolucion-almacen',
				'estatus' => 1,
				'tipo_movimiento' => NULL,
				'folio' => $query_folio->result()[0]->total + 1,
				'tbl_proyectos_idtbl_proyectos' => $this->input->post('proyecto'),
				//'tbl_segmentos_proyecto_idtbl_segmentos_proyecto' => $result->tbl_segmentos_proyecto_idtbl_segmentos_proyecto
			);
			//Se registra la entrada
			$this->db->insert('tbl_almacen_movimientos', $data);
			$last = $this->db->insert_id();
			$query = $this->db->query("SELECT * FROM `dtl_almacen` WHERE `tbl_catalogo_idtbl_catalogo` =" . $this->input->post('producto') . " AND estatus='" . $estatus . "' AND tbl_almacenes_idtbl_almacenes=30");					
			if ($query->num_rows() > 0) {
				$this->db->set('existencias', 'existencias+' . $catidad, FALSE);
				$this->db->where('estatus', $estatus);
				$this->db->where('tbl_catalogo_idtbl_catalogo', $producto);
				$this->db->where('tbl_almacenes_idtbl_almacenes', ID_ALMACEN_SISTEMAS);
				$result = $this->db->update('dtl_almacen');
			} else {
				$dataAlmacen = array(
					'tbl_almacenes_idtbl_almacenes' => ID_ALMACEN_SISTEMAS,
					'tbl_catalogo_idtbl_catalogo' => $this->input->post('producto'),
					'existencias' => $catidad,
					'estatus' => $estatus
				);
				$result = $this->db->insert('dtl_almacen', $dataAlmacen);
			}
			$query_almacen = $this->db->query("SELECT * FROM `dtl_almacen` WHERE `tbl_catalogo_idtbl_catalogo` =" . $this->input->post('producto') . " AND estatus='" . $estatus . "' AND tbl_almacenes_idtbl_almacenes=30");
			$data = array(
				'dtl_almacen_iddtl_almacen' => $query_almacen->result()[0]->iddtl_almacen,
				'tbl_usuarios_idtbl_usuarios' => $this->input->post('usuario'),
				'tbl_almacen_movimientos_idtbl_almacen_movimientos' => $last,
				'estatus_asignacion' => 'finalizada',
				'cantidad' => ($this->input->post('entregado') * (-1)),
				'estado_entrega' => $this->input->post('estado'),
				'entregado' => $this->input->post('entregado')
			);
			$this->db->insert('dtl_asignacion', $data);	
		}
		return  $result;
	}

	public function guardar_devolucion() {
		$this->db->trans_begin();
		$query = $this->db->query("SELECT COUNT(idtbl_almacen_movimientos) as total FROM `tbl_almacen_movimientos` WHERE `tipo` = 'devolucion-almacen'");
		$data = array(
			'fecha' => date('Y-m-d H:i:s'),
			'tbl_almacenes_idtbl_almacenes' => $this->input->post('almacen'),
			'uid' => $this->input->post('uid_devolucion'),
			'tipo' => 'devolucion-almacen',
			'tbl_usuarios_idtbl_usuarios' => $this->input->post('entrega'),
			'estatus' => 1,
			'tbl_users_idtbl_users' => $this->session->userdata('id'),
			'folio' => $query->result()[0]->total + 1,
			'tbl_proyectos_idtbl_proyectos' => $this->input->post('proyecto'),
			'tbl_proyectos_idtbl_proyectos' => (empty($this->input->post('segmento'))) ? NULL : $this->input->post('segmento'),
			'ctl_autorizados_entrega_idctl_autorizados_entrega' => $this->input->post('usuario_entrega'),
			'parent' => $this->input->post('parent')
		);
		//Se registra la devolucion
		$this->db->insert('tbl_almacen_movimientos', $data);
		$insert_id = $this->db->insert_id();
		$updateAG = array(
			'estatus_solicitud' => 'entregado',
			'tbl_users_idtbl_users_ag' => $this->session->userdata('id')
		);
		$this->db->where('idtbl_solicitud_devolucion', $this->input->post('parent'));
		$this->db->update('tbl_solicitud_devolucion', $updateAG);

		$this->db->where('tbl_solicitud_devolucion_idtbl_solicitud_devolucion', $this->input->post('parent'));
		$this->db->delete('dtl_solicitud_devolucion');

		foreach ($this->input->post('producto') as $key => $value) {
			if (!empty($this->input->post('producto')[$key])) {

				$this->db->where('tbl_almacenes_idtbl_almacenes', $this->input->post('almacen'));
				$this->db->where('tbl_catalogo_idtbl_catalogo', $this->input->post('producto')[$key]);
				$this->db->where('estatus', $this->input->post('estado')[$key]);
				$q = $this->db->get('dtl_almacen');
				if ($q->num_rows() == 0) {
					$data = array(
						'tbl_almacenes_idtbl_almacenes' => $this->input->post('almacen'),
						'tbl_catalogo_idtbl_catalogo' => $this->input->post('producto')[$key],
						'estatus' => $this->input->post('estado')[$key],
						'existencias' => $this->input->post('cantidad')[$key]
					);
					$this->db->insert('dtl_almacen', $data);
					$iddtl_almacen = $this->db->insert_id();
				} else {
					$iddtl_almacen = $q->result()[0]->iddtl_almacen;
					$this->db->set('existencias', 'existencias+' . $this->input->post('entregado')[$key], FALSE);
					$this->db->where('tbl_almacenes_idtbl_almacenes', $this->input->post('almacen'));
					$this->db->where('tbl_catalogo_idtbl_catalogo', $this->input->post('producto')[$key]);
					$this->db->where('estatus', $this->input->post('estado')[$key]);
					$result = $this->db->update('dtl_almacen');
				}
				$insert = array(
					'cantidad' => ($this->input->post('entregado')[$key] == '-') ? $this->input->post('entregado')[$key] : $this->input->post('cantidad')[$key],
					'observaciones' => $this->input->post('observaciones')[$key],
					'tbl_solicitud_devolucion_idtbl_solicitud_devolucion' => $this->input->post('parent'),
					'tbl_catalogo_idtbl_catalogo' => $this->input->post('producto')[$key],
					'entregado' => $this->input->post('entregado')[$key],
					'estado' => $this->input->post('estado')[$key]
				);
				$this->db->insert('dtl_solicitud_devolucion', $insert);
			}
		}

		if ($this->db->trans_status() === FALSE) {
			$this->db->trans_rollback();
			return false;
		} else {
			$this->db->trans_commit();
			return true;
		}
	}

	public function guardar_devolucion_interno() {
		$this->db->trans_begin();
		$query = $this->db->query("SELECT COUNT(idtbl_almacen_movimientos) as total FROM `tbl_almacen_movimientos` WHERE `tipo` = 'devolucion-almacen'");
		$data = array(
			'fecha' => date('Y-m-d H:i:s'),
			'tbl_almacenes_idtbl_almacenes' => $this->input->post('almacen'),
			'uid' => $this->input->post('uid_devolucion'),
			'tipo' => 'devolucion-almacen',
			'tbl_usuarios_idtbl_usuarios' => $this->input->post('entrega'),
			'estatus' => 1,
			'tbl_users_idtbl_users' => $this->session->userdata('id'),
			'folio' => $query->result()[0]->total + 1,
			'tbl_proyectos_idtbl_proyectos' => $this->input->post('proyecto'),
			'tbl_segmentos_proyecto_idtbl_segmentos_proyecto' => (empty($this->input->post('segmento'))) ? NULL : $this->input->post('segmento'),
			'ctl_autorizados_entrega_idctl_autorizados_entrega' => $this->input->post('usuario_entrega'),
			'parent' => $this->input->post('parent')
		);
		//Se registra la devolucion
		$this->db->insert('tbl_almacen_movimientos', $data);
		$insert_id = $this->db->insert_id();
		$updateAG = array(
			'estatus_solicitud' => 'entregado',
			'tbl_users_idtbl_users_ag' => $this->session->userdata('id')
		);
		$this->db->where('idtbl_solicitud_devolucion', $this->input->post('parent'));
		$this->db->update('tbl_solicitud_devolucion', $updateAG);

		$this->db->where('tbl_solicitud_devolucion_idtbl_solicitud_devolucion', $this->input->post('parent'));
		$this->db->delete('dtl_solicitud_devolucion');

		foreach ($this->input->post('producto') as $key => $value) {
			if ($this->input->post('producto')[$key] != '-') {

				$this->db->where('tbl_almacenes_idtbl_almacenes', $this->input->post('almacen'));
				$this->db->where('tbl_catalogo_idtbl_catalogo', $this->input->post('producto')[$key]);
				$this->db->where('estatus', $this->input->post('estado')[$key]);
				$q = $this->db->get('dtl_almacen');

				if ($q->num_rows() == 0) {
					$data = array(
						'tbl_almacenes_idtbl_almacenes' => $this->input->post('almacen'),
						'tbl_catalogo_idtbl_catalogo' => $this->input->post('producto')[$key],
						'estatus' => $this->input->post('estado')[$key],
						'existencias' => $this->input->post('entregado')[$key]
					);

					$this->db->insert('dtl_almacen', $data);
					$iddtl_almacen = $this->db->insert_id();
				} else {
					$query = $this->db->query("SELECT existencias as total FROM `dtl_almacen` WHERE `tbl_almacenes_idtbl_almacenes` = '1' AND `tbl_catalogo_idtbl_catalogo` = '22125' AND `estatus` = ''");
					$estado = $this->input->post('estado')[$key];
					$existencias = $this->input->post('entregado')[$key];
					$totalExistencias = $q->result()[0]->existencias + $existencias;
					$iddtl_almacen = $q->result()[0]->iddtl_almacen;
					$this->db->set('existencias', number_format($totalExistencias, 2, ".", ""));
					$this->db->where('tbl_almacenes_idtbl_almacenes', $this->input->post('almacen'));
					$this->db->where('tbl_catalogo_idtbl_catalogo', $this->input->post('producto')[$key]);
					$this->db->where('estatus', $estado);
					$result = $this->db->update('dtl_almacen');
				}
				$insert = array(
					'cantidad' => ($this->input->post('cantidad_entregar')[$key] == '-') ? $this->input->post('entregado')[$key] : $this->input->post('cantidad_entregar')[$key],
					'observaciones' => $this->input->post('observaciones')[$key],
					'tbl_solicitud_devolucion_idtbl_solicitud_devolucion' => $this->input->post('parent'),
					'tbl_catalogo_idtbl_catalogo' => $this->input->post('producto')[$key],
					'entregado' => $this->input->post('entregado')[$key],
					'estado' => $this->input->post('estado')[$key]
				);
				$this->db->insert('dtl_solicitud_devolucion', $insert);

				if ($this->input->post('iddtl_asignacion')[$key] != '-') {
					$this->db->where('iddtl_asignacion ', $this->input->post('iddtl_asignacion')[$key]);
					$result_asignacion = $this->db->get('dtl_asignacion');
					if ($result_asignacion->num_rows() == 1) {

						if ($this->input->post('entregado')[$key] == '' || $this->input->post('entregado')[$key] == null) {
							$entregadoTodo = 0;
						} else {
							$entregadoTodo = $this->input->post('entregado')[$key];
						}
						$entregado = $result_asignacion->result()[0]->entregado + $entregadoTodo;
						if ($entregado >= $result_asignacion->result()[0]->cantidad) {
							$this->db->set('estatus_asignacion', 'finalizada');
							$this->db->set('entregado', $entregado);
							$this->db->set('fecha_finalizacion', date("Y-m-d H:i:s"));
						} else {
							$this->db->set('entregado', 'entregado+' . $this->input->post('entregado')[$key], FALSE);
						}
						$this->db->where('iddtl_asignacion ', $this->input->post('iddtl_asignacion')[$key]);
						$this->db->update('dtl_asignacion');
					}
				}
			}
		}

		if ($this->db->trans_status() === FALSE) {
			$this->db->trans_rollback();
			return false;
		} else {
			$this->db->trans_commit();
			return true;
		}
	}

	public function guardar_traspaso($uid, $proceso) {
        $this->db->trans_begin();
        if ($proceso == '' || $proceso == null) {
        
        $query = $this->db->query("SELECT COUNT(idtbl_almacen_movimientos) as total FROM `tbl_almacen_movimientos` WHERE `tipo` = 'traspaso-almacen'");
        $data = array(
            'fecha' => date('Y-m-d H:i:s'),
            //'tbl_usuarios_idtbl_usuarios' => $this->input->post('usuario'),
            //'tbl_users_idtbl_users' => $this->session->userdata('id'),
            //'tbl_almacenes_idtbl_almacenes' => $this->input->post('id_almacen'),
            //'tbl_almacenes_idtbl_almacenes_destino' => $this->input->post('almacen_destino'),
            //'tbl_proyectos_idtbl_proyectos' => $this->input->post('idtbl_proyectos'),
            'tbl_proyectos_idtbl_proyectos_destino' => $this->input->post('idtbl_proyectos_destino'),
            //'uid' => $uid,
            //'tipo' => 'traspaso-almacen',
            'estatus' => 1,
            //'folio' => $query->result()[0]->total + 1
        );
        //Se registra el traspaso
        $this->db->where('idtbl_almacen_movimientos', $this->input->post('id_movimiento'));
        $this->db->update('tbl_almacen_movimientos', $data);
        $query = $this->db->query("SELECT parent FROM `tbl_almacen_movimientos` WHERE idtbl_almacen_movimientos = " . $this->input->post('id_movimiento'));
        $parent = $query->result()[0]->parent;
        $insert_id = $this->input->post('id_movimiento');        

        $query = $this->db->query("SELECT COUNT(idtbl_almacen_movimientos) as total FROM `tbl_almacen_movimientos` WHERE `tipo` = 'salida-almacen'");
        $data = array(
            'fecha' => date('Y-m-d H:i:s'),
            'tbl_usuarios_idtbl_usuarios' => $this->input->post('usuario'),
            'tbl_users_idtbl_users' => $this->session->userdata('id'),
            'tbl_almacenes_idtbl_almacenes' => $this->input->post('id_almacen'),
            //'tbl_almacenes_idtbl_almacenes_destino' => $this->input->post('almacen_destino'),
            'tbl_proyectos_idtbl_proyectos' => $this->input->post('idtbl_proyectos_destino'),
            'uid' => $uid . 's',
            'tipo' => 'salida-almacen',
            'estatus' => 1,
            'folio' => $query->result()[0]->total + 1,
            'parent' => $insert_id,
            'movimiento_virtual' => 2
        );
        //Se registra el traspaso
        $this->db->insert('tbl_almacen_movimientos', $data);
		$insert_id3 = $this->db->insert_id();

		$query = $this->db->query("SELECT COUNT(idtbl_almacen_movimientos) as total FROM `tbl_almacen_movimientos` WHERE `tipo` = 'entrada-almacen'");
        
        $data = array(
            'fecha' => date('Y-m-d H:i:s'),
            'tbl_usuarios_idtbl_usuarios' => $this->input->post('usuario'),
            'tbl_users_idtbl_users' => $this->session->userdata('id'),
            'tbl_almacenes_idtbl_almacenes' => $this->input->post('almacen_destino'),
            'tbl_almacenes_idtbl_almacenes_origen' => $this->input->post('id_almacen'),
            'tbl_proyectos_idtbl_proyectos' => $this->input->post('idtbl_proyectos_destino'),
            'uid' => $uid . 't',
			'tipo' => 'entrada-almacen',			
			'estatus' => 0,
			'tipo_movimiento' => 'traspaso',
            'folio' => $query->result()[0]->total + 1,
			'idtbl_almacen_movimientos_salida' => $insert_id3,
			'idtbl_almacen_movimientos_traspaso' => $insert_id
        );
        //Se registra el traspaso
        $this->db->insert('tbl_almacen_movimientos', $data);
        $insert_id2 = $this->db->insert_id();

        foreach ($this->input->post('producto') as $key => $value) {
            if ($value > 0) {
                                
                $data = array(
                    'tbl_almacen_movimientos_idtbl_almacen_movimientos' => $insert_id2,
                    'cantidad' => $this->input->post('cantidad')[$key],
                    'tbl_catalogo_idtbl_catalogo' => $this->input->post('producto-catalogo')[$key],
				);
				
				$this->db->insert('dtl_almacen_movimientos', $data);
				$this->db->set('existencias', 'existencias-' . $this->input->post('cantidad')[$key], false);
                $this->db->where('iddtl_almacen', $this->input->post('producto')[$key]);
				$this->db->update('dtl_almacen');
				
                if ($this->session->userdata('tipo')==1) {
                    $data = array(
                    'tbl_almacen_movimientos_idtbl_almacen_movimientos' => $insert_id,
                    'cantidad' => $this->input->post('cantidad')[$key],
                    'tbl_catalogo_idtbl_catalogo' => $this->input->post('producto-catalogo')[$key],
                    'numero_serie' => $this->input->post('producto-serie')[$key],
                    'numero_interno' => $this->input->post('producto-interno')[$key]
                );
                } else {
                    $data = array(
                        'tbl_almacen_movimientos_idtbl_almacen_movimientos' => $insert_id,
                        'cantidad' => $this->input->post('cantidad')[$key],
                        'tbl_catalogo_idtbl_catalogo' => $this->input->post('producto-catalogo')[$key]
                    );
                }
                $this->db->insert('dtl_almacen_movimientos', $data);
            }
        }
    }else{
		$insert_id = $this->input->post('id_movimiento');
		foreach ($this->input->post('producto') as $key => $value) {
            if ($value > 0) {
                if ($this->session->userdata('tipo')==1) {
                    if ($this->input->post('categoria')[$key]=='HAC') {
                        $this->db->set('existencias', 'existencias-' . $this->input->post('cantidad')[$key], false);
                        $this->db->set('estatus', 'traspaso');
                        $this->db->where('iddtl_almacen', $this->input->post('producto')[$key]);
                        $result = $this->db->update('dtl_almacen');
                    } else {
                        $this->db->set('existencias', 'existencias-' . $this->input->post('cantidad')[$key], false);
                        $this->db->where('iddtl_almacen', $this->input->post('producto')[$key]);
                        $result = $this->db->update('dtl_almacen');
                    }
                } else {
                    $this->db->set('existencias', 'existencias-' . $this->input->post('cantidad')[$key], false);
                    $this->db->where('iddtl_almacen', $this->input->post('producto')[$key]);
                    $result = $this->db->update('dtl_almacen');
                }
                if ($this->session->userdata('tipo')==1) {
                    $this->db->where('tbl_almacenes_idtbl_almacenes', $this->input->post('almacen_destino'));
                    $this->db->where('tbl_catalogo_idtbl_catalogo', $this->input->post('producto-catalogo')[$key]);
                    $this->db->where('numero_interno', $this->input->post('producto-interno')[$key]);
                    $q = $this->db->get('dtl_almacen');
                    if ($q->num_rows() > 0) {
                        $this->db->set('existencias', 'existencias+' . $this->input->post('cantidad')[$key], false);
                        $this->db->where('tbl_almacenes_idtbl_almacenes', $this->input->post('almacen_destino'));
						$this->db->where('estatus', 'almacen');
                        $this->db->where('tbl_catalogo_idtbl_catalogo', $this->input->post('producto-catalogo')[$key]);
                        $this->db->update('dtl_almacen');
                    } else {
                        $data = array(
                            'tbl_almacenes_idtbl_almacenes' => $this->input->post('almacen_destino'),
                            'tbl_catalogo_idtbl_catalogo' => $this->input->post('producto-catalogo')[$key],
                            'numero_serie' => $this->input->post('producto-serie')[$key],
                            'numero_interno' => $this->input->post('producto-interno')[$key],
                            'estatus' => 'almacen',
                            'existencias' => $this->input->post('cantidad')[$key]
                        );
                        $this->db->insert('dtl_almacen', $data);
                    }
                } else {
                    $this->db->where('tbl_almacenes_idtbl_almacenes', $this->input->post('almacen_destino'));					
                    $this->db->where('tbl_catalogo_idtbl_catalogo', $this->input->post('producto-catalogo')[$key]);
                    $q = $this->db->get('dtl_almacen');
                    if ($q->num_rows() > 0) {
                        $this->db->set('existencias', 'existencias+' . $this->input->post('cantidad')[$key], false);
                        $this->db->where('tbl_almacenes_idtbl_almacenes', $this->input->post('almacen_destino'));
						$this->db->where('estatus', 'almacen');
                        $this->db->where('tbl_catalogo_idtbl_catalogo', $this->input->post('producto-catalogo')[$key]);
                        $this->db->update('dtl_almacen');
                    } else {
                        $data = array(
                            'tbl_almacenes_idtbl_almacenes' => $this->input->post('almacen_destino'),
                            'tbl_catalogo_idtbl_catalogo' => $this->input->post('producto-catalogo')[$key],
                            'numero_serie' => $this->input->post('producto-serie')[$key],
                            'numero_interno' => $this->input->post('producto-interno')[$key],
                            'estatus' => 'almacen',
                            'existencias' => $this->input->post('cantidad')[$key]
                        );
                        $this->db->insert('dtl_almacen', $data);
                    }
                }
                $data = array(
                    'tbl_almacen_movimientos_idtbl_almacen_movimientos' => $insert_id,
                    'cantidad' => $this->input->post('cantidad')[$key],
                    'tbl_catalogo_idtbl_catalogo' => $this->input->post('producto-catalogo')[$key],
                );
                $this->db->insert('dtl_almacen_movimientos', $data);
                if ($this->session->userdata('tipo')==1) {
                    $data = array(
                    'tbl_almacen_movimientos_idtbl_almacen_movimientos' => $insert_id,
                    'cantidad' => $this->input->post('cantidad')[$key],
                    'tbl_catalogo_idtbl_catalogo' => $this->input->post('producto-catalogo')[$key],
                    'numero_serie' => $this->input->post('producto-serie')[$key],
                    'numero_interno' => $this->input->post('producto-interno')[$key]
                );
                } else {
                    $data = array(
                        'tbl_almacen_movimientos_idtbl_almacen_movimientos' => $insert_id,
                        'cantidad' => $this->input->post('cantidad')[$key],
                        'tbl_catalogo_idtbl_catalogo' => $this->input->post('producto-catalogo')[$key]
                    );
                }
                $this->db->insert('dtl_almacen_movimientos', $data);
            }
        }
	}
		if ($this->db->trans_status() === FALSE) {
			$this->db->trans_rollback();
			return false;
		} else {
			$this->db->trans_commit();
			return true;
		}
	}

	public function devolucion() {
		$this->db->trans_begin();
		$total = $this->input->post('devolucion') + $this->input->post('justificacion') + $this->input->post('robado') + $this->input->post('danado') + $this->input->post('robadobaja');
		//$almacen = $this->input->post("almacen");
		$this->db->from("dtl_asignacion");
		$this->db->join("tbl_almacen_movimientos", "tbl_almacen_movimientos.idtbl_almacen_movimientos = dtl_asignacion.tbl_almacen_movimientos_idtbl_almacen_movimientos");
		$query = $this->db->where('iddtl_asignacion', $this->input->post('asignacion'));
		$result = $query = $this->db->get()->result()[0];
		$almacen = null;

		if ($this->input->post('devolucion') > 0) {
			if ($this->session->userdata('tipo') == 1) {
				$data = array(
					'fecha' => date('Y-m-d H:i:s'),
					'tbl_usuarios_idtbl_usuarios' => $this->id_usuario($this->input->post('uid_usuario')),
					'tbl_users_idtbl_users' => $this->session->userdata('id'),
					'tbl_almacenes_idtbl_almacenes' => ID_ALMACEN_ALTO_COSTO,
					'uid' => uniqid(),
					'tipo' => 'devolucion',
					'estatus' => 0,
					'tipo_movimiento' => NULL,
					'folio' => $result->folio,
					'tbl_proyectos_idtbl_proyectos' => $result->tbl_proyectos_idtbl_proyectos,
					'tbl_segmentos_proyecto_idtbl_segmentos_proyecto' => $result->tbl_segmentos_proyecto_idtbl_segmentos_proyecto
				);
				$almacen = ID_ALMACEN_ALTO_COSTO;
			} elseif (($this->session->userdata('tipo') == 4 || ($this->session->userdata('encargado_almacen') != null && $this->session->userdata('encargado_almacen') != '')) && $this->session->userdata('id')!=50) {
				$data = array(
					'fecha' => date('Y-m-d H:i:s'),
					'tbl_usuarios_idtbl_usuarios' => $this->id_usuario($this->input->post('uid_usuario')),
					'tbl_users_idtbl_users' => $this->session->userdata('id'),
					'tbl_almacenes_idtbl_almacenes' => $this->input->post("almacen"),
					'uid' => uniqid(),
					'tipo' => 'devolucion-almacen',
					'estatus' => 1,
					'tipo_movimiento' => NULL,
					'folio' => $result->folio,
					'tbl_proyectos_idtbl_proyectos' => $result->tbl_proyectos_idtbl_proyectos,
					'tbl_segmentos_proyecto_idtbl_segmentos_proyecto' => $result->tbl_segmentos_proyecto_idtbl_segmentos_proyecto
				);
				$almacen = $this->input->post("almacen");
			} elseif ($this->session->userdata('tipo') == 4 && $this->session->userdata('id')==50) {
				$data = array(
					'fecha' => date('Y-m-d H:i:s'),
					'tbl_usuarios_idtbl_usuarios' => $this->id_usuario($this->input->post('uid_usuario')),
					'tbl_users_idtbl_users' => $this->session->userdata('id'),
					'tbl_almacenes_idtbl_almacenes' => '16',
					'uid' => uniqid(),
					'tipo' => 'devolucion',
					'estatus' => 0,
					'tipo_movimiento' => NULL,
					'folio' => $result->folio,
					'tbl_proyectos_idtbl_proyectos' => $result->tbl_proyectos_idtbl_proyectos,
					'tbl_segmentos_proyecto_idtbl_segmentos_proyecto' => $result->tbl_segmentos_proyecto_idtbl_segmentos_proyecto
				);
				$almacen = '16';
			} elseif ($this->session->userdata('tipo') == 14 ) {
				$data = array(
					'fecha' => date('Y-m-d H:i:s'),
					'tbl_usuarios_idtbl_usuarios' => $this->id_usuario($this->input->post('uid_usuario')),
					'tbl_users_idtbl_users' => $this->session->userdata('id'),
					'tbl_almacenes_idtbl_almacenes' => '23',
					'uid' => uniqid(),
					'tipo' => 'devolucion',
					'estatus' => 0,
					'tipo_movimiento' => NULL,
					'folio' => $result->folio,
					'tbl_proyectos_idtbl_proyectos' => $result->tbl_proyectos_idtbl_proyectos,
					'tbl_segmentos_proyecto_idtbl_segmentos_proyecto' => $result->tbl_segmentos_proyecto_idtbl_segmentos_proyecto
				);
				$almacen = '23';
			} elseif($this->session->userdata('tipo')==10 ){
				$data = array(
					'fecha' => date('Y-m-d H:i:s'),
					'tbl_usuarios_idtbl_usuarios' => $this->id_usuario($this->input->post('uid_usuario')),
					'tbl_users_idtbl_users' => $this->session->userdata('id'),
					'tbl_almacenes_idtbl_almacenes' => '1',
					'uid' => uniqid(),
					'tipo' => 'devolucion',
					'estatus' => 0,
					'tipo_movimiento' => NULL,
					'folio' => $result->folio,
					'tbl_proyectos_idtbl_proyectos' => $result->tbl_proyectos_idtbl_proyectos,
					'tbl_segmentos_proyecto_idtbl_segmentos_proyecto' => $result->tbl_segmentos_proyecto_idtbl_segmentos_proyecto,
					'seguridad_e_higiene' => 1
				);
				$almacen = '1';
			} elseif ($this->session->userdata('tipo') == 3) {
				$data = array(
					'fecha' => date('Y-m-d H:i:s'),
					'tbl_usuarios_idtbl_usuarios' => $this->id_usuario($this->input->post('uid_usuario')),
					'tbl_users_idtbl_users' => $this->session->userdata('id'),
					'tbl_almacenes_idtbl_almacenes' => ID_ALMACEN_REFACCIONES_CONTROL_VEHICULAR,
					'uid' => uniqid(),
					'tipo' => 'devolucion',
					'estatus' => 0,
					'tipo_movimiento' => NULL,
					'folio' => $result->folio,
					'tbl_proyectos_idtbl_proyectos' => $result->tbl_proyectos_idtbl_proyectos,
					'tbl_segmentos_proyecto_idtbl_segmentos_proyecto' => $result->tbl_segmentos_proyecto_idtbl_segmentos_proyecto
				);
				$almacen = ID_ALMACEN_REFACCIONES_CONTROL_VEHICULAR;
			} elseif ($this->session->userdata('tipo') == 2) {
				$data = array(
					'fecha' => date('Y-m-d H:i:s'),
					'tbl_usuarios_idtbl_usuarios' => $this->id_usuario($this->input->post('uid_usuario')),
					'tbl_users_idtbl_users' => $this->session->userdata('id'),
					'tbl_almacenes_idtbl_almacenes' => ID_ALMACEN_SISTEMAS,
					'uid' => uniqid(),
					'tipo' => 'devolucion',
					'estatus' => 0,
					'tipo_movimiento' => NULL,
					'folio' => $result->folio,
					'tbl_proyectos_idtbl_proyectos' => $result->tbl_proyectos_idtbl_proyectos,
					'tbl_segmentos_proyecto_idtbl_segmentos_proyecto' => $result->tbl_segmentos_proyecto_idtbl_segmentos_proyecto
				);
				$almacen = ID_ALMACEN_SISTEMAS;
			}
			//Se registra la entrada
			$this->db->insert('tbl_almacen_movimientos', $data);
			$last = $this->db->insert_id();
			$data = array(
				'dtl_almacen_iddtl_almacen' => $this->input->post('id'),
				'tbl_usuarios_idtbl_usuarios' => $this->id_usuario($this->input->post('uid_usuario')),
				'tbl_almacen_movimientos_idtbl_almacen_movimientos' => $last,
				'estatus_asignacion' => 'finalizada',
				'cantidad' => number_format(($this->input->post('devolucion') * (-1)), 4, '.', ''),
				'estado_entrega' => 'almacen',
				'entregado' => $this->input->post('devolucion')
			);
			$this->db->insert('dtl_asignacion', $data);

			if ($total == $this->input->post('devinicial')) {
				$data = array(
					'estatus_asignacion' => 'finalizada',
					'fecha_finalizacion' => date('Y-m-d H:i:s'),
					'estado_entrega' => 'almacen'
					//'entregado' => $this->input->post('devolucion'
				);

				$this->db->set($data);
				$this->db->set('cantidad',  'cantidad-' . $this->input->post('devolucion'), FALSE);
				$this->db->set('entregado', 'entregado+' . $this->input->post('devolucion'), FALSE);
				$this->db->where('iddtl_asignacion', $this->input->post('asignacion'));
				$this->db->update('dtl_asignacion');
			} else {
				//$query = $this->db->query("SELECT cantidad as total FROM `dtl_asignacion` WHERE `iddtl_asignacion` =" . $this->input->post('asignacion'));
				$this->db->set('cantidad',  'cantidad-' . $this->input->post('devolucion'), FALSE);
				$this->db->set('entregado', 'entregado+' . $this->input->post('devolucion'), FALSE);
				$this->db->where('iddtl_asignacion', $this->input->post('asignacion'));
				$this->db->update('dtl_asignacion');
			}

			if($this->session->userdata('id')==50){
				$estatus = $this->db->query("SELECT * FROM `dtl_almacen` WHERE `tbl_catalogo_idtbl_catalogo` =" . $this->input->post('producto') . " AND estatus='almacen' AND tbl_almacenes_idtbl_almacenes=16");
			}
			elseif($this->session->userdata('tipo')==14){
				$estatus = $this->db->query("SELECT * FROM `dtl_almacen` WHERE `tbl_catalogo_idtbl_catalogo` =" . $this->input->post('producto') . " AND estatus='almacen' AND tbl_almacenes_idtbl_almacenes=23");
			}
			elseif($this->session->userdata('tipo')==10){
				$estatus = $this->db->query("SELECT * FROM dtl_almacen JOIN tbl_catalogo ON tbl_catalogo.idtbl_catalogo = dtl_almacen.tbl_catalogo_idtbl_catalogo WHERE dtl_almacen.tbl_catalogo_idtbl_catalogo =" . $this->input->post('producto') . " AND dtl_almacen.estatus='almacen' AND dtl_almacen.tbl_almacenes_idtbl_almacenes=1 AND tbl_catalogo.tipo=1");
			}
			elseif($this->session->userdata('tipo')==3){
				$estatus = $this->db->query("SELECT * FROM `dtl_almacen` WHERE `tbl_catalogo_idtbl_catalogo` =" . $this->input->post('producto') . " AND estatus='almacen' AND tbl_almacenes_idtbl_almacenes=" . ID_ALMACEN_REFACCIONES_CONTROL_VEHICULAR);
			}
			elseif($this->session->userdata('tipo')==2){
				$estatus = $this->db->query("SELECT * FROM `dtl_almacen` WHERE `tbl_catalogo_idtbl_catalogo` =" . $this->input->post('producto') . " AND estatus='almacen' AND tbl_almacenes_idtbl_almacenes=" . ID_ALMACEN_SISTEMAS);
			}
			elseif($this->session->userdata('tipo')==1){
				$estatus = $this->db->query("SELECT * FROM `dtl_almacen` WHERE `tbl_catalogo_idtbl_catalogo` =" . $this->input->post('producto') . " AND estatus='almacen' AND estado = 'usado' AND tbl_almacenes_idtbl_almacenes=" . ID_ALMACEN_ALTO_COSTO);
			}elseif(($this->session->userdata('tipo') == 4 || ($this->session->userdata('encargado_almacen') != null && $this->session->userdata('encargado_almacen') != '')) && $this->session->userdata('id') != 50){
				$estatus = $this->db->query("SELECT * FROM `dtl_almacen` WHERE `tbl_catalogo_idtbl_catalogo` =" . $this->input->post('producto') . " AND estatus='almacen' AND tbl_almacenes_idtbl_almacenes=" . $almacen);
			}
			$catidad = $this->input->post('devolucion');

			if ($estatus->num_rows() > 0) {
				$producto = $this->input->post('producto');
				if($this->session->userdata('tipo') == 10){
					$this->db->query("UPDATE dtl_almacen JOIN tbl_catalogo ON tbl_catalogo.idtbl_catalogo = dtl_almacen.tbl_catalogo_idtbl_catalogo SET dtl_almacen.existencias = dtl_almacen.existencias+$catidad WHERE dtl_almacen.tbl_catalogo_idtbl_catalogo = $producto AND dtl_almacen.tbl_almacenes_idtbl_almacenes = $almacen AND dtl_almacen.estatus = 'almacen'");
				}elseif($this->session->userdata('tipo') == 1){
					$this->db->query("UPDATE dtl_almacen JOIN tbl_catalogo ON tbl_catalogo.idtbl_catalogo = dtl_almacen.tbl_catalogo_idtbl_catalogo SET dtl_almacen.existencias = dtl_almacen.existencias+$catidad WHERE dtl_almacen.tbl_catalogo_idtbl_catalogo = $producto AND dtl_almacen.tbl_almacenes_idtbl_almacenes = $almacen AND dtl_almacen.estatus = 'almacen' AND dtl_almacen.estado='usado'");
				}else{
					$this->db->query("UPDATE dtl_almacen JOIN tbl_catalogo ON tbl_catalogo.idtbl_catalogo = dtl_almacen.tbl_catalogo_idtbl_catalogo SET dtl_almacen.existencias = dtl_almacen.existencias+$catidad WHERE dtl_almacen.tbl_catalogo_idtbl_catalogo = $producto AND dtl_almacen.tbl_almacenes_idtbl_almacenes = $almacen AND dtl_almacen.estatus = 'almacen'");
				}
			} else {
				if ($this->session->userdata('tipo') == 1) {
					$dataAlmacen = array(
						'tbl_almacenes_idtbl_almacenes' => ID_ALMACEN_ALTO_COSTO,
						'tbl_catalogo_idtbl_catalogo' => $this->input->post('producto'),
						'existencias' => $catidad,
						'estatus' => 'almacen',
						'estado' => 'usado'
					);
				}elseif (($this->session->userdata('tipo') == 4 || ($this->session->userdata('encargado_almacen') != null && $this->session->userdata('encargado_almacen') != '')) && $this->session->userdata('id')!=50) {
					$dataAlmacen = array(
						'tbl_almacenes_idtbl_almacenes' => $this->input->post("almacen"),
						'tbl_catalogo_idtbl_catalogo' => $this->input->post('producto'),
						'existencias' => $catidad,
						'estatus' => 'almacen'
					);
				} elseif ($this->session->userdata('tipo') == 4 && $this->session->userdata('id')==50) {
					$dataAlmacen = array(
						'tbl_almacenes_idtbl_almacenes' => '16',
						'tbl_catalogo_idtbl_catalogo' => $this->input->post('producto'),
						'existencias' => $catidad,
						'estatus' => 'almacen'
					);
				} elseif ($this->session->userdata('tipo') == 14) {
					$dataAlmacen = array(
						'tbl_almacenes_idtbl_almacenes' => '23',
						'tbl_catalogo_idtbl_catalogo' => $this->input->post('producto'),
						'existencias' => $catidad,
						'estatus' => 'almacen'
					);
				} elseif($this->session->userdata('tipo')==10){
					$dataAlmacen = array(
						'tbl_almacenes_idtbl_almacenes' => '1',
						'tbl_catalogo_idtbl_catalogo' => $this->input->post('producto'),
						'existencias' => $catidad,
						'estatus' => 'almacen'
					);
				} elseif ($this->session->userdata('tipo') == 3) {
					$dataAlmacen = array(
						'tbl_almacenes_idtbl_almacenes' => ID_ALMACEN_REFACCIONES_CONTROL_VEHICULAR,
						'tbl_catalogo_idtbl_catalogo' => $this->input->post('producto'),
						'existencias' => $catidad,
						'estatus' => 'almacen'
					);
				} elseif ($this->session->userdata('tipo') == 2) {
					$dataAlmacen = array(
						'tbl_almacenes_idtbl_almacenes' => ID_ALMACEN_SISTEMAS,
						'tbl_catalogo_idtbl_catalogo' => $this->input->post('producto'),
						'existencias' => $catidad,
						'estatus' => 'almacen'
					);
				}
				$this->db->insert('dtl_almacen', $dataAlmacen);
			}
		}

		if ($this->input->post('justificacion') > 0) {
			if ($this->session->userdata('tipo') == 1) {
				$data = array(
					'fecha' => date('Y-m-d H:i:s'),
					'tbl_usuarios_idtbl_usuarios' => $this->id_usuario($this->input->post('uid_usuario')),
					'tbl_users_idtbl_users' => $this->session->userdata('id'),
					'tbl_almacenes_idtbl_almacenes' => ID_ALMACEN_ALTO_COSTO,
					'uid' => uniqid(),
					'tipo' => 'justificacion',
					'estatus' => 0,
					'tipo_movimiento' => NULL,
					'folio' => $result->folio,
					'tbl_proyectos_idtbl_proyectos' => $result->tbl_proyectos_idtbl_proyectos,
					'tbl_segmentos_proyecto_idtbl_segmentos_proyecto' => $result->tbl_segmentos_proyecto_idtbl_segmentos_proyecto
				);
				$almacen = ID_ALMACEN_ALTO_COSTO;
			} elseif (($this->session->userdata('tipo') == 4 || ($this->session->userdata('encargado_almacen') != null && $this->session->userdata('encargado_almacen') != '')) && $this->session->userdata('id')!=50) {
				$data = array(
					'fecha' => date('Y-m-d H:i:s'),
					'tbl_usuarios_idtbl_usuarios' => $this->id_usuario($this->input->post('uid_usuario')),
					'tbl_users_idtbl_users' => $this->session->userdata('id'),
					'tbl_almacenes_idtbl_almacenes' => $this->input->post("almacen"),
					'uid' => uniqid(),
					'tipo' => 'devolucion-almacen',
					'estatus' => 1,
					'tipo_movimiento' => NULL,
					'folio' => $result->folio,
					'tbl_proyectos_idtbl_proyectos' => $result->tbl_proyectos_idtbl_proyectos,
					'tbl_segmentos_proyecto_idtbl_segmentos_proyecto' => $result->tbl_segmentos_proyecto_idtbl_segmentos_proyecto
				);
				$almacen = $this->input->post("almacen");
			} elseif ($this->session->userdata('tipo') == 4 && $this->session->userdata('id')==50) {
				$data = array(
					'fecha' => date('Y-m-d H:i:s'),
					'tbl_usuarios_idtbl_usuarios' => $this->id_usuario($this->input->post('uid_usuario')),
					'tbl_users_idtbl_users' => $this->session->userdata('id'),
					'tbl_almacenes_idtbl_almacenes' => '16',
					'uid' => uniqid(),
					'tipo' => 'justificacion',
					'estatus' => 0,
					'tipo_movimiento' => NULL,
					'folio' => $result->folio,
					'tbl_proyectos_idtbl_proyectos' => $result->tbl_proyectos_idtbl_proyectos,
					'tbl_segmentos_proyecto_idtbl_segmentos_proyecto' => $result->tbl_segmentos_proyecto_idtbl_segmentos_proyecto
				);
				$almacen = '16';
			} elseif ($this->session->userdata('tipo') == 14 ) {
				$data = array(
					'fecha' => date('Y-m-d H:i:s'),
					'tbl_usuarios_idtbl_usuarios' => $this->id_usuario($this->input->post('uid_usuario')),
					'tbl_users_idtbl_users' => $this->session->userdata('id'),
					'tbl_almacenes_idtbl_almacenes' => '23',
					'uid' => uniqid(),
					'tipo' => 'justificacion',
					'estatus' => 0,
					'tipo_movimiento' => NULL,
					'folio' => $result->folio,
					'tbl_proyectos_idtbl_proyectos' => $result->tbl_proyectos_idtbl_proyectos,
					'tbl_segmentos_proyecto_idtbl_segmentos_proyecto' => $result->tbl_segmentos_proyecto_idtbl_segmentos_proyecto
				);
				$almacen = '23';
			} elseif($this->session->userdata('tipo')==10){
				$data = array(
					'fecha' => date('Y-m-d H:i:s'),
					'tbl_usuarios_idtbl_usuarios' => $this->id_usuario($this->input->post('uid_usuario')),
					'tbl_users_idtbl_users' => $this->session->userdata('id'),
					'tbl_almacenes_idtbl_almacenes' => '1',
					'uid' => uniqid(),
					'tipo' => 'justificacion',
					'estatus' => 0,
					'tipo_movimiento' => NULL,
					'folio' => $result->folio,
					'tbl_proyectos_idtbl_proyectos' => $result->tbl_proyectos_idtbl_proyectos,
					'tbl_segmentos_proyecto_idtbl_segmentos_proyecto' => $result->tbl_segmentos_proyecto_idtbl_segmentos_proyecto,
					'seguridad_e_higiene' => 1
				);
				$almacen = '1';
			} elseif ($this->session->userdata('tipo') == 3) {
				$data = array(
					'fecha' => date('Y-m-d H:i:s'),
					'tbl_usuarios_idtbl_usuarios' => $this->id_usuario($this->input->post('uid_usuario')),
					'tbl_users_idtbl_users' => $this->session->userdata('id'),
					'tbl_almacenes_idtbl_almacenes' => ID_ALMACEN_REFACCIONES_CONTROL_VEHICULAR,
					'uid' => uniqid(),
					'tipo' => 'justificacion',
					'estatus' => 0,
					'tipo_movimiento' => NULL,
					'folio' => $result->folio,
					'tbl_proyectos_idtbl_proyectos' => $result->tbl_proyectos_idtbl_proyectos,
					'tbl_segmentos_proyecto_idtbl_segmentos_proyecto' => $result->tbl_segmentos_proyecto_idtbl_segmentos_proyecto
				);
				$almacen = ID_ALMACEN_REFACCIONES_CONTROL_VEHICULAR;
			} elseif ($this->session->userdata('tipo') == 2) {
				$data = array(
					'fecha' => date('Y-m-d H:i:s'),
					'tbl_usuarios_idtbl_usuarios' => $this->id_usuario($this->input->post('uid_usuario')),
					'tbl_users_idtbl_users' => $this->session->userdata('id'),
					'tbl_almacenes_idtbl_almacenes' => ID_ALMACEN_SISTEMAS,
					'uid' => uniqid(),
					'tipo' => 'justificacion',
					'estatus' => 0,
					'tipo_movimiento' => NULL,
					'folio' => $result->folio,
					'tbl_proyectos_idtbl_proyectos' => $result->tbl_proyectos_idtbl_proyectos,
					'tbl_segmentos_proyecto_idtbl_segmentos_proyecto' => $result->tbl_segmentos_proyecto_idtbl_segmentos_proyecto
				);
				$almacen = ID_ALMACEN_SISTEMAS;
			}

			//Se registra la entrada
			$this->db->insert('tbl_almacen_movimientos', $data);
			$last = $this->db->insert_id();
			$data = array(
				'dtl_almacen_iddtl_almacen' => $this->input->post('id'),
				'tbl_usuarios_idtbl_usuarios' => $this->id_usuario($this->input->post('uid_usuario')),
				'tbl_almacen_movimientos_idtbl_almacen_movimientos' => $last,
				'estatus_asignacion' => 'finalizada',
				'cantidad' => ($this->input->post('justificacion') * (-1)),
				'estado_entrega' => 'justificacion',
				'entregado' => $this->input->post('justificacion')
			);
			$this->db->insert('dtl_asignacion', $data);


			if ($total == $this->input->post('devinicial')) {
				$data = array(
					'estatus_asignacion' => 'finalizada',
					'fecha_finalizacion' => date('Y-m-d H:i:s'),
					'estado_entrega' => 'justificacion'
					//'entregado' => $this->input->post('justificacion')
				);

				$this->db->set($data);
				$this->db->set('cantidad',  'cantidad-' . $this->input->post('justificacion'), FALSE);
				$this->db->set('entregado', 'entregado+' . $this->input->post('justificacion'), FALSE);
				$this->db->where('iddtl_asignacion', $this->input->post('asignacion'));
				$this->db->update('dtl_asignacion');
			} else {
				//$query = $this->db->query("SELECT cantidad as total FROM `dtl_asignacion` WHERE `iddtl_asignacion` =" . $this->input->post('asignacion'));
				//$this->db->set('cantidad', $query->result()[0]->total - $this->input->post('justificacion'));
				$this->db->set('cantidad',  'cantidad-' . $this->input->post('justificacion'), FALSE);
				$this->db->set('entregado', 'entregado+' . $this->input->post('justificacion'), FALSE);
				$this->db->where('iddtl_asignacion', $this->input->post('asignacion'));
				$this->db->update('dtl_asignacion');
			}
			if($this->session->userdata('id')==50){
				$estatus = $this->db->query("SELECT * FROM `dtl_almacen` WHERE `tbl_catalogo_idtbl_catalogo` =" . $this->input->post('producto') . " AND estatus='justificacion' AND tbl_almacenes_idtbl_almacenes=16");
			}
			elseif($this->session->userdata('tipo')==14){
				$estatus = $this->db->query("SELECT * FROM `dtl_almacen` WHERE `tbl_catalogo_idtbl_catalogo` =" . $this->input->post('producto') . " AND estatus='justificacion' AND tbl_almacenes_idtbl_almacenes=23");
			}
			elseif($this->session->userdata('tipo')==10){
				$estatus = $this->db->query("SELECT * FROM dtl_almacen JOIN tbl_catalogo ON tbl_catalogo.idtbl_catalogo = dtl_almacen.tbl_catalogo_idtbl_catalogo WHERE dtl_almacen.tbl_catalogo_idtbl_catalogo =" . $this->input->post('producto') . " AND dtl_almacen.estatus='justificacion' AND dtl_almacen.tbl_almacenes_idtbl_almacenes=1 AND tbl_catalogo.tipo=1");
			}
			elseif($this->session->userdata('tipo')==3){
				$estatus = $this->db->query("SELECT * FROM `dtl_almacen` WHERE `tbl_catalogo_idtbl_catalogo` =" . $this->input->post('producto') . " AND estatus='justificacion' AND tbl_almacenes_idtbl_almacenes=" . ID_ALMACEN_REFACCIONES_CONTROL_VEHICULAR);
			}
			elseif($this->session->userdata('tipo')==2){
				$estatus = $this->db->query("SELECT * FROM `dtl_almacen` WHERE `tbl_catalogo_idtbl_catalogo` =" . $this->input->post('producto') . " AND estatus='justificacion' AND tbl_almacenes_idtbl_almacenes=" . ID_ALMACEN_SISTEMAS);
			}elseif($this->session->userdata('tipo')==1){
				$estatus = $this->db->query("SELECT * FROM `dtl_almacen` WHERE `tbl_catalogo_idtbl_catalogo` =" . $this->input->post('producto') . " AND estatus='justificacion' AND tbl_almacenes_idtbl_almacenes=" . ID_ALMACEN_ALTO_COSTO);
			} elseif(($this->session->userdata('tipo') == 4 || ($this->session->userdata('encargado_almacen') != null && $this->session->userdata('encargado_almacen') != '')) && $this->session->userdata('id')!=50){
				$estatus = $this->db->query("SELECT * FROM `dtl_almacen` WHERE `tbl_catalogo_idtbl_catalogo` =" . $this->input->post('producto') . " AND estatus='justificacion' AND tbl_almacenes_idtbl_almacenes=" . $almacen);
			}
			$catidad = $this->input->post('justificacion');
			
			if ($estatus->num_rows() > 0) {
				/*$this->db->set('existencias', 'existencias+' . $catidad, FALSE);
				$this->db->where('tbl_catalogo_idtbl_catalogo', $this->input->post('producto'));
				$this->db->where('tbl_almacenes_idtbl_almacenes', $almacen);
				$this->db->where('estatus', 'justificacion');
				$this->db->update('dtl_almacen');*/
				$producto = $this->input->post('producto');
				if($this->session->userdata('tipo') == 10){
					$this->db->query("UPDATE dtl_almacen JOIN tbl_catalogo ON tbl_catalogo.idtbl_catalogo = dtl_almacen.tbl_catalogo_idtbl_catalogo SET dtl_almacen.existencias = dtl_almacen.existencias+$catidad WHERE dtl_almacen.tbl_catalogo_idtbl_catalogo = $producto AND dtl_almacen.tbl_almacenes_idtbl_almacenes = $almacen AND dtl_almacen.estatus = 'justificacion'");
				}else{
					$this->db->query("UPDATE dtl_almacen JOIN tbl_catalogo ON tbl_catalogo.idtbl_catalogo = dtl_almacen.tbl_catalogo_idtbl_catalogo SET dtl_almacen.existencias = dtl_almacen.existencias+$catidad WHERE dtl_almacen.tbl_catalogo_idtbl_catalogo = $producto AND dtl_almacen.tbl_almacenes_idtbl_almacenes = $almacen AND dtl_almacen.estatus = 'justificacion'");
				}
			} else {
				if ($this->session->userdata('tipo') == 1) {
					$dataAlmacen = array(
						'tbl_almacenes_idtbl_almacenes' => ID_ALMACEN_ALTO_COSTO,
						'tbl_catalogo_idtbl_catalogo' => $this->input->post('producto'),
						'existencias' => $catidad,
						'estatus' => 'justificacion'
					);
				} elseif (($this->session->userdata('tipo') == 4 || ($this->session->userdata('encargado_almacen') != null && $this->session->userdata('encargado_almacen') != '')) && $this->session->userdata('id')!=50) {
					$dataAlmacen = array(
						'tbl_almacenes_idtbl_almacenes' => $this->input->post("almacen"),
						'tbl_catalogo_idtbl_catalogo' => $this->input->post('producto'),
						'existencias' => $catidad,
						'estatus' => 'justificacion'
					);
				} elseif ($this->session->userdata('tipo') == 4 && $this->session->userdata('id')==50) {
					$dataAlmacen = array(
						'tbl_almacenes_idtbl_almacenes' => '16',
						'tbl_catalogo_idtbl_catalogo' => $this->input->post('producto'),
						'existencias' => $catidad,
						'estatus' => 'justificacion'
					);
				} elseif ($this->session->userdata('tipo') == 14 ) {
					$dataAlmacen = array(
						'tbl_almacenes_idtbl_almacenes' => '23',
						'tbl_catalogo_idtbl_catalogo' => $this->input->post('producto'),
						'existencias' => $catidad,
						'estatus' => 'justificacion'
					);
				} elseif($this->session->userdata('tipo')==10 ){
					$dataAlmacen = array(
						'tbl_almacenes_idtbl_almacenes' => '1',
						'tbl_catalogo_idtbl_catalogo' => $this->input->post('producto'),
						'existencias' => $catidad,
						'estatus' => 'justificacion'
					);
				} elseif ($this->session->userdata('tipo') == 3) {
					$dataAlmacen = array(
						'tbl_almacenes_idtbl_almacenes' => ID_ALMACEN_REFACCIONES_CONTROL_VEHICULAR,
						'tbl_catalogo_idtbl_catalogo' => $this->input->post('producto'),
						'existencias' => $catidad,
						'estatus' => 'justificacion'
					);
				} elseif ($this->session->userdata('tipo') == 2) {
					$dataAlmacen = array(
						'tbl_almacenes_idtbl_almacenes' => ID_ALMACEN_SISTEMAS,
						'tbl_catalogo_idtbl_catalogo' => $this->input->post('producto'),
						'existencias' => $catidad,
						'estatus' => 'justificacion'
					);
				}

				$this->db->insert('dtl_almacen', $dataAlmacen);
			}
		}

		if ($this->input->post('danado') > 0) {
			if ($this->session->userdata('tipo') == 1) {
				$data = array(
					'fecha' => date('Y-m-d H:i:s'),
					'tbl_usuarios_idtbl_usuarios' => $this->id_usuario($this->input->post('uid_usuario')),
					'tbl_users_idtbl_users' => $this->session->userdata('id'),
					'tbl_almacenes_idtbl_almacenes' => ID_ALMACEN_ALTO_COSTO,
					'uid' => uniqid(),
					'tipo' => 'devolucion',
					'estatus' => 0,
					'tipo_movimiento' => NULL,
					'folio' => $result->folio,
					'tbl_proyectos_idtbl_proyectos' => $result->tbl_proyectos_idtbl_proyectos,
					'tbl_segmentos_proyecto_idtbl_segmentos_proyecto' => $result->tbl_segmentos_proyecto_idtbl_segmentos_proyecto
				);
				$almacen = ID_ALMACEN_ALTO_COSTO;
			} elseif (($this->session->userdata('tipo') == 4 || ($this->session->userdata('encargado_almacen') != null && $this->session->userdata('encargado_almacen') != '')) && $this->session->userdata('id')!=50) {
				$data = array(
					'fecha' => date('Y-m-d H:i:s'),
					'tbl_usuarios_idtbl_usuarios' => $this->id_usuario($this->input->post('uid_usuario')),
					'tbl_users_idtbl_users' => $this->session->userdata('id'),
					'tbl_almacenes_idtbl_almacenes' => $this->input->post("almacen"),
					'uid' => uniqid(),
					'tipo' => 'devolucion-almacen',
					'estatus' => 1,
					'tipo_movimiento' => NULL,
					'folio' => $result->folio,
					'tbl_proyectos_idtbl_proyectos' => $result->tbl_proyectos_idtbl_proyectos,
					'tbl_segmentos_proyecto_idtbl_segmentos_proyecto' => $result->tbl_segmentos_proyecto_idtbl_segmentos_proyecto
				);
				$almacen = $this->input->post("almacen");
			} elseif ($this->session->userdata('tipo') == 4 && $this->session->userdata('id')==50) {
				$data = array(
					'fecha' => date('Y-m-d H:i:s'),
					'tbl_usuarios_idtbl_usuarios' => $this->id_usuario($this->input->post('uid_usuario')),
					'tbl_users_idtbl_users' => $this->session->userdata('id'),
					'tbl_almacenes_idtbl_almacenes' => '16',
					'uid' => uniqid(),
					'tipo' => 'devolucion',
					'estatus' => 0,
					'tipo_movimiento' => NULL,
					'folio' => $result->folio,
					'tbl_proyectos_idtbl_proyectos' => $result->tbl_proyectos_idtbl_proyectos,
					'tbl_segmentos_proyecto_idtbl_segmentos_proyecto' => $result->tbl_segmentos_proyecto_idtbl_segmentos_proyecto
				);
				$almacen = '16';
			} elseif ($this->session->userdata('tipo') == 14 ) {
				$data = array(
					'fecha' => date('Y-m-d H:i:s'),
					'tbl_usuarios_idtbl_usuarios' => $this->id_usuario($this->input->post('uid_usuario')),
					'tbl_users_idtbl_users' => $this->session->userdata('id'),
					'tbl_almacenes_idtbl_almacenes' => '23',
					'uid' => uniqid(),
					'tipo' => 'devolucion',
					'estatus' => 0,
					'tipo_movimiento' => NULL,
					'folio' => $result->folio,
					'tbl_proyectos_idtbl_proyectos' => $result->tbl_proyectos_idtbl_proyectos,
					'tbl_segmentos_proyecto_idtbl_segmentos_proyecto' => $result->tbl_segmentos_proyecto_idtbl_segmentos_proyecto
				);
				$almacen = '23';
			} elseif($this->session->userdata('tipo')==10){	
				$data = array(
					'fecha' => date('Y-m-d H:i:s'),
					'tbl_usuarios_idtbl_usuarios' => $this->id_usuario($this->input->post('uid_usuario')),
					'tbl_users_idtbl_users' => $this->session->userdata('id'),
					'tbl_almacenes_idtbl_almacenes' => '1',
					'uid' => uniqid(),
					'tipo' => 'devolucion',
					'estatus' => 0,
					'tipo_movimiento' => NULL,
					'folio' => $result->folio,
					'tbl_proyectos_idtbl_proyectos' => $result->tbl_proyectos_idtbl_proyectos,
					'tbl_segmentos_proyecto_idtbl_segmentos_proyecto' => $result->tbl_segmentos_proyecto_idtbl_segmentos_proyecto,
					'seguridad_e_higiene' => 1
				);
				$almacen = '1';
			} elseif ($this->session->userdata('tipo') == 3) {
				$data = array(
					'fecha' => date('Y-m-d H:i:s'),
					'tbl_usuarios_idtbl_usuarios' => $this->id_usuario($this->input->post('uid_usuario')),
					'tbl_users_idtbl_users' => $this->session->userdata('id'),
					'tbl_almacenes_idtbl_almacenes' => ID_ALMACEN_REFACCIONES_CONTROL_VEHICULAR,
					'uid' => uniqid(),
					'tipo' => 'devolucion',
					'estatus' => 0,
					'tipo_movimiento' => NULL,
					'folio' => $result->folio,
					'tbl_proyectos_idtbl_proyectos' => $result->tbl_proyectos_idtbl_proyectos,
					'tbl_segmentos_proyecto_idtbl_segmentos_proyecto' => $result->tbl_segmentos_proyecto_idtbl_segmentos_proyecto
				);
				$almacen = ID_ALMACEN_REFACCIONES_CONTROL_VEHICULAR;
			} elseif ($this->session->userdata('tipo') == 2) {
				$data = array(
					'fecha' => date('Y-m-d H:i:s'),
					'tbl_usuarios_idtbl_usuarios' => $this->id_usuario($this->input->post('uid_usuario')),
					'tbl_users_idtbl_users' => $this->session->userdata('id'),
					'tbl_almacenes_idtbl_almacenes' => ID_ALMACEN_SISTEMAS,
					'uid' => uniqid(),
					'tipo' => 'devolucion',
					'estatus' => 0,
					'tipo_movimiento' => NULL,
					'folio' => $result->folio,
					'tbl_proyectos_idtbl_proyectos' => $result->tbl_proyectos_idtbl_proyectos,
					'tbl_segmentos_proyecto_idtbl_segmentos_proyecto' => $result->tbl_segmentos_proyecto_idtbl_segmentos_proyecto
				);
				$almacen = ID_ALMACEN_SISTEMAS;
			}

			//Se registra la entrada
			$this->db->insert('tbl_almacen_movimientos', $data);
			$last = $this->db->insert_id();
			$data = array(
				'dtl_almacen_iddtl_almacen' => $this->input->post('id'),
				'tbl_usuarios_idtbl_usuarios' => $this->id_usuario($this->input->post('uid_usuario')),
				'tbl_almacen_movimientos_idtbl_almacen_movimientos' => $last,
				'estatus_asignacion' => 'finalizada',
				'cantidad' => ($this->input->post('danado') * (-1)),
				'estado_entrega' => 'dañado',
				'entregado' => $this->input->post('danado')
			);
			$this->db->insert('dtl_asignacion', $data);

			if ($total == $this->input->post('devinicial')) {
				$data = array(
					'estatus_asignacion' => 'finalizada',
					'fecha_finalizacion' => date('Y-m-d H:i:s'),
					'estado_entrega' => 'dañado'
					//'entregado' => $this->input->post('danado')
				);

				$this->db->set($data);
				$this->db->set('cantidad',  'cantidad-' . $this->input->post('danado'), FALSE);
				$this->db->set('entregado', 'entregado+' . $this->input->post('danado'), FALSE);
				$this->db->where('iddtl_asignacion', $this->input->post('asignacion'));
				$this->db->update('dtl_asignacion');
			} else {
				//$query = $this->db->query("SELECT cantidad as total FROM `dtl_asignacion` WHERE `iddtl_asignacion` =" . $this->input->post('asignacion'));
				//$this->db->set('cantidad', $query->result()[0]->total - $this->input->post('danado'));
				$this->db->set('cantidad',  'cantidad-' . $this->input->post('danado'), FALSE);
				$this->db->set('entregado', 'entregado+' . $this->input->post('danado'), FALSE);
				$this->db->where('iddtl_asignacion', $this->input->post('asignacion'));
				$this->db->update('dtl_asignacion');
			}
			if($this->session->userdata('id')==50){
				$estatus = $this->db->query("SELECT * FROM `dtl_almacen` WHERE `tbl_catalogo_idtbl_catalogo` =" . $this->input->post('producto') . " AND estatus='dañado' AND tbl_almacenes_idtbl_almacenes=16");
			} elseif($this->session->userdata('tipo')==14){
				$estatus = $this->db->query("SELECT * FROM `dtl_almacen` WHERE `tbl_catalogo_idtbl_catalogo` =" . $this->input->post('producto') . " AND estatus='dañado' AND tbl_almacenes_idtbl_almacenes=23");
			} elseif($this->session->userdata('tipo')==10){
				$estatus = $this->db->query("SELECT * FROM dtl_almacen JOIN tbl_catalogo ON tbl_catalogo.idtbl_catalogo = dtl_almacen.tbl_catalogo_idtbl_catalogo WHERE dtl_almacen.tbl_catalogo_idtbl_catalogo =" . $this->input->post('producto') . " AND dtl_almacen.estatus='dañado' AND dtl_almacen.tbl_almacenes_idtbl_almacenes=1 AND tbl_catalogo.tipo=1");
			} elseif($this->session->userdata('tipo')==3){
				$estatus = $this->db->query("SELECT * FROM `dtl_almacen` WHERE `tbl_catalogo_idtbl_catalogo` =" . $this->input->post('producto') . " AND estatus='dañado' AND tbl_almacenes_idtbl_almacenes=" . ID_ALMACEN_REFACCIONES_CONTROL_VEHICULAR);
			} elseif($this->session->userdata('tipo')==2){
				$estatus = $this->db->query("SELECT * FROM `dtl_almacen` WHERE `tbl_catalogo_idtbl_catalogo` =" . $this->input->post('producto') . " AND estatus='dañado' AND tbl_almacenes_idtbl_almacenes=" . ID_ALMACEN_SISTEMAS);
			} elseif($this->session->userdata('tipo')==1){
				$estatus = $this->db->query("SELECT * FROM `dtl_almacen` WHERE `tbl_catalogo_idtbl_catalogo` =" . $this->input->post('producto') . " AND estatus='dañado' AND tbl_almacenes_idtbl_almacenes=" . ID_ALMACEN_ALTO_COSTO);
			} elseif(($this->session->userdata('tipo') == 4 || ($this->session->userdata('encargado_almacen') != null && $this->session->userdata('encargado_almacen') != '')) && $this->session->userdata('id')!=50){
				$estatus = $this->db->query("SELECT * FROM `dtl_almacen` WHERE `tbl_catalogo_idtbl_catalogo` =" . $this->input->post('producto') . " AND estatus='dañado' AND tbl_almacenes_idtbl_almacenes=" . $almacen);
			}
			$catidad = $this->input->post('danado');

			if ($estatus->num_rows() > 0) {
				/*$this->db->set('existencias', 'existencias+' . $catidad, FALSE);
				$this->db->where('tbl_catalogo_idtbl_catalogo', $this->input->post('producto'));
				$this->db->where('tbl_almacenes_idtbl_almacenes', $almacen);
				$this->db->where('estatus', 'dañado');
				$this->db->update('dtl_almacen');*/
				$producto = $this->input->post('producto');
				if($this->session->userdata('tipo') == 10){
					$this->db->query("UPDATE dtl_almacen JOIN tbl_catalogo ON tbl_catalogo.idtbl_catalogo = dtl_almacen.tbl_catalogo_idtbl_catalogo SET dtl_almacen.existencias = dtl_almacen.existencias+$catidad WHERE dtl_almacen.tbl_catalogo_idtbl_catalogo = $producto AND dtl_almacen.tbl_almacenes_idtbl_almacenes = $almacen AND dtl_almacen.estatus = 'dañado'");
				}else{
					$this->db->query("UPDATE dtl_almacen JOIN tbl_catalogo ON tbl_catalogo.idtbl_catalogo = dtl_almacen.tbl_catalogo_idtbl_catalogo SET dtl_almacen.existencias = dtl_almacen.existencias+$catidad WHERE dtl_almacen.tbl_catalogo_idtbl_catalogo = $producto AND dtl_almacen.tbl_almacenes_idtbl_almacenes = $almacen AND dtl_almacen.estatus = 'dañado'");
				}
			} else {
				if ($this->session->userdata('tipo') == 1) {
					$dataAlmacen = array(
						'tbl_almacenes_idtbl_almacenes' => ID_ALMACEN_ALTO_COSTO,
						'tbl_catalogo_idtbl_catalogo' => $this->input->post('producto'),
						'existencias' => $catidad,
						'estatus' => 'dañado'
					);
				} elseif (($this->session->userdata('tipo') == 4 || ($this->session->userdata('encargado_almacen') != null && $this->session->userdata('encargado_almacen') != '')) && $this->session->userdata('id')!=50) {
					$dataAlmacen = array(
						'tbl_almacenes_idtbl_almacenes' => $this->input->post("almacen"),
						'tbl_catalogo_idtbl_catalogo' => $this->input->post('producto'),
						'existencias' => $catidad,
						'estatus' => 'dañado'
					);
				} elseif ($this->session->userdata('tipo') == 4 && $this->session->userdata('id')==50) {
					$dataAlmacen = array(
						'tbl_almacenes_idtbl_almacenes' => '16',
						'tbl_catalogo_idtbl_catalogo' => $this->input->post('producto'),
						'existencias' => $catidad,
						'estatus' => 'dañado'
					);
				} elseif ($this->session->userdata('tipo') == 14 ) {
					$dataAlmacen = array(
						'tbl_almacenes_idtbl_almacenes' => '23',
						'tbl_catalogo_idtbl_catalogo' => $this->input->post('producto'),
						'existencias' => $catidad,
						'estatus' => 'dañado'
					);
				} elseif($this->session->userdata('tipo')==10 ){
					$dataAlmacen = array(
						'tbl_almacenes_idtbl_almacenes' => '1',
						'tbl_catalogo_idtbl_catalogo' => $this->input->post('producto'),
						'existencias' => $catidad,
						'estatus' => 'dañado'
					);
				} elseif ($this->session->userdata('tipo') == 3) {
					$dataAlmacen = array(
						'tbl_almacenes_idtbl_almacenes' => ID_ALMACEN_REFACCIONES_CONTROL_VEHICULAR,
						'tbl_catalogo_idtbl_catalogo' => $this->input->post('producto'),
						'existencias' => $catidad,
						'estatus' => 'dañado'
					);
				} elseif ($this->session->userdata('tipo') == 2) {
					$dataAlmacen = array(
						'tbl_almacenes_idtbl_almacenes' => ID_ALMACEN_SISTEMAS,
						'tbl_catalogo_idtbl_catalogo' => $this->input->post('producto'),
						'existencias' => $catidad,
						'estatus' => 'dañado'
					);
				}
				$this->db->insert('dtl_almacen', $dataAlmacen);
			}
		}

		if ($this->input->post('robado') > 0) {
			if ($this->session->userdata('tipo') == 1) {
				$data = array(
					'fecha' => date('Y-m-d H:i:s'),
					'tbl_usuarios_idtbl_usuarios' => $this->id_usuario($this->input->post('uid_usuario')),
					'tbl_users_idtbl_users' => $this->session->userdata('id'),
					'tbl_almacenes_idtbl_almacenes' => ID_ALMACEN_ALTO_COSTO,
					'uid' => uniqid(),
					'tipo' => 'devolucion',
					'estatus' => 0,
					'tipo_movimiento' => NULL,
					'folio' => $result->folio,
					'tbl_proyectos_idtbl_proyectos' => $result->tbl_proyectos_idtbl_proyectos,
					'tbl_segmentos_proyecto_idtbl_segmentos_proyecto' => $result->tbl_segmentos_proyecto_idtbl_segmentos_proyecto
				);
				$almacen = ID_ALMACEN_ALTO_COSTO;
			} elseif (($this->session->userdata('tipo') == 4 || ($this->session->userdata('encargado_almacen') != null && $this->session->userdata('encargado_almacen') != '')) && $this->session->userdata('id')!=50) {
				$data = array(
					'fecha' => date('Y-m-d H:i:s'),
					'tbl_usuarios_idtbl_usuarios' => $this->id_usuario($this->input->post('uid_usuario')),
					'tbl_users_idtbl_users' => $this->session->userdata('id'),
					'tbl_almacenes_idtbl_almacenes' => $this->input->post("almacen"),
					'uid' => uniqid(),
					'tipo' => 'devolucion-almacen',
					'estatus' => 1,
					'tipo_movimiento' => NULL,
					'folio' => $result->folio,
					'tbl_proyectos_idtbl_proyectos' => $result->tbl_proyectos_idtbl_proyectos,
					'tbl_segmentos_proyecto_idtbl_segmentos_proyecto' => $result->tbl_segmentos_proyecto_idtbl_segmentos_proyecto
				);
				$almacen = $this->input->post("almacen");
			} elseif ($this->session->userdata('tipo') == 4 && $this->session->userdata('id')==50) {
				$data = array(
					'fecha' => date('Y-m-d H:i:s'),
					'tbl_usuarios_idtbl_usuarios' => $this->id_usuario($this->input->post('uid_usuario')),
					'tbl_users_idtbl_users' => $this->session->userdata('id'),
					'tbl_almacenes_idtbl_almacenes' => '16',
					'uid' => uniqid(),
					'tipo' => 'devolucion',
					'estatus' => 0,
					'tipo_movimiento' => NULL,
					'folio' => $result->folio,
					'tbl_proyectos_idtbl_proyectos' => $result->tbl_proyectos_idtbl_proyectos,
					'tbl_segmentos_proyecto_idtbl_segmentos_proyecto' => $result->tbl_segmentos_proyecto_idtbl_segmentos_proyecto
				);
				$almacen = '16';
			} elseif ($this->session->userdata('tipo') == 14 ) {
				$data = array(
					'fecha' => date('Y-m-d H:i:s'),
					'tbl_usuarios_idtbl_usuarios' => $this->id_usuario($this->input->post('uid_usuario')),
					'tbl_users_idtbl_users' => $this->session->userdata('id'),
					'tbl_almacenes_idtbl_almacenes' => '23',
					'uid' => uniqid(),
					'tipo' => 'devolucion',
					'estatus' => 0,
					'tipo_movimiento' => NULL,
					'folio' => $result->folio,
					'tbl_proyectos_idtbl_proyectos' => $result->tbl_proyectos_idtbl_proyectos,
					'tbl_segmentos_proyecto_idtbl_segmentos_proyecto' => $result->tbl_segmentos_proyecto_idtbl_segmentos_proyecto
				);
				$almacen = '23';
			} elseif($this->session->userdata('tipo')==10){
				$data = array(
					'fecha' => date('Y-m-d H:i:s'),
					'tbl_usuarios_idtbl_usuarios' => $this->id_usuario($this->input->post('uid_usuario')),
					'tbl_users_idtbl_users' => $this->session->userdata('id'),
					'tbl_almacenes_idtbl_almacenes' => '1',
					'uid' => uniqid(),
					'tipo' => 'devolucion',
					'estatus' => 0,
					'tipo_movimiento' => NULL,
					'folio' => $result->folio,
					'tbl_proyectos_idtbl_proyectos' => $result->tbl_proyectos_idtbl_proyectos,
					'tbl_segmentos_proyecto_idtbl_segmentos_proyecto' => $result->tbl_segmentos_proyecto_idtbl_segmentos_proyecto,
					'seguridad_e_higiene' => 1
				);
				$almacen = '1';
			} elseif ($this->session->userdata('tipo') == 3) {
				$data = array(
					'fecha' => date('Y-m-d H:i:s'),
					'tbl_usuarios_idtbl_usuarios' => $this->id_usuario($this->input->post('uid_usuario')),
					'tbl_users_idtbl_users' => $this->session->userdata('id'),
					'tbl_almacenes_idtbl_almacenes' => ID_ALMACEN_REFACCIONES_CONTROL_VEHICULAR,
					'uid' => uniqid(),
					'tipo' => 'devolucion',
					'estatus' => 0,
					'tipo_movimiento' => NULL,
					'folio' => $result->folio,
					'tbl_proyectos_idtbl_proyectos' => $result->tbl_proyectos_idtbl_proyectos,
					'tbl_segmentos_proyecto_idtbl_segmentos_proyecto' => $result->tbl_segmentos_proyecto_idtbl_segmentos_proyecto
				);
				$almacen = ID_ALMACEN_REFACCIONES_CONTROL_VEHICULAR;
			} elseif ($this->session->userdata('tipo') == 2) {
				$data = array(
					'fecha' => date('Y-m-d H:i:s'),
					'tbl_usuarios_idtbl_usuarios' => $this->id_usuario($this->input->post('uid_usuario')),
					'tbl_users_idtbl_users' => $this->session->userdata('id'),
					'tbl_almacenes_idtbl_almacenes' => ID_ALMACEN_SISTEMAS,
					'uid' => uniqid(),
					'tipo' => 'devolucion',
					'estatus' => 0,
					'tipo_movimiento' => NULL,
					'folio' => $result->folio,
					'tbl_proyectos_idtbl_proyectos' => $result->tbl_proyectos_idtbl_proyectos,
					'tbl_segmentos_proyecto_idtbl_segmentos_proyecto' => $result->tbl_segmentos_proyecto_idtbl_segmentos_proyecto
				);
				$almacen = ID_ALMACEN_SISTEMAS;
			}

			//Se registra la entrada
			$this->db->insert('tbl_almacen_movimientos', $data);
			$last = $this->db->insert_id();
			$data = array(
				'dtl_almacen_iddtl_almacen' => $this->input->post('id'),
				'tbl_usuarios_idtbl_usuarios' => $this->id_usuario($this->input->post('uid_usuario')),
				'tbl_almacen_movimientos_idtbl_almacen_movimientos' => $last,
				'estatus_asignacion' => 'finalizada',
				'cantidad' => ($this->input->post('robado') * (-1)),
				'estado_entrega' => 'robado',
				'entregado' => $this->input->post('robado')
			);
			$this->db->insert('dtl_asignacion', $data);

			if ($total == $this->input->post('devinicial')) {
				$data = array(
					'estatus_asignacion' => 'finalizada',
					'fecha_finalizacion' => date('Y-m-d H:i:s'),
					'estado_entrega' => 'robado'
					//'entregado' => $this->input->post('robado')
				);

				$this->db->set($data);
				$this->db->set('cantidad',  'cantidad-' . $this->input->post('robado'), FALSE);
				$this->db->set('entregado', 'entregado+' . $this->input->post('robado'), FALSE);
				$this->db->where('iddtl_asignacion', $this->input->post('asignacion'));
				$this->db->update('dtl_asignacion');
			} else {
				//$query = $this->db->query("SELECT cantidad as total FROM `dtl_asignacion` WHERE `iddtl_asignacion` =" . $this->input->post('asignacion'));
				//$this->db->set('cantidad', $query->result()[0]->total - $this->input->post('robado'));
				$this->db->set('cantidad',  'cantidad-' . $this->input->post('robado'), FALSE);
				$this->db->set('entregado', 'entregado+' . $this->input->post('robado'), FALSE);
				$this->db->where('iddtl_asignacion', $this->input->post('asignacion'));
				$this->db->update('dtl_asignacion');
			}
			if($this->session->userdata('id')==50){
				$estatus = $this->db->query("SELECT * FROM `dtl_almacen` WHERE `tbl_catalogo_idtbl_catalogo` =" . $this->input->post('producto') . " AND estatus='robado' AND tbl_almacenes_idtbl_almacenes=16");
			} elseif($this->session->userdata('tipo')==14){
				$estatus = $this->db->query("SELECT * FROM `dtl_almacen` WHERE `tbl_catalogo_idtbl_catalogo` =" . $this->input->post('producto') . " AND estatus='robado' AND tbl_almacenes_idtbl_almacenes=23");
			} elseif($this->session->userdata('tipo')==10){
				$estatus = $this->db->query("SELECT * FROM dtl_almacen JOIN tbl_catalogo ON tbl_catalogo.idtbl_catalogo = dtl_almacen.tbl_catalogo_idtbl_catalogo WHERE tbl_catalogo_idtbl_catalogo =" . $this->input->post('producto') . " AND estatus='robado' AND tbl_almacenes_idtbl_almacenes=1 AND tbl_catalogo.tipo=1");
			} elseif($this->session->userdata('tipo')==3){
				$estatus = $this->db->query("SELECT * FROM `dtl_almacen` WHERE `tbl_catalogo_idtbl_catalogo` =" . $this->input->post('producto') . " AND estatus='robado' AND tbl_almacenes_idtbl_almacenes=" . ID_ALMACEN_REFACCIONES_CONTROL_VEHICULAR);
			} elseif($this->session->userdata('tipo')==2){
				$estatus = $this->db->query("SELECT * FROM `dtl_almacen` WHERE `tbl_catalogo_idtbl_catalogo` =" . $this->input->post('producto') . " AND estatus='robado' AND tbl_almacenes_idtbl_almacenes=" . ID_ALMACEN_SISTEMAS);
			} elseif($this->session->userdata('tipo')==1){
				$estatus = $this->db->query("SELECT * FROM `dtl_almacen` WHERE `tbl_catalogo_idtbl_catalogo` =" . $this->input->post('producto') . " AND estatus='robado' AND tbl_almacenes_idtbl_almacenes=" . ID_ALMACEN_ALTO_COSTO);
			} elseif(($this->session->userdata('tipo') == 4 || ($this->session->userdata('encargado_almacen') != null && $this->session->userdata('encargado_almacen') != '')) && $this->session->userdata('id')!=50){
				$estatus = $this->db->query("SELECT * FROM `dtl_almacen` WHERE `tbl_catalogo_idtbl_catalogo` =" . $this->input->post('producto') . " AND estatus='robado' AND tbl_almacenes_idtbl_almacenes=" . $almacen);
			}
			$catidad = $this->input->post('robado');

			if ($estatus->num_rows() > 0) {
				/*$this->db->set('existencias', 'existencias+' . $catidad, FALSE);
				$this->db->where('tbl_catalogo_idtbl_catalogo', $this->input->post('producto'));
				$this->db->where('tbl_almacenes_idtbl_almacenes', $almacen);
				$this->db->where('estatus', 'robado');
				$this->db->update('dtl_almacen');*/
				$producto = $this->input->post('producto');
				if($this->session->userdata('tipo') == 10){
					$this->db->query("UPDATE dtl_almacen JOIN tbl_catalogo ON tbl_catalogo.idtbl_catalogo = dtl_almacen.tbl_catalogo_idtbl_catalogo SET dtl_almacen.existencias = dtl_almacen.existencias+$catidad WHERE dtl_almacen.tbl_catalogo_idtbl_catalogo = $producto AND dtl_almacen.tbl_almacenes_idtbl_almacenes = $almacen AND dtl_almacen.estatus = 'robado'");
				}else{
					$this->db->query("UPDATE dtl_almacen JOIN tbl_catalogo ON tbl_catalogo.idtbl_catalogo = dtl_almacen.tbl_catalogo_idtbl_catalogo SET dtl_almacen.existencias = dtl_almacen.existencias+$catidad WHERE dtl_almacen.tbl_catalogo_idtbl_catalogo = $producto AND dtl_almacen.tbl_almacenes_idtbl_almacenes = $almacen AND dtl_almacen.estatus = 'robado'");
				}
			} else {
				if ($this->session->userdata('tipo') == 1) {
					$dataAlmacen = array(
						'tbl_almacenes_idtbl_almacenes' => ID_ALMACEN_ALTO_COSTO,
						'tbl_catalogo_idtbl_catalogo' => $this->input->post('producto'),
						'existencias' => $catidad,
						'estatus' => 'robado'
					);
					$almacen = ID_ALMACEN_ALTO_COSTO;
				} elseif (($this->session->userdata('tipo') == 4 || ($this->session->userdata('encargado_almacen') != null && $this->session->userdata('encargado_almacen') != '')) && $this->session->userdata('id')!=50) {
					$dataAlmacen = array(
						'tbl_almacenes_idtbl_almacenes' => $this->input->post("almacen"),
						'tbl_catalogo_idtbl_catalogo' => $this->input->post('producto'),
						'existencias' => $catidad,
						'estatus' => 'robado'
					);
					$almacen = $this->input->post("almacen");
				} elseif ($this->session->userdata('tipo') == 4 && $this->session->userdata('id')==50) {
					$dataAlmacen = array(
						'tbl_almacenes_idtbl_almacenes' => '16',
						'tbl_catalogo_idtbl_catalogo' => $this->input->post('producto'),
						'existencias' => $catidad,
						'estatus' => 'robado'
					);
					$almacen = '16';
				} elseif ($this->session->userdata('tipo') == 14 ) {
					$dataAlmacen = array(
						'tbl_almacenes_idtbl_almacenes' => '23',
						'tbl_catalogo_idtbl_catalogo' => $this->input->post('producto'),
						'existencias' => $catidad,
						'estatus' => 'robado'
					);
					$almacen = '23';
				} elseif ($this->session->userdata('tipo')==10){
					$dataAlmacen = array(
						'tbl_almacenes_idtbl_almacenes' => '1',
						'tbl_catalogo_idtbl_catalogo' => $this->input->post('producto'),
						'existencias' => $catidad,
						'estatus' => 'robado'
					);
					$almacen = '1';
				} elseif ($this->session->userdata('tipo') == 3) {
					$dataAlmacen = array(
						'tbl_almacenes_idtbl_almacenes' => ID_ALMACEN_REFACCIONES_CONTROL_VEHICULAR,
						'tbl_catalogo_idtbl_catalogo' => $this->input->post('producto'),
						'existencias' => $catidad,
						'estatus' => 'robado'
					);
					$almacen = ID_ALMACEN_REFACCIONES_CONTROL_VEHICULAR;
				} elseif ($this->session->userdata('tipo') == 2) {
					$dataAlmacen = array(
						'tbl_almacenes_idtbl_almacenes' => ID_ALMACEN_SISTEMAS,
						'tbl_catalogo_idtbl_catalogo' => $this->input->post('producto'),
						'existencias' => $catidad,
						'estatus' => 'robado'
					);
					$almacen = ID_ALMACEN_SISTEMAS;
				}
				$this->db->insert('dtl_almacen', $dataAlmacen);
			}
		}

		if ($this->input->post('robadobaja') > 0) {
			if ($this->session->userdata('tipo') == 1) {
				$data = array(
					'fecha' => date('Y-m-d H:i:s'),
					'tbl_usuarios_idtbl_usuarios' => $this->id_usuario($this->input->post('uid_usuario')),
					'tbl_users_idtbl_users' => $this->session->userdata('id'),
					'tbl_almacenes_idtbl_almacenes' => ID_ALMACEN_ALTO_COSTO,
					'uid' => uniqid(),
					'tipo' => 'devolucion',
					'estatus' => 0,
					'tipo_movimiento' => NULL,
					'folio' => $result->folio,
					'tbl_proyectos_idtbl_proyectos' => $result->tbl_proyectos_idtbl_proyectos,
					'tbl_segmentos_proyecto_idtbl_segmentos_proyecto' => $result->tbl_segmentos_proyecto_idtbl_segmentos_proyecto
				);
				$almacen = ID_ALMACEN_ALTO_COSTO;
			} elseif (($this->session->userdata('tipo') == 4 || ($this->session->userdata('encargado_almacen') != null && $this->session->userdata('encargado_almacen') != '')) && $this->session->userdata('id')!=50) {
				$data = array(
					'fecha' => date('Y-m-d H:i:s'),
					'tbl_usuarios_idtbl_usuarios' => $this->id_usuario($this->input->post('uid_usuario')),
					'tbl_users_idtbl_users' => $this->session->userdata('id'),
					'tbl_almacenes_idtbl_almacenes' => $this->input->post("almacen"),
					'uid' => uniqid(),
					'tipo' => 'devolucion-almacen',
					'estatus' => 1,
					'tipo_movimiento' => NULL,
					'folio' => $result->folio,
					'tbl_proyectos_idtbl_proyectos' => $result->tbl_proyectos_idtbl_proyectos,
					'tbl_segmentos_proyecto_idtbl_segmentos_proyecto' => $result->tbl_segmentos_proyecto_idtbl_segmentos_proyecto
				);
				$almacen = $this->input->post("almacen");
			} elseif ($this->session->userdata('tipo') == 4 && $this->session->userdata('id')==50) {
				$data = array(
					'fecha' => date('Y-m-d H:i:s'),
					'tbl_usuarios_idtbl_usuarios' => $this->id_usuario($this->input->post('uid_usuario')),
					'tbl_users_idtbl_users' => $this->session->userdata('id'),
					'tbl_almacenes_idtbl_almacenes' => '16',
					'uid' => uniqid(),
					'tipo' => 'devolucion',
					'estatus' => 0,
					'tipo_movimiento' => NULL,
					'folio' => $result->folio,
					'tbl_proyectos_idtbl_proyectos' => $result->tbl_proyectos_idtbl_proyectos,
					'tbl_segmentos_proyecto_idtbl_segmentos_proyecto' => $result->tbl_segmentos_proyecto_idtbl_segmentos_proyecto
				);
				$almacen = '16';
			} elseif ($this->session->userdata('tipo') == 14 ) {
				$data = array(
					'fecha' => date('Y-m-d H:i:s'),
					'tbl_usuarios_idtbl_usuarios' => $this->id_usuario($this->input->post('uid_usuario')),
					'tbl_users_idtbl_users' => $this->session->userdata('id'),
					'tbl_almacenes_idtbl_almacenes' => '23',
					'uid' => uniqid(),
					'tipo' => 'devolucion',
					'estatus' => 0,
					'tipo_movimiento' => NULL,
					'folio' => $result->folio,
					'tbl_proyectos_idtbl_proyectos' => $result->tbl_proyectos_idtbl_proyectos,
					'tbl_segmentos_proyecto_idtbl_segmentos_proyecto' => $result->tbl_segmentos_proyecto_idtbl_segmentos_proyecto
				);
				$almacen = '23';
			} elseif($this->session->userdata('tipo')==10){
				$data = array(
					'fecha' => date('Y-m-d H:i:s'),
					'tbl_usuarios_idtbl_usuarios' => $this->id_usuario($this->input->post('uid_usuario')),
					'tbl_users_idtbl_users' => $this->session->userdata('id'),
					'tbl_almacenes_idtbl_almacenes' => '1',
					'uid' => uniqid(),
					'tipo' => 'devolucion',
					'estatus' => 0,
					'tipo_movimiento' => NULL,
					'folio' => $result->folio,
					'tbl_proyectos_idtbl_proyectos' => $result->tbl_proyectos_idtbl_proyectos,
					'tbl_segmentos_proyecto_idtbl_segmentos_proyecto' => $result->tbl_segmentos_proyecto_idtbl_segmentos_proyecto,
					'seguridad_e_higiene' => 1
				);
				$almacen = '1';
			} elseif ($this->session->userdata('tipo') == 3) {
				$data = array(
					'fecha' => date('Y-m-d H:i:s'),
					'tbl_usuarios_idtbl_usuarios' => $this->id_usuario($this->input->post('uid_usuario')),
					'tbl_users_idtbl_users' => $this->session->userdata('id'),
					'tbl_almacenes_idtbl_almacenes' => ID_ALMACEN_REFACCIONES_CONTROL_VEHICULAR,
					'uid' => uniqid(),
					'tipo' => 'devolucion',
					'estatus' => 0,
					'tipo_movimiento' => NULL,
					'folio' => $result->folio,
					'tbl_proyectos_idtbl_proyectos' => $result->tbl_proyectos_idtbl_proyectos,
					'tbl_segmentos_proyecto_idtbl_segmentos_proyecto' => $result->tbl_segmentos_proyecto_idtbl_segmentos_proyecto
				);
				$almacen = ID_ALMACEN_REFACCIONES_CONTROL_VEHICULAR;
			} elseif ($this->session->userdata('tipo') == 2) {
				$data = array(
					'fecha' => date('Y-m-d H:i:s'),
					'tbl_usuarios_idtbl_usuarios' => $this->id_usuario($this->input->post('uid_usuario')),
					'tbl_users_idtbl_users' => $this->session->userdata('id'),
					'tbl_almacenes_idtbl_almacenes' => ID_ALMACEN_SISTEMAS,
					'uid' => uniqid(),
					'tipo' => 'devolucion',
					'estatus' => 0,
					'tipo_movimiento' => NULL,
					'folio' => $result->folio,
					'tbl_proyectos_idtbl_proyectos' => $result->tbl_proyectos_idtbl_proyectos,
					'tbl_segmentos_proyecto_idtbl_segmentos_proyecto' => $result->tbl_segmentos_proyecto_idtbl_segmentos_proyecto
				);
				$almacen = ID_ALMACEN_SISTEMAS;
			}

			//Se registra la entrada
			$this->db->insert('tbl_almacen_movimientos', $data);
			$last = $this->db->insert_id();
			$data = array(
				'dtl_almacen_iddtl_almacen' => $this->input->post('id'),
				'tbl_usuarios_idtbl_usuarios' => $this->id_usuario($this->input->post('uid_usuario')),
				'tbl_almacen_movimientos_idtbl_almacen_movimientos' => $last,
				'estatus_asignacion' => 'finalizada',
				'cantidad' => ($this->input->post('robadobaja') * (-1)),
				'estado_entrega' => 'abuso de confianza',
				'entregado' => $this->input->post('robadobaja')
			);
			$this->db->insert('dtl_asignacion', $data);

			if ($total == $this->input->post('devinicial')) {
				$data = array(
					'estatus_asignacion' => 'finalizada',
					'fecha_finalizacion' => date('Y-m-d H:i:s'),
					'estado_entrega' => 'abuso de confianza'
					//'entregado' => $this->input->post('robadobaja')
				);

				$this->db->set($data);
				$this->db->set('cantidad',  'cantidad-' . $this->input->post('robadobaja'), FALSE);
				$this->db->set('entregado', 'entregado+' . $this->input->post('robadobaja'), FALSE);
				$this->db->where('iddtl_asignacion', $this->input->post('asignacion'));
				$this->db->update('dtl_asignacion');
			} else {
				//$query = $this->db->query("SELECT cantidad as total FROM `dtl_asignacion` WHERE `iddtl_asignacion` =" . $this->input->post('asignacion'));
				//$this->db->set('cantidad', $query->result()[0]->total - $this->input->post('robadobaja'));
				$this->db->set('cantidad',  'cantidad-' . $this->input->post('robadobaja'), FALSE);
				$this->db->set('entregado', 'entregado+' . $this->input->post('robadobaja'), FALSE);
				$this->db->where('iddtl_asignacion', $this->input->post('asignacion'));
				$this->db->update('dtl_asignacion');
			}
			if($this->session->userdata('id')==50){
				$estatus = $this->db->query("SELECT * FROM `dtl_almacen` WHERE `tbl_catalogo_idtbl_catalogo` =" . $this->input->post('producto') . " AND estatus='abuso de confianza' AND tbl_almacenes_idtbl_almacenes=16");
			} elseif($this->session->userdata('tipo')==14 ){
				$estatus = $this->db->query("SELECT * FROM `dtl_almacen` WHERE `tbl_catalogo_idtbl_catalogo` =" . $this->input->post('producto') . " AND estatus='abuso de confianza' AND tbl_almacenes_idtbl_almacenes=23");
			} elseif($this->session->userdata('tipo')==10){
				$estatus = $this->db->query("SELECT * FROM dtl_almacen JOIN tbl_catalogo ON tbl_catalogo.idtbl_catalogo = dtl_almacen.tbl_catalogo_idtbl_catalogo WHERE tbl_catalogo_idtbl_catalogo =" . $this->input->post('producto') . " AND estatus='abuso de confianza' AND tbl_almacenes_idtbl_almacenes=1 AND tbl_catalogo.tipo=1");
			} elseif($this->session->userdata('tipo')==3){
				$estatus = $this->db->query("SELECT * FROM `dtl_almacen` WHERE `tbl_catalogo_idtbl_catalogo` =" . $this->input->post('producto') . " AND estatus='abuso de confianza' AND tbl_almacenes_idtbl_almacenes=" . ID_ALMACEN_REFACCIONES_CONTROL_VEHICULAR);
			} elseif($this->session->userdata('tipo')==2){
				$estatus = $this->db->query("SELECT * FROM `dtl_almacen` WHERE `tbl_catalogo_idtbl_catalogo` =" . $this->input->post('producto') . " AND estatus='abuso de confianza' AND tbl_almacenes_idtbl_almacenes=" . ID_ALMACEN_SISTEMAS);
			} elseif($this->session->userdata('tipo')==1){
				$estatus = $this->db->query("SELECT * FROM `dtl_almacen` WHERE `tbl_catalogo_idtbl_catalogo` =" . $this->input->post('producto') . " AND estatus='abuso de confianza' AND tbl_almacenes_idtbl_almacenes=" . ID_ALMACEN_ALTO_COSTO);
			} elseif(($this->session->userdata('tipo') == 4 || ($this->session->userdata('encargado_almacen') != null && $this->session->userdata('encargado_almacen') != '')) && $this->session->userdata('id')!=50){
				$estatus = $this->db->query("SELECT * FROM `dtl_almacen` WHERE `tbl_catalogo_idtbl_catalogo` =" . $this->input->post('producto') . " AND estatus='abuso de confianza' AND tbl_almacenes_idtbl_almacenes=" . $almacen);
			}
			$catidad = $this->input->post('robadobaja');

			if ($estatus->num_rows() > 0) {
				/*$this->db->set('existencias', 'existencias+' . $catidad, FALSE);
				$this->db->where('tbl_catalogo_idtbl_catalogo', $this->input->post('producto'));
				$this->db->where('tbl_almacenes_idtbl_almacenes', $almacen);
				$this->db->where('estatus', 'abuso de confianza');
				$this->db->update('dtl_almacen');*/
				$producto = $this->input->post('producto');
				if($this->session->userdata('tipo') == 10){
					$this->db->query("UPDATE dtl_almacen JOIN tbl_catalogo ON tbl_catalogo.idtbl_catalogo = dtl_almacen.tbl_catalogo_idtbl_catalogo SET dtl_almacen.existencias = dtl_almacen.existencias+$catidad WHERE dtl_almacen.tbl_catalogo_idtbl_catalogo = $producto AND dtl_almacen.tbl_almacenes_idtbl_almacenes = $almacen AND dtl_almacen.estatus = 'abuso de confianza'");
				}else{
					$this->db->query("UPDATE dtl_almacen JOIN tbl_catalogo ON tbl_catalogo.idtbl_catalogo = dtl_almacen.tbl_catalogo_idtbl_catalogo SET dtl_almacen.existencias = dtl_almacen.existencias+$catidad WHERE dtl_almacen.tbl_catalogo_idtbl_catalogo = $producto AND dtl_almacen.tbl_almacenes_idtbl_almacenes = $almacen AND dtl_almacen.estatus = 'abuso de confianza'");
				}
			} else {
				if ($this->session->userdata('tipo') == 1) {
					$dataAlmacen = array(
						'tbl_almacenes_idtbl_almacenes' => ID_ALMACEN_ALTO_COSTO,
						'tbl_catalogo_idtbl_catalogo' => $this->input->post('producto'),
						'existencias' => $catidad,
						'estatus' => 'abuso de confianza'
					);
				} elseif (($this->session->userdata('tipo') == 4 || ($this->session->userdata('encargado_almacen') != null && $this->session->userdata('encargado_almacen') != '')) && $this->session->userdata('id')!=50) {
					$dataAlmacen = array(
						'tbl_almacenes_idtbl_almacenes' => $this->input->post("almacen"),
						'tbl_catalogo_idtbl_catalogo' => $this->input->post('producto'),
						'existencias' => $catidad,
						'estatus' => 'abuso de confianza'
					);
				} elseif ($this->session->userdata('tipo') == 4 && $this->session->userdata('id')==50) {
					$dataAlmacen = array(
						'tbl_almacenes_idtbl_almacenes' => '16',
						'tbl_catalogo_idtbl_catalogo' => $this->input->post('producto'),
						'existencias' => $catidad,
						'estatus' => 'abuso de confianza'
					);
				} elseif ($this->session->userdata('tipo') == 14 ) {
					$dataAlmacen = array(
						'tbl_almacenes_idtbl_almacenes' => '23',
						'tbl_catalogo_idtbl_catalogo' => $this->input->post('producto'),
						'existencias' => $catidad,
						'estatus' => 'abuso de confianza'
					);
				} elseif($this->session->userdata('tipo')==10 ){
					$dataAlmacen = array(
						'tbl_almacenes_idtbl_almacenes' => '1',
						'tbl_catalogo_idtbl_catalogo' => $this->input->post('producto'),
						'existencias' => $catidad,
						'estatus' => 'abuso de confianza'
					);
				} elseif ($this->session->userdata('tipo') == 3) {
					$dataAlmacen = array(
						'tbl_almacenes_idtbl_almacenes' => ID_ALMACEN_REFACCIONES_CONTROL_VEHICULAR,
						'tbl_catalogo_idtbl_catalogo' => $this->input->post('producto'),
						'existencias' => $catidad,
						'estatus' => 'abuso de confianza'
					);
				} elseif ($this->session->userdata('tipo') == 2) {
					$dataAlmacen = array(
						'tbl_almacenes_idtbl_almacenes' => ID_ALMACEN_SISTEMAS,
						'tbl_catalogo_idtbl_catalogo' => $this->input->post('producto'),
						'existencias' => $catidad,
						'estatus' => 'abuso de confianza'
					);
				}
				$this->db->insert('dtl_almacen', $dataAlmacen);
			}
		}

		if ($this->input->post('merma') > 0) {
			if ($this->session->userdata('tipo') == 1) {
				$data = array(
					'fecha' => date('Y-m-d H:i:s'),
					'tbl_usuarios_idtbl_usuarios' => $this->id_usuario($this->input->post('uid_usuario')),
					'tbl_users_idtbl_users' => $this->session->userdata('id'),
					'tbl_almacenes_idtbl_almacenes' => ID_ALMACEN_ALTO_COSTO,
					'uid' => uniqid(),
					'tipo' => 'devolucion',
					'estatus' => 0,
					'tipo_movimiento' => NULL,
					'folio' => $result->folio,
					'tbl_proyectos_idtbl_proyectos' => $result->tbl_proyectos_idtbl_proyectos,
					'tbl_segmentos_proyecto_idtbl_segmentos_proyecto' => $result->tbl_segmentos_proyecto_idtbl_segmentos_proyecto
				);
				$almacen = ID_ALMACEN_ALTO_COSTO;
			} elseif (($this->session->userdata('tipo') == 4 || ($this->session->userdata('encargado_almacen') != null && $this->session->userdata('encargado_almacen') != '')) && $this->session->userdata('id')!=50) {
				$data = array(
					'fecha' => date('Y-m-d H:i:s'),
					'tbl_usuarios_idtbl_usuarios' => $this->id_usuario($this->input->post('uid_usuario')),
					'tbl_users_idtbl_users' => $this->session->userdata('id'),
					'tbl_almacenes_idtbl_almacenes' => $this->input->post("almacen"),
					'uid' => uniqid(),
					'tipo' => 'devolucion-almacen',
					'estatus' => 1,
					'tipo_movimiento' => NULL,
					'folio' => $result->folio,
					'tbl_proyectos_idtbl_proyectos' => $result->tbl_proyectos_idtbl_proyectos,
					'tbl_segmentos_proyecto_idtbl_segmentos_proyecto' => $result->tbl_segmentos_proyecto_idtbl_segmentos_proyecto
				);
				$almacen = $this->input->post("almacen");
			} elseif ($this->session->userdata('tipo') == 4 && $this->session->userdata('id')==50) {
				$data = array(
					'fecha' => date('Y-m-d H:i:s'),
					'tbl_usuarios_idtbl_usuarios' => $this->id_usuario($this->input->post('uid_usuario')),
					'tbl_users_idtbl_users' => $this->session->userdata('id'),
					'tbl_almacenes_idtbl_almacenes' => '16',
					'uid' => uniqid(),
					'tipo' => 'devolucion',
					'estatus' => 0,
					'tipo_movimiento' => NULL,
					'folio' => $result->folio,
					'tbl_proyectos_idtbl_proyectos' => $result->tbl_proyectos_idtbl_proyectos,
					'tbl_segmentos_proyecto_idtbl_segmentos_proyecto' => $result->tbl_segmentos_proyecto_idtbl_segmentos_proyecto
				);
				$almacen = '16';
			} elseif ($this->session->userdata('tipo') == 14 ) {
				$data = array(
					'fecha' => date('Y-m-d H:i:s'),
					'tbl_usuarios_idtbl_usuarios' => $this->id_usuario($this->input->post('uid_usuario')),
					'tbl_users_idtbl_users' => $this->session->userdata('id'),
					'tbl_almacenes_idtbl_almacenes' => '23',
					'uid' => uniqid(),
					'tipo' => 'devolucion',
					'estatus' => 0,
					'tipo_movimiento' => NULL,
					'folio' => $result->folio,
					'tbl_proyectos_idtbl_proyectos' => $result->tbl_proyectos_idtbl_proyectos,
					'tbl_segmentos_proyecto_idtbl_segmentos_proyecto' => $result->tbl_segmentos_proyecto_idtbl_segmentos_proyecto
				);
				$almacen = '23';
			} elseif($this->session->userdata('tipo')==10){
				$data = array(
					'fecha' => date('Y-m-d H:i:s'),
					'tbl_usuarios_idtbl_usuarios' => $this->id_usuario($this->input->post('uid_usuario')),
					'tbl_users_idtbl_users' => $this->session->userdata('id'),
					'tbl_almacenes_idtbl_almacenes' => '1',
					'uid' => uniqid(),
					'tipo' => 'devolucion',
					'estatus' => 0,
					'tipo_movimiento' => NULL,
					'folio' => $result->folio,
					'tbl_proyectos_idtbl_proyectos' => $result->tbl_proyectos_idtbl_proyectos,
					'tbl_segmentos_proyecto_idtbl_segmentos_proyecto' => $result->tbl_segmentos_proyecto_idtbl_segmentos_proyecto,
					'seguridad_e_higiene' => 1
				);
				$almacen = '1';
			} elseif ($this->session->userdata('tipo') == 3) {
				$data = array(
					'fecha' => date('Y-m-d H:i:s'),
					'tbl_usuarios_idtbl_usuarios' => $this->id_usuario($this->input->post('uid_usuario')),
					'tbl_users_idtbl_users' => $this->session->userdata('id'),
					'tbl_almacenes_idtbl_almacenes' => ID_ALMACEN_REFACCIONES_CONTROL_VEHICULAR,
					'uid' => uniqid(),
					'tipo' => 'devolucion',
					'estatus' => 0,
					'tipo_movimiento' => NULL,
					'folio' => $result->folio,
					'tbl_proyectos_idtbl_proyectos' => $result->tbl_proyectos_idtbl_proyectos,
					'tbl_segmentos_proyecto_idtbl_segmentos_proyecto' => $result->tbl_segmentos_proyecto_idtbl_segmentos_proyecto
				);
				$almacen = ID_ALMACEN_REFACCIONES_CONTROL_VEHICULAR;
			} elseif ($this->session->userdata('tipo') == 2) {
				$data = array(
					'fecha' => date('Y-m-d H:i:s'),
					'tbl_usuarios_idtbl_usuarios' => $this->id_usuario($this->input->post('uid_usuario')),
					'tbl_users_idtbl_users' => $this->session->userdata('id'),
					'tbl_almacenes_idtbl_almacenes' => ID_ALMACEN_SISTEMAS,
					'uid' => uniqid(),
					'tipo' => 'devolucion',
					'estatus' => 0,
					'tipo_movimiento' => NULL,
					'folio' => $result->folio,
					'tbl_proyectos_idtbl_proyectos' => $result->tbl_proyectos_idtbl_proyectos,
					'tbl_segmentos_proyecto_idtbl_segmentos_proyecto' => $result->tbl_segmentos_proyecto_idtbl_segmentos_proyecto
				);
				$almacen = ID_ALMACEN_SISTEMAS;
			}

			//Se registra la entrada
			$this->db->insert('tbl_almacen_movimientos', $data);
			$last = $this->db->insert_id();
			$data = array(
				'dtl_almacen_iddtl_almacen' => $this->input->post('id'),
				'tbl_usuarios_idtbl_usuarios' => $this->id_usuario($this->input->post('uid_usuario')),
				'tbl_almacen_movimientos_idtbl_almacen_movimientos' => $last,
				'estatus_asignacion' => 'finalizada',
				'cantidad' => ($this->input->post('merma') * (-1)),
				'estado_entrega' => 'merma',
				'entregado' => $this->input->post('merma')
			);
			$this->db->insert('dtl_asignacion', $data);

			if ($total == $this->input->post('devinicial')) {
				$data = array(
					'estatus_asignacion' => 'finalizada',
					'fecha_finalizacion' => date('Y-m-d H:i:s'),
					'estado_entrega' => 'merma'
					//'entregado' => $this->input->post('robadobaja')
				);

				$this->db->set($data);
				$this->db->set('cantidad',  'cantidad-' . $this->input->post('merma'), FALSE);
				$this->db->set('entregado', 'entregado+' . $this->input->post('merma'), FALSE);
				$this->db->where('iddtl_asignacion', $this->input->post('asignacion'));
				$this->db->update('dtl_asignacion');
			} else {
				//$query = $this->db->query("SELECT cantidad as total FROM `dtl_asignacion` WHERE `iddtl_asignacion` =" . $this->input->post('asignacion'));
				//$this->db->set('cantidad', $query->result()[0]->total - $this->input->post('robadobaja'));
				$this->db->set('cantidad',  'cantidad-' . $this->input->post('merma'), FALSE);
				$this->db->set('entregado', 'entregado+' . $this->input->post('merma'), FALSE);
				$this->db->where('iddtl_asignacion', $this->input->post('asignacion'));
				$this->db->update('dtl_asignacion');
			}
			if($this->session->userdata('id')==50){
				$estatus = $this->db->query("SELECT * FROM `dtl_almacen` WHERE `tbl_catalogo_idtbl_catalogo` =" . $this->input->post('producto') . " AND estatus='merma' AND tbl_almacenes_idtbl_almacenes=16");
			} elseif($this->session->userdata('tipo')==14 ){
				$estatus = $this->db->query("SELECT * FROM `dtl_almacen` WHERE `tbl_catalogo_idtbl_catalogo` =" . $this->input->post('producto') . " AND estatus='merma' AND tbl_almacenes_idtbl_almacenes=23");
			} elseif($this->session->userdata('tipo')==10){
				$estatus = $this->db->query("SELECT * FROM dtl_almacen JOIN tbl_catalogo ON tbl_catalogo.idtbl_catalogo = dtl_almacen.tbl_catalogo_idtbl_catalogo WHERE tbl_catalogo_idtbl_catalogo =" . $this->input->post('producto') . " AND estatus='merma' AND tbl_almacenes_idtbl_almacenes=1 AND tbl_catalogo.tipo=1");
			} elseif($this->session->userdata('tipo')==3){
				$estatus = $this->db->query("SELECT * FROM `dtl_almacen` WHERE `tbl_catalogo_idtbl_catalogo` =" . $this->input->post('producto') . " AND estatus='merma' AND tbl_almacenes_idtbl_almacenes=" . ID_ALMACEN_REFACCIONES_CONTROL_VEHICULAR);
			} elseif($this->session->userdata('tipo')==2){
				$estatus = $this->db->query("SELECT * FROM `dtl_almacen` WHERE `tbl_catalogo_idtbl_catalogo` =" . $this->input->post('producto') . " AND estatus='merma' AND tbl_almacenes_idtbl_almacenes=" . ID_ALMACEN_SISTEMAS);
			} elseif($this->session->userdata('tipo')==1){
				$estatus = $this->db->query("SELECT * FROM `dtl_almacen` WHERE `tbl_catalogo_idtbl_catalogo` =" . $this->input->post('producto') . " AND estatus='merma' AND tbl_almacenes_idtbl_almacenes=" . ID_ALMACEN_ALTO_COSTO);
			} elseif(($this->session->userdata('tipo') == 4 || ($this->session->userdata('encargado_almacen') != null && $this->session->userdata('encargado_almacen') != '')) && $this->session->userdata('id')!=50){
				$estatus = $this->db->query("SELECT * FROM `dtl_almacen` WHERE `tbl_catalogo_idtbl_catalogo` =" . $this->input->post('producto') . " AND estatus='merma' AND tbl_almacenes_idtbl_almacenes=" . $almacen);
			}
			$catidad = $this->input->post('merma');

			if ($estatus->num_rows() > 0) {
				/*$this->db->set('existencias', 'existencias+' . $catidad, FALSE);
				$this->db->where('tbl_catalogo_idtbl_catalogo', $this->input->post('producto'));
				$this->db->where('tbl_almacenes_idtbl_almacenes', $almacen);
				$this->db->where('estatus', 'abuso de confianza');
				$this->db->update('dtl_almacen');*/
				$producto = $this->input->post('producto');
				if($this->session->userdata('tipo') == 10){
					$this->db->query("UPDATE dtl_almacen JOIN tbl_catalogo ON tbl_catalogo.idtbl_catalogo = dtl_almacen.tbl_catalogo_idtbl_catalogo SET dtl_almacen.existencias = dtl_almacen.existencias+$catidad WHERE dtl_almacen.tbl_catalogo_idtbl_catalogo = $producto AND dtl_almacen.tbl_almacenes_idtbl_almacenes = $almacen AND dtl_almacen.estatus = 'merma'");
				}else{
					$this->db->query("UPDATE dtl_almacen JOIN tbl_catalogo ON tbl_catalogo.idtbl_catalogo = dtl_almacen.tbl_catalogo_idtbl_catalogo SET dtl_almacen.existencias = dtl_almacen.existencias+$catidad WHERE dtl_almacen.tbl_catalogo_idtbl_catalogo = $producto AND dtl_almacen.tbl_almacenes_idtbl_almacenes = $almacen AND dtl_almacen.estatus = 'merma'");
				}
			} else {
				if ($this->session->userdata('tipo') == 1) {
					$dataAlmacen = array(
						'tbl_almacenes_idtbl_almacenes' => ID_ALMACEN_ALTO_COSTO,
						'tbl_catalogo_idtbl_catalogo' => $this->input->post('producto'),
						'existencias' => $catidad,
						'estatus' => 'merma'
					);
				} elseif (($this->session->userdata('tipo') == 4 || ($this->session->userdata('encargado_almacen') != null && $this->session->userdata('encargado_almacen') != '')) && $this->session->userdata('id')!=50) {
					$dataAlmacen = array(
						'tbl_almacenes_idtbl_almacenes' => $this->input->post("almacen"),
						'tbl_catalogo_idtbl_catalogo' => $this->input->post('producto'),
						'existencias' => $catidad,
						'estatus' => 'merma'
					);
				} elseif ($this->session->userdata('tipo') == 4 && $this->session->userdata('id')==50) {
					$dataAlmacen = array(
						'tbl_almacenes_idtbl_almacenes' => '16',
						'tbl_catalogo_idtbl_catalogo' => $this->input->post('producto'),
						'existencias' => $catidad,
						'estatus' => 'merma'
					);
				} elseif ($this->session->userdata('tipo') == 14 ) {
					$dataAlmacen = array(
						'tbl_almacenes_idtbl_almacenes' => '23',
						'tbl_catalogo_idtbl_catalogo' => $this->input->post('producto'),
						'existencias' => $catidad,
						'estatus' => 'merma'
					);
				} elseif($this->session->userdata('tipo')==10 ){
					$dataAlmacen = array(
						'tbl_almacenes_idtbl_almacenes' => '1',
						'tbl_catalogo_idtbl_catalogo' => $this->input->post('producto'),
						'existencias' => $catidad,
						'estatus' => 'merma'
					);
				} elseif ($this->session->userdata('tipo') == 3) {
					$dataAlmacen = array(
						'tbl_almacenes_idtbl_almacenes' => ID_ALMACEN_REFACCIONES_CONTROL_VEHICULAR,
						'tbl_catalogo_idtbl_catalogo' => $this->input->post('producto'),
						'existencias' => $catidad,
						'estatus' => 'merma'
					);
				} elseif ($this->session->userdata('tipo') == 2) {
					$dataAlmacen = array(
						'tbl_almacenes_idtbl_almacenes' => ID_ALMACEN_SISTEMAS,
						'tbl_catalogo_idtbl_catalogo' => $this->input->post('producto'),
						'existencias' => $catidad,
						'estatus' => 'merma'
					);
				}
				$this->db->insert('dtl_almacen', $dataAlmacen);
			}
		}

		if ($this->db->trans_status() === FALSE) {
			$this->db->trans_rollback();
			return 'Error en la transacción.';
		} else {
			$this->db->trans_commit();
			return true;
		}
	}

	public function devolucion_contratistas() {
		$this->db->trans_begin();
		$total = $this->input->post('devolucion') + $this->input->post('justificacion') + $this->input->post('robado') + $this->input->post('danado') + $this->input->post('robadobaja');
		//$almacen = $this->input->post("almacen");
		$this->db->from("dtl_asignacion");
		$this->db->join("tbl_almacen_movimientos", "tbl_almacen_movimientos.idtbl_almacen_movimientos = dtl_asignacion.tbl_almacen_movimientos_idtbl_almacen_movimientos");
		$query = $this->db->where('iddtl_asignacion', $this->input->post('asignacion'));
		$result = $query = $this->db->get()->result()[0];
		$almacen = null;

		if ($this->input->post('devolucion') > 0) {
			
				$data = array(
					'fecha' => date('Y-m-d H:i:s'),
					'tbl_usuarios_idtbl_usuarios' => $this->id_usuario($this->input->post('uid_usuario')),
					'tbl_users_idtbl_users' => $this->session->userdata('id'),
					'tbl_almacenes_idtbl_almacenes' => ID_ALMACEN_GENERAL,
					'uid' => uniqid(),
					'tipo' => 'devolucion',
					'estatus' => 0,
					'tipo_movimiento' => NULL,
					'folio' => $result->folio,
					'tbl_proyectos_idtbl_proyectos' => $result->tbl_proyectos_idtbl_proyectos,
					'tbl_segmentos_proyecto_idtbl_segmentos_proyecto' => $result->tbl_segmentos_proyecto_idtbl_segmentos_proyecto
				);
				$almacen = ID_ALMACEN_GENERAL;
			
			//Se registra la entrada
			$this->db->insert('tbl_almacen_movimientos', $data);
			$last = $this->db->insert_id();
			$data = array(
				'dtl_almacen_iddtl_almacen' => $this->input->post('id'),
				'tbl_usuarios_idtbl_usuarios' => $this->id_usuario($this->input->post('uid_usuario')),
				'tbl_almacen_movimientos_idtbl_almacen_movimientos' => $last,
				'estatus_asignacion' => 'finalizada',
				'cantidad' => number_format(($this->input->post('devolucion') * (-1)), 4, '.', ''),
				'estado_entrega' => 'almacen',
				'entregado' => $this->input->post('devolucion')
			);
			$this->db->insert('dtl_asignacion', $data);

			if ($total == $this->input->post('devinicial')) {
				$data = array(
					'estatus_asignacion' => 'finalizada',
					'fecha_finalizacion' => date('Y-m-d H:i:s'),
					'estado_entrega' => 'almacen'
					//'entregado' => $this->input->post('devolucion'
				);

				$this->db->set($data);
				$this->db->set('cantidad',  'cantidad-' . $this->input->post('devolucion'), FALSE);
				$this->db->set('entregado', 'entregado+' . $this->input->post('devolucion'), FALSE);
				$this->db->where('iddtl_asignacion', $this->input->post('asignacion'));
				$this->db->update('dtl_asignacion');
			} else {
				//$query = $this->db->query("SELECT cantidad as total FROM `dtl_asignacion` WHERE `iddtl_asignacion` =" . $this->input->post('asignacion'));
				$this->db->set('cantidad',  'cantidad-' . $this->input->post('devolucion'), FALSE);
				$this->db->set('entregado', 'entregado+' . $this->input->post('devolucion'), FALSE);
				$this->db->where('iddtl_asignacion', $this->input->post('asignacion'));
				$this->db->update('dtl_asignacion');
			}

				$estatus = $this->db->query("SELECT * FROM `dtl_almacen` WHERE `tbl_catalogo_idtbl_catalogo` =" . $this->input->post('producto') . " AND estatus='almacen' AND tbl_almacenes_idtbl_almacenes=1");
			
			$catidad = $this->input->post('devolucion');

			if ($estatus->num_rows() > 0) {
				$producto = $this->input->post('producto');
				if($this->session->userdata('tipo') == 10){
					$this->db->query("UPDATE dtl_almacen JOIN tbl_catalogo ON tbl_catalogo.idtbl_catalogo = dtl_almacen.tbl_catalogo_idtbl_catalogo SET dtl_almacen.existencias = dtl_almacen.existencias+$catidad WHERE dtl_almacen.tbl_catalogo_idtbl_catalogo = $producto AND dtl_almacen.tbl_almacenes_idtbl_almacenes = $almacen AND dtl_almacen.estatus = 'almacen'");
				}elseif($this->session->userdata('tipo') == 1){
					$this->db->query("UPDATE dtl_almacen JOIN tbl_catalogo ON tbl_catalogo.idtbl_catalogo = dtl_almacen.tbl_catalogo_idtbl_catalogo SET dtl_almacen.existencias = dtl_almacen.existencias+$catidad WHERE dtl_almacen.tbl_catalogo_idtbl_catalogo = $producto AND dtl_almacen.tbl_almacenes_idtbl_almacenes = $almacen AND dtl_almacen.estatus = 'almacen' AND dtl_almacen.estado='usado'");
				}else{
					$this->db->query("UPDATE dtl_almacen JOIN tbl_catalogo ON tbl_catalogo.idtbl_catalogo = dtl_almacen.tbl_catalogo_idtbl_catalogo SET dtl_almacen.existencias = dtl_almacen.existencias+$catidad WHERE dtl_almacen.tbl_catalogo_idtbl_catalogo = $producto AND dtl_almacen.tbl_almacenes_idtbl_almacenes = $almacen AND dtl_almacen.estatus = 'almacen'");
				}
			} else {
					$dataAlmacen = array(
						'tbl_almacenes_idtbl_almacenes' => '1',
						'tbl_catalogo_idtbl_catalogo' => $this->input->post('producto'),
						'existencias' => $catidad,
						'estatus' => 'almacen'
					);
				
				$this->db->insert('dtl_almacen', $dataAlmacen);
			}
		}

		if ($this->input->post('justificacion') > 0) {
				$data = array(
					'fecha' => date('Y-m-d H:i:s'),
					'tbl_usuarios_idtbl_usuarios' => $this->id_usuario($this->input->post('uid_usuario')),
					'tbl_users_idtbl_users' => $this->session->userdata('id'),
					'tbl_almacenes_idtbl_almacenes' => ID_ALMACEN_GENERAL,
					'uid' => uniqid(),
					'tipo' => 'justificacion',
					'estatus' => 0,
					'tipo_movimiento' => NULL,
					'folio' => $result->folio,
					'tbl_proyectos_idtbl_proyectos' => $result->tbl_proyectos_idtbl_proyectos,
					'tbl_segmentos_proyecto_idtbl_segmentos_proyecto' => $result->tbl_segmentos_proyecto_idtbl_segmentos_proyecto
				);
				$almacen = ID_ALMACEN_GENERAL;

			//Se registra la entrada
			$this->db->insert('tbl_almacen_movimientos', $data);
			$last = $this->db->insert_id();
			$data = array(
				'dtl_almacen_iddtl_almacen' => $this->input->post('id'),
				'tbl_usuarios_idtbl_usuarios' => $this->id_usuario($this->input->post('uid_usuario')),
				'tbl_almacen_movimientos_idtbl_almacen_movimientos' => $last,
				'estatus_asignacion' => 'finalizada',
				'cantidad' => ($this->input->post('justificacion') * (-1)),
				'estado_entrega' => 'justificacion',
				'entregado' => $this->input->post('justificacion')
			);
			$this->db->insert('dtl_asignacion', $data);


			if ($total == $this->input->post('devinicial')) {
				$data = array(
					'estatus_asignacion' => 'finalizada',
					'fecha_finalizacion' => date('Y-m-d H:i:s'),
					'estado_entrega' => 'justificacion'
					//'entregado' => $this->input->post('justificacion')
				);

				$this->db->set($data);
				$this->db->set('cantidad',  'cantidad-' . $this->input->post('justificacion'), FALSE);
				$this->db->set('entregado', 'entregado+' . $this->input->post('justificacion'), FALSE);
				$this->db->where('iddtl_asignacion', $this->input->post('asignacion'));
				$this->db->update('dtl_asignacion');
			} else {
				//$query = $this->db->query("SELECT cantidad as total FROM `dtl_asignacion` WHERE `iddtl_asignacion` =" . $this->input->post('asignacion'));
				//$this->db->set('cantidad', $query->result()[0]->total - $this->input->post('justificacion'));
				$this->db->set('cantidad',  'cantidad-' . $this->input->post('justificacion'), FALSE);
				$this->db->set('entregado', 'entregado+' . $this->input->post('justificacion'), FALSE);
				$this->db->where('iddtl_asignacion', $this->input->post('asignacion'));
				$this->db->update('dtl_asignacion');
			}
				$estatus = $this->db->query("SELECT * FROM `dtl_almacen` WHERE `tbl_catalogo_idtbl_catalogo` =" . $this->input->post('producto') . " AND estatus='justificacion' AND tbl_almacenes_idtbl_almacenes=1");
			
		

			$catidad = $this->input->post('justificacion');
			
			if ($estatus->num_rows() > 0) {
				/*$this->db->set('existencias', 'existencias+' . $catidad, FALSE);
				$this->db->where('tbl_catalogo_idtbl_catalogo', $this->input->post('producto'));
				$this->db->where('tbl_almacenes_idtbl_almacenes', $almacen);
				$this->db->where('estatus', 'justificacion');
				$this->db->update('dtl_almacen');*/
				$producto = $this->input->post('producto');
				if($this->session->userdata('tipo') == 10){
					$this->db->query("UPDATE dtl_almacen JOIN tbl_catalogo ON tbl_catalogo.idtbl_catalogo = dtl_almacen.tbl_catalogo_idtbl_catalogo SET dtl_almacen.existencias = dtl_almacen.existencias+$catidad WHERE dtl_almacen.tbl_catalogo_idtbl_catalogo = $producto AND dtl_almacen.tbl_almacenes_idtbl_almacenes = $almacen AND dtl_almacen.estatus = 'justificacion'");
				}else{
					$this->db->query("UPDATE dtl_almacen JOIN tbl_catalogo ON tbl_catalogo.idtbl_catalogo = dtl_almacen.tbl_catalogo_idtbl_catalogo SET dtl_almacen.existencias = dtl_almacen.existencias+$catidad WHERE dtl_almacen.tbl_catalogo_idtbl_catalogo = $producto AND dtl_almacen.tbl_almacenes_idtbl_almacenes = $almacen AND dtl_almacen.estatus = 'justificacion'");
				}
			} else {
					$dataAlmacen = array(
						'tbl_almacenes_idtbl_almacenes' => ID_ALMACEN_GENERAL,
						'tbl_catalogo_idtbl_catalogo' => $this->input->post('producto'),
						'existencias' => $catidad,
						'estatus' => 'justificacion'
					);

				$this->db->insert('dtl_almacen', $dataAlmacen);
			}
		}

		if ($this->input->post('danado') > 0) {
			if ($this->session->userdata('tipo') == 1) {
				$data = array(
					'fecha' => date('Y-m-d H:i:s'),
					'tbl_usuarios_idtbl_usuarios' => $this->id_usuario($this->input->post('uid_usuario')),
					'tbl_users_idtbl_users' => $this->session->userdata('id'),
					'tbl_almacenes_idtbl_almacenes' => ID_ALMACEN_ALTO_COSTO,
					'uid' => uniqid(),
					'tipo' => 'devolucion',
					'estatus' => 0,
					'tipo_movimiento' => NULL,
					'folio' => $result->folio,
					'tbl_proyectos_idtbl_proyectos' => $result->tbl_proyectos_idtbl_proyectos,
					'tbl_segmentos_proyecto_idtbl_segmentos_proyecto' => $result->tbl_segmentos_proyecto_idtbl_segmentos_proyecto
				);
				$almacen = ID_ALMACEN_ALTO_COSTO;
			} elseif (($this->session->userdata('tipo') == 4 || ($this->session->userdata('encargado_almacen') != null && $this->session->userdata('encargado_almacen') != '')) && $this->session->userdata('id')!=50) {
				$data = array(
					'fecha' => date('Y-m-d H:i:s'),
					'tbl_usuarios_idtbl_usuarios' => $this->id_usuario($this->input->post('uid_usuario')),
					'tbl_users_idtbl_users' => $this->session->userdata('id'),
					'tbl_almacenes_idtbl_almacenes' => $this->input->post("almacen"),
					'uid' => uniqid(),
					'tipo' => 'devolucion-almacen',
					'estatus' => 1,
					'tipo_movimiento' => NULL,
					'folio' => $result->folio,
					'tbl_proyectos_idtbl_proyectos' => $result->tbl_proyectos_idtbl_proyectos,
					'tbl_segmentos_proyecto_idtbl_segmentos_proyecto' => $result->tbl_segmentos_proyecto_idtbl_segmentos_proyecto
				);
				$almacen = $this->input->post("almacen");
			} elseif ($this->session->userdata('tipo') == 4 && $this->session->userdata('id')==50) {
				$data = array(
					'fecha' => date('Y-m-d H:i:s'),
					'tbl_usuarios_idtbl_usuarios' => $this->id_usuario($this->input->post('uid_usuario')),
					'tbl_users_idtbl_users' => $this->session->userdata('id'),
					'tbl_almacenes_idtbl_almacenes' => '16',
					'uid' => uniqid(),
					'tipo' => 'devolucion',
					'estatus' => 0,
					'tipo_movimiento' => NULL,
					'folio' => $result->folio,
					'tbl_proyectos_idtbl_proyectos' => $result->tbl_proyectos_idtbl_proyectos,
					'tbl_segmentos_proyecto_idtbl_segmentos_proyecto' => $result->tbl_segmentos_proyecto_idtbl_segmentos_proyecto
				);
				$almacen = '16';
			} elseif ($this->session->userdata('tipo') == 14 ) {
				$data = array(
					'fecha' => date('Y-m-d H:i:s'),
					'tbl_usuarios_idtbl_usuarios' => $this->id_usuario($this->input->post('uid_usuario')),
					'tbl_users_idtbl_users' => $this->session->userdata('id'),
					'tbl_almacenes_idtbl_almacenes' => '23',
					'uid' => uniqid(),
					'tipo' => 'devolucion',
					'estatus' => 0,
					'tipo_movimiento' => NULL,
					'folio' => $result->folio,
					'tbl_proyectos_idtbl_proyectos' => $result->tbl_proyectos_idtbl_proyectos,
					'tbl_segmentos_proyecto_idtbl_segmentos_proyecto' => $result->tbl_segmentos_proyecto_idtbl_segmentos_proyecto
				);
				$almacen = '23';
			} elseif($this->session->userdata('tipo')==10){	
				$data = array(
					'fecha' => date('Y-m-d H:i:s'),
					'tbl_usuarios_idtbl_usuarios' => $this->id_usuario($this->input->post('uid_usuario')),
					'tbl_users_idtbl_users' => $this->session->userdata('id'),
					'tbl_almacenes_idtbl_almacenes' => '1',
					'uid' => uniqid(),
					'tipo' => 'devolucion',
					'estatus' => 0,
					'tipo_movimiento' => NULL,
					'folio' => $result->folio,
					'tbl_proyectos_idtbl_proyectos' => $result->tbl_proyectos_idtbl_proyectos,
					'tbl_segmentos_proyecto_idtbl_segmentos_proyecto' => $result->tbl_segmentos_proyecto_idtbl_segmentos_proyecto,
					'seguridad_e_higiene' => 1
				);
				$almacen = '1';
			} elseif ($this->session->userdata('tipo') == 3) {
				$data = array(
					'fecha' => date('Y-m-d H:i:s'),
					'tbl_usuarios_idtbl_usuarios' => $this->id_usuario($this->input->post('uid_usuario')),
					'tbl_users_idtbl_users' => $this->session->userdata('id'),
					'tbl_almacenes_idtbl_almacenes' => ID_ALMACEN_REFACCIONES_CONTROL_VEHICULAR,
					'uid' => uniqid(),
					'tipo' => 'devolucion',
					'estatus' => 0,
					'tipo_movimiento' => NULL,
					'folio' => $result->folio,
					'tbl_proyectos_idtbl_proyectos' => $result->tbl_proyectos_idtbl_proyectos,
					'tbl_segmentos_proyecto_idtbl_segmentos_proyecto' => $result->tbl_segmentos_proyecto_idtbl_segmentos_proyecto
				);
				$almacen = ID_ALMACEN_REFACCIONES_CONTROL_VEHICULAR;
			} elseif ($this->session->userdata('tipo') == 2) {
				$data = array(
					'fecha' => date('Y-m-d H:i:s'),
					'tbl_usuarios_idtbl_usuarios' => $this->id_usuario($this->input->post('uid_usuario')),
					'tbl_users_idtbl_users' => $this->session->userdata('id'),
					'tbl_almacenes_idtbl_almacenes' => ID_ALMACEN_SISTEMAS,
					'uid' => uniqid(),
					'tipo' => 'devolucion',
					'estatus' => 0,
					'tipo_movimiento' => NULL,
					'folio' => $result->folio,
					'tbl_proyectos_idtbl_proyectos' => $result->tbl_proyectos_idtbl_proyectos,
					'tbl_segmentos_proyecto_idtbl_segmentos_proyecto' => $result->tbl_segmentos_proyecto_idtbl_segmentos_proyecto
				);
				$almacen = ID_ALMACEN_SISTEMAS;
			}

			//Se registra la entrada
			$this->db->insert('tbl_almacen_movimientos', $data);
			$last = $this->db->insert_id();
			$data = array(
				'dtl_almacen_iddtl_almacen' => $this->input->post('id'),
				'tbl_usuarios_idtbl_usuarios' => $this->id_usuario($this->input->post('uid_usuario')),
				'tbl_almacen_movimientos_idtbl_almacen_movimientos' => $last,
				'estatus_asignacion' => 'finalizada',
				'cantidad' => ($this->input->post('danado') * (-1)),
				'estado_entrega' => 'dañado',
				'entregado' => $this->input->post('danado')
			);
			$this->db->insert('dtl_asignacion', $data);

			if ($total == $this->input->post('devinicial')) {
				$data = array(
					'estatus_asignacion' => 'finalizada',
					'fecha_finalizacion' => date('Y-m-d H:i:s'),
					'estado_entrega' => 'dañado'
					//'entregado' => $this->input->post('danado')
				);

				$this->db->set($data);
				$this->db->set('cantidad',  'cantidad-' . $this->input->post('danado'), FALSE);
				$this->db->set('entregado', 'entregado+' . $this->input->post('danado'), FALSE);
				$this->db->where('iddtl_asignacion', $this->input->post('asignacion'));
				$this->db->update('dtl_asignacion');
			} else {
				//$query = $this->db->query("SELECT cantidad as total FROM `dtl_asignacion` WHERE `iddtl_asignacion` =" . $this->input->post('asignacion'));
				//$this->db->set('cantidad', $query->result()[0]->total - $this->input->post('danado'));
				$this->db->set('cantidad',  'cantidad-' . $this->input->post('danado'), FALSE);
				$this->db->set('entregado', 'entregado+' . $this->input->post('danado'), FALSE);
				$this->db->where('iddtl_asignacion', $this->input->post('asignacion'));
				$this->db->update('dtl_asignacion');
			}
			if($this->session->userdata('id')==50){
				$estatus = $this->db->query("SELECT * FROM `dtl_almacen` WHERE `tbl_catalogo_idtbl_catalogo` =" . $this->input->post('producto') . " AND estatus='dañado' AND tbl_almacenes_idtbl_almacenes=16");
			} elseif($this->session->userdata('tipo')==14){
				$estatus = $this->db->query("SELECT * FROM `dtl_almacen` WHERE `tbl_catalogo_idtbl_catalogo` =" . $this->input->post('producto') . " AND estatus='dañado' AND tbl_almacenes_idtbl_almacenes=23");
			} elseif($this->session->userdata('tipo')==10){
				$estatus = $this->db->query("SELECT * FROM dtl_almacen JOIN tbl_catalogo ON tbl_catalogo.idtbl_catalogo = dtl_almacen.tbl_catalogo_idtbl_catalogo WHERE dtl_almacen.tbl_catalogo_idtbl_catalogo =" . $this->input->post('producto') . " AND dtl_almacen.estatus='dañado' AND dtl_almacen.tbl_almacenes_idtbl_almacenes=1 AND tbl_catalogo.tipo=1");
			} elseif($this->session->userdata('tipo')==3){
				$estatus = $this->db->query("SELECT * FROM `dtl_almacen` WHERE `tbl_catalogo_idtbl_catalogo` =" . $this->input->post('producto') . " AND estatus='dañado' AND tbl_almacenes_idtbl_almacenes=" . ID_ALMACEN_REFACCIONES_CONTROL_VEHICULAR);
			} elseif($this->session->userdata('tipo')==2){
				$estatus = $this->db->query("SELECT * FROM `dtl_almacen` WHERE `tbl_catalogo_idtbl_catalogo` =" . $this->input->post('producto') . " AND estatus='dañado' AND tbl_almacenes_idtbl_almacenes=" . ID_ALMACEN_SISTEMAS);
			} elseif($this->session->userdata('tipo')==1){
				$estatus = $this->db->query("SELECT * FROM `dtl_almacen` WHERE `tbl_catalogo_idtbl_catalogo` =" . $this->input->post('producto') . " AND estatus='dañado' AND tbl_almacenes_idtbl_almacenes=" . ID_ALMACEN_ALTO_COSTO);
			} elseif(($this->session->userdata('tipo') == 4 || ($this->session->userdata('encargado_almacen') != null && $this->session->userdata('encargado_almacen') != '')) && $this->session->userdata('id')!=50){
				$estatus = $this->db->query("SELECT * FROM `dtl_almacen` WHERE `tbl_catalogo_idtbl_catalogo` =" . $this->input->post('producto') . " AND estatus='dañado' AND tbl_almacenes_idtbl_almacenes=" . $almacen);
			}
			$catidad = $this->input->post('danado');

			if ($estatus->num_rows() > 0) {
				/*$this->db->set('existencias', 'existencias+' . $catidad, FALSE);
				$this->db->where('tbl_catalogo_idtbl_catalogo', $this->input->post('producto'));
				$this->db->where('tbl_almacenes_idtbl_almacenes', $almacen);
				$this->db->where('estatus', 'dañado');
				$this->db->update('dtl_almacen');*/
				$producto = $this->input->post('producto');
				if($this->session->userdata('tipo') == 10){
					$this->db->query("UPDATE dtl_almacen JOIN tbl_catalogo ON tbl_catalogo.idtbl_catalogo = dtl_almacen.tbl_catalogo_idtbl_catalogo SET dtl_almacen.existencias = dtl_almacen.existencias+$catidad WHERE dtl_almacen.tbl_catalogo_idtbl_catalogo = $producto AND dtl_almacen.tbl_almacenes_idtbl_almacenes = $almacen AND dtl_almacen.estatus = 'dañado'");
				}else{
					$this->db->query("UPDATE dtl_almacen JOIN tbl_catalogo ON tbl_catalogo.idtbl_catalogo = dtl_almacen.tbl_catalogo_idtbl_catalogo SET dtl_almacen.existencias = dtl_almacen.existencias+$catidad WHERE dtl_almacen.tbl_catalogo_idtbl_catalogo = $producto AND dtl_almacen.tbl_almacenes_idtbl_almacenes = $almacen AND dtl_almacen.estatus = 'dañado'");
				}
			} else {
				if ($this->session->userdata('tipo') == 1) {
					$dataAlmacen = array(
						'tbl_almacenes_idtbl_almacenes' => ID_ALMACEN_ALTO_COSTO,
						'tbl_catalogo_idtbl_catalogo' => $this->input->post('producto'),
						'existencias' => $catidad,
						'estatus' => 'dañado'
					);
				} elseif (($this->session->userdata('tipo') == 4 || ($this->session->userdata('encargado_almacen') != null && $this->session->userdata('encargado_almacen') != '')) && $this->session->userdata('id')!=50) {
					$dataAlmacen = array(
						'tbl_almacenes_idtbl_almacenes' => $this->input->post("almacen"),
						'tbl_catalogo_idtbl_catalogo' => $this->input->post('producto'),
						'existencias' => $catidad,
						'estatus' => 'dañado'
					);
				} elseif ($this->session->userdata('tipo') == 4 && $this->session->userdata('id')==50) {
					$dataAlmacen = array(
						'tbl_almacenes_idtbl_almacenes' => '16',
						'tbl_catalogo_idtbl_catalogo' => $this->input->post('producto'),
						'existencias' => $catidad,
						'estatus' => 'dañado'
					);
				} elseif ($this->session->userdata('tipo') == 14 ) {
					$dataAlmacen = array(
						'tbl_almacenes_idtbl_almacenes' => '23',
						'tbl_catalogo_idtbl_catalogo' => $this->input->post('producto'),
						'existencias' => $catidad,
						'estatus' => 'dañado'
					);
				} elseif($this->session->userdata('tipo')==10 ){
					$dataAlmacen = array(
						'tbl_almacenes_idtbl_almacenes' => '1',
						'tbl_catalogo_idtbl_catalogo' => $this->input->post('producto'),
						'existencias' => $catidad,
						'estatus' => 'dañado'
					);
				} elseif ($this->session->userdata('tipo') == 3) {
					$dataAlmacen = array(
						'tbl_almacenes_idtbl_almacenes' => ID_ALMACEN_REFACCIONES_CONTROL_VEHICULAR,
						'tbl_catalogo_idtbl_catalogo' => $this->input->post('producto'),
						'existencias' => $catidad,
						'estatus' => 'dañado'
					);
				} elseif ($this->session->userdata('tipo') == 2) {
					$dataAlmacen = array(
						'tbl_almacenes_idtbl_almacenes' => ID_ALMACEN_SISTEMAS,
						'tbl_catalogo_idtbl_catalogo' => $this->input->post('producto'),
						'existencias' => $catidad,
						'estatus' => 'dañado'
					);
				}
				$this->db->insert('dtl_almacen', $dataAlmacen);
			}
		}

		if ($this->input->post('robado') > 0) {
			if ($this->session->userdata('tipo') == 1) {
				$data = array(
					'fecha' => date('Y-m-d H:i:s'),
					'tbl_usuarios_idtbl_usuarios' => $this->id_usuario($this->input->post('uid_usuario')),
					'tbl_users_idtbl_users' => $this->session->userdata('id'),
					'tbl_almacenes_idtbl_almacenes' => ID_ALMACEN_ALTO_COSTO,
					'uid' => uniqid(),
					'tipo' => 'devolucion',
					'estatus' => 0,
					'tipo_movimiento' => NULL,
					'folio' => $result->folio,
					'tbl_proyectos_idtbl_proyectos' => $result->tbl_proyectos_idtbl_proyectos,
					'tbl_segmentos_proyecto_idtbl_segmentos_proyecto' => $result->tbl_segmentos_proyecto_idtbl_segmentos_proyecto
				);
				$almacen = ID_ALMACEN_ALTO_COSTO;
			} elseif (($this->session->userdata('tipo') == 4 || ($this->session->userdata('encargado_almacen') != null && $this->session->userdata('encargado_almacen') != '')) && $this->session->userdata('id')!=50) {
				$data = array(
					'fecha' => date('Y-m-d H:i:s'),
					'tbl_usuarios_idtbl_usuarios' => $this->id_usuario($this->input->post('uid_usuario')),
					'tbl_users_idtbl_users' => $this->session->userdata('id'),
					'tbl_almacenes_idtbl_almacenes' => $this->input->post("almacen"),
					'uid' => uniqid(),
					'tipo' => 'devolucion-almacen',
					'estatus' => 1,
					'tipo_movimiento' => NULL,
					'folio' => $result->folio,
					'tbl_proyectos_idtbl_proyectos' => $result->tbl_proyectos_idtbl_proyectos,
					'tbl_segmentos_proyecto_idtbl_segmentos_proyecto' => $result->tbl_segmentos_proyecto_idtbl_segmentos_proyecto
				);
				$almacen = $this->input->post("almacen");
			} elseif ($this->session->userdata('tipo') == 4 && $this->session->userdata('id')==50) {
				$data = array(
					'fecha' => date('Y-m-d H:i:s'),
					'tbl_usuarios_idtbl_usuarios' => $this->id_usuario($this->input->post('uid_usuario')),
					'tbl_users_idtbl_users' => $this->session->userdata('id'),
					'tbl_almacenes_idtbl_almacenes' => '16',
					'uid' => uniqid(),
					'tipo' => 'devolucion',
					'estatus' => 0,
					'tipo_movimiento' => NULL,
					'folio' => $result->folio,
					'tbl_proyectos_idtbl_proyectos' => $result->tbl_proyectos_idtbl_proyectos,
					'tbl_segmentos_proyecto_idtbl_segmentos_proyecto' => $result->tbl_segmentos_proyecto_idtbl_segmentos_proyecto
				);
				$almacen = '16';
			} elseif ($this->session->userdata('tipo') == 14 ) {
				$data = array(
					'fecha' => date('Y-m-d H:i:s'),
					'tbl_usuarios_idtbl_usuarios' => $this->id_usuario($this->input->post('uid_usuario')),
					'tbl_users_idtbl_users' => $this->session->userdata('id'),
					'tbl_almacenes_idtbl_almacenes' => '23',
					'uid' => uniqid(),
					'tipo' => 'devolucion',
					'estatus' => 0,
					'tipo_movimiento' => NULL,
					'folio' => $result->folio,
					'tbl_proyectos_idtbl_proyectos' => $result->tbl_proyectos_idtbl_proyectos,
					'tbl_segmentos_proyecto_idtbl_segmentos_proyecto' => $result->tbl_segmentos_proyecto_idtbl_segmentos_proyecto
				);
				$almacen = '23';
			} elseif($this->session->userdata('tipo')==10){
				$data = array(
					'fecha' => date('Y-m-d H:i:s'),
					'tbl_usuarios_idtbl_usuarios' => $this->id_usuario($this->input->post('uid_usuario')),
					'tbl_users_idtbl_users' => $this->session->userdata('id'),
					'tbl_almacenes_idtbl_almacenes' => '1',
					'uid' => uniqid(),
					'tipo' => 'devolucion',
					'estatus' => 0,
					'tipo_movimiento' => NULL,
					'folio' => $result->folio,
					'tbl_proyectos_idtbl_proyectos' => $result->tbl_proyectos_idtbl_proyectos,
					'tbl_segmentos_proyecto_idtbl_segmentos_proyecto' => $result->tbl_segmentos_proyecto_idtbl_segmentos_proyecto,
					'seguridad_e_higiene' => 1
				);
				$almacen = '1';
			} elseif ($this->session->userdata('tipo') == 3) {
				$data = array(
					'fecha' => date('Y-m-d H:i:s'),
					'tbl_usuarios_idtbl_usuarios' => $this->id_usuario($this->input->post('uid_usuario')),
					'tbl_users_idtbl_users' => $this->session->userdata('id'),
					'tbl_almacenes_idtbl_almacenes' => ID_ALMACEN_REFACCIONES_CONTROL_VEHICULAR,
					'uid' => uniqid(),
					'tipo' => 'devolucion',
					'estatus' => 0,
					'tipo_movimiento' => NULL,
					'folio' => $result->folio,
					'tbl_proyectos_idtbl_proyectos' => $result->tbl_proyectos_idtbl_proyectos,
					'tbl_segmentos_proyecto_idtbl_segmentos_proyecto' => $result->tbl_segmentos_proyecto_idtbl_segmentos_proyecto
				);
				$almacen = ID_ALMACEN_REFACCIONES_CONTROL_VEHICULAR;
			} elseif ($this->session->userdata('tipo') == 2) {
				$data = array(
					'fecha' => date('Y-m-d H:i:s'),
					'tbl_usuarios_idtbl_usuarios' => $this->id_usuario($this->input->post('uid_usuario')),
					'tbl_users_idtbl_users' => $this->session->userdata('id'),
					'tbl_almacenes_idtbl_almacenes' => ID_ALMACEN_SISTEMAS,
					'uid' => uniqid(),
					'tipo' => 'devolucion',
					'estatus' => 0,
					'tipo_movimiento' => NULL,
					'folio' => $result->folio,
					'tbl_proyectos_idtbl_proyectos' => $result->tbl_proyectos_idtbl_proyectos,
					'tbl_segmentos_proyecto_idtbl_segmentos_proyecto' => $result->tbl_segmentos_proyecto_idtbl_segmentos_proyecto
				);
				$almacen = ID_ALMACEN_SISTEMAS;
			}

			//Se registra la entrada
			$this->db->insert('tbl_almacen_movimientos', $data);
			$last = $this->db->insert_id();
			$data = array(
				'dtl_almacen_iddtl_almacen' => $this->input->post('id'),
				'tbl_usuarios_idtbl_usuarios' => $this->id_usuario($this->input->post('uid_usuario')),
				'tbl_almacen_movimientos_idtbl_almacen_movimientos' => $last,
				'estatus_asignacion' => 'finalizada',
				'cantidad' => ($this->input->post('robado') * (-1)),
				'estado_entrega' => 'robado',
				'entregado' => $this->input->post('robado')
			);
			$this->db->insert('dtl_asignacion', $data);

			if ($total == $this->input->post('devinicial')) {
				$data = array(
					'estatus_asignacion' => 'finalizada',
					'fecha_finalizacion' => date('Y-m-d H:i:s'),
					'estado_entrega' => 'robado'
					//'entregado' => $this->input->post('robado')
				);

				$this->db->set($data);
				$this->db->set('cantidad',  'cantidad-' . $this->input->post('robado'), FALSE);
				$this->db->set('entregado', 'entregado+' . $this->input->post('robado'), FALSE);
				$this->db->where('iddtl_asignacion', $this->input->post('asignacion'));
				$this->db->update('dtl_asignacion');
			} else {
				//$query = $this->db->query("SELECT cantidad as total FROM `dtl_asignacion` WHERE `iddtl_asignacion` =" . $this->input->post('asignacion'));
				//$this->db->set('cantidad', $query->result()[0]->total - $this->input->post('robado'));
				$this->db->set('cantidad',  'cantidad-' . $this->input->post('robado'), FALSE);
				$this->db->set('entregado', 'entregado+' . $this->input->post('robado'), FALSE);
				$this->db->where('iddtl_asignacion', $this->input->post('asignacion'));
				$this->db->update('dtl_asignacion');
			}
			if($this->session->userdata('id')==50){
				$estatus = $this->db->query("SELECT * FROM `dtl_almacen` WHERE `tbl_catalogo_idtbl_catalogo` =" . $this->input->post('producto') . " AND estatus='robado' AND tbl_almacenes_idtbl_almacenes=16");
			} elseif($this->session->userdata('tipo')==14){
				$estatus = $this->db->query("SELECT * FROM `dtl_almacen` WHERE `tbl_catalogo_idtbl_catalogo` =" . $this->input->post('producto') . " AND estatus='robado' AND tbl_almacenes_idtbl_almacenes=23");
			} elseif($this->session->userdata('tipo')==10){
				$estatus = $this->db->query("SELECT * FROM dtl_almacen JOIN tbl_catalogo ON tbl_catalogo.idtbl_catalogo = dtl_almacen.tbl_catalogo_idtbl_catalogo WHERE tbl_catalogo_idtbl_catalogo =" . $this->input->post('producto') . " AND estatus='robado' AND tbl_almacenes_idtbl_almacenes=1 AND tbl_catalogo.tipo=1");
			} elseif($this->session->userdata('tipo')==3){
				$estatus = $this->db->query("SELECT * FROM `dtl_almacen` WHERE `tbl_catalogo_idtbl_catalogo` =" . $this->input->post('producto') . " AND estatus='robado' AND tbl_almacenes_idtbl_almacenes=" . ID_ALMACEN_REFACCIONES_CONTROL_VEHICULAR);
			} elseif($this->session->userdata('tipo')==2){
				$estatus = $this->db->query("SELECT * FROM `dtl_almacen` WHERE `tbl_catalogo_idtbl_catalogo` =" . $this->input->post('producto') . " AND estatus='robado' AND tbl_almacenes_idtbl_almacenes=" . ID_ALMACEN_SISTEMAS);
			} elseif($this->session->userdata('tipo')==1){
				$estatus = $this->db->query("SELECT * FROM `dtl_almacen` WHERE `tbl_catalogo_idtbl_catalogo` =" . $this->input->post('producto') . " AND estatus='robado' AND tbl_almacenes_idtbl_almacenes=" . ID_ALMACEN_ALTO_COSTO);
			} elseif(($this->session->userdata('tipo') == 4 || ($this->session->userdata('encargado_almacen') != null && $this->session->userdata('encargado_almacen') != '')) && $this->session->userdata('id')!=50){
				$estatus = $this->db->query("SELECT * FROM `dtl_almacen` WHERE `tbl_catalogo_idtbl_catalogo` =" . $this->input->post('producto') . " AND estatus='robado' AND tbl_almacenes_idtbl_almacenes=" . $almacen);
			}
			$catidad = $this->input->post('robado');

			if ($estatus->num_rows() > 0) {
				/*$this->db->set('existencias', 'existencias+' . $catidad, FALSE);
				$this->db->where('tbl_catalogo_idtbl_catalogo', $this->input->post('producto'));
				$this->db->where('tbl_almacenes_idtbl_almacenes', $almacen);
				$this->db->where('estatus', 'robado');
				$this->db->update('dtl_almacen');*/
				$producto = $this->input->post('producto');
				if($this->session->userdata('tipo') == 10){
					$this->db->query("UPDATE dtl_almacen JOIN tbl_catalogo ON tbl_catalogo.idtbl_catalogo = dtl_almacen.tbl_catalogo_idtbl_catalogo SET dtl_almacen.existencias = dtl_almacen.existencias+$catidad WHERE dtl_almacen.tbl_catalogo_idtbl_catalogo = $producto AND dtl_almacen.tbl_almacenes_idtbl_almacenes = $almacen AND dtl_almacen.estatus = 'robado'");
				}else{
					$this->db->query("UPDATE dtl_almacen JOIN tbl_catalogo ON tbl_catalogo.idtbl_catalogo = dtl_almacen.tbl_catalogo_idtbl_catalogo SET dtl_almacen.existencias = dtl_almacen.existencias+$catidad WHERE dtl_almacen.tbl_catalogo_idtbl_catalogo = $producto AND dtl_almacen.tbl_almacenes_idtbl_almacenes = $almacen AND dtl_almacen.estatus = 'robado'");
				}
			} else {
				if ($this->session->userdata('tipo') == 1) {
					$dataAlmacen = array(
						'tbl_almacenes_idtbl_almacenes' => ID_ALMACEN_ALTO_COSTO,
						'tbl_catalogo_idtbl_catalogo' => $this->input->post('producto'),
						'existencias' => $catidad,
						'estatus' => 'robado'
					);
					$almacen = ID_ALMACEN_ALTO_COSTO;
				} elseif (($this->session->userdata('tipo') == 4 || ($this->session->userdata('encargado_almacen') != null && $this->session->userdata('encargado_almacen') != '')) && $this->session->userdata('id')!=50) {
					$dataAlmacen = array(
						'tbl_almacenes_idtbl_almacenes' => $this->input->post("almacen"),
						'tbl_catalogo_idtbl_catalogo' => $this->input->post('producto'),
						'existencias' => $catidad,
						'estatus' => 'robado'
					);
					$almacen = $this->input->post("almacen");
				} elseif ($this->session->userdata('tipo') == 4 && $this->session->userdata('id')==50) {
					$dataAlmacen = array(
						'tbl_almacenes_idtbl_almacenes' => '16',
						'tbl_catalogo_idtbl_catalogo' => $this->input->post('producto'),
						'existencias' => $catidad,
						'estatus' => 'robado'
					);
					$almacen = '16';
				} elseif ($this->session->userdata('tipo') == 14 ) {
					$dataAlmacen = array(
						'tbl_almacenes_idtbl_almacenes' => '23',
						'tbl_catalogo_idtbl_catalogo' => $this->input->post('producto'),
						'existencias' => $catidad,
						'estatus' => 'robado'
					);
					$almacen = '23';
				} elseif ($this->session->userdata('tipo')==10){
					$dataAlmacen = array(
						'tbl_almacenes_idtbl_almacenes' => '1',
						'tbl_catalogo_idtbl_catalogo' => $this->input->post('producto'),
						'existencias' => $catidad,
						'estatus' => 'robado'
					);
					$almacen = '1';
				} elseif ($this->session->userdata('tipo') == 3) {
					$dataAlmacen = array(
						'tbl_almacenes_idtbl_almacenes' => ID_ALMACEN_REFACCIONES_CONTROL_VEHICULAR,
						'tbl_catalogo_idtbl_catalogo' => $this->input->post('producto'),
						'existencias' => $catidad,
						'estatus' => 'robado'
					);
					$almacen = ID_ALMACEN_REFACCIONES_CONTROL_VEHICULAR;
				} elseif ($this->session->userdata('tipo') == 2) {
					$dataAlmacen = array(
						'tbl_almacenes_idtbl_almacenes' => ID_ALMACEN_SISTEMAS,
						'tbl_catalogo_idtbl_catalogo' => $this->input->post('producto'),
						'existencias' => $catidad,
						'estatus' => 'robado'
					);
					$almacen = ID_ALMACEN_SISTEMAS;
				}
				$this->db->insert('dtl_almacen', $dataAlmacen);
			}
		}

		if ($this->input->post('robadobaja') > 0) {
			if ($this->session->userdata('tipo') == 1) {
				$data = array(
					'fecha' => date('Y-m-d H:i:s'),
					'tbl_usuarios_idtbl_usuarios' => $this->id_usuario($this->input->post('uid_usuario')),
					'tbl_users_idtbl_users' => $this->session->userdata('id'),
					'tbl_almacenes_idtbl_almacenes' => ID_ALMACEN_ALTO_COSTO,
					'uid' => uniqid(),
					'tipo' => 'devolucion',
					'estatus' => 0,
					'tipo_movimiento' => NULL,
					'folio' => $result->folio,
					'tbl_proyectos_idtbl_proyectos' => $result->tbl_proyectos_idtbl_proyectos,
					'tbl_segmentos_proyecto_idtbl_segmentos_proyecto' => $result->tbl_segmentos_proyecto_idtbl_segmentos_proyecto
				);
				$almacen = ID_ALMACEN_ALTO_COSTO;
			} elseif (($this->session->userdata('tipo') == 4 || ($this->session->userdata('encargado_almacen') != null && $this->session->userdata('encargado_almacen') != '')) && $this->session->userdata('id')!=50) {
				$data = array(
					'fecha' => date('Y-m-d H:i:s'),
					'tbl_usuarios_idtbl_usuarios' => $this->id_usuario($this->input->post('uid_usuario')),
					'tbl_users_idtbl_users' => $this->session->userdata('id'),
					'tbl_almacenes_idtbl_almacenes' => $this->input->post("almacen"),
					'uid' => uniqid(),
					'tipo' => 'devolucion-almacen',
					'estatus' => 1,
					'tipo_movimiento' => NULL,
					'folio' => $result->folio,
					'tbl_proyectos_idtbl_proyectos' => $result->tbl_proyectos_idtbl_proyectos,
					'tbl_segmentos_proyecto_idtbl_segmentos_proyecto' => $result->tbl_segmentos_proyecto_idtbl_segmentos_proyecto
				);
				$almacen = $this->input->post("almacen");
			} elseif ($this->session->userdata('tipo') == 4 && $this->session->userdata('id')==50) {
				$data = array(
					'fecha' => date('Y-m-d H:i:s'),
					'tbl_usuarios_idtbl_usuarios' => $this->id_usuario($this->input->post('uid_usuario')),
					'tbl_users_idtbl_users' => $this->session->userdata('id'),
					'tbl_almacenes_idtbl_almacenes' => '16',
					'uid' => uniqid(),
					'tipo' => 'devolucion',
					'estatus' => 0,
					'tipo_movimiento' => NULL,
					'folio' => $result->folio,
					'tbl_proyectos_idtbl_proyectos' => $result->tbl_proyectos_idtbl_proyectos,
					'tbl_segmentos_proyecto_idtbl_segmentos_proyecto' => $result->tbl_segmentos_proyecto_idtbl_segmentos_proyecto
				);
				$almacen = '16';
			} elseif ($this->session->userdata('tipo') == 14 ) {
				$data = array(
					'fecha' => date('Y-m-d H:i:s'),
					'tbl_usuarios_idtbl_usuarios' => $this->id_usuario($this->input->post('uid_usuario')),
					'tbl_users_idtbl_users' => $this->session->userdata('id'),
					'tbl_almacenes_idtbl_almacenes' => '23',
					'uid' => uniqid(),
					'tipo' => 'devolucion',
					'estatus' => 0,
					'tipo_movimiento' => NULL,
					'folio' => $result->folio,
					'tbl_proyectos_idtbl_proyectos' => $result->tbl_proyectos_idtbl_proyectos,
					'tbl_segmentos_proyecto_idtbl_segmentos_proyecto' => $result->tbl_segmentos_proyecto_idtbl_segmentos_proyecto
				);
				$almacen = '23';
			} elseif($this->session->userdata('tipo')==10){
				$data = array(
					'fecha' => date('Y-m-d H:i:s'),
					'tbl_usuarios_idtbl_usuarios' => $this->id_usuario($this->input->post('uid_usuario')),
					'tbl_users_idtbl_users' => $this->session->userdata('id'),
					'tbl_almacenes_idtbl_almacenes' => '1',
					'uid' => uniqid(),
					'tipo' => 'devolucion',
					'estatus' => 0,
					'tipo_movimiento' => NULL,
					'folio' => $result->folio,
					'tbl_proyectos_idtbl_proyectos' => $result->tbl_proyectos_idtbl_proyectos,
					'tbl_segmentos_proyecto_idtbl_segmentos_proyecto' => $result->tbl_segmentos_proyecto_idtbl_segmentos_proyecto,
					'seguridad_e_higiene' => 1
				);
				$almacen = '1';
			} elseif ($this->session->userdata('tipo') == 3) {
				$data = array(
					'fecha' => date('Y-m-d H:i:s'),
					'tbl_usuarios_idtbl_usuarios' => $this->id_usuario($this->input->post('uid_usuario')),
					'tbl_users_idtbl_users' => $this->session->userdata('id'),
					'tbl_almacenes_idtbl_almacenes' => ID_ALMACEN_REFACCIONES_CONTROL_VEHICULAR,
					'uid' => uniqid(),
					'tipo' => 'devolucion',
					'estatus' => 0,
					'tipo_movimiento' => NULL,
					'folio' => $result->folio,
					'tbl_proyectos_idtbl_proyectos' => $result->tbl_proyectos_idtbl_proyectos,
					'tbl_segmentos_proyecto_idtbl_segmentos_proyecto' => $result->tbl_segmentos_proyecto_idtbl_segmentos_proyecto
				);
				$almacen = ID_ALMACEN_REFACCIONES_CONTROL_VEHICULAR;
			} elseif ($this->session->userdata('tipo') == 2) {
				$data = array(
					'fecha' => date('Y-m-d H:i:s'),
					'tbl_usuarios_idtbl_usuarios' => $this->id_usuario($this->input->post('uid_usuario')),
					'tbl_users_idtbl_users' => $this->session->userdata('id'),
					'tbl_almacenes_idtbl_almacenes' => ID_ALMACEN_SISTEMAS,
					'uid' => uniqid(),
					'tipo' => 'devolucion',
					'estatus' => 0,
					'tipo_movimiento' => NULL,
					'folio' => $result->folio,
					'tbl_proyectos_idtbl_proyectos' => $result->tbl_proyectos_idtbl_proyectos,
					'tbl_segmentos_proyecto_idtbl_segmentos_proyecto' => $result->tbl_segmentos_proyecto_idtbl_segmentos_proyecto
				);
				$almacen = ID_ALMACEN_SISTEMAS;
			}

			//Se registra la entrada
			$this->db->insert('tbl_almacen_movimientos', $data);
			$last = $this->db->insert_id();
			$data = array(
				'dtl_almacen_iddtl_almacen' => $this->input->post('id'),
				'tbl_usuarios_idtbl_usuarios' => $this->id_usuario($this->input->post('uid_usuario')),
				'tbl_almacen_movimientos_idtbl_almacen_movimientos' => $last,
				'estatus_asignacion' => 'finalizada',
				'cantidad' => ($this->input->post('robadobaja') * (-1)),
				'estado_entrega' => 'abuso de confianza',
				'entregado' => $this->input->post('robadobaja')
			);
			$this->db->insert('dtl_asignacion', $data);

			if ($total == $this->input->post('devinicial')) {
				$data = array(
					'estatus_asignacion' => 'finalizada',
					'fecha_finalizacion' => date('Y-m-d H:i:s'),
					'estado_entrega' => 'abuso de confianza'
					//'entregado' => $this->input->post('robadobaja')
				);

				$this->db->set($data);
				$this->db->set('cantidad',  'cantidad-' . $this->input->post('robadobaja'), FALSE);
				$this->db->set('entregado', 'entregado+' . $this->input->post('robadobaja'), FALSE);
				$this->db->where('iddtl_asignacion', $this->input->post('asignacion'));
				$this->db->update('dtl_asignacion');
			} else {
				//$query = $this->db->query("SELECT cantidad as total FROM `dtl_asignacion` WHERE `iddtl_asignacion` =" . $this->input->post('asignacion'));
				//$this->db->set('cantidad', $query->result()[0]->total - $this->input->post('robadobaja'));
				$this->db->set('cantidad',  'cantidad-' . $this->input->post('robadobaja'), FALSE);
				$this->db->set('entregado', 'entregado+' . $this->input->post('robadobaja'), FALSE);
				$this->db->where('iddtl_asignacion', $this->input->post('asignacion'));
				$this->db->update('dtl_asignacion');
			}
			if($this->session->userdata('id')==50){
				$estatus = $this->db->query("SELECT * FROM `dtl_almacen` WHERE `tbl_catalogo_idtbl_catalogo` =" . $this->input->post('producto') . " AND estatus='abuso de confianza' AND tbl_almacenes_idtbl_almacenes=16");
			} elseif($this->session->userdata('tipo')==14 ){
				$estatus = $this->db->query("SELECT * FROM `dtl_almacen` WHERE `tbl_catalogo_idtbl_catalogo` =" . $this->input->post('producto') . " AND estatus='abuso de confianza' AND tbl_almacenes_idtbl_almacenes=23");
			} elseif($this->session->userdata('tipo')==10){
				$estatus = $this->db->query("SELECT * FROM dtl_almacen JOIN tbl_catalogo ON tbl_catalogo.idtbl_catalogo = dtl_almacen.tbl_catalogo_idtbl_catalogo WHERE tbl_catalogo_idtbl_catalogo =" . $this->input->post('producto') . " AND estatus='abuso de confianza' AND tbl_almacenes_idtbl_almacenes=1 AND tbl_catalogo.tipo=1");
			} elseif($this->session->userdata('tipo')==3){
				$estatus = $this->db->query("SELECT * FROM `dtl_almacen` WHERE `tbl_catalogo_idtbl_catalogo` =" . $this->input->post('producto') . " AND estatus='abuso de confianza' AND tbl_almacenes_idtbl_almacenes=" . ID_ALMACEN_REFACCIONES_CONTROL_VEHICULAR);
			} elseif($this->session->userdata('tipo')==2){
				$estatus = $this->db->query("SELECT * FROM `dtl_almacen` WHERE `tbl_catalogo_idtbl_catalogo` =" . $this->input->post('producto') . " AND estatus='abuso de confianza' AND tbl_almacenes_idtbl_almacenes=" . ID_ALMACEN_SISTEMAS);
			} elseif($this->session->userdata('tipo')==1){
				$estatus = $this->db->query("SELECT * FROM `dtl_almacen` WHERE `tbl_catalogo_idtbl_catalogo` =" . $this->input->post('producto') . " AND estatus='abuso de confianza' AND tbl_almacenes_idtbl_almacenes=" . ID_ALMACEN_ALTO_COSTO);
			} elseif(($this->session->userdata('tipo') == 4 || ($this->session->userdata('encargado_almacen') != null && $this->session->userdata('encargado_almacen') != '')) && $this->session->userdata('id')!=50){
				$estatus = $this->db->query("SELECT * FROM `dtl_almacen` WHERE `tbl_catalogo_idtbl_catalogo` =" . $this->input->post('producto') . " AND estatus='abuso de confianza' AND tbl_almacenes_idtbl_almacenes=" . $almacen);
			}
			$catidad = $this->input->post('robadobaja');

			if ($estatus->num_rows() > 0) {
				/*$this->db->set('existencias', 'existencias+' . $catidad, FALSE);
				$this->db->where('tbl_catalogo_idtbl_catalogo', $this->input->post('producto'));
				$this->db->where('tbl_almacenes_idtbl_almacenes', $almacen);
				$this->db->where('estatus', 'abuso de confianza');
				$this->db->update('dtl_almacen');*/
				$producto = $this->input->post('producto');
				if($this->session->userdata('tipo') == 10){
					$this->db->query("UPDATE dtl_almacen JOIN tbl_catalogo ON tbl_catalogo.idtbl_catalogo = dtl_almacen.tbl_catalogo_idtbl_catalogo SET dtl_almacen.existencias = dtl_almacen.existencias+$catidad WHERE dtl_almacen.tbl_catalogo_idtbl_catalogo = $producto AND dtl_almacen.tbl_almacenes_idtbl_almacenes = $almacen AND dtl_almacen.estatus = 'abuso de confianza'");
				}else{
					$this->db->query("UPDATE dtl_almacen JOIN tbl_catalogo ON tbl_catalogo.idtbl_catalogo = dtl_almacen.tbl_catalogo_idtbl_catalogo SET dtl_almacen.existencias = dtl_almacen.existencias+$catidad WHERE dtl_almacen.tbl_catalogo_idtbl_catalogo = $producto AND dtl_almacen.tbl_almacenes_idtbl_almacenes = $almacen AND dtl_almacen.estatus = 'abuso de confianza'");
				}
			} else {
				if ($this->session->userdata('tipo') == 1) {
					$dataAlmacen = array(
						'tbl_almacenes_idtbl_almacenes' => ID_ALMACEN_ALTO_COSTO,
						'tbl_catalogo_idtbl_catalogo' => $this->input->post('producto'),
						'existencias' => $catidad,
						'estatus' => 'abuso de confianza'
					);
				} elseif (($this->session->userdata('tipo') == 4 || ($this->session->userdata('encargado_almacen') != null && $this->session->userdata('encargado_almacen') != '')) && $this->session->userdata('id')!=50) {
					$dataAlmacen = array(
						'tbl_almacenes_idtbl_almacenes' => $this->input->post("almacen"),
						'tbl_catalogo_idtbl_catalogo' => $this->input->post('producto'),
						'existencias' => $catidad,
						'estatus' => 'abuso de confianza'
					);
				} elseif ($this->session->userdata('tipo') == 4 && $this->session->userdata('id')==50) {
					$dataAlmacen = array(
						'tbl_almacenes_idtbl_almacenes' => '16',
						'tbl_catalogo_idtbl_catalogo' => $this->input->post('producto'),
						'existencias' => $catidad,
						'estatus' => 'abuso de confianza'
					);
				} elseif ($this->session->userdata('tipo') == 14 ) {
					$dataAlmacen = array(
						'tbl_almacenes_idtbl_almacenes' => '23',
						'tbl_catalogo_idtbl_catalogo' => $this->input->post('producto'),
						'existencias' => $catidad,
						'estatus' => 'abuso de confianza'
					);
				} elseif($this->session->userdata('tipo')==10 ){
					$dataAlmacen = array(
						'tbl_almacenes_idtbl_almacenes' => '1',
						'tbl_catalogo_idtbl_catalogo' => $this->input->post('producto'),
						'existencias' => $catidad,
						'estatus' => 'abuso de confianza'
					);
				} elseif ($this->session->userdata('tipo') == 3) {
					$dataAlmacen = array(
						'tbl_almacenes_idtbl_almacenes' => ID_ALMACEN_REFACCIONES_CONTROL_VEHICULAR,
						'tbl_catalogo_idtbl_catalogo' => $this->input->post('producto'),
						'existencias' => $catidad,
						'estatus' => 'abuso de confianza'
					);
				} elseif ($this->session->userdata('tipo') == 2) {
					$dataAlmacen = array(
						'tbl_almacenes_idtbl_almacenes' => ID_ALMACEN_SISTEMAS,
						'tbl_catalogo_idtbl_catalogo' => $this->input->post('producto'),
						'existencias' => $catidad,
						'estatus' => 'abuso de confianza'
					);
				}
				$this->db->insert('dtl_almacen', $dataAlmacen);
			}
		}

		if ($this->input->post('merma') > 0) {
			if ($this->session->userdata('tipo') == 1) {
				$data = array(
					'fecha' => date('Y-m-d H:i:s'),
					'tbl_usuarios_idtbl_usuarios' => $this->id_usuario($this->input->post('uid_usuario')),
					'tbl_users_idtbl_users' => $this->session->userdata('id'),
					'tbl_almacenes_idtbl_almacenes' => ID_ALMACEN_ALTO_COSTO,
					'uid' => uniqid(),
					'tipo' => 'devolucion',
					'estatus' => 0,
					'tipo_movimiento' => NULL,
					'folio' => $result->folio,
					'tbl_proyectos_idtbl_proyectos' => $result->tbl_proyectos_idtbl_proyectos,
					'tbl_segmentos_proyecto_idtbl_segmentos_proyecto' => $result->tbl_segmentos_proyecto_idtbl_segmentos_proyecto
				);
				$almacen = ID_ALMACEN_ALTO_COSTO;
			} elseif (($this->session->userdata('tipo') == 4 || ($this->session->userdata('encargado_almacen') != null && $this->session->userdata('encargado_almacen') != '')) && $this->session->userdata('id')!=50) {
				$data = array(
					'fecha' => date('Y-m-d H:i:s'),
					'tbl_usuarios_idtbl_usuarios' => $this->id_usuario($this->input->post('uid_usuario')),
					'tbl_users_idtbl_users' => $this->session->userdata('id'),
					'tbl_almacenes_idtbl_almacenes' => $this->input->post("almacen"),
					'uid' => uniqid(),
					'tipo' => 'devolucion-almacen',
					'estatus' => 1,
					'tipo_movimiento' => NULL,
					'folio' => $result->folio,
					'tbl_proyectos_idtbl_proyectos' => $result->tbl_proyectos_idtbl_proyectos,
					'tbl_segmentos_proyecto_idtbl_segmentos_proyecto' => $result->tbl_segmentos_proyecto_idtbl_segmentos_proyecto
				);
				$almacen = $this->input->post("almacen");
			} elseif ($this->session->userdata('tipo') == 4 && $this->session->userdata('id')==50) {
				$data = array(
					'fecha' => date('Y-m-d H:i:s'),
					'tbl_usuarios_idtbl_usuarios' => $this->id_usuario($this->input->post('uid_usuario')),
					'tbl_users_idtbl_users' => $this->session->userdata('id'),
					'tbl_almacenes_idtbl_almacenes' => '16',
					'uid' => uniqid(),
					'tipo' => 'devolucion',
					'estatus' => 0,
					'tipo_movimiento' => NULL,
					'folio' => $result->folio,
					'tbl_proyectos_idtbl_proyectos' => $result->tbl_proyectos_idtbl_proyectos,
					'tbl_segmentos_proyecto_idtbl_segmentos_proyecto' => $result->tbl_segmentos_proyecto_idtbl_segmentos_proyecto
				);
				$almacen = '16';
			} elseif ($this->session->userdata('tipo') == 14 ) {
				$data = array(
					'fecha' => date('Y-m-d H:i:s'),
					'tbl_usuarios_idtbl_usuarios' => $this->id_usuario($this->input->post('uid_usuario')),
					'tbl_users_idtbl_users' => $this->session->userdata('id'),
					'tbl_almacenes_idtbl_almacenes' => '23',
					'uid' => uniqid(),
					'tipo' => 'devolucion',
					'estatus' => 0,
					'tipo_movimiento' => NULL,
					'folio' => $result->folio,
					'tbl_proyectos_idtbl_proyectos' => $result->tbl_proyectos_idtbl_proyectos,
					'tbl_segmentos_proyecto_idtbl_segmentos_proyecto' => $result->tbl_segmentos_proyecto_idtbl_segmentos_proyecto
				);
				$almacen = '23';
			} elseif($this->session->userdata('tipo')==10){
				$data = array(
					'fecha' => date('Y-m-d H:i:s'),
					'tbl_usuarios_idtbl_usuarios' => $this->id_usuario($this->input->post('uid_usuario')),
					'tbl_users_idtbl_users' => $this->session->userdata('id'),
					'tbl_almacenes_idtbl_almacenes' => '1',
					'uid' => uniqid(),
					'tipo' => 'devolucion',
					'estatus' => 0,
					'tipo_movimiento' => NULL,
					'folio' => $result->folio,
					'tbl_proyectos_idtbl_proyectos' => $result->tbl_proyectos_idtbl_proyectos,
					'tbl_segmentos_proyecto_idtbl_segmentos_proyecto' => $result->tbl_segmentos_proyecto_idtbl_segmentos_proyecto,
					'seguridad_e_higiene' => 1
				);
				$almacen = '1';
			} elseif ($this->session->userdata('tipo') == 3) {
				$data = array(
					'fecha' => date('Y-m-d H:i:s'),
					'tbl_usuarios_idtbl_usuarios' => $this->id_usuario($this->input->post('uid_usuario')),
					'tbl_users_idtbl_users' => $this->session->userdata('id'),
					'tbl_almacenes_idtbl_almacenes' => ID_ALMACEN_REFACCIONES_CONTROL_VEHICULAR,
					'uid' => uniqid(),
					'tipo' => 'devolucion',
					'estatus' => 0,
					'tipo_movimiento' => NULL,
					'folio' => $result->folio,
					'tbl_proyectos_idtbl_proyectos' => $result->tbl_proyectos_idtbl_proyectos,
					'tbl_segmentos_proyecto_idtbl_segmentos_proyecto' => $result->tbl_segmentos_proyecto_idtbl_segmentos_proyecto
				);
				$almacen = ID_ALMACEN_REFACCIONES_CONTROL_VEHICULAR;
			} elseif ($this->session->userdata('tipo') == 2) {
				$data = array(
					'fecha' => date('Y-m-d H:i:s'),
					'tbl_usuarios_idtbl_usuarios' => $this->id_usuario($this->input->post('uid_usuario')),
					'tbl_users_idtbl_users' => $this->session->userdata('id'),
					'tbl_almacenes_idtbl_almacenes' => ID_ALMACEN_SISTEMAS,
					'uid' => uniqid(),
					'tipo' => 'devolucion',
					'estatus' => 0,
					'tipo_movimiento' => NULL,
					'folio' => $result->folio,
					'tbl_proyectos_idtbl_proyectos' => $result->tbl_proyectos_idtbl_proyectos,
					'tbl_segmentos_proyecto_idtbl_segmentos_proyecto' => $result->tbl_segmentos_proyecto_idtbl_segmentos_proyecto
				);
				$almacen = ID_ALMACEN_SISTEMAS;
			}

			//Se registra la entrada
			$this->db->insert('tbl_almacen_movimientos', $data);
			$last = $this->db->insert_id();
			$data = array(
				'dtl_almacen_iddtl_almacen' => $this->input->post('id'),
				'tbl_usuarios_idtbl_usuarios' => $this->id_usuario($this->input->post('uid_usuario')),
				'tbl_almacen_movimientos_idtbl_almacen_movimientos' => $last,
				'estatus_asignacion' => 'finalizada',
				'cantidad' => ($this->input->post('merma') * (-1)),
				'estado_entrega' => 'merma',
				'entregado' => $this->input->post('merma')
			);
			$this->db->insert('dtl_asignacion', $data);

			if ($total == $this->input->post('devinicial')) {
				$data = array(
					'estatus_asignacion' => 'finalizada',
					'fecha_finalizacion' => date('Y-m-d H:i:s'),
					'estado_entrega' => 'merma'
					//'entregado' => $this->input->post('robadobaja')
				);

				$this->db->set($data);
				$this->db->set('cantidad',  'cantidad-' . $this->input->post('merma'), FALSE);
				$this->db->set('entregado', 'entregado+' . $this->input->post('merma'), FALSE);
				$this->db->where('iddtl_asignacion', $this->input->post('asignacion'));
				$this->db->update('dtl_asignacion');
			} else {
				//$query = $this->db->query("SELECT cantidad as total FROM `dtl_asignacion` WHERE `iddtl_asignacion` =" . $this->input->post('asignacion'));
				//$this->db->set('cantidad', $query->result()[0]->total - $this->input->post('robadobaja'));
				$this->db->set('cantidad',  'cantidad-' . $this->input->post('merma'), FALSE);
				$this->db->set('entregado', 'entregado+' . $this->input->post('merma'), FALSE);
				$this->db->where('iddtl_asignacion', $this->input->post('asignacion'));
				$this->db->update('dtl_asignacion');
			}
			if($this->session->userdata('id')==50){
				$estatus = $this->db->query("SELECT * FROM `dtl_almacen` WHERE `tbl_catalogo_idtbl_catalogo` =" . $this->input->post('producto') . " AND estatus='merma' AND tbl_almacenes_idtbl_almacenes=16");
			} elseif($this->session->userdata('tipo')==14 ){
				$estatus = $this->db->query("SELECT * FROM `dtl_almacen` WHERE `tbl_catalogo_idtbl_catalogo` =" . $this->input->post('producto') . " AND estatus='merma' AND tbl_almacenes_idtbl_almacenes=23");
			} elseif($this->session->userdata('tipo')==10){
				$estatus = $this->db->query("SELECT * FROM dtl_almacen JOIN tbl_catalogo ON tbl_catalogo.idtbl_catalogo = dtl_almacen.tbl_catalogo_idtbl_catalogo WHERE tbl_catalogo_idtbl_catalogo =" . $this->input->post('producto') . " AND estatus='merma' AND tbl_almacenes_idtbl_almacenes=1 AND tbl_catalogo.tipo=1");
			} elseif($this->session->userdata('tipo')==3){
				$estatus = $this->db->query("SELECT * FROM `dtl_almacen` WHERE `tbl_catalogo_idtbl_catalogo` =" . $this->input->post('producto') . " AND estatus='merma' AND tbl_almacenes_idtbl_almacenes=" . ID_ALMACEN_REFACCIONES_CONTROL_VEHICULAR);
			} elseif($this->session->userdata('tipo')==2){
				$estatus = $this->db->query("SELECT * FROM `dtl_almacen` WHERE `tbl_catalogo_idtbl_catalogo` =" . $this->input->post('producto') . " AND estatus='merma' AND tbl_almacenes_idtbl_almacenes=" . ID_ALMACEN_SISTEMAS);
			} elseif($this->session->userdata('tipo')==1){
				$estatus = $this->db->query("SELECT * FROM `dtl_almacen` WHERE `tbl_catalogo_idtbl_catalogo` =" . $this->input->post('producto') . " AND estatus='merma' AND tbl_almacenes_idtbl_almacenes=" . ID_ALMACEN_ALTO_COSTO);
			} elseif(($this->session->userdata('tipo') == 4 || ($this->session->userdata('encargado_almacen') != null && $this->session->userdata('encargado_almacen') != '')) && $this->session->userdata('id')!=50){
				$estatus = $this->db->query("SELECT * FROM `dtl_almacen` WHERE `tbl_catalogo_idtbl_catalogo` =" . $this->input->post('producto') . " AND estatus='merma' AND tbl_almacenes_idtbl_almacenes=" . $almacen);
			}
			$catidad = $this->input->post('merma');

			if ($estatus->num_rows() > 0) {
				/*$this->db->set('existencias', 'existencias+' . $catidad, FALSE);
				$this->db->where('tbl_catalogo_idtbl_catalogo', $this->input->post('producto'));
				$this->db->where('tbl_almacenes_idtbl_almacenes', $almacen);
				$this->db->where('estatus', 'abuso de confianza');
				$this->db->update('dtl_almacen');*/
				$producto = $this->input->post('producto');
				if($this->session->userdata('tipo') == 10){
					$this->db->query("UPDATE dtl_almacen JOIN tbl_catalogo ON tbl_catalogo.idtbl_catalogo = dtl_almacen.tbl_catalogo_idtbl_catalogo SET dtl_almacen.existencias = dtl_almacen.existencias+$catidad WHERE dtl_almacen.tbl_catalogo_idtbl_catalogo = $producto AND dtl_almacen.tbl_almacenes_idtbl_almacenes = $almacen AND dtl_almacen.estatus = 'merma'");
				}else{
					$this->db->query("UPDATE dtl_almacen JOIN tbl_catalogo ON tbl_catalogo.idtbl_catalogo = dtl_almacen.tbl_catalogo_idtbl_catalogo SET dtl_almacen.existencias = dtl_almacen.existencias+$catidad WHERE dtl_almacen.tbl_catalogo_idtbl_catalogo = $producto AND dtl_almacen.tbl_almacenes_idtbl_almacenes = $almacen AND dtl_almacen.estatus = 'merma'");
				}
			} else {
				if ($this->session->userdata('tipo') == 1) {
					$dataAlmacen = array(
						'tbl_almacenes_idtbl_almacenes' => ID_ALMACEN_ALTO_COSTO,
						'tbl_catalogo_idtbl_catalogo' => $this->input->post('producto'),
						'existencias' => $catidad,
						'estatus' => 'merma'
					);
				} elseif (($this->session->userdata('tipo') == 4 || ($this->session->userdata('encargado_almacen') != null && $this->session->userdata('encargado_almacen') != '')) && $this->session->userdata('id')!=50) {
					$dataAlmacen = array(
						'tbl_almacenes_idtbl_almacenes' => $this->input->post("almacen"),
						'tbl_catalogo_idtbl_catalogo' => $this->input->post('producto'),
						'existencias' => $catidad,
						'estatus' => 'merma'
					);
				} elseif ($this->session->userdata('tipo') == 4 && $this->session->userdata('id')==50) {
					$dataAlmacen = array(
						'tbl_almacenes_idtbl_almacenes' => '16',
						'tbl_catalogo_idtbl_catalogo' => $this->input->post('producto'),
						'existencias' => $catidad,
						'estatus' => 'merma'
					);
				} elseif ($this->session->userdata('tipo') == 14 ) {
					$dataAlmacen = array(
						'tbl_almacenes_idtbl_almacenes' => '23',
						'tbl_catalogo_idtbl_catalogo' => $this->input->post('producto'),
						'existencias' => $catidad,
						'estatus' => 'merma'
					);
				} elseif($this->session->userdata('tipo')==10 ){
					$dataAlmacen = array(
						'tbl_almacenes_idtbl_almacenes' => '1',
						'tbl_catalogo_idtbl_catalogo' => $this->input->post('producto'),
						'existencias' => $catidad,
						'estatus' => 'merma'
					);
				} elseif ($this->session->userdata('tipo') == 3) {
					$dataAlmacen = array(
						'tbl_almacenes_idtbl_almacenes' => ID_ALMACEN_REFACCIONES_CONTROL_VEHICULAR,
						'tbl_catalogo_idtbl_catalogo' => $this->input->post('producto'),
						'existencias' => $catidad,
						'estatus' => 'merma'
					);
				} elseif ($this->session->userdata('tipo') == 2) {
					$dataAlmacen = array(
						'tbl_almacenes_idtbl_almacenes' => ID_ALMACEN_SISTEMAS,
						'tbl_catalogo_idtbl_catalogo' => $this->input->post('producto'),
						'existencias' => $catidad,
						'estatus' => 'merma'
					);
				}
				$this->db->insert('dtl_almacen', $dataAlmacen);
			}
		}

		if ($this->db->trans_status() === FALSE) {
			$this->db->trans_rollback();
			return 'Error en la transacción.';
		} else {
			$this->db->trans_commit();
			return true;
		}
	}

	public function desasignacion() {
		$this->db->trans_begin();
		if($this->session->userdata('tipo') == 1) {
			$id_almacen = ID_ALMACEN_ALTO_COSTO;
		} 
		if($this->session->userdata('tipo') == 2) {
			$id_almacen = ID_ALMACEN_SISTEMAS;
		}
		if($this->session->userdata('tipo') == 3) {
			$id_almacen = ID_ALMACEN_AUTOS_CONTROL_VEHICULAR;
		}
		if($this->session->userdata('tipo') == 4 || ($this->session->userdata('encargado_almacen') != null && $this->session->userdata('encargado_almacen') != '')) {
			$id_almacen = $this->input->post('almacen');
		}
		$this->db->from("dtl_asignacion");
		$this->db->join("tbl_almacen_movimientos", "tbl_almacen_movimientos.idtbl_almacen_movimientos = dtl_asignacion.tbl_almacen_movimientos_idtbl_almacen_movimientos");
		$query = $this->db->where('iddtl_asignacion', $this->input->post('asignacion'));
		$result = $query = $this->db->get()->result()[0];

		if($this->session->userdata('tipo') == 4 && $this->session->userdata('id') != 50){
			$data = array(
				'fecha' => date('Y-m-d H:i:s'),
				'tbl_usuarios_idtbl_usuarios' => $this->id_usuario($this->input->post('uid_usuario')),
				'tbl_users_idtbl_users' => $this->session->userdata('id'),
				'tbl_almacenes_idtbl_almacenes' => $id_almacen,
				'uid' => uniqid(),
				'tipo' => 'devolucion-almacen',
				'estatus' => 1,
				'tipo_movimiento' => null,
				'folio' => $result->folio,
				'tbl_proyectos_idtbl_proyectos' => $result->tbl_proyectos_idtbl_proyectos,
				'tbl_segmentos_proyecto_idtbl_segmentos_proyecto' => $result->tbl_segmentos_proyecto_idtbl_segmentos_proyecto,				
			);
		}else{
            $data = array(
            'fecha' => date('Y-m-d H:i:s'),
            'tbl_usuarios_idtbl_usuarios' => $this->id_usuario($this->input->post('uid_usuario')),
            'tbl_users_idtbl_users' => $this->session->userdata('id'),
            'tbl_almacenes_idtbl_almacenes' => $id_almacen,
            'uid' => uniqid(),
            'tipo' => 'desasignacion',
            'estatus' => 0,
            'tipo_movimiento' => null,
            'folio' => $result->folio,
            'tbl_proyectos_idtbl_proyectos' => $result->tbl_proyectos_idtbl_proyectos,
            'tbl_segmentos_proyecto_idtbl_segmentos_proyecto' => $result->tbl_segmentos_proyecto_idtbl_segmentos_proyecto,
            'parent' => $this->session->userdata('tipo') == 3 ? $_POST['parent'] : null,
			'desasigno' => $this->session->userdata('id')
        );
        }
		//Se registra la entrada
		$this->db->insert('tbl_almacen_movimientos', $data);
		$last = $this->db->insert_id();
		
		$data = array(
			'dtl_almacen_iddtl_almacen' => $this->input->post('id'),
			'tbl_usuarios_idtbl_usuarios' => $this->id_usuario($this->input->post('uid_usuario')),
			'tbl_almacen_movimientos_idtbl_almacen_movimientos' => $last,
			'estatus_asignacion' => 'finalizada',
			'cantidad' => 1,
			'estado_entrega' => $this->input->post('estatus'),
			'entregado' => 1
		);
		$this->db->insert('dtl_asignacion', $data);

		$data = array(
			'estatus' => $this->input->post('estatus'),
		);
		$this->db->set($data);
		$this->db->where('iddtl_almacen', $this->input->post('id'));
		$result = $this->db->update('dtl_almacen');
		$data = array(
			'estatus_asignacion' => 'finalizada',
			'fecha_finalizacion' => date('Y-m-d H:i:s'),
			'entregado' => 1
		);
		$this->db->set($data);
		$this->db->where('iddtl_asignacion', $this->input->post('asignacion'));
		$result = $this->db->update('dtl_asignacion');
		if ($this->db->trans_status() === FALSE) {
			$this->db->trans_rollback();
			return 'Error en la transacción.';
		} else {
			$this->db->trans_commit();
			return true;
		}
	}

	public function asignaciones_personal($uid) {
		$this->db->select('dtl_asignacion.*');
		$this->db->select('dtl_almacen.*');
		$this->db->select('tbl_catalogo.descripcion');
		$this->db->select('tbl_catalogo.marca');
		$this->db->select('tbl_catalogo.modelo');
		$this->db->select('tbl_catalogo.precio');
		$this->db->select('tbl_catalogo.tipo_moneda');
		$this->db->select('ctl_unidades_medida.*');
		$this->db->select('ctl_unidades_medida.*');
		$this->db->select('ctl_categorias.*');
		$this->db->select('tbl_almacen_movimientos.folio');
		$this->db->select('tbl_almacen_movimientos.uid');
		$this->db->select('SUM(dtl_asignacion.cantidad) as total');
		$this->db->from('dtl_asignacion');
		$this->db->join('dtl_almacen', 'dtl_asignacion.dtl_almacen_iddtl_almacen=dtl_almacen.iddtl_almacen', 'left');
		$this->db->join('tbl_catalogo', 'tbl_catalogo.idtbl_catalogo=dtl_almacen.tbl_catalogo_idtbl_catalogo', 'left');
		$this->db->join('ctl_unidades_medida', 'tbl_catalogo.ctl_unidades_medida_idctl_unidades_medida=ctl_unidades_medida.idctl_unidades_medida', 'left');
		$this->db->join('ctl_categorias', 'tbl_catalogo.ctl_categorias_idctl_categorias=ctl_categorias.idctl_categorias', 'left');
		$this->db->join('tbl_almacen_movimientos', 'tbl_almacen_movimientos.idtbl_almacen_movimientos=dtl_asignacion.tbl_almacen_movimientos_idtbl_almacen_movimientos', 'left');
		$this->db->where('dtl_asignacion.tbl_usuarios_idtbl_usuarios', $this->id_usuario($uid));
		$this->db->where('dtl_asignacion.estatus_asignacion', 'activa');
		$this->db->group_by("dtl_asignacion.iddtl_asignacion");
		$query = $this->db->get();
		return $query->result();
	}

	public function asignaciones_personalAG($uid = NULL, $categories = NULL, $operation = "equal",  $justificacion_asignacion_rh = false) {
		if($this->session->userdata('encargado_almacen') != null && $this->session->userdata('encargado_almacen') != '') {
			$id_almacenes = 0;
			$usuario = $this->session->userdata('id');
			$almacenes_encargados = $this->db->query("SELECT tbl_almacenes.tbl_proyectos_idtbl_proyectos FROM tbl_encargado_almacen JOIN tbl_almacenes ON tbl_almacenes.idtbl_almacenes = tbl_encargado_almacen.tbl_almacenes_idtbl_almacenes WHERE tbl_encargado_almacen.tbl_users_idtbl_users = $usuario");
			$id_almacenes = [];
			foreach($almacenes_encargados->result() AS $key => $value){
                
                $id_almacenes[] = $value->tbl_proyectos_idtbl_proyectos;
                
			}
			if(count($id_almacenes) > 0){
				$in = $id_almacenes;
			}		
		}
		$this->db->select('dtl_asignacion.*');
		$this->db->select('dtl_asignacion.cantidad AS cantidad_asignada');
		$this->db->select('dtl_almacen.*');
		$this->db->select('tbl_catalogo.idtbl_catalogo');
		$this->db->select('tbl_catalogo.descripcion');
		$this->db->select('tbl_catalogo.neodata');
		$this->db->select('tbl_catalogo.marca');
		$this->db->select('tbl_catalogo.modelo');
		$this->db->select('tbl_catalogo.precio');
		$this->db->select('tbl_catalogo.tipo_moneda');
		$this->db->select('ctl_unidades_medida.*');
		$this->db->select('ctl_unidades_medida.*');
		$this->db->select('ctl_categorias.*');
		$this->db->select('tbl_proyectos.nombre_proyecto, tbl_proyectos.numero_proyecto');
		$this->db->select('tbl_segmentos_proyecto.segmento');
		$this->db->select('tbl_almacen_movimientos.folio');
		$this->db->select('tbl_solicitud_material.uid AS uid_solicitud');
		$this->db->select('tbl_almacen_movimientos.uid');
		$this->db->select('SUM(dtl_asignacion.cantidad) as total');
		$this->db->select('tbl_usuarios.uid AS uid_usuario');
		$this->db->select('tbl_usuarios.nombres');
		$this->db->select('tbl_usuarios.apellido_paterno');
		$this->db->select('tbl_usuarios.apellido_materno');
		$this->db->from('dtl_asignacion');
		$this->db->join('dtl_almacen', 'dtl_asignacion.dtl_almacen_iddtl_almacen=dtl_almacen.iddtl_almacen', 'left');
		$this->db->join('tbl_catalogo', 'tbl_catalogo.idtbl_catalogo=dtl_almacen.tbl_catalogo_idtbl_catalogo', 'left');
		$this->db->join('ctl_unidades_medida', 'tbl_catalogo.ctl_unidades_medida_idctl_unidades_medida=ctl_unidades_medida.idctl_unidades_medida', 'left');
		$this->db->join('ctl_categorias', 'tbl_catalogo.ctl_categorias_idctl_categorias=ctl_categorias.idctl_categorias', 'left');
		$this->db->join('tbl_almacen_movimientos', 'tbl_almacen_movimientos.idtbl_almacen_movimientos=dtl_asignacion.tbl_almacen_movimientos_idtbl_almacen_movimientos', 'left');
		$this->db->join('tbl_proyectos', 'tbl_proyectos.idtbl_proyectos = tbl_almacen_movimientos.tbl_proyectos_idtbl_proyectos', 'left');
		$this->db->join('tbl_segmentos_proyecto', 'tbl_segmentos_proyecto.idtbl_segmentos_proyecto = tbl_almacen_movimientos.tbl_segmentos_proyecto_idtbl_segmentos_proyecto', 'left');
		$this->db->join('tbl_solicitud_material', 'tbl_solicitud_material.idtbl_solicitud_material = tbl_almacen_movimientos.parent', 'left');
		$this->db->join('tbl_usuarios', 'tbl_usuarios.idtbl_usuarios = dtl_asignacion.tbl_usuarios_idtbl_usuarios', 'left');
		$this->db->where('dtl_almacen.tbl_almacenes_idtbl_almacenes!=', 2);
		$this->db->where('dtl_almacen.tbl_almacenes_idtbl_almacenes!=', 16);
		$this->db->where('dtl_almacen.tbl_almacenes_idtbl_almacenes!=', 23);
		$this->db->where('dtl_almacen.tbl_almacenes_idtbl_almacenes!=', 28);
		$this->db->where('dtl_almacen.tbl_almacenes_idtbl_almacenes!=', 30);
		$this->db->where('dtl_almacen.tbl_almacenes_idtbl_almacenes!=', 397);
        if ($this->session->userdata('tipo') == 5) {
            $this->db->where('ctl_categorias.idctl_categorias!=', 4);
            $this->db->where('ctl_categorias.idctl_categorias!=', 13);
        }
		//$this->db->where('dtl_almacen.tbl_almacenes_idtbl_almacenes!=', 29);
		$this->db->where('dtl_almacen.tbl_almacenes_idtbl_almacenes!=', 30);
		$this->db->where('tbl_almacen_movimientos.seguridad_e_higiene != ', 1);
		if($uid != NULL){
			$this->db->where('dtl_asignacion.tbl_usuarios_idtbl_usuarios', $this->id_usuario($uid));
		}
		if($justificacion_asignacion_rh){
			$this->db->where('dtl_asignacion.estatus_devolucion_rh IS NOT NULL');
			$this->db->where_in('dtl_asignacion.estatus_asignacion', ['activa', 'finalizada']);
		}else{
			$this->db->where('dtl_asignacion.estatus_asignacion', 'activa');
		}
        if ($this->session->userdata('encargado_almacen') != null && $this->session->userdata('encargado_almacen') != '') {
			$this->db->where_in("tbl_almacen_movimientos.tbl_proyectos_idtbl_proyectos", $in);
        }
		$this->db->group_by("dtl_asignacion.iddtl_asignacion");
		if($categories != NULL){
			if($operation == "equal"){
				$this->db->where_in("ctl_categorias.idctl_categorias", $categories);
			}else{
				$this->db->where_not_in("ctl_categorias.idctl_categorias", $categories);
			}
		}
		if($justificacion_asignacion_rh){
			$this->db->order_by('dtl_asignacion.fecha_devolucion_rh DESC');
		}
		$query = $this->db->get();
		return $query->result();
	}

	public function asignaciones_generalag($categories = NULL, $operation = "equal",  $justificacion_asignacion_rh = false) {
		if($this->session->userdata('encargado_almacen') != null && $this->session->userdata('encargado_almacen') != '') {
			$id_almacenes = 0;
			$usuario = $this->session->userdata('id');
			$almacenes_encargados = $this->db->query("SELECT tbl_almacenes.idtbl_almacenes FROM tbl_encargado_almacen JOIN tbl_almacenes ON tbl_almacenes.idtbl_almacenes = tbl_encargado_almacen.tbl_almacenes_idtbl_almacenes WHERE tbl_encargado_almacen.tbl_users_idtbl_users = $usuario");
			$id_almacenes = [];
			foreach($almacenes_encargados->result() AS $key => $value){
                
                $id_almacenes[] = $value->idtbl_almacenes;
                
			}
			if(count($id_almacenes) > 0){
				$in = $id_almacenes;
			}		
		}
		$this->db->select('dtl_asignacion.*');
		$this->db->select('dtl_asignacion.cantidad AS cantidad_asignada');
		$this->db->select('dtl_almacen.*');
		$this->db->select('tbl_catalogo.idtbl_catalogo');
		$this->db->select('tbl_catalogo.descripcion');
		$this->db->select('tbl_catalogo.neodata');
		$this->db->select('tbl_catalogo.marca');
		$this->db->select('tbl_catalogo.modelo');
		$this->db->select('tbl_catalogo.precio');
		$this->db->select('tbl_catalogo.tipo_moneda');
		$this->db->select('ctl_unidades_medida.*');
		$this->db->select('ctl_unidades_medida.*');
		$this->db->select('ctl_categorias.*');
		$this->db->select('tbl_proyectos.nombre_proyecto, tbl_proyectos.numero_proyecto');
		$this->db->select('tbl_segmentos_proyecto.segmento');
		$this->db->select('tbl_almacen_movimientos.folio');
		$this->db->select('tbl_solicitud_material.uid AS uid_solicitud');
		$this->db->select('tbl_almacen_movimientos.uid');
		$this->db->select('SUM(dtl_asignacion.cantidad) as total');
		$this->db->select('tbl_usuarios.uid AS uid_usuario');
		$this->db->select('tbl_usuarios.nombres');
		$this->db->select('tbl_usuarios.apellido_paterno');
		$this->db->select('tbl_usuarios.apellido_materno');
		$this->db->from('dtl_asignacion');
		$this->db->join('dtl_almacen', 'dtl_asignacion.dtl_almacen_iddtl_almacen=dtl_almacen.iddtl_almacen', 'left');
		$this->db->join('tbl_catalogo', 'tbl_catalogo.idtbl_catalogo=dtl_almacen.tbl_catalogo_idtbl_catalogo', 'left');
		$this->db->join('ctl_unidades_medida', 'tbl_catalogo.ctl_unidades_medida_idctl_unidades_medida=ctl_unidades_medida.idctl_unidades_medida', 'left');
		$this->db->join('ctl_categorias', 'tbl_catalogo.ctl_categorias_idctl_categorias=ctl_categorias.idctl_categorias', 'left');
		$this->db->join('tbl_almacen_movimientos', 'tbl_almacen_movimientos.idtbl_almacen_movimientos=dtl_asignacion.tbl_almacen_movimientos_idtbl_almacen_movimientos', 'left');
		$this->db->join('tbl_proyectos', 'tbl_proyectos.idtbl_proyectos = tbl_almacen_movimientos.tbl_proyectos_idtbl_proyectos', 'left');
		$this->db->join('tbl_segmentos_proyecto', 'tbl_segmentos_proyecto.idtbl_segmentos_proyecto = tbl_almacen_movimientos.tbl_segmentos_proyecto_idtbl_segmentos_proyecto', 'left');
		$this->db->join('tbl_solicitud_material', 'tbl_solicitud_material.idtbl_solicitud_material = tbl_almacen_movimientos.parent', 'left');
		$this->db->join('tbl_usuarios', 'tbl_usuarios.idtbl_usuarios = dtl_asignacion.tbl_usuarios_idtbl_usuarios', 'left');
		$this->db->where('dtl_almacen.tbl_almacenes_idtbl_almacenes!=', 2);
		$this->db->where('dtl_almacen.tbl_almacenes_idtbl_almacenes!=', 16);
		$this->db->where('dtl_almacen.tbl_almacenes_idtbl_almacenes!=', 23);
		$this->db->where('dtl_almacen.tbl_almacenes_idtbl_almacenes!=', 28);
        if ($this->session->userdata('tipo') == 5) {
            $this->db->where('ctl_categorias.idctl_categorias!=', 4);
            $this->db->where('ctl_categorias.idctl_categorias!=', 13);
        }
		//$this->db->where('dtl_almacen.tbl_almacenes_idtbl_almacenes!=', 29);
		$this->db->where('dtl_almacen.tbl_almacenes_idtbl_almacenes!=', 30);
		$this->db->where('tbl_almacen_movimientos.seguridad_e_higiene != ', 1);

			$this->db->where('dtl_asignacion.tbl_usuarios_idtbl_usuarios', $this->session->userdata ('id_usuario'));
		if($justificacion_asignacion_rh){
			$this->db->where('dtl_asignacion.estatus_devolucion_rh IS NOT NULL');
			$this->db->where_in('dtl_asignacion.estatus_asignacion', ['activa', 'finalizada']);
		}else{
			$this->db->where('dtl_asignacion.estatus_asignacion', 'activa');
		}
        if ($this->session->userdata('encargado_almacen') != null && $this->session->userdata('encargado_almacen') != '') {
			$this->db->where_in("dtl_almacen.tbl_almacenes_idtbl_almacenes", $in);
        }
		$this->db->group_by("dtl_asignacion.iddtl_asignacion");
		if($categories != NULL){
			if($operation == "equal"){
				$this->db->where_in("ctl_categorias.idctl_categorias", $categories);
			}else{
				$this->db->where_not_in("ctl_categorias.idctl_categorias", $categories);
			}
		}
		if($justificacion_asignacion_rh){
			$this->db->order_by('dtl_asignacion.fecha_devolucion_rh DESC');
		}
		$query = $this->db->get();
		return $query->result();
	}

	public function asignaciones_personalAG_generador($uid, $id_mantenimiento, $categories = NULL, $operation = "equal") {
		if($this->session->userdata('encargado_almacen') != null && $this->session->userdata('encargado_almacen') != '') {
			$id_almacenes = 0;
			$usuario = $this->session->userdata('id');
			$almacenes_encargados = $this->db->query("SELECT tbl_almacenes.idtbl_almacenes FROM tbl_encargado_almacen JOIN tbl_almacenes ON tbl_almacenes.idtbl_almacenes = tbl_encargado_almacen.tbl_almacenes_idtbl_almacenes WHERE tbl_encargado_almacen.tbl_users_idtbl_users = $usuario");
			$id_almacenes = [];
			foreach($almacenes_encargados->result() AS $key => $value){
                
                $id_almacenes[] = $value->idtbl_almacenes;
                
			}
			if(count($id_almacenes) > 0){
				$in = $id_almacenes;
			}		
		}
		$this->db->select('dtl_asignacion.*');
		$this->db->select('dtl_asignacion.cantidad AS cantidad_asignada');
		$this->db->select('dtl_almacen.*');
		$this->db->select('tbl_catalogo.idtbl_catalogo');
		$this->db->select('tbl_catalogo.descripcion');
		$this->db->select('tbl_catalogo.neodata');
		$this->db->select('tbl_catalogo.marca');
		$this->db->select('tbl_catalogo.modelo');
		$this->db->select('tbl_catalogo.precio');
		$this->db->select('tbl_catalogo.tipo_moneda');
		$this->db->select('ctl_unidades_medida.*');
		$this->db->select('ctl_unidades_medida.*');
		$this->db->select('ctl_categorias.*');
		$this->db->select('tbl_proyectos.nombre_proyecto, tbl_proyectos.numero_proyecto');
		$this->db->select('tbl_segmentos_proyecto.segmento');
		$this->db->select('tbl_almacen_movimientos.folio');
		$this->db->select('tbl_solicitud_material.uid AS uid_solicitud');
		$this->db->select('tbl_almacen_movimientos.uid');
		$this->db->select('SUM(dtl_asignacion.cantidad) as total');
		$this->db->select('tbl_usuarios.nombres');
		$this->db->select('tbl_usuarios.apellido_paterno');
		$this->db->select('tbl_usuarios.apellido_materno');
		$this->db->from('dtl_asignacion');
		$this->db->join('dtl_almacen', 'dtl_asignacion.dtl_almacen_iddtl_almacen=dtl_almacen.iddtl_almacen', 'left');
		$this->db->join('tbl_catalogo', 'tbl_catalogo.idtbl_catalogo=dtl_almacen.tbl_catalogo_idtbl_catalogo', 'left');
		$this->db->join('ctl_unidades_medida', 'tbl_catalogo.ctl_unidades_medida_idctl_unidades_medida=ctl_unidades_medida.idctl_unidades_medida', 'left');
		$this->db->join('ctl_categorias', 'tbl_catalogo.ctl_categorias_idctl_categorias=ctl_categorias.idctl_categorias', 'left');
		$this->db->join('tbl_almacen_movimientos', 'tbl_almacen_movimientos.idtbl_almacen_movimientos=dtl_asignacion.tbl_almacen_movimientos_idtbl_almacen_movimientos', 'left');
		$this->db->join('tbl_proyectos', 'tbl_proyectos.idtbl_proyectos = tbl_almacen_movimientos.tbl_proyectos_idtbl_proyectos', 'left');
		$this->db->join('tbl_segmentos_proyecto', 'tbl_segmentos_proyecto.idtbl_segmentos_proyecto = tbl_almacen_movimientos.tbl_segmentos_proyecto_idtbl_segmentos_proyecto', 'left');
		$this->db->join('tbl_solicitud_material', 'tbl_solicitud_material.idtbl_solicitud_material = tbl_almacen_movimientos.parent', 'left');
		$this->db->join('tbl_usuarios', 'tbl_usuarios.idtbl_usuarios = dtl_asignacion.tbl_usuarios_idtbl_usuarios', 'left');
		$this->db->join('dtl_solicitud_devolucion', 'dtl_solicitud_devolucion.dtl_asignacion_iddtl_asignacion = dtl_asignacion.iddtl_asignacion');
		$this->db->join('tbl_solicitud_devolucion', 'tbl_solicitud_devolucion.idtbl_solicitud_devolucion = dtl_solicitud_devolucion.tbl_solicitud_devolucion_idtbl_solicitud_devolucion', 'left');
		$this->db->where('tbl_solicitud_devolucion.tbl_mantenimientos_idtbl_mantenimientos', $id_mantenimiento);
		//$this->db->where('dtl_asignacion.tbl_usuarios_idtbl_usuarios', $this->id_usuario($uid));
		$this->db->where('dtl_asignacion.estatus_asignacion', 'activa');
		$this->db->where('dtl_almacen.tbl_almacenes_idtbl_almacenes!=', 2);
		$this->db->where('dtl_almacen.tbl_almacenes_idtbl_almacenes!=', 16);
		$this->db->where('dtl_almacen.tbl_almacenes_idtbl_almacenes!=', 23);
		$this->db->where('dtl_almacen.tbl_almacenes_idtbl_almacenes!=', 28);
		$this->db->where('dtl_almacen.tbl_almacenes_idtbl_almacenes!=', 29);
		$this->db->where('dtl_almacen.tbl_almacenes_idtbl_almacenes!=', 30);
        if ($this->session->userdata('encargado_almacen') != null && $this->session->userdata('encargado_almacen') != '') {
			$this->db->where_in("dtl_almacen.tbl_almacenes_idtbl_almacenes", $in);
        }
		$this->db->group_by("dtl_asignacion.iddtl_asignacion");
		if($categories != NULL){
			if($operation == "equal"){
				$this->db->where_in("ctl_categorias.idctl_categorias", $categories);
			}else{
				$this->db->where_not_in("ctl_categorias.idctl_categorias", $categories);
			}
		}
		$query = $this->db->get();
		return $query->result();
	}

	public function asignaciones_personalKuali($uid = null, $justificacion_asignacion_rh = false) {
		$this->db->select('dtl_asignacion.*');
		$this->db->select('dtl_asignacion.cantidad AS cantidad_asignada');
		$this->db->select('dtl_almacen.*');
		$this->db->select('tbl_catalogo.idtbl_catalogo');
		$this->db->select('tbl_catalogo.descripcion');
		$this->db->select('tbl_catalogo.neodata');
		$this->db->select('tbl_catalogo.marca');
		$this->db->select('tbl_catalogo.modelo');
		$this->db->select('tbl_catalogo.precio');
		$this->db->select('tbl_catalogo.tipo_moneda');
		$this->db->select('ctl_unidades_medida.*');
		$this->db->select('ctl_unidades_medida.*');
		$this->db->select('ctl_categorias.*');
		$this->db->select('tbl_proyectos.nombre_proyecto, tbl_proyectos.numero_proyecto');
		$this->db->select('tbl_segmentos_proyecto.segmento');
		$this->db->select('tbl_almacen_movimientos.folio');
		$this->db->select('tbl_solicitud_material.uid AS uid_solicitud');		
		$this->db->select('tbl_almacen_movimientos.uid');
		$this->db->select('SUM(dtl_asignacion.cantidad) as total');
		$this->db->select('tbl_usuarios.uid AS uid_usuario');
		$this->db->select('tbl_usuarios.nombres');
		$this->db->select('tbl_usuarios.apellido_paterno');
		$this->db->select('tbl_usuarios.apellido_materno');
		$this->db->from('dtl_asignacion');
		$this->db->join('dtl_almacen', 'dtl_asignacion.dtl_almacen_iddtl_almacen=dtl_almacen.iddtl_almacen', 'left');
		$this->db->join('tbl_catalogo', 'tbl_catalogo.idtbl_catalogo=dtl_almacen.tbl_catalogo_idtbl_catalogo', 'left');
		$this->db->join('ctl_unidades_medida', 'tbl_catalogo.ctl_unidades_medida_idctl_unidades_medida=ctl_unidades_medida.idctl_unidades_medida', 'left');
		$this->db->join('ctl_categorias', 'tbl_catalogo.ctl_categorias_idctl_categorias=ctl_categorias.idctl_categorias', 'left');
		$this->db->join('tbl_almacen_movimientos', 'tbl_almacen_movimientos.idtbl_almacen_movimientos=dtl_asignacion.tbl_almacen_movimientos_idtbl_almacen_movimientos', 'left');
		$this->db->join('tbl_proyectos', 'tbl_proyectos.idtbl_proyectos = tbl_almacen_movimientos.tbl_proyectos_idtbl_proyectos', 'left');
		$this->db->join('tbl_segmentos_proyecto', 'tbl_segmentos_proyecto.idtbl_segmentos_proyecto = tbl_almacen_movimientos.tbl_segmentos_proyecto_idtbl_segmentos_proyecto', 'left');
		$this->db->join('tbl_solicitud_material', 'tbl_solicitud_material.idtbl_solicitud_material = tbl_almacen_movimientos.parent', 'left');
		$this->db->join('tbl_usuarios', 'tbl_usuarios.idtbl_usuarios = dtl_asignacion.tbl_usuarios_idtbl_usuarios', 'left');	
		$this->db->where('dtl_almacen.tbl_almacenes_idtbl_almacenes', 16);
		if($uid != null){
			$this->db->where('dtl_asignacion.tbl_usuarios_idtbl_usuarios', $this->id_usuario($uid));
		}
		if($justificacion_asignacion_rh){
			$this->db->where('dtl_asignacion.estatus_devolucion_rh IS NOT NULL');
			$this->db->where_in('dtl_asignacion.estatus_asignacion', ['activa', 'finalizada']);
			$this->db->order_by('dtl_asignacion.fecha_devolucion_rh DESC');
			$this->db->having('SUM(dtl_asignacion.cantidad) IS NOT NULL'); 
		}else{
			$this->db->where('dtl_asignacion.estatus_asignacion', 'activa');
			$this->db->group_by("dtl_asignacion.iddtl_asignacion");
		}
		$query = $this->db->get();
		return $query->result();
	}

	public function asignacionesKualiT($justificacion_asignacion_rh = false) {
		$this->db->select('dtl_asignacion.*');
		$this->db->select('dtl_asignacion.cantidad AS cantidad_asignada');
		$this->db->select('dtl_almacen.*');
		$this->db->select('tbl_catalogo.idtbl_catalogo');
		$this->db->select('tbl_catalogo.descripcion');
		$this->db->select('tbl_catalogo.neodata');
		$this->db->select('tbl_catalogo.marca');
		$this->db->select('tbl_catalogo.modelo');
		$this->db->select('tbl_catalogo.precio');
		$this->db->select('tbl_catalogo.tipo_moneda');
		$this->db->select('ctl_unidades_medida.*');
		$this->db->select('ctl_unidades_medida.*');
		$this->db->select('ctl_categorias.*');
		$this->db->select('tbl_proyectos.nombre_proyecto, tbl_proyectos.numero_proyecto');
		$this->db->select('tbl_segmentos_proyecto.segmento');
		$this->db->select('tbl_almacen_movimientos.folio');
		$this->db->select('tbl_solicitud_material.uid AS uid_solicitud');		
		$this->db->select('tbl_almacen_movimientos.uid');
		$this->db->select('SUM(dtl_asignacion.cantidad) as total');
		$this->db->select('tbl_usuarios.uid AS uid_usuario');
		$this->db->select('tbl_usuarios.nombres');
		$this->db->select('tbl_usuarios.apellido_paterno');
		$this->db->select('tbl_usuarios.apellido_materno');
		$this->db->from('dtl_asignacion');
		$this->db->join('dtl_almacen', 'dtl_asignacion.dtl_almacen_iddtl_almacen=dtl_almacen.iddtl_almacen', 'left');
		$this->db->join('tbl_catalogo', 'tbl_catalogo.idtbl_catalogo=dtl_almacen.tbl_catalogo_idtbl_catalogo', 'left');
		$this->db->join('ctl_unidades_medida', 'tbl_catalogo.ctl_unidades_medida_idctl_unidades_medida=ctl_unidades_medida.idctl_unidades_medida', 'left');
		$this->db->join('ctl_categorias', 'tbl_catalogo.ctl_categorias_idctl_categorias=ctl_categorias.idctl_categorias', 'left');
		$this->db->join('tbl_almacen_movimientos', 'tbl_almacen_movimientos.idtbl_almacen_movimientos=dtl_asignacion.tbl_almacen_movimientos_idtbl_almacen_movimientos', 'left');
		$this->db->join('tbl_proyectos', 'tbl_proyectos.idtbl_proyectos = tbl_almacen_movimientos.tbl_proyectos_idtbl_proyectos', 'left');
		$this->db->join('tbl_segmentos_proyecto', 'tbl_segmentos_proyecto.idtbl_segmentos_proyecto = tbl_almacen_movimientos.tbl_segmentos_proyecto_idtbl_segmentos_proyecto', 'left');
		$this->db->join('tbl_solicitud_material', 'tbl_solicitud_material.idtbl_solicitud_material = tbl_almacen_movimientos.parent', 'left');
		$this->db->join('tbl_usuarios', 'tbl_usuarios.idtbl_usuarios = dtl_asignacion.tbl_usuarios_idtbl_usuarios', 'left');	
		$this->db->where('dtl_almacen.tbl_almacenes_idtbl_almacenes', 16);
			$this->db->where('dtl_asignacion.tbl_usuarios_idtbl_usuarios', $this->session->userdata('id_usuario'));
		
		if($justificacion_asignacion_rh){
			$this->db->where('dtl_asignacion.estatus_devolucion_rh IS NOT NULL');
			$this->db->where_in('dtl_asignacion.estatus_asignacion', ['activa', 'finalizada']);
			$this->db->order_by('dtl_asignacion.fecha_devolucion_rh DESC');
			$this->db->having('SUM(dtl_asignacion.cantidad) IS NOT NULL'); 
		}else{
			$this->db->where('dtl_asignacion.estatus_asignacion', 'activa');
			$this->db->group_by("dtl_asignacion.iddtl_asignacion");
		}
		$query = $this->db->get();
		return $query->result();
	}

	public function asignaciones_personalAC($uid = null, $justificacion_asignacion_rh = false) {
		$this->db->select('dtl_asignacion.*');
		$this->db->select('dtl_almacen.*');
		$this->db->select('tbl_catalogo.idtbl_catalogo');
		$this->db->select('tbl_catalogo.descripcion');
		$this->db->select('tbl_catalogo.marca');
		$this->db->select('tbl_catalogo.modelo');
		$this->db->select('tbl_catalogo.precio');
		$this->db->select('tbl_catalogo.tipo_moneda');
		$this->db->select('ctl_unidades_medida.*');
		$this->db->select('ctl_unidades_medida.*');
		$this->db->select('ctl_categorias.*');
		$this->db->select('tbl_proyectos.nombre_proyecto, tbl_proyectos.numero_proyecto');
		$this->db->select('tbl_segmentos_proyecto.segmento');
		$this->db->select('tbl_almacen_movimientos.folio');
		$this->db->select('tbl_solicitud_material.uid AS uid_solicitud');
		$this->db->select('tbl_almacen_movimientos.uid');
		$this->db->select('SUM(dtl_asignacion.cantidad) as total');
		$this->db->select('tbl_usuarios.uid AS uid_usuario');
		$this->db->select('tbl_usuarios.nombres');
		$this->db->select('tbl_usuarios.apellido_paterno');
		$this->db->select('tbl_usuarios.apellido_materno');
		$this->db->from('dtl_asignacion');
		$this->db->join('dtl_almacen', 'dtl_asignacion.dtl_almacen_iddtl_almacen=dtl_almacen.iddtl_almacen', 'left');
		$this->db->join('tbl_catalogo', 'tbl_catalogo.idtbl_catalogo=dtl_almacen.tbl_catalogo_idtbl_catalogo', 'left');
		$this->db->join('ctl_unidades_medida', 'tbl_catalogo.ctl_unidades_medida_idctl_unidades_medida=ctl_unidades_medida.idctl_unidades_medida', 'left');
		$this->db->join('ctl_categorias', 'tbl_catalogo.ctl_categorias_idctl_categorias=ctl_categorias.idctl_categorias', 'left');
		$this->db->join('tbl_almacen_movimientos', 'tbl_almacen_movimientos.idtbl_almacen_movimientos=dtl_asignacion.tbl_almacen_movimientos_idtbl_almacen_movimientos', 'left');
		$this->db->join('tbl_proyectos', 'tbl_proyectos.idtbl_proyectos = tbl_almacen_movimientos.tbl_proyectos_idtbl_proyectos', 'left');
		$this->db->join('tbl_segmentos_proyecto', 'tbl_segmentos_proyecto.idtbl_segmentos_proyecto = tbl_almacen_movimientos.tbl_segmentos_proyecto_idtbl_segmentos_proyecto', 'left');
		$this->db->join('tbl_solicitud_material', 'tbl_solicitud_material.idtbl_solicitud_material = tbl_almacen_movimientos.parent', 'left');
		$this->db->join('tbl_usuarios', 'tbl_usuarios.idtbl_usuarios = dtl_asignacion.tbl_usuarios_idtbl_usuarios', 'left');
		$this->db->where('dtl_almacen.tbl_almacenes_idtbl_almacenes', 2);
		if($uid != null){
			$this->db->where('dtl_asignacion.tbl_usuarios_idtbl_usuarios', $this->id_usuario($uid));
		}
		if($justificacion_asignacion_rh){
			$this->db->where('dtl_asignacion.estatus_devolucion_rh IS NOT NULL');
			$this->db->where_in('dtl_asignacion.estatus_asignacion', ['activa', 'finalizada']);
		}else{
			$this->db->where('dtl_asignacion.estatus_asignacion', 'activa');
		}
		$this->db->group_by("dtl_asignacion.iddtl_asignacion");
		if($justificacion_asignacion_rh){
			$this->db->order_by('dtl_asignacion.fecha_devolucion_rh DESC');
		}
		$query = $this->db->get();
		return $query->result();
	}

	public function asignaciones_generalac($justificacion_asignacion_rh = false) {
		$this->db->select('dtl_asignacion.*');
		$this->db->select('dtl_almacen.*');
		$this->db->select('tbl_catalogo.idtbl_catalogo');
		$this->db->select('tbl_catalogo.descripcion');
		$this->db->select('tbl_catalogo.marca');
		$this->db->select('tbl_catalogo.modelo');
		$this->db->select('tbl_catalogo.precio');
		$this->db->select('tbl_catalogo.tipo_moneda');
		$this->db->select('ctl_unidades_medida.*');
		$this->db->select('ctl_unidades_medida.*');
		$this->db->select('ctl_categorias.*');
		$this->db->select('tbl_proyectos.nombre_proyecto, tbl_proyectos.numero_proyecto');
		$this->db->select('tbl_segmentos_proyecto.segmento');
		$this->db->select('tbl_almacen_movimientos.folio');
		$this->db->select('tbl_solicitud_material.uid AS uid_solicitud');
		$this->db->select('tbl_almacen_movimientos.uid');
		$this->db->select('SUM(dtl_asignacion.cantidad) as total');
		$this->db->select('tbl_usuarios.uid AS uid_usuario');
		$this->db->select('tbl_usuarios.nombres');
		$this->db->select('tbl_usuarios.apellido_paterno');
		$this->db->select('tbl_usuarios.apellido_materno');
		$this->db->from('dtl_asignacion');
		$this->db->join('dtl_almacen', 'dtl_asignacion.dtl_almacen_iddtl_almacen=dtl_almacen.iddtl_almacen', 'left');
		$this->db->join('tbl_catalogo', 'tbl_catalogo.idtbl_catalogo=dtl_almacen.tbl_catalogo_idtbl_catalogo', 'left');
		$this->db->join('ctl_unidades_medida', 'tbl_catalogo.ctl_unidades_medida_idctl_unidades_medida=ctl_unidades_medida.idctl_unidades_medida', 'left');
		$this->db->join('ctl_categorias', 'tbl_catalogo.ctl_categorias_idctl_categorias=ctl_categorias.idctl_categorias', 'left');
		$this->db->join('tbl_almacen_movimientos', 'tbl_almacen_movimientos.idtbl_almacen_movimientos=dtl_asignacion.tbl_almacen_movimientos_idtbl_almacen_movimientos', 'left');
		$this->db->join('tbl_proyectos', 'tbl_proyectos.idtbl_proyectos = tbl_almacen_movimientos.tbl_proyectos_idtbl_proyectos', 'left');
		$this->db->join('tbl_segmentos_proyecto', 'tbl_segmentos_proyecto.idtbl_segmentos_proyecto = tbl_almacen_movimientos.tbl_segmentos_proyecto_idtbl_segmentos_proyecto', 'left');
		$this->db->join('tbl_solicitud_material', 'tbl_solicitud_material.idtbl_solicitud_material = tbl_almacen_movimientos.parent', 'left');
		$this->db->join('tbl_usuarios', 'tbl_usuarios.idtbl_usuarios = dtl_asignacion.tbl_usuarios_idtbl_usuarios', 'left');
		$this->db->where('dtl_almacen.tbl_almacenes_idtbl_almacenes', 2);
	
			$this->db->where('dtl_asignacion.tbl_usuarios_idtbl_usuarios', $this->session->userdata('id_usuario'));
		
		if($justificacion_asignacion_rh){
			$this->db->where('dtl_asignacion.estatus_devolucion_rh IS NOT NULL');
			$this->db->where_in('dtl_asignacion.estatus_asignacion', ['activa', 'finalizada']);
		}else{
			$this->db->where('dtl_asignacion.estatus_asignacion', 'activa');
		}
		$this->db->group_by("dtl_asignacion.iddtl_asignacion");
		if($justificacion_asignacion_rh){
			$this->db->order_by('dtl_asignacion.fecha_devolucion_rh DESC');
		}
		$query = $this->db->get();
		return $query->result();
	}

	public function asignaciones_personalAreaMedica($uid = null, $justificacion_asignacion_rh = false) {
		$this->db->select('dtl_asignacion.*');
		$this->db->select('dtl_almacen.*');
		$this->db->select('tbl_catalogo.idtbl_catalogo');
		$this->db->select('tbl_catalogo.descripcion');
		$this->db->select('tbl_catalogo.marca');
		$this->db->select('tbl_catalogo.modelo');
		$this->db->select('tbl_catalogo.precio');
		$this->db->select('tbl_catalogo.tipo_moneda');
		$this->db->select('ctl_unidades_medida.*');
		$this->db->select('ctl_unidades_medida.*');
		$this->db->select('ctl_categorias.*');
		$this->db->select('tbl_proyectos.nombre_proyecto, tbl_proyectos.numero_proyecto');
		$this->db->select('tbl_segmentos_proyecto.segmento');
		$this->db->select('tbl_almacen_movimientos.folio');
		$this->db->select('tbl_solicitud_material.uid AS uid_solicitud');
		$this->db->select('tbl_almacen_movimientos.uid');
		$this->db->select('SUM(dtl_asignacion.cantidad) as total');
		$this->db->select('tbl_usuarios.uid AS uid_usuario');
		$this->db->select('tbl_usuarios.nombres');
		$this->db->select('tbl_usuarios.apellido_paterno');
		$this->db->select('tbl_usuarios.apellido_materno');
		$this->db->from('dtl_asignacion');
		$this->db->join('dtl_almacen', 'dtl_asignacion.dtl_almacen_iddtl_almacen=dtl_almacen.iddtl_almacen', 'left');
		$this->db->join('tbl_catalogo', 'tbl_catalogo.idtbl_catalogo=dtl_almacen.tbl_catalogo_idtbl_catalogo', 'left');
		$this->db->join('ctl_unidades_medida', 'tbl_catalogo.ctl_unidades_medida_idctl_unidades_medida=ctl_unidades_medida.idctl_unidades_medida', 'left');
		$this->db->join('ctl_categorias', 'tbl_catalogo.ctl_categorias_idctl_categorias=ctl_categorias.idctl_categorias', 'left');
		$this->db->join('tbl_almacen_movimientos', 'tbl_almacen_movimientos.idtbl_almacen_movimientos=dtl_asignacion.tbl_almacen_movimientos_idtbl_almacen_movimientos', 'left');
		$this->db->join('tbl_proyectos', 'tbl_proyectos.idtbl_proyectos = tbl_almacen_movimientos.tbl_proyectos_idtbl_proyectos', 'left');
		$this->db->join('tbl_segmentos_proyecto', 'tbl_segmentos_proyecto.idtbl_segmentos_proyecto = tbl_almacen_movimientos.tbl_segmentos_proyecto_idtbl_segmentos_proyecto', 'left');
		$this->db->join('tbl_solicitud_material', 'tbl_solicitud_material.idtbl_solicitud_material = tbl_almacen_movimientos.parent', 'left');
		$this->db->join('tbl_usuarios', 'tbl_usuarios.idtbl_usuarios = dtl_asignacion.tbl_usuarios_idtbl_usuarios', 'left');
		$this->db->where('dtl_almacen.tbl_almacenes_idtbl_almacenes', 23);
		if($uid != null){
			$this->db->where('dtl_asignacion.tbl_usuarios_idtbl_usuarios', $this->id_usuario($uid));
		}
		if($justificacion_asignacion_rh){
			$this->db->where_in('dtl_asignacion.estatus_asignacion', ['activa', 'finalizada']);
			$this->db->where('dtl_asignacion.estatus_devolucion_rh IS NOT NULL');
			$this->db->order_by('dtl_asignacion.fecha_devolucion_rh DESC');
			$this->db->having('SUM(dtl_asignacion.cantidad) IS NOT NULL'); 
		}else{
			$this->db->where('dtl_asignacion.estatus_asignacion', 'activa');
			$this->db->group_by("dtl_asignacion.iddtl_asignacion");
		}
		$query = $this->db->get();
		return $query->result();
	}

	public function asignaciones_areamedica($justificacion_asignacion_rh = false) {
		$this->db->select('dtl_asignacion.*');
		$this->db->select('dtl_almacen.*');
		$this->db->select('tbl_catalogo.idtbl_catalogo');
		$this->db->select('tbl_catalogo.descripcion');
		$this->db->select('tbl_catalogo.marca');
		$this->db->select('tbl_catalogo.modelo');
		$this->db->select('tbl_catalogo.precio');
		$this->db->select('tbl_catalogo.tipo_moneda');
		$this->db->select('ctl_unidades_medida.*');
		$this->db->select('ctl_unidades_medida.*');
		$this->db->select('ctl_categorias.*');
		$this->db->select('tbl_proyectos.nombre_proyecto, tbl_proyectos.numero_proyecto');
		$this->db->select('tbl_segmentos_proyecto.segmento');
		$this->db->select('tbl_almacen_movimientos.folio');
		$this->db->select('tbl_solicitud_material.uid AS uid_solicitud');
		$this->db->select('tbl_almacen_movimientos.uid');
		$this->db->select('SUM(dtl_asignacion.cantidad) as total');
		$this->db->select('tbl_usuarios.uid AS uid_usuario');
		$this->db->select('tbl_usuarios.nombres');
		$this->db->select('tbl_usuarios.apellido_paterno');
		$this->db->select('tbl_usuarios.apellido_materno');
		$this->db->from('dtl_asignacion');
		$this->db->join('dtl_almacen', 'dtl_asignacion.dtl_almacen_iddtl_almacen=dtl_almacen.iddtl_almacen', 'left');
		$this->db->join('tbl_catalogo', 'tbl_catalogo.idtbl_catalogo=dtl_almacen.tbl_catalogo_idtbl_catalogo', 'left');
		$this->db->join('ctl_unidades_medida', 'tbl_catalogo.ctl_unidades_medida_idctl_unidades_medida=ctl_unidades_medida.idctl_unidades_medida', 'left');
		$this->db->join('ctl_categorias', 'tbl_catalogo.ctl_categorias_idctl_categorias=ctl_categorias.idctl_categorias', 'left');
		$this->db->join('tbl_almacen_movimientos', 'tbl_almacen_movimientos.idtbl_almacen_movimientos=dtl_asignacion.tbl_almacen_movimientos_idtbl_almacen_movimientos', 'left');
		$this->db->join('tbl_proyectos', 'tbl_proyectos.idtbl_proyectos = tbl_almacen_movimientos.tbl_proyectos_idtbl_proyectos', 'left');
		$this->db->join('tbl_segmentos_proyecto', 'tbl_segmentos_proyecto.idtbl_segmentos_proyecto = tbl_almacen_movimientos.tbl_segmentos_proyecto_idtbl_segmentos_proyecto', 'left');
		$this->db->join('tbl_solicitud_material', 'tbl_solicitud_material.idtbl_solicitud_material = tbl_almacen_movimientos.parent', 'left');
		$this->db->join('tbl_usuarios', 'tbl_usuarios.idtbl_usuarios = dtl_asignacion.tbl_usuarios_idtbl_usuarios', 'left');
		$this->db->where('dtl_almacen.tbl_almacenes_idtbl_almacenes', 23);
			$this->db->where('dtl_asignacion.tbl_usuarios_idtbl_usuarios', $this->session->userdata('id_usuario'));
		
		if($justificacion_asignacion_rh){
			$this->db->where_in('dtl_asignacion.estatus_asignacion', ['activa', 'finalizada']);
			$this->db->where('dtl_asignacion.estatus_devolucion_rh IS NOT NULL');
			$this->db->order_by('dtl_asignacion.fecha_devolucion_rh DESC');
			$this->db->having('SUM(dtl_asignacion.cantidad) IS NOT NULL'); 
		}else{
			$this->db->where('dtl_asignacion.estatus_asignacion', 'activa');
			$this->db->group_by("dtl_asignacion.iddtl_asignacion");
		}
		$query = $this->db->get();
		return $query->result();
	}

	public function asignaciones_personalEHS($uid = null, $justificacion_asignacion_rh = false) {
		$this->db->select('dtl_asignacion.*');
		$this->db->select('dtl_almacen.*');
		$this->db->select('tbl_catalogo.idtbl_catalogo');
		$this->db->select('tbl_catalogo.descripcion');
		$this->db->select('tbl_catalogo.marca');
		$this->db->select('tbl_catalogo.modelo');
		$this->db->select('tbl_catalogo.precio');
		$this->db->select('tbl_catalogo.tipo_moneda');
		$this->db->select('ctl_unidades_medida.*');
		$this->db->select('ctl_unidades_medida.*');
		$this->db->select('ctl_categorias.*');
		$this->db->select('tbl_proyectos.nombre_proyecto, tbl_proyectos.numero_proyecto');
		$this->db->select('tbl_segmentos_proyecto.segmento');
		$this->db->select('tbl_almacen_movimientos.folio');
		$this->db->select('tbl_solicitud_material.uid AS uid_solicitud');
		$this->db->select('tbl_almacen_movimientos.uid');
		$this->db->select('SUM(dtl_asignacion.cantidad) as total');
		$this->db->select('tbl_usuarios.uid AS uid_usuario');
		$this->db->select('tbl_usuarios.nombres');
		$this->db->select('tbl_usuarios.apellido_paterno');
		$this->db->select('tbl_usuarios.apellido_materno');
		$this->db->from('dtl_asignacion');
		$this->db->join('dtl_almacen', 'dtl_asignacion.dtl_almacen_iddtl_almacen=dtl_almacen.iddtl_almacen', 'left');
		$this->db->join('tbl_catalogo', 'tbl_catalogo.idtbl_catalogo=dtl_almacen.tbl_catalogo_idtbl_catalogo', 'left');
		$this->db->join('ctl_unidades_medida', 'tbl_catalogo.ctl_unidades_medida_idctl_unidades_medida=ctl_unidades_medida.idctl_unidades_medida', 'left');
		$this->db->join('ctl_categorias', 'tbl_catalogo.ctl_categorias_idctl_categorias=ctl_categorias.idctl_categorias', 'left');
		$this->db->join('tbl_almacen_movimientos', 'tbl_almacen_movimientos.idtbl_almacen_movimientos=dtl_asignacion.tbl_almacen_movimientos_idtbl_almacen_movimientos', 'left');
		$this->db->join('tbl_proyectos', 'tbl_proyectos.idtbl_proyectos = tbl_almacen_movimientos.tbl_proyectos_idtbl_proyectos', 'left');
		$this->db->join('tbl_segmentos_proyecto', 'tbl_segmentos_proyecto.idtbl_segmentos_proyecto = tbl_almacen_movimientos.tbl_segmentos_proyecto_idtbl_segmentos_proyecto', 'left');
		$this->db->join('tbl_solicitud_material', 'tbl_solicitud_material.idtbl_solicitud_material = tbl_almacen_movimientos.parent', 'left');
		$this->db->join('tbl_usuarios', 'tbl_usuarios.idtbl_usuarios = dtl_asignacion.tbl_usuarios_idtbl_usuarios', 'left');
		$this->db->where('dtl_almacen.tbl_almacenes_idtbl_almacenes', 1);
		$this->db->where('tbl_catalogo.tipo', 1);		
		if($uid != null){
			$this->db->where('dtl_asignacion.tbl_usuarios_idtbl_usuarios', $this->id_usuario($uid));
		}
		if($justificacion_asignacion_rh){
			$this->db->where_in('dtl_asignacion.estatus_asignacion', ['activa', 'finalizada']);
			$this->db->where('dtl_asignacion.estatus_devolucion_rh IS NOT NULL');
			$this->db->order_by('dtl_asignacion.fecha_devolucion_rh DESC');
			$this->db->having('SUM(dtl_asignacion.cantidad) IS NOT NULL');
		}else{
			$this->db->where('dtl_asignacion.estatus_asignacion', 'activa');
			$this->db->group_by("dtl_asignacion.iddtl_asignacion");
		}
		$query = $this->db->get();
		return $query->result();
	}
	public function asignaciones_EHS($justificacion_asignacion_rh = false) {
		$this->db->select('dtl_asignacion.*');
		$this->db->select('dtl_almacen.*');
		$this->db->select('tbl_catalogo.idtbl_catalogo');
		$this->db->select('tbl_catalogo.descripcion');
		$this->db->select('tbl_catalogo.marca');
		$this->db->select('tbl_catalogo.modelo');
		$this->db->select('tbl_catalogo.precio');
		$this->db->select('tbl_catalogo.tipo_moneda');
		$this->db->select('ctl_unidades_medida.*');
		$this->db->select('ctl_unidades_medida.*');
		$this->db->select('ctl_categorias.*');
		$this->db->select('tbl_proyectos.nombre_proyecto, tbl_proyectos.numero_proyecto');
		$this->db->select('tbl_segmentos_proyecto.segmento');
		$this->db->select('tbl_almacen_movimientos.folio');
		$this->db->select('tbl_solicitud_material.uid AS uid_solicitud');
		$this->db->select('tbl_almacen_movimientos.uid');
		$this->db->select('SUM(dtl_asignacion.cantidad) as total');
		$this->db->select('tbl_usuarios.uid AS uid_usuario');
		$this->db->select('tbl_usuarios.nombres');
		$this->db->select('tbl_usuarios.apellido_paterno');
		$this->db->select('tbl_usuarios.apellido_materno');
		$this->db->from('dtl_asignacion');
		$this->db->join('dtl_almacen', 'dtl_asignacion.dtl_almacen_iddtl_almacen=dtl_almacen.iddtl_almacen', 'left');
		$this->db->join('tbl_catalogo', 'tbl_catalogo.idtbl_catalogo=dtl_almacen.tbl_catalogo_idtbl_catalogo', 'left');
		$this->db->join('ctl_unidades_medida', 'tbl_catalogo.ctl_unidades_medida_idctl_unidades_medida=ctl_unidades_medida.idctl_unidades_medida', 'left');
		$this->db->join('ctl_categorias', 'tbl_catalogo.ctl_categorias_idctl_categorias=ctl_categorias.idctl_categorias', 'left');
		$this->db->join('tbl_almacen_movimientos', 'tbl_almacen_movimientos.idtbl_almacen_movimientos=dtl_asignacion.tbl_almacen_movimientos_idtbl_almacen_movimientos', 'left');
		$this->db->join('tbl_proyectos', 'tbl_proyectos.idtbl_proyectos = tbl_almacen_movimientos.tbl_proyectos_idtbl_proyectos', 'left');
		$this->db->join('tbl_segmentos_proyecto', 'tbl_segmentos_proyecto.idtbl_segmentos_proyecto = tbl_almacen_movimientos.tbl_segmentos_proyecto_idtbl_segmentos_proyecto', 'left');
		$this->db->join('tbl_solicitud_material', 'tbl_solicitud_material.idtbl_solicitud_material = tbl_almacen_movimientos.parent', 'left');
		$this->db->join('tbl_usuarios', 'tbl_usuarios.idtbl_usuarios = dtl_asignacion.tbl_usuarios_idtbl_usuarios', 'left');
		$this->db->where('dtl_almacen.tbl_almacenes_idtbl_almacenes', 1);
		$this->db->where('tbl_catalogo.tipo', 1);		
		
			$this->db->where('dtl_asignacion.tbl_usuarios_idtbl_usuarios', $this->session->userdata('id_usuario'));
		
		if($justificacion_asignacion_rh){
			$this->db->where_in('dtl_asignacion.estatus_asignacion', ['activa', 'finalizada']);
			$this->db->where('dtl_asignacion.estatus_devolucion_rh IS NOT NULL');
			$this->db->order_by('dtl_asignacion.fecha_devolucion_rh DESC');
			$this->db->having('SUM(dtl_asignacion.cantidad) IS NOT NULL');
		}else{
			$this->db->where('dtl_asignacion.estatus_asignacion', 'activa');
			$this->db->group_by("dtl_asignacion.iddtl_asignacion");
		}
		$query = $this->db->get();
		return $query->result();
	}

	public function asignaciones_personalAutosControlVehicular($uid) {
		$this->db->select('dtl_asignacion.*');
		$this->db->select('dtl_almacen.*');
		$this->db->select('tbl_catalogo.idtbl_catalogo');
		$this->db->select('tbl_catalogo.descripcion');
		$this->db->select('tbl_catalogo.marca');
		$this->db->select('tbl_catalogo.modelo');
		$this->db->select('tbl_catalogo.precio');
		$this->db->select('tbl_catalogo.tipo_moneda');
		$this->db->select('ctl_unidades_medida.*');
		$this->db->select('ctl_unidades_medida.*');
		$this->db->select('ctl_categorias.*');
		$this->db->select('tbl_proyectos.nombre_proyecto, tbl_proyectos.numero_proyecto');
		$this->db->select('tbl_segmentos_proyecto.segmento');
		$this->db->select('tbl_almacen_movimientos.folio');
		$this->db->select('tbl_solicitud_material.uid AS uid_solicitud');
		$this->db->select('tbl_almacen_movimientos.uid');
		$this->db->select('SUM(dtl_asignacion.cantidad) as total');
		$this->db->from('dtl_asignacion');
		$this->db->join('dtl_almacen', 'dtl_asignacion.dtl_almacen_iddtl_almacen=dtl_almacen.iddtl_almacen', 'left');
		$this->db->join('tbl_catalogo', 'tbl_catalogo.idtbl_catalogo=dtl_almacen.tbl_catalogo_idtbl_catalogo', 'left');
		$this->db->join('ctl_unidades_medida', 'tbl_catalogo.ctl_unidades_medida_idctl_unidades_medida=ctl_unidades_medida.idctl_unidades_medida', 'left');
		$this->db->join('ctl_categorias', 'tbl_catalogo.ctl_categorias_idctl_categorias=ctl_categorias.idctl_categorias', 'left');
		$this->db->join('tbl_almacen_movimientos', 'tbl_almacen_movimientos.idtbl_almacen_movimientos=dtl_asignacion.tbl_almacen_movimientos_idtbl_almacen_movimientos', 'left');
		$this->db->join('tbl_proyectos', 'tbl_proyectos.idtbl_proyectos = tbl_almacen_movimientos.tbl_proyectos_idtbl_proyectos', 'left');
		$this->db->join('tbl_segmentos_proyecto', 'tbl_segmentos_proyecto.idtbl_segmentos_proyecto = tbl_almacen_movimientos.tbl_segmentos_proyecto_idtbl_segmentos_proyecto', 'left');
		$this->db->join('tbl_solicitud_material', 'tbl_solicitud_material.idtbl_solicitud_material = tbl_almacen_movimientos.parent', 'left');
		$this->db->where('dtl_asignacion.tbl_usuarios_idtbl_usuarios', $this->id_usuario($uid));
		$this->db->where('dtl_asignacion.estatus_asignacion', 'activa');
		$this->db->where('dtl_almacen.tbl_almacenes_idtbl_almacenes', ID_ALMACEN_AUTOS_CONTROL_VEHICULAR);
		$this->db->group_by("dtl_asignacion.iddtl_asignacion");
		$query = $this->db->get();
		return $query->result();
	}

	public function asignaciones_autoscv() {
		$this->db->select('dtl_asignacion.*');
		$this->db->select('dtl_almacen.*');
		$this->db->select('tbl_catalogo.idtbl_catalogo');
		$this->db->select('tbl_catalogo.descripcion');
		$this->db->select('tbl_catalogo.marca');
		$this->db->select('tbl_catalogo.modelo');
		$this->db->select('tbl_catalogo.precio');
		$this->db->select('tbl_catalogo.tipo_moneda');
		$this->db->select('ctl_unidades_medida.*');
		$this->db->select('ctl_unidades_medida.*');
		$this->db->select('ctl_categorias.*');
		$this->db->select('tbl_proyectos.nombre_proyecto, tbl_proyectos.numero_proyecto');
		$this->db->select('tbl_segmentos_proyecto.segmento');
		$this->db->select('tbl_almacen_movimientos.folio');
		$this->db->select('tbl_solicitud_material.uid AS uid_solicitud');
		$this->db->select('tbl_almacen_movimientos.uid');
		$this->db->select('SUM(dtl_asignacion.cantidad) as total');
		$this->db->from('dtl_asignacion');
		$this->db->join('dtl_almacen', 'dtl_asignacion.dtl_almacen_iddtl_almacen=dtl_almacen.iddtl_almacen', 'left');
		$this->db->join('tbl_catalogo', 'tbl_catalogo.idtbl_catalogo=dtl_almacen.tbl_catalogo_idtbl_catalogo', 'left');
		$this->db->join('ctl_unidades_medida', 'tbl_catalogo.ctl_unidades_medida_idctl_unidades_medida=ctl_unidades_medida.idctl_unidades_medida', 'left');
		$this->db->join('ctl_categorias', 'tbl_catalogo.ctl_categorias_idctl_categorias=ctl_categorias.idctl_categorias', 'left');
		$this->db->join('tbl_almacen_movimientos', 'tbl_almacen_movimientos.idtbl_almacen_movimientos=dtl_asignacion.tbl_almacen_movimientos_idtbl_almacen_movimientos', 'left');
		$this->db->join('tbl_proyectos', 'tbl_proyectos.idtbl_proyectos = tbl_almacen_movimientos.tbl_proyectos_idtbl_proyectos', 'left');
		$this->db->join('tbl_segmentos_proyecto', 'tbl_segmentos_proyecto.idtbl_segmentos_proyecto = tbl_almacen_movimientos.tbl_segmentos_proyecto_idtbl_segmentos_proyecto', 'left');
		$this->db->join('tbl_solicitud_material', 'tbl_solicitud_material.idtbl_solicitud_material = tbl_almacen_movimientos.parent', 'left');
		$this->db->where('dtl_asignacion.tbl_usuarios_idtbl_usuarios', $this->session->userdata('id_usuario'));
		$this->db->where('dtl_asignacion.estatus_asignacion', 'activa');
		$this->db->where('dtl_almacen.tbl_almacenes_idtbl_almacenes', ID_ALMACEN_AUTOS_CONTROL_VEHICULAR);
		$this->db->group_by("dtl_asignacion.iddtl_asignacion");
		$query = $this->db->get();
		return $query->result();
	}

	public function asignaciones_personalRefaccionesControlVehicular($uid) {
		$this->db->select('dtl_asignacion.*');
		$this->db->select('dtl_almacen.*');
		$this->db->select('tbl_catalogo.idtbl_catalogo');
		$this->db->select('tbl_catalogo.descripcion');
		$this->db->select('tbl_catalogo.marca');
		$this->db->select('tbl_catalogo.modelo');
		$this->db->select('tbl_catalogo.precio');
		$this->db->select('tbl_catalogo.tipo_moneda');
		$this->db->select('ctl_unidades_medida.*');
		$this->db->select('ctl_unidades_medida.*');
		$this->db->select('ctl_categorias.*');
		$this->db->select('tbl_proyectos.nombre_proyecto, tbl_proyectos.numero_proyecto');
		$this->db->select('tbl_segmentos_proyecto.segmento');
		$this->db->select('tbl_almacen_movimientos.folio');
		$this->db->select('tbl_solicitud_material.uid AS uid_solicitud');
		$this->db->select('tbl_almacen_movimientos.uid');
		$this->db->select('SUM(dtl_asignacion.cantidad) as total');
		$this->db->from('dtl_asignacion');
		$this->db->join('dtl_almacen', 'dtl_asignacion.dtl_almacen_iddtl_almacen=dtl_almacen.iddtl_almacen', 'left');
		$this->db->join('tbl_catalogo', 'tbl_catalogo.idtbl_catalogo=dtl_almacen.tbl_catalogo_idtbl_catalogo', 'left');
		$this->db->join('ctl_unidades_medida', 'tbl_catalogo.ctl_unidades_medida_idctl_unidades_medida=ctl_unidades_medida.idctl_unidades_medida', 'left');
		$this->db->join('ctl_categorias', 'tbl_catalogo.ctl_categorias_idctl_categorias=ctl_categorias.idctl_categorias', 'left');
		$this->db->join('tbl_almacen_movimientos', 'tbl_almacen_movimientos.idtbl_almacen_movimientos=dtl_asignacion.tbl_almacen_movimientos_idtbl_almacen_movimientos', 'left');
		$this->db->join('tbl_proyectos', 'tbl_proyectos.idtbl_proyectos = tbl_almacen_movimientos.tbl_proyectos_idtbl_proyectos', 'left');
		$this->db->join('tbl_segmentos_proyecto', 'tbl_segmentos_proyecto.idtbl_segmentos_proyecto = tbl_almacen_movimientos.tbl_segmentos_proyecto_idtbl_segmentos_proyecto', 'left');
		$this->db->join('tbl_solicitud_material', 'tbl_solicitud_material.idtbl_solicitud_material = tbl_almacen_movimientos.parent', 'left');
		$this->db->where('dtl_asignacion.tbl_usuarios_idtbl_usuarios', $this->id_usuario($uid));
		$this->db->where('dtl_asignacion.estatus_asignacion', 'activa');
		$this->db->where('dtl_almacen.tbl_almacenes_idtbl_almacenes', ID_ALMACEN_REFACCIONES_CONTROL_VEHICULAR);
		$this->db->group_by("dtl_asignacion.iddtl_asignacion");
		$query = $this->db->get();
		return $query->result();
	}

	public function asignaciones_personalTarjetas($uid) {
		$this->db->select('dtl_asignacion.*');
		$this->db->select('dtl_almacen.*');
		$this->db->select('tbl_catalogo.idtbl_catalogo');
		$this->db->select('tbl_catalogo.descripcion');
		$this->db->select('tbl_catalogo.marca');
		$this->db->select('tbl_catalogo.modelo');
		$this->db->select('tbl_catalogo.precio');
		$this->db->select('tbl_catalogo.tipo_moneda');
		$this->db->select('ctl_unidades_medida.*');
		$this->db->select('ctl_unidades_medida.*');
		$this->db->select('ctl_categorias.*');
		$this->db->select('tbl_proyectos.nombre_proyecto, tbl_proyectos.numero_proyecto');
		$this->db->select('tbl_segmentos_proyecto.segmento');
		$this->db->select('tbl_almacen_movimientos.folio');
		$this->db->select('tbl_solicitud_material.uid AS uid_solicitud');
		$this->db->select('tbl_almacen_movimientos.uid');
		$this->db->select('SUM(dtl_asignacion.cantidad) as total');
		$this->db->from('dtl_asignacion');
		$this->db->join('dtl_almacen', 'dtl_asignacion.dtl_almacen_iddtl_almacen=dtl_almacen.iddtl_almacen', 'left');
		$this->db->join('tbl_catalogo', 'tbl_catalogo.idtbl_catalogo=dtl_almacen.tbl_catalogo_idtbl_catalogo', 'left');
		$this->db->join('ctl_unidades_medida', 'tbl_catalogo.ctl_unidades_medida_idctl_unidades_medida=ctl_unidades_medida.idctl_unidades_medida', 'left');
		$this->db->join('ctl_categorias', 'tbl_catalogo.ctl_categorias_idctl_categorias=ctl_categorias.idctl_categorias', 'left');
		$this->db->join('tbl_almacen_movimientos', 'tbl_almacen_movimientos.idtbl_almacen_movimientos=dtl_asignacion.tbl_almacen_movimientos_idtbl_almacen_movimientos', 'left');
		$this->db->join('tbl_proyectos', 'tbl_proyectos.idtbl_proyectos = tbl_almacen_movimientos.tbl_proyectos_idtbl_proyectos', 'left');
		$this->db->join('tbl_segmentos_proyecto', 'tbl_segmentos_proyecto.idtbl_segmentos_proyecto = tbl_almacen_movimientos.tbl_segmentos_proyecto_idtbl_segmentos_proyecto', 'left');
		$this->db->join('tbl_solicitud_material', 'tbl_solicitud_material.idtbl_solicitud_material = tbl_almacen_movimientos.parent', 'left');
		$this->db->where('dtl_asignacion.tbl_usuarios_idtbl_usuarios', $this->id_usuario($uid));
		$this->db->where('dtl_asignacion.estatus_asignacion', 'activa');
		$this->db->where('dtl_almacen.tbl_almacenes_idtbl_almacenes', ID_ALMACEN_TARJETAS_GASOLINA);
		$this->db->group_by("dtl_asignacion.iddtl_asignacion");
		$query = $this->db->get();
		return $query->result();
	}

	

	public function asignaciones_personalSistemas($uid) {
		$this->db->select('dtl_asignacion.*');
		$this->db->select('dtl_almacen.*');
		$this->db->select('tbl_catalogo.idtbl_catalogo');
		$this->db->select('tbl_catalogo.descripcion');
		$this->db->select('tbl_catalogo.marca');
		$this->db->select('tbl_catalogo.modelo');
		$this->db->select('tbl_catalogo.precio');
		$this->db->select('tbl_catalogo.tipo_moneda');
		$this->db->select('ctl_unidades_medida.*');
		$this->db->select('ctl_unidades_medida.*');
		$this->db->select('ctl_categorias.*');
		$this->db->select('tbl_proyectos.nombre_proyecto, tbl_proyectos.numero_proyecto');
		$this->db->select('tbl_segmentos_proyecto.segmento');
		$this->db->select('tbl_almacen_movimientos.folio');
		$this->db->select('tbl_solicitud_material.uid AS uid_solicitud');
		$this->db->select('tbl_almacen_movimientos.uid');
		$this->db->select('SUM(dtl_asignacion.cantidad) as total');
		$this->db->from('dtl_asignacion');
		$this->db->join('dtl_almacen', 'dtl_asignacion.dtl_almacen_iddtl_almacen=dtl_almacen.iddtl_almacen', 'left');
		$this->db->join('tbl_catalogo', 'tbl_catalogo.idtbl_catalogo=dtl_almacen.tbl_catalogo_idtbl_catalogo', 'left');
		$this->db->join('ctl_unidades_medida', 'tbl_catalogo.ctl_unidades_medida_idctl_unidades_medida=ctl_unidades_medida.idctl_unidades_medida', 'left');
		$this->db->join('ctl_categorias', 'tbl_catalogo.ctl_categorias_idctl_categorias=ctl_categorias.idctl_categorias', 'left');
		$this->db->join('tbl_almacen_movimientos', 'tbl_almacen_movimientos.idtbl_almacen_movimientos=dtl_asignacion.tbl_almacen_movimientos_idtbl_almacen_movimientos', 'left');
		$this->db->join('tbl_proyectos', 'tbl_proyectos.idtbl_proyectos = tbl_almacen_movimientos.tbl_proyectos_idtbl_proyectos', 'left');
		$this->db->join('tbl_segmentos_proyecto', 'tbl_segmentos_proyecto.idtbl_segmentos_proyecto = tbl_almacen_movimientos.tbl_segmentos_proyecto_idtbl_segmentos_proyecto', 'left');
		$this->db->join('tbl_solicitud_material', 'tbl_solicitud_material.idtbl_solicitud_material = tbl_almacen_movimientos.parent', 'left');
		$this->db->where('dtl_asignacion.tbl_usuarios_idtbl_usuarios', $this->id_usuario($uid));
		$this->db->where('dtl_asignacion.estatus_asignacion', 'activa');
		//$this->db->or_where('dtl_almacen.tbl_almacenes_idtbl_almacenes', ID_ALMACEN_SISTEMAS);
		//$this->db->where('dtl_almacen.tbl_almacenes_idtbl_almacenes', 397);				
		//$this->db->where('dtl_almacen.tbl_almacenes_idtbl_almacenes!=', 2);
		$this->db->where('tbl_catalogo.tipo', 6);
		$this->db->group_by("dtl_asignacion.iddtl_asignacion");
		$query = $this->db->get();
		return $query->result();
	}
	
	public function asignaciones_autosControlVehicular($uid = null, $justificacion_asignacion_rh = false) {
		$this->db->select('dtl_asignacion.*');
		$this->db->select('dtl_almacen.*');
		$this->db->select('tbl_catalogo.idtbl_catalogo');
		$this->db->select('tbl_catalogo.descripcion');
		$this->db->select('tbl_catalogo.marca');
		$this->db->select('tbl_catalogo.modelo');
		$this->db->select('tbl_catalogo.precio');
		$this->db->select('tbl_catalogo.tipo_moneda');
		$this->db->select('ctl_unidades_medida.*');
		$this->db->select('ctl_unidades_medida.*');
		$this->db->select('ctl_categorias.*');
		$this->db->select('tbl_proyectos.nombre_proyecto, tbl_proyectos.numero_proyecto');
		$this->db->select('tbl_segmentos_proyecto.segmento');
		$this->db->select('tbl_almacen_movimientos.folio');
		$this->db->select('tbl_solicitud_material.uid AS uid_solicitud');
		$this->db->select('tbl_almacen_movimientos.uid');
		$this->db->select('SUM(dtl_asignacion.cantidad) as total');
		$this->db->select('tbl_usuarios.uid AS uid_usuario');
		$this->db->select('tbl_usuarios.nombres');
		$this->db->select('tbl_usuarios.apellido_paterno');
		$this->db->select('tbl_usuarios.apellido_materno');
		$this->db->from('dtl_asignacion');
		$this->db->join('dtl_almacen', 'dtl_asignacion.dtl_almacen_iddtl_almacen=dtl_almacen.iddtl_almacen', 'left');
		$this->db->join('tbl_catalogo', 'tbl_catalogo.idtbl_catalogo=dtl_almacen.tbl_catalogo_idtbl_catalogo', 'left');
		$this->db->join('ctl_unidades_medida', 'tbl_catalogo.ctl_unidades_medida_idctl_unidades_medida=ctl_unidades_medida.idctl_unidades_medida', 'left');
		$this->db->join('ctl_categorias', 'tbl_catalogo.ctl_categorias_idctl_categorias=ctl_categorias.idctl_categorias', 'left');
		$this->db->join('tbl_almacen_movimientos', 'tbl_almacen_movimientos.idtbl_almacen_movimientos=dtl_asignacion.tbl_almacen_movimientos_idtbl_almacen_movimientos', 'left');
		$this->db->join('tbl_proyectos', 'tbl_proyectos.idtbl_proyectos = tbl_almacen_movimientos.tbl_proyectos_idtbl_proyectos', 'left');
		$this->db->join('tbl_segmentos_proyecto', 'tbl_segmentos_proyecto.idtbl_segmentos_proyecto = tbl_almacen_movimientos.tbl_segmentos_proyecto_idtbl_segmentos_proyecto', 'left');
		$this->db->join('tbl_solicitud_material', 'tbl_solicitud_material.idtbl_solicitud_material = tbl_almacen_movimientos.parent', 'left');
		$this->db->join('tbl_usuarios', 'tbl_usuarios.idtbl_usuarios = dtl_asignacion.tbl_usuarios_idtbl_usuarios', 'left');
		$this->db->where('dtl_almacen.tbl_almacenes_idtbl_almacenes', ID_ALMACEN_AUTOS_CONTROL_VEHICULAR);
		if($uid != null){
			$this->db->where('dtl_asignacion.tbl_usuarios_idtbl_usuarios', $this->id_usuario($uid));
		}
		if($justificacion_asignacion_rh){
			$this->db->where_in('dtl_asignacion.estatus_asignacion', ['activa', 'finalizada']);
			$this->db->where('dtl_asignacion.estatus_devolucion_rh IS NOT NULL');
			$this->db->order_by('dtl_asignacion.fecha_devolucion_rh DESC');
			$this->db->having('SUM(dtl_asignacion.cantidad) IS NOT NULL'); 
		}else{
			$this->db->where('dtl_asignacion.estatus_asignacion', 'activa');
			$this->db->group_by("dtl_asignacion.iddtl_asignacion");
		}
		$query = $this->db->get();
		return $query->result();
	}

	public function asignaciones_refaccionesControlVehicular($uid = null, $justificacion_asignacion_rh = false) {
		$this->db->select('dtl_asignacion.*');
		$this->db->select('dtl_almacen.*');
		$this->db->select('tbl_catalogo.idtbl_catalogo');
		$this->db->select('tbl_catalogo.descripcion');
		$this->db->select('tbl_catalogo.marca');
		$this->db->select('tbl_catalogo.modelo');
		$this->db->select('tbl_catalogo.precio');
		$this->db->select('tbl_catalogo.tipo_moneda');
		$this->db->select('ctl_unidades_medida.*');
		$this->db->select('ctl_unidades_medida.*');
		$this->db->select('ctl_categorias.*');
		$this->db->select('tbl_proyectos.nombre_proyecto, tbl_proyectos.numero_proyecto');
		$this->db->select('tbl_segmentos_proyecto.segmento');
		$this->db->select('tbl_almacen_movimientos.folio');
		$this->db->select('tbl_solicitud_material.uid AS uid_solicitud');
		$this->db->select('tbl_almacen_movimientos.uid');
		$this->db->select('SUM(dtl_asignacion.cantidad) as total');
		$this->db->select('tbl_usuarios.uid AS uid_usuario');
		$this->db->select('tbl_usuarios.nombres');
		$this->db->select('tbl_usuarios.apellido_paterno');
		$this->db->select('tbl_usuarios.apellido_materno');
		$this->db->from('dtl_asignacion');
		$this->db->join('dtl_almacen', 'dtl_asignacion.dtl_almacen_iddtl_almacen=dtl_almacen.iddtl_almacen', 'left');
		$this->db->join('tbl_catalogo', 'tbl_catalogo.idtbl_catalogo=dtl_almacen.tbl_catalogo_idtbl_catalogo', 'left');
		$this->db->join('ctl_unidades_medida', 'tbl_catalogo.ctl_unidades_medida_idctl_unidades_medida=ctl_unidades_medida.idctl_unidades_medida', 'left');
		$this->db->join('ctl_categorias', 'tbl_catalogo.ctl_categorias_idctl_categorias=ctl_categorias.idctl_categorias', 'left');
		$this->db->join('tbl_almacen_movimientos', 'tbl_almacen_movimientos.idtbl_almacen_movimientos=dtl_asignacion.tbl_almacen_movimientos_idtbl_almacen_movimientos', 'left');
		$this->db->join('tbl_proyectos', 'tbl_proyectos.idtbl_proyectos = tbl_almacen_movimientos.tbl_proyectos_idtbl_proyectos', 'left');
		$this->db->join('tbl_segmentos_proyecto', 'tbl_segmentos_proyecto.idtbl_segmentos_proyecto = tbl_almacen_movimientos.tbl_segmentos_proyecto_idtbl_segmentos_proyecto', 'left');
		$this->db->join('tbl_solicitud_material', 'tbl_solicitud_material.idtbl_solicitud_material = tbl_almacen_movimientos.parent', 'left');
		$this->db->join('tbl_usuarios', 'tbl_usuarios.idtbl_usuarios = dtl_asignacion.tbl_usuarios_idtbl_usuarios', 'left');
		$this->db->where('dtl_almacen.tbl_almacenes_idtbl_almacenes', ID_ALMACEN_REFACCIONES_CONTROL_VEHICULAR);
		if($uid != null){
			$this->db->where('dtl_asignacion.tbl_usuarios_idtbl_usuarios', $this->id_usuario($uid));
		}
		if($justificacion_asignacion_rh){
			$this->db->where_in('dtl_asignacion.estatus_asignacion', ['activa', 'finalizada']);
			$this->db->where('dtl_asignacion.estatus_devolucion_rh IS NOT NULL');
			$this->db->order_by('dtl_asignacion.fecha_devolucion_rh DESC');
			$this->db->having('SUM(dtl_asignacion.cantidad) IS NOT NULL'); 
		}else{
			$this->db->where('dtl_asignacion.estatus_asignacion', 'activa');
			$this->db->group_by("dtl_asignacion.iddtl_asignacion");
		}
		$query = $this->db->get();
		return $query->result();
	}
	public function asignaciones_generalrefaccionesCV($justificacion_asignacion_rh = false) {
		$this->db->select('dtl_asignacion.*');
		$this->db->select('dtl_almacen.*');
		$this->db->select('tbl_catalogo.idtbl_catalogo');
		$this->db->select('tbl_catalogo.descripcion');
		$this->db->select('tbl_catalogo.marca');
		$this->db->select('tbl_catalogo.modelo');
		$this->db->select('tbl_catalogo.precio');
		$this->db->select('tbl_catalogo.tipo_moneda');
		$this->db->select('ctl_unidades_medida.*');
		$this->db->select('ctl_unidades_medida.*');
		$this->db->select('ctl_categorias.*');
		$this->db->select('tbl_proyectos.nombre_proyecto, tbl_proyectos.numero_proyecto');
		$this->db->select('tbl_segmentos_proyecto.segmento');
		$this->db->select('tbl_almacen_movimientos.folio');
		$this->db->select('tbl_solicitud_material.uid AS uid_solicitud');
		$this->db->select('tbl_almacen_movimientos.uid');
		$this->db->select('SUM(dtl_asignacion.cantidad) as total');
		$this->db->select('tbl_usuarios.uid AS uid_usuario');
		$this->db->select('tbl_usuarios.nombres');
		$this->db->select('tbl_usuarios.apellido_paterno');
		$this->db->select('tbl_usuarios.apellido_materno');
		$this->db->from('dtl_asignacion');
		$this->db->join('dtl_almacen', 'dtl_asignacion.dtl_almacen_iddtl_almacen=dtl_almacen.iddtl_almacen', 'left');
		$this->db->join('tbl_catalogo', 'tbl_catalogo.idtbl_catalogo=dtl_almacen.tbl_catalogo_idtbl_catalogo', 'left');
		$this->db->join('ctl_unidades_medida', 'tbl_catalogo.ctl_unidades_medida_idctl_unidades_medida=ctl_unidades_medida.idctl_unidades_medida', 'left');
		$this->db->join('ctl_categorias', 'tbl_catalogo.ctl_categorias_idctl_categorias=ctl_categorias.idctl_categorias', 'left');
		$this->db->join('tbl_almacen_movimientos', 'tbl_almacen_movimientos.idtbl_almacen_movimientos=dtl_asignacion.tbl_almacen_movimientos_idtbl_almacen_movimientos', 'left');
		$this->db->join('tbl_proyectos', 'tbl_proyectos.idtbl_proyectos = tbl_almacen_movimientos.tbl_proyectos_idtbl_proyectos', 'left');
		$this->db->join('tbl_segmentos_proyecto', 'tbl_segmentos_proyecto.idtbl_segmentos_proyecto = tbl_almacen_movimientos.tbl_segmentos_proyecto_idtbl_segmentos_proyecto', 'left');
		$this->db->join('tbl_solicitud_material', 'tbl_solicitud_material.idtbl_solicitud_material = tbl_almacen_movimientos.parent', 'left');
		$this->db->join('tbl_usuarios', 'tbl_usuarios.idtbl_usuarios = dtl_asignacion.tbl_usuarios_idtbl_usuarios', 'left');
		$this->db->where('dtl_almacen.tbl_almacenes_idtbl_almacenes', ID_ALMACEN_REFACCIONES_CONTROL_VEHICULAR);
			$this->db->where('dtl_asignacion.tbl_usuarios_idtbl_usuarios', $this->session->userdata('id_usuario'));
		
		if($justificacion_asignacion_rh){
			$this->db->where_in('dtl_asignacion.estatus_asignacion', ['activa', 'finalizada']);
			$this->db->where('dtl_asignacion.estatus_devolucion_rh IS NOT NULL');
			$this->db->order_by('dtl_asignacion.fecha_devolucion_rh DESC');
			$this->db->having('SUM(dtl_asignacion.cantidad) IS NOT NULL'); 
		}else{
			$this->db->where('dtl_asignacion.estatus_asignacion', 'activa');
			$this->db->group_by("dtl_asignacion.iddtl_asignacion");
		}
		$query = $this->db->get();
		return $query->result();
	}


	public function asignaciones_tarjetas($uid = null, $justificacion_asignacion_rh = false) {
		$this->db->select('dtl_asignacion.*');
		$this->db->select('dtl_almacen.*');
		$this->db->select('tbl_catalogo.idtbl_catalogo');
		$this->db->select('tbl_catalogo.descripcion');
		$this->db->select('tbl_catalogo.marca');
		$this->db->select('tbl_catalogo.modelo');
		$this->db->select('tbl_catalogo.precio');
		$this->db->select('tbl_catalogo.tipo_moneda');
		$this->db->select('ctl_unidades_medida.*');
		$this->db->select('ctl_unidades_medida.*');
		$this->db->select('ctl_categorias.*');
		$this->db->select('tbl_proyectos.nombre_proyecto, tbl_proyectos.numero_proyecto');
		$this->db->select('tbl_segmentos_proyecto.segmento');
		$this->db->select('tbl_almacen_movimientos.folio');
		$this->db->select('tbl_solicitud_material.uid AS uid_solicitud');
		$this->db->select('tbl_almacen_movimientos.uid');
		$this->db->select('SUM(dtl_asignacion.cantidad) as total');
		$this->db->select('tbl_usuarios.uid AS uid_usuario');
		$this->db->select('tbl_usuarios.nombres');
		$this->db->select('tbl_usuarios.apellido_paterno');
		$this->db->select('tbl_usuarios.apellido_materno');
		$this->db->from('dtl_asignacion');
		$this->db->join('dtl_almacen', 'dtl_asignacion.dtl_almacen_iddtl_almacen=dtl_almacen.iddtl_almacen', 'left');
		$this->db->join('tbl_catalogo', 'tbl_catalogo.idtbl_catalogo=dtl_almacen.tbl_catalogo_idtbl_catalogo', 'left');
		$this->db->join('ctl_unidades_medida', 'tbl_catalogo.ctl_unidades_medida_idctl_unidades_medida=ctl_unidades_medida.idctl_unidades_medida', 'left');
		$this->db->join('ctl_categorias', 'tbl_catalogo.ctl_categorias_idctl_categorias=ctl_categorias.idctl_categorias', 'left');
		$this->db->join('tbl_almacen_movimientos', 'tbl_almacen_movimientos.idtbl_almacen_movimientos=dtl_asignacion.tbl_almacen_movimientos_idtbl_almacen_movimientos', 'left');
		$this->db->join('tbl_proyectos', 'tbl_proyectos.idtbl_proyectos = tbl_almacen_movimientos.tbl_proyectos_idtbl_proyectos', 'left');
		$this->db->join('tbl_segmentos_proyecto', 'tbl_segmentos_proyecto.idtbl_segmentos_proyecto = tbl_almacen_movimientos.tbl_segmentos_proyecto_idtbl_segmentos_proyecto', 'left');
		$this->db->join('tbl_solicitud_material', 'tbl_solicitud_material.idtbl_solicitud_material = tbl_almacen_movimientos.parent', 'left');
		$this->db->join('tbl_usuarios', 'tbl_usuarios.idtbl_usuarios = dtl_asignacion.tbl_usuarios_idtbl_usuarios', 'left');
		$this->db->where('dtl_almacen.tbl_almacenes_idtbl_almacenes', ID_ALMACEN_TARJETAS_GASOLINA);
		if($uid != null){
			$this->db->where('dtl_asignacion.tbl_usuarios_idtbl_usuarios', $this->id_usuario($uid));
		}
		if($justificacion_asignacion_rh){
			$this->db->where_in('dtl_asignacion.estatus_asignacion', ['activa', 'finalizada']);
			$this->db->where('dtl_asignacion.estatus_devolucion_rh IS NOT NULL');
			$this->db->order_by('dtl_asignacion.fecha_devolucion_rh DESC');
			$this->db->having('SUM(dtl_asignacion.cantidad) IS NOT NULL'); 
		}else{
			$this->db->where('dtl_asignacion.estatus_asignacion', 'activa');
			$this->db->group_by("dtl_asignacion.iddtl_asignacion");
		}
		$query = $this->db->get();
		return $query->result();
	}

	public function asignaciones_sistemas($uid = null, $justificacion_asignacion_rh = false) {
		$this->db->select('dtl_asignacion.*');
		$this->db->select('dtl_almacen.*');
		$this->db->select('tbl_catalogo.idtbl_catalogo');
		$this->db->select('tbl_catalogo.descripcion');
		$this->db->select('tbl_catalogo.marca');
		$this->db->select('tbl_catalogo.modelo');
		$this->db->select('tbl_catalogo.precio');
		$this->db->select('tbl_catalogo.tipo_moneda');
		$this->db->select('ctl_unidades_medida.*');
		$this->db->select('ctl_unidades_medida.*');
		$this->db->select('ctl_categorias.*');
		$this->db->select('tbl_proyectos.nombre_proyecto, tbl_proyectos.numero_proyecto');
		$this->db->select('tbl_segmentos_proyecto.segmento');
		$this->db->select('tbl_almacen_movimientos.folio');
		$this->db->select('tbl_solicitud_material.uid AS uid_solicitud');
		$this->db->select('tbl_almacen_movimientos.uid');
		$this->db->select('SUM(dtl_asignacion.cantidad) as total');
		$this->db->select('tbl_usuarios.uid AS uid_usuario');
		$this->db->select('tbl_usuarios.nombres');
		$this->db->select('tbl_usuarios.apellido_paterno');
		$this->db->select('tbl_usuarios.apellido_materno');
		$this->db->from('dtl_asignacion');
		$this->db->join('dtl_almacen', 'dtl_asignacion.dtl_almacen_iddtl_almacen=dtl_almacen.iddtl_almacen', 'left');
		$this->db->join('tbl_catalogo', 'tbl_catalogo.idtbl_catalogo=dtl_almacen.tbl_catalogo_idtbl_catalogo', 'left');
		$this->db->join('ctl_unidades_medida', 'tbl_catalogo.ctl_unidades_medida_idctl_unidades_medida=ctl_unidades_medida.idctl_unidades_medida', 'left');
		$this->db->join('ctl_categorias', 'tbl_catalogo.ctl_categorias_idctl_categorias=ctl_categorias.idctl_categorias', 'left');
		$this->db->join('tbl_almacen_movimientos', 'tbl_almacen_movimientos.idtbl_almacen_movimientos=dtl_asignacion.tbl_almacen_movimientos_idtbl_almacen_movimientos', 'left');
		$this->db->join('tbl_proyectos', 'tbl_proyectos.idtbl_proyectos = tbl_almacen_movimientos.tbl_proyectos_idtbl_proyectos', 'left');
		$this->db->join('tbl_segmentos_proyecto', 'tbl_segmentos_proyecto.idtbl_segmentos_proyecto = tbl_almacen_movimientos.tbl_segmentos_proyecto_idtbl_segmentos_proyecto', 'left');
		$this->db->join('tbl_solicitud_material', 'tbl_solicitud_material.idtbl_solicitud_material = tbl_almacen_movimientos.parent', 'left');
		$this->db->join('tbl_usuarios', 'tbl_usuarios.idtbl_usuarios = dtl_asignacion.tbl_usuarios_idtbl_usuarios', 'left');
		$this->db->where('dtl_almacen.tbl_almacenes_idtbl_almacenes', 397);
		$this->db->where('dtl_almacen.tbl_almacenes_idtbl_almacenes', 30);
		$this->db->or_where('tbl_catalogo.tipo', 6);
		
		if($uid != null){
			$this->db->where('dtl_asignacion.tbl_usuarios_idtbl_usuarios', $this->id_usuario($uid));
		}
		if($justificacion_asignacion_rh){
			$this->db->where_in('dtl_asignacion.estatus_asignacion', ['activa', 'finalizada']);
			$this->db->where('dtl_asignacion.estatus_devolucion_rh IS NOT NULL');
			$this->db->order_by('dtl_asignacion.fecha_devolucion_rh DESC');
			$this->db->having('SUM(dtl_asignacion.cantidad) IS NOT NULL');
		}else{			
			$this->db->where('dtl_asignacion.estatus_asignacion', 'activa');
			$this->db->group_by("dtl_asignacion.iddtl_asignacion");
		}
		$query = $this->db->get();
		return $query->result();
	}

	public function asignaciones_generalsistemas($justificacion_asignacion_rh = false) {
		$this->db->select('dtl_asignacion.*');
		$this->db->select('dtl_almacen.*');
		$this->db->select('tbl_catalogo.idtbl_catalogo');
		$this->db->select('tbl_catalogo.descripcion');
		$this->db->select('tbl_catalogo.marca');
		$this->db->select('tbl_catalogo.modelo');
		$this->db->select('tbl_catalogo.precio');
		$this->db->select('tbl_catalogo.tipo_moneda');
		$this->db->select('ctl_unidades_medida.*');
		$this->db->select('ctl_unidades_medida.*');
		$this->db->select('ctl_categorias.*');
		$this->db->select('tbl_proyectos.nombre_proyecto, tbl_proyectos.numero_proyecto');
		$this->db->select('tbl_segmentos_proyecto.segmento');
		$this->db->select('tbl_almacen_movimientos.folio');
		$this->db->select('tbl_solicitud_material.uid AS uid_solicitud');
		$this->db->select('tbl_almacen_movimientos.uid');
		$this->db->select('SUM(dtl_asignacion.cantidad) as total');
		$this->db->select('tbl_usuarios.uid AS uid_usuario');
		$this->db->select('tbl_usuarios.nombres');
		$this->db->select('tbl_usuarios.apellido_paterno');
		$this->db->select('tbl_usuarios.apellido_materno');
		$this->db->from('dtl_asignacion');
		$this->db->join('dtl_almacen', 'dtl_asignacion.dtl_almacen_iddtl_almacen=dtl_almacen.iddtl_almacen', 'left');
		$this->db->join('tbl_catalogo', 'tbl_catalogo.idtbl_catalogo=dtl_almacen.tbl_catalogo_idtbl_catalogo', 'left');
		$this->db->join('ctl_unidades_medida', 'tbl_catalogo.ctl_unidades_medida_idctl_unidades_medida=ctl_unidades_medida.idctl_unidades_medida', 'left');
		$this->db->join('ctl_categorias', 'tbl_catalogo.ctl_categorias_idctl_categorias=ctl_categorias.idctl_categorias', 'left');
		$this->db->join('tbl_almacen_movimientos', 'tbl_almacen_movimientos.idtbl_almacen_movimientos=dtl_asignacion.tbl_almacen_movimientos_idtbl_almacen_movimientos', 'left');
		$this->db->join('tbl_proyectos', 'tbl_proyectos.idtbl_proyectos = tbl_almacen_movimientos.tbl_proyectos_idtbl_proyectos', 'left');
		$this->db->join('tbl_segmentos_proyecto', 'tbl_segmentos_proyecto.idtbl_segmentos_proyecto = tbl_almacen_movimientos.tbl_segmentos_proyecto_idtbl_segmentos_proyecto', 'left');
		$this->db->join('tbl_solicitud_material', 'tbl_solicitud_material.idtbl_solicitud_material = tbl_almacen_movimientos.parent', 'left');
		$this->db->join('tbl_usuarios', 'tbl_usuarios.idtbl_usuarios = dtl_asignacion.tbl_usuarios_idtbl_usuarios', 'left');
		$this->db->where('dtl_almacen.tbl_almacenes_idtbl_almacenes', ID_ALMACEN_SISTEMAS);
		$this->db->where('tbl_catalogo.tipo', 6);
		
			$this->db->where('dtl_asignacion.tbl_usuarios_idtbl_usuarios', $this->session->userdata('id_usuario'));
		
		if($justificacion_asignacion_rh){
			$this->db->where_in('dtl_asignacion.estatus_asignacion', ['activa', 'finalizada']);
			$this->db->where('dtl_asignacion.estatus_devolucion_rh IS NOT NULL');
			$this->db->order_by('dtl_asignacion.fecha_devolucion_rh DESC');
			$this->db->having('SUM(dtl_asignacion.cantidad) IS NOT NULL');
		}else{
			$this->db->where('dtl_asignacion.estatus_asignacion', 'activa');
			$this->db->group_by("dtl_asignacion.iddtl_asignacion");
		}
		$query = $this->db->get();
		return $query->result();
	}

	public function detalle_asignacion($uid) {
		$this->db->select('dtl_asignacion.*');
		$this->db->select('dtl_almacen.*');
		$this->db->select('tbl_catalogo.descripcion');
		$this->db->select('tbl_catalogo.uid as uid_producto');
		$this->db->select('tbl_catalogo.marca');
		$this->db->select('tbl_catalogo.modelo');
		$this->db->select('tbl_catalogo.neodata');
		$this->db->select('ctl_unidades_medida.*');
		//$this->db->select('ctl_unidades_medida.*'); 
		$this->db->select('ctl_categorias.*');
		$this->db->select('tbl_almacen_movimientos.*');
		$this->db->select('tbl_almacen_movimientos.uid as uid_movimiento');
		$this->db->select('tbl_usuarios.*');
		$this->db->select('tbl_usuarios.uid as uid_user');
		$this->db->select('tbl_users.*');
		$this->db->select('tbl_proyectos.*');
		$this->db->select('tbl_almacenes.*');
		$this->db->from('dtl_asignacion');
		$this->db->join('dtl_almacen', 'dtl_asignacion.dtl_almacen_iddtl_almacen=dtl_almacen.iddtl_almacen', 'left');
		$this->db->join('tbl_catalogo', 'tbl_catalogo.idtbl_catalogo=dtl_almacen.tbl_catalogo_idtbl_catalogo', 'left');
		$this->db->join('ctl_unidades_medida', 'tbl_catalogo.ctl_unidades_medida_idctl_unidades_medida=ctl_unidades_medida.idctl_unidades_medida', 'left');
		$this->db->join('ctl_categorias', 'tbl_catalogo.ctl_categorias_idctl_categorias=ctl_categorias.idctl_categorias', 'left');
		$this->db->join('tbl_almacen_movimientos', 'tbl_almacen_movimientos.idtbl_almacen_movimientos=dtl_asignacion.tbl_almacen_movimientos_idtbl_almacen_movimientos', 'left');
		$this->db->join('tbl_usuarios', 'tbl_almacen_movimientos.tbl_usuarios_idtbl_usuarios=tbl_usuarios.idtbl_usuarios', 'left');
		$this->db->join('tbl_users', 'tbl_almacen_movimientos.tbl_users_idtbl_users=tbl_users.idtbl_users', 'left');
		$this->db->join('tbl_proyectos', 'tbl_almacen_movimientos.tbl_proyectos_idtbl_proyectos=tbl_proyectos.idtbl_proyectos', 'left');
		$this->db->join('tbl_almacenes', 'tbl_almacen_movimientos.tbl_almacenes_idtbl_almacenes=tbl_almacenes.idtbl_almacenes', 'left');
		$this->db->where('tbl_almacen_movimientos.uid', $uid);
		$query = $this->db->get();
		return $query->result();
	}

	public function verficacion_baja($idtbl_usuarios){
		$query = $this->db->query("SELECT COUNT(*) total FROM tbl_almacen_movimientos JOIN dtl_asignacion ON dtl_asignacion.tbl_almacen_movimientos_idtbl_almacen_movimientos = tbl_almacen_movimientos.idtbl_almacen_movimientos AND dtl_asignacion.estatus_asignacion = 'activa' AND dtl_asignacion.cantidad > 0 JOIN dtl_almacen ON dtl_almacen.iddtl_almacen = dtl_asignacion.dtl_almacen_iddtl_almacen AND dtl_almacen.tbl_almacenes_idtbl_almacenes != 23 JOIN tbl_catalogo ON tbl_catalogo.idtbl_catalogo = dtl_almacen.tbl_catalogo_idtbl_catalogo AND tbl_catalogo.ctl_categorias_idctl_categorias != 2 AND tbl_catalogo.ctl_categorias_idctl_categorias != 14 AND tbl_catalogo.ctl_categorias_idctl_categorias != 21 AND tbl_catalogo.ctl_categorias_idctl_categorias != 9 AND tbl_catalogo.ctl_categorias_idctl_categorias != 8 AND tbl_catalogo.ctl_categorias_idctl_categorias != 28 AND tbl_catalogo.ctl_categorias_idctl_categorias != 15 AND tbl_catalogo.ctl_categorias_idctl_categorias != 12 AND tbl_catalogo.ctl_categorias_idctl_categorias != 29 AND tbl_catalogo.ctl_categorias_idctl_categorias != 4 AND tbl_catalogo.ctl_categorias_idctl_categorias != 13 AND tbl_catalogo.ctl_categorias_idctl_categorias != 11 AND tbl_catalogo.ctl_categorias_idctl_categorias != 24 AND dtl_asignacion.estatus_devolucion_rh IS NULL WHERE tbl_almacen_movimientos.tbl_usuarios_idtbl_usuarios = $idtbl_usuarios");
		$total = $query->result()[0]->total;
		if($total > 0){
			return false;
		}else{
			return true;
		}
	}

	public function detalle_movimiento($tipo, $uid) {
		$this->db->select('tbl_almacen_movimientos.*,tbl_almacen_movimientos.uid as uid_movimiento');
		$this->db->select('CONCAT(tbl_usuarios.nombres," ",tbl_usuarios.apellido_materno," ",tbl_usuarios.apellido_paterno) as recibe');
		$this->db->select('tbl_usuarios.uid as uid_user');
		$this->db->select('user_autor.nombre as user_autor');
		$this->db->select('tbl_proyectos.nombre_proyecto, tbl_proyectos.numero_proyecto,tbl_proyectos.direccion');
		$this->db->select('ctl_autorizados_entrega.nombre as nombre_autorizado');
		$this->db->from('tbl_almacen_movimientos');
		$this->db->join('tbl_usuarios', 'tbl_almacen_movimientos.tbl_usuarios_idtbl_usuarios=tbl_usuarios.idtbl_usuarios', 'left');
		$this->db->join('tbl_users as user_autor', 'tbl_almacen_movimientos.tbl_users_idtbl_users=user_autor.idtbl_users', 'left');
		$this->db->join('tbl_proyectos', 'tbl_almacen_movimientos.tbl_proyectos_idtbl_proyectos=tbl_proyectos.idtbl_proyectos', 'left');
		$this->db->join('ctl_autorizados_entrega', 'tbl_almacen_movimientos.ctl_autorizados_entrega_idctl_autorizados_entrega=ctl_autorizados_entrega.idctl_autorizados_entrega', 'left');
		switch ($tipo) {
			case 'salida-almacen':
				$this->db->select('dtl_asignacion.*');
				$this->db->select('dtl_almacen.*');
				$this->db->select('tbl_catalogo.descripcion');
				$this->db->select('tbl_catalogo.uid as uid_producto');
				$this->db->select('tbl_catalogo.marca');
				$this->db->select('tbl_catalogo.modelo');
				$this->db->select('ctl_unidades_medida.*');
				$this->db->select('ctl_unidades_medida.*');
				$this->db->select('ctl_categorias.*');
				$this->db->select('tbl_solicitud_material.uid as uid_parent');
				$this->db->join('dtl_asignacion', 'tbl_almacen_movimientos.idtbl_almacen_movimientos=dtl_asignacion.tbl_almacen_movimientos_idtbl_almacen_movimientos', 'left');
				$this->db->join('dtl_almacen', 'dtl_asignacion.dtl_almacen_iddtl_almacen=dtl_almacen.iddtl_almacen', 'left');
				$this->db->join('tbl_catalogo', 'tbl_catalogo.idtbl_catalogo=dtl_almacen.tbl_catalogo_idtbl_catalogo', 'left');
				$this->db->join('ctl_unidades_medida', 'tbl_catalogo.ctl_unidades_medida_idctl_unidades_medida=ctl_unidades_medida.idctl_unidades_medida', 'left');
				$this->db->join('ctl_categorias', 'tbl_catalogo.ctl_categorias_idctl_categorias=ctl_categorias.idctl_categorias', 'left');
				$this->db->join('tbl_solicitud_material', 'tbl_almacen_movimientos.parent=tbl_solicitud_material.idtbl_solicitud_material', 'left');
				break;
			case 'entrada-almacen':
				$this->db->select('dtl_almacen_movimientos.*');
				$this->db->select('tbl_catalogo.descripcion');
				$this->db->select('tbl_catalogo.uid as uid_producto');
				$this->db->select('tbl_catalogo.marca');
				$this->db->select('tbl_catalogo.modelo');
				$this->db->select('ctl_unidades_medida.*');
				$this->db->select('ctl_unidades_medida.*');
				$this->db->select('ctl_categorias.*');
				$this->db->select('tbl_pedidos.uid as uid_parent');
				$this->db->join('dtl_almacen_movimientos', 'tbl_almacen_movimientos.idtbl_almacen_movimientos=dtl_almacen_movimientos.tbl_almacen_movimientos_idtbl_almacen_movimientos', 'left');
				$this->db->join('tbl_catalogo', 'tbl_catalogo.idtbl_catalogo=dtl_almacen_movimientos.tbl_catalogo_idtbl_catalogo', 'left');
				$this->db->join('ctl_unidades_medida', 'tbl_catalogo.ctl_unidades_medida_idctl_unidades_medida=ctl_unidades_medida.idctl_unidades_medida', 'left');
				$this->db->join('ctl_categorias', 'tbl_catalogo.ctl_categorias_idctl_categorias=ctl_categorias.idctl_categorias', 'left');
				$this->db->join('tbl_pedidos', 'tbl_almacen_movimientos.parent=tbl_pedidos.idtbl_pedidos', 'left');
				break;
			case 'devolucion-almacen':
				$this->db->select('dtl_asignacion.*');
				$this->db->select('dtl_almacen.*');
				$this->db->select('tbl_catalogo.descripcion');
				$this->db->select('tbl_catalogo.uid as uid_producto');
				$this->db->select('tbl_catalogo.marca');
				$this->db->select('tbl_catalogo.modelo');
				$this->db->select('ctl_unidades_medida.*');
				$this->db->select('ctl_unidades_medida.*');
				$this->db->select('ctl_categorias.*');
				$this->db->select('tbl_solicitud_material.uid as uid_parent');
				$this->db->join('dtl_asignacion', 'tbl_almacen_movimientos.idtbl_almacen_movimientos=dtl_asignacion.tbl_almacen_movimientos_idtbl_almacen_movimientos', 'left');
				$this->db->join('dtl_almacen', 'dtl_asignacion.dtl_almacen_iddtl_almacen=dtl_almacen.iddtl_almacen', 'left');
				$this->db->join('tbl_catalogo', 'tbl_catalogo.idtbl_catalogo=dtl_almacen.tbl_catalogo_idtbl_catalogo', 'left');
				$this->db->join('ctl_unidades_medida', 'tbl_catalogo.ctl_unidades_medida_idctl_unidades_medida=ctl_unidades_medida.idctl_unidades_medida', 'left');
				$this->db->join('ctl_categorias', 'tbl_catalogo.ctl_categorias_idctl_categorias=ctl_categorias.idctl_categorias', 'left');
				$this->db->join('tbl_solicitud_material', 'tbl_almacen_movimientos.parent=tbl_solicitud_material.idtbl_solicitud_material', 'left');
				break;
			case 'traspaso-almacen':
				$this->db->select('dtl_almacen_movimientos.*');
				$this->db->select('tbl_catalogo.descripcion');
				$this->db->select('tbl_catalogo.uid as uid_producto');
				$this->db->select('tbl_catalogo.marca');
				$this->db->select('tbl_catalogo.modelo');
				$this->db->select('ctl_unidades_medida.*');
				$this->db->select('ctl_unidades_medida.*');
				$this->db->select('ctl_categorias.*');
				$this->db->select('tbl_pedidos.uid as uid_parent');
				$this->db->join('dtl_almacen_movimientos', 'tbl_almacen_movimientos.idtbl_almacen_movimientos=dtl_almacen_movimientos.tbl_almacen_movimientos_idtbl_almacen_movimientos', 'left');
				$this->db->join('tbl_catalogo', 'tbl_catalogo.idtbl_catalogo=dtl_almacen_movimientos.tbl_catalogo_idtbl_catalogo', 'left');
				$this->db->join('ctl_unidades_medida', 'tbl_catalogo.ctl_unidades_medida_idctl_unidades_medida=ctl_unidades_medida.idctl_unidades_medida', 'left');
				$this->db->join('ctl_categorias', 'tbl_catalogo.ctl_categorias_idctl_categorias=ctl_categorias.idctl_categorias', 'left');
				$this->db->join('tbl_pedidos', 'tbl_almacen_movimientos.parent=tbl_pedidos.idtbl_pedidos', 'left');
				break;
			default:
				# code...
				break;
		}
		$this->db->where('tbl_almacen_movimientos.uid', $uid);
		$query = $this->db->get();
		return $query->result();
	}

	public function datos_traspaso($uid) {
		$this->db->select('tbl_proyectos.nombre_proyecto, tbl_proyectos.numero_proyecto');
		$this->db->from('tbl_almacen_movimientos');
		$this->db->join('tbl_proyectos', 'tbl_almacen_movimientos.tbl_proyectos_idtbl_proyectos=tbl_proyectos.idtbl_proyectos', 'left');
		$this->db->where('tbl_almacen_movimientos.uid', $uid . 't');
		$query = $this->db->get();
		return $query->result()[0];
	}


	public function guardar_nueva_entrada_manual($id_almacen) {
        $this->db->trans_begin();
        if (isset($_POST['estatus'])) {
            $data = array(
            'estatus_contabilidad' => $_POST['estatus']			
        );
        } else {
            $data = array(
                'estatus' => 2,
				'motivo_cancelacion' => $this->input->post('motivo')
            );
        }
        $this->db->where('idtbl_almacen_movimientos', $_POST['id_movimiento']);
        $this->db->update('tbl_almacen_movimientos', $data);

        $insert_id = $this->input->post('id_movimiento');
        if (isset($_POST['estatus'])) {
            if ($_POST['estatus'] == 'Aprobada' || $_POST['estatus'] == 'Modificada') {
                $contador_alto_costo = 0;
                foreach ($this->input->post('producto') as $key => $value) {
                    if ($this->input->post('categoria')[$key] == ID_HERRAMIENTA_ALTO_COSTO || $this->input->post('categoria')[$key] == ID_HERRAMIENTA_HILTI || $this->input->post('categoria')[$key] == ID_HERRAMIENTA_MEDIANO_COSTO || (isset($this->input->post('catalogo')[$key]) && ($this->input->post('catalogo')[$key] == "25053" || $this->input->post('catalogo')[$key] == "19955" || $this->input->post('catalogo')[$key] == "25054" || $this->input->post('catalogo')[$key] == "19420"))) {
                        $serie = $this->input->post('numero_serie')[$contador_alto_costo];
                        $interno = $this->input->post('numero_interno')[$contador_alto_costo];
                    } else {
                        $serie = null;
                        $interno = null;
                    }
                
                    $data = array(
                    'cantidad' => $this->input->post('entregado')[$key]
                );
                    $this->db->where('iddtl_almacen_entradas', $this->input->post('id_detalle_movimiento')[$key]);
                    $this->db->update('dtl_almacen_movimientos', $data);
                    if ($this->input->post('categoria')[$key] == ID_HERRAMIENTA_ALTO_COSTO || $this->input->post('categoria')[$key] == ID_HERRAMIENTA_HILTI || $this->input->post('categoria')[$key] == ID_HERRAMIENTA_MEDIANO_COSTO || (isset($this->input->post('producto')[$key]) && ($this->input->post('producto')[$key] == "25053" || $this->input->post('producto')[$key] == "19955" || $this->input->post('producto')[$key] == "25054" || $this->input->post('producto')[$key] == "19420"))) { //value es id de herramienta
                        $this->db->where('tbl_catalogo_idtbl_catalogo', $value);
                        $this->db->where('numero_serie', $this->input->post('numero_serie')[$key]);
                        $q = $this->db->get('dtl_almacen');
                        if ($q->num_rows() > 0) {
                            $this->db->trans_rollback();
                            return 'Número de serie repetido (' . $this->input->post('numero_serie')[$key] . ')';
                        } else {
                            $data = array(
                            'tbl_almacenes_idtbl_almacenes' => $id_almacen,
                            'tbl_catalogo_idtbl_catalogo' => $value,
                            'existencias' => $this->input->post('entregado')[$key],
                            'numero_serie' => $this->input->post('numero_serie')[$key],
                            'numero_interno' => $this->input->post('numero_interno')[$key],
                            'estatus' => 'almacen',
                            'nota' => $this->input->post('nota')[$contador_alto_costo]
                        );
                            $this->db->insert('dtl_almacen', $data);
                        }
                        $contador_alto_costo++;
                    } else {
                        $this->db->where('tbl_almacenes_idtbl_almacenes', $id_almacen);
                        $this->db->where('tbl_catalogo_idtbl_catalogo', $value);
                        $this->db->where('estatus', 'almacen');
                        $q = $this->db->get('dtl_almacen');
                        if ($q->num_rows() > 0) {
                            $this->db->set('existencias', 'existencias+' . $this->input->post('entregado')[$key], false);
                            $this->db->where('tbl_almacenes_idtbl_almacenes', $id_almacen);
							$this->db->where('estatus', 'almacen');
                            $this->db->where('tbl_catalogo_idtbl_catalogo', $value);
                            $this->db->update('dtl_almacen');
                        } else {
                            $data = array(
                            'tbl_almacenes_idtbl_almacenes' => $id_almacen,
                            'tbl_catalogo_idtbl_catalogo' => $value,
                            'estatus' => 'almacen',
                            'existencias' => $this->input->post('entregado')[$key]
                        );
                            $this->db->insert('dtl_almacen', $data);
                        }
                    }
                }
            }
        }
		$data = array(
			'fecha' => date('Y-m-d H:i:s'),
			'id_evento' => $insert_id,
			'tbl_almacenes_idtbl_almacenes' => $id_almacen
		);
		$this->db->insert('tbl_log_almacen', $data);
		
		if ($this->db->trans_status() === FALSE) {
			$this->db->trans_rollback();
			return 'Ocurrio un error intente nuevamente';
		} else {
			$this->db->trans_commit();
			return true;
		}
		
	}

	public function guardar_nueva_entrada_ac($uid, $id_almacen, $tipo) {
		$this->db->trans_begin();
        if (!isset($_POST['estatus']) || $this->input->post('estatus') != 'Cancelada') {
            if ($tipo == '' && $tipo != 'externo' && $tipo != 'interno') {
                if ($this->session->userdata('tipo') == 17 || $this->session->userdata('tipo') == 19 || ($this->session->userdata('tipo') == 11 && $this->session->userdata('jefe') == 1)) {
                    $query = $this->db->query("SELECT COUNT(idtbl_almacen_movimientos) as total FROM `tbl_almacen_movimientos` WHERE `tipo` = 'entrada-almacen'");
					if(isset($_POST['sitio'])){
						$sitio = trim($_POST['sitio']);
					}else{
                        $sitio = '';
                    }
                    $data = array(
                    'fecha' => date('Y-m-d H:i:s'),
                    'tbl_users_idtbl_users' => $this->session->userdata('id'),
                    'ctl_tipo_documento_idctl_tipo_documento' => $this->input->post('tipo_documento'),
                    'numero_documento' => strtoupper($this->input->post('numero_documento')),
                    'tbl_almacenes_idtbl_almacenes' => $id_almacen,
                    'uid' => $uid,
                    'tipo' => ($id_almacen == 2) ? 'entrada' : 'entrada-almacen',
                    'estatus' => 0,
                    'folio' => $query->result()[0]->total + 1,
                    //'tbl_proyectos_idtbl_proyectos' => (empty($this->input->post('proyecto'))) ? null : $this->input->post('proyecto'),
                    'tbl_segmentos_proyecto_idtbl_segmentos_proyecto' => (empty($this->input->post('segmento'))) ? null : $this->input->post('segmento'),
                    'sitio' => $sitio
                	);
                    //Se registra la entrada
                    $this->db->insert('tbl_almacen_movimientos', $data);
                    //Se obtiene id de la entrada para hacer la relación con su detalle
                    $insert_id = $this->db->insert_id();
                    $contador_alto_costo = 0;
                    //se recorre el arreglo que trae los productos del formulario
                    foreach ($this->input->post('producto') as $key => $value) {
                        if ($this->input->post('categoria')[$key] == ID_HERRAMIENTA_ALTO_COSTO || $this->input->post('categoria')[$key] == ID_HERRAMIENTA_HILTI || $this->input->post('categoria')[$key] == ID_ACTIVO_FIJO || $this->input->post('categoria')[$key] == ID_HERRAMIENTA_MEDIANO_COSTO || (isset($this->input->post('catalogo')[$key]) && ($this->input->post('catalogo')[$key] == "25053" || $this->input->post('catalogo')[$key] == "19955" || $this->input->post('catalogo')[$key] == "25054" || $this->input->post('catalogo')[$key] == "19420" || $this->input->post('catalogo')[$key] == "19421" || $this->input->post('catalogo')[$key] == "24792" || $this->input->post('catalogo')[$key] == "24793" || $this->input->post('catalogo')[$key] == "19428" || $this->input->post('catalogo')[$key] == "19429"))) {
                            $serie = $this->input->post('numero_serie')[$contador_alto_costo];
                            $interno = $this->input->post('numero_interno')[$contador_alto_costo];
							$contador_alto_costo++;
                        } else {
                            $serie = null;
                            $interno = null;
                        }
                        $data = array(
                        'tbl_almacen_movimientos_idtbl_almacen_movimientos' => $insert_id,
                        'cantidad' => $this->input->post('cantidad')[$key],
                        'precio' => $this->input->post('precio')[$key],
						'nota' => $this->input->post('nota')[$key],
                        'tbl_catalogo_idtbl_catalogo' => $value,
                        'tipo_moneda' => $this->input->post('moneda')[$key],
                        'numero_serie' => $serie,
                        'numero_interno' => $interno,
                    );
                        $this->db->insert('dtl_almacen_movimientos', $data);
                    }
                } else {
                    if (($_POST['uid_almacen'] == '25839864557600770' || $_POST['uid_almacen'] == '632b58229df25') && !isset($_POST['aux'])) {
                        $query = $this->db->query("SELECT COUNT(idtbl_almacen_movimientos) as total FROM `tbl_almacen_movimientos` WHERE `tipo` = 'entrada-almacen'");
                        $data = array(
                            'fecha' => date('Y-m-d H:i:s'),
                            'tbl_users_idtbl_users' => $this->session->userdata('id'),
                            'ctl_tipo_documento_idctl_tipo_documento' => $this->input->post('tipo_documento'),
                            'numero_documento' => strtoupper($this->input->post('numero_documento')),
                            'tbl_almacenes_idtbl_almacenes' => $id_almacen,
                            'uid' => $uid,
                            'tipo' => ($id_almacen == 2) ? 'entrada' : 'entrada-almacen',
                            'estatus' => 0,
                            'folio' => $query->result()[0]->total + 1,
                            'tbl_proyectos_idtbl_proyectos' => (empty($this->input->post('proyecto'))) ? null : $this->input->post('proyecto'),
                            'tbl_segmentos_proyecto_idtbl_segmentos_proyecto' => (empty($this->input->post('segmento'))) ? null : $this->input->post('segmento'),
                            'estatus_contabilidad' => 'Pendiente'
                        );
                        //Se registra la entrada
                        $this->db->insert('tbl_almacen_movimientos', $data);
                        //Se obtiene id de la entrada para hacer la relación con su detalle
                        $insert_id = $this->db->insert_id();
                        $contador_alto_costo = 0;
                        //se recorre el arreglo que trae los productos del formulario
                        foreach ($this->input->post('producto') as $key => $value) {
                            if ($this->input->post('categoria')[$key] == ID_HERRAMIENTA_ALTO_COSTO || $this->input->post('categoria')[$key] == ID_HERRAMIENTA_HILTI || $this->input->post('categoria')[$key] == ID_ACTIVO_FIJO || $this->input->post('categoria')[$key] == ID_HERRAMIENTA_MEDIANO_COSTO || (isset($this->input->post('catalogo')[$key]) && ($this->input->post('catalogo')[$key] == '25053' || $this->input->post('catalogo')[$key] == "19955" || $this->input->post('catalogo')[$key] == "22763" || $this->input->post('catalogo')[$key] == "25054" || $this->input->post('catalogo')[$key] == "19420"))) {
                                $serie = $this->input->post('numero_serie')[$contador_alto_costo];
                                $interno = $this->input->post('numero_interno')[$contador_alto_costo];
								$contador_alto_costo++;
                            } else {
                                $serie = null;
                                $interno = null;
                            }
                            $data = array(
                                'tbl_almacen_movimientos_idtbl_almacen_movimientos' => $insert_id,
                                'cantidad' => $this->input->post('cantidad')[$key],
                                'precio' => $this->input->post('precio')[$key],
								'nota' => $this->input->post('nota')[$key],
                                'tbl_catalogo_idtbl_catalogo' => $value,
                                'tipo_moneda' => $this->input->post('moneda')[$key],
                                'numero_serie' => $serie,
                                'numero_interno' => $interno,
                            );
                            $this->db->insert('dtl_almacen_movimientos', $data);
                        }
                    } else if(($_POST['uid_almacen'] == '25839864557600770' || $_POST['uid_almacen']) && isset($_POST['aux'])) {
                    	$query = $this->db->query("SELECT COUNT(idtbl_almacen_movimientos) as total FROM `tbl_almacen_movimientos` WHERE `tipo` = 'entrada-almacen'");
                        $data = array(
                            'fecha' => date('Y-m-d H:i:s'),
                            'tbl_users_idtbl_users' => $this->session->userdata('id'),
                            'ctl_tipo_documento_idctl_tipo_documento' => $this->input->post('tipo_documento'),
                            'numero_documento' => strtoupper($this->input->post('numero_documento')),
                            'tbl_almacenes_idtbl_almacenes' => $id_almacen,
                            'uid' => $uid,
                            'tipo' => ($id_almacen == 2) ? 'entrada' : 'entrada-almacen',
                            'estatus' => 1,
                            'folio' => $query->result()[0]->total + 1,
                            'tbl_proyectos_idtbl_proyectos' => (empty($this->input->post('proyecto'))) ? null : $this->input->post('proyecto'),
                            'tbl_segmentos_proyecto_idtbl_segmentos_proyecto' => (empty($this->input->post('segmento'))) ? null : $this->input->post('segmento')
                        );
                        //Se registra la entrada
                        $this->db->insert('tbl_almacen_movimientos', $data);
                        //Se obtiene id de la entrada para hacer la relación con su detalle
                        $insert_id = $this->db->insert_id();
                        $contador_alto_costo = 0;
                        //se recorre el arreglo que trae los productos del formulario
                        foreach ($this->input->post('producto') as $key => $value) {							
                            if ($this->input->post('categoria')[$key] == ID_HERRAMIENTA_ALTO_COSTO || $this->input->post('categoria')[$key] == ID_HERRAMIENTA_HILTI || $this->input->post('categoria')[$key] == ID_ACTIVO_FIJO || $this->input->post('categoria')[$key] == ID_HERRAMIENTA_MEDIANO_COSTO || (isset($this->input->post('catalogo')[$key]) && ($this->input->post('catalogo')[$key] == "25053" || $this->input->post('catalogo')[$key] == "19955" || $this->input->post('catalogo')[$key] == "25054" || $this->input->post('catalogo')[$key] == "19420" || $this->input->post('catalogo')[$key] == "19421" || $this->input->post('catalogo')[$key] == "22763" || $this->input->post('catalogo')[$key] == "19428" || $this->input->post('catalogo')[$key] == "19429" || $this->input->post('catalogo')[$key] == "22918" || $this->input->post('catalogo')[$key] == "22463" || $this->input->post('catalogo')[$key] == "22882" || $this->input->post('catalogo')[$key] == "22124" || $this->input->post('catalogo')[$key] == "24792" || $this->input->post('catalogo')[$key] == "24793"))) {
                                $serie = $this->input->post('numero_serie')[$contador_alto_costo];
                                $interno = $this->input->post('numero_interno')[$contador_alto_costo];
								$nota = $this->input->post('nota')[$contador_alto_costo];								
								$contador_alto_costo++;								
                            } else {
                                $serie = null;
                                $interno = null;
								$nota = null;
                            }
                            $data = array(
                                'tbl_almacen_movimientos_idtbl_almacen_movimientos' => $insert_id,
                                'cantidad' => $this->input->post('cantidad')[$key],
                                'precio' => $this->input->post('precio')[$key],
								'nota' => $this->input->post('nota')[$key],
                                'tbl_catalogo_idtbl_catalogo' => $value,
                                'tipo_moneda' => $this->input->post('moneda')[$key],
                                'numero_serie' => $serie,
                                'numero_interno' => $interno,
                            );
                            $this->db->insert('dtl_almacen_movimientos', $data);
							// || $this->input->post('categoria')[$key] == 10 Se quito del if de abajo
                            if ($this->input->post('categoria')[$key] == ID_HERRAMIENTA_ALTO_COSTO || $this->input->post('categoria')[$key] == ID_HERRAMIENTA_HILTI || $this->input->post('categoria')[$key] == ID_HERRAMIENTA_MEDIANO_COSTO || $this->input->post('categoria')[$key] == ID_ACTIVO_FIJO || $this->input->post('categoria')[$key] == 17 || (isset($this->input->post('catalogo')[$key]) && ($this->input->post('catalogo')[$key] == "25053" || $this->input->post('catalogo')[$key] == "19955" || $this->input->post('catalogo')[$key] == "22918" || $this->input->post('catalogo')[$key] == "22463" || $this->input->post('catalogo')[$key] == "22882" || $this->input->post('catalogo')[$key] == "22124" || $this->input->post('catalogo')[$key] == 22763 || $this->input->post('catalogo')[$key] == "25054" || $this->input->post('catalogo')[$key] == "19420"))) { //value es id de herramienta							
                                $this->db->where('tbl_catalogo_idtbl_catalogo', $value);
                                $this->db->where('numero_serie', $serie);
								$this->db->where('tbl_almacenes_idtbl_almacenes', ID_ALMACEN_GENERAL);
                                $q = $this->db->get('dtl_almacen');
                                if ($q->num_rows() > 0) {
                                    $this->db->trans_rollback();
                                    return 'Número de serie repetido (' . $this->input->post('numero_serie')[$contador_alto_costo] . ')';
                                } else {
                                    $data = array(
                                        'tbl_almacenes_idtbl_almacenes' => $id_almacen,
                                        'tbl_catalogo_idtbl_catalogo' => $value,
                                        'existencias' => $this->input->post('cantidad')[$key],
                                        'numero_serie' => $serie,
                                        'numero_interno' => $interno,
                                        'estatus' => 'almacen',
                                        'nota' => $nota
                                    );
                                    $this->db->insert('dtl_almacen', $data);
                                }
                                
                            } else {
                                $this->db->where('tbl_almacenes_idtbl_almacenes', $id_almacen);
                                $this->db->where('tbl_catalogo_idtbl_catalogo', $value);
                                $this->db->where('estatus', 'almacen');
                                $q = $this->db->get('dtl_almacen');
                                if ($q->num_rows() > 0) {
                                    $this->db->set('existencias', 'existencias+' . $this->input->post('cantidad')[$key], false);
                                    $this->db->where('tbl_almacenes_idtbl_almacenes', $id_almacen);
                                    $this->db->where('tbl_catalogo_idtbl_catalogo', $value);
									$this->db->where('estatus', 'almacen');
                                    $this->db->update('dtl_almacen');
                                } else {
                                    $data = array(
                                        'tbl_almacenes_idtbl_almacenes' => $id_almacen,
                                        'tbl_catalogo_idtbl_catalogo' => $value,
                                        'estatus' => 'almacen',
                                        'existencias' => $this->input->post('cantidad')[$key]
                                    );
                                    $this->db->insert('dtl_almacen', $data);
                                }
                            }
                        }
                    } else {
                        $query = $this->db->query("SELECT COUNT(idtbl_almacen_movimientos) as total FROM `tbl_almacen_movimientos` WHERE `tipo` = 'entrada-almacen'");
                        $data = array(
                            'fecha' => date('Y-m-d H:i:s'),
                            'tbl_users_idtbl_users' => $this->session->userdata('id'),
                            'ctl_tipo_documento_idctl_tipo_documento' => $this->input->post('tipo_documento'),
                            'numero_documento' => strtoupper($this->input->post('numero_documento')),
                            'tbl_almacenes_idtbl_almacenes' => $id_almacen,
                            'uid' => $uid,
                            'tipo' => ($id_almacen == 2) ? 'entrada' : 'entrada-almacen',
                            'estatus' => 1,
                            'folio' => $query->result()[0]->total + 1,
                            'tbl_proyectos_idtbl_proyectos' => (empty($this->input->post('proyecto'))) ? null : $this->input->post('proyecto'),
                            'tbl_segmentos_proyecto_idtbl_segmentos_proyecto' => (empty($this->input->post('segmento'))) ? null : $this->input->post('segmento')
                        );
                        //Se registra la entrada
                        $this->db->insert('tbl_almacen_movimientos', $data);
                        //Se obtiene id de la entrada para hacer la relación con su detalle
                        $insert_id = $this->db->insert_id();
                        $contador_alto_costo = 0;
                        //se recorre el arreglo que trae los productos del formulario
                        foreach ($this->input->post('producto') as $key => $value) {
							if ($this->input->post('categoria')[$key] == ID_HERRAMIENTA_ALTO_COSTO || $this->input->post('categoria')[$key] == ID_HERRAMIENTA || $this->input->post('categoria')[$key] == ID_HERRAMIENTA_HILTI || $this->input->post('categoria')[$key] == ID_ACTIVO_FIJO || $this->input->post('categoria')[$key] == ID_HERRAMIENTA_MEDIANO_COSTO || (isset($this->input->post('catalogo')[$key]) && ($this->input->post('catalogo')[$key] == "25053" || $this->input->post('catalogo')[$key] == "19955" || $this->input->post('catalogo')[$key] == "25054" || $this->input->post('catalogo')[$key] == "19420" || $this->input->post('catalogo')[$key] == "19421" || $this->input->post('catalogo')[$key] == "24792" || $this->input->post('catalogo')[$key] == "24793" || $this->input->post('catalogo')[$key] == "19428" || $this->input->post('catalogo')[$key] == "19429")))
                            /* if ($this->input->post('categoria')[$key] == ID_HERRAMIENTA || $this->input->post('categoria')[$key] == ID_ACTIVO_FIJO || $this->input->post('categoria')[$key] == ID_HERRAMIENTA_MEDIANO_COSTO || (isset($this->input->post('catalogo')[$key]) && 
						($this->input->post('catalogo')[$key] == "25053" || $this->input->post('catalogo')[$key] == "19955" || $this->input->post('catalogo')[$key] == "25054" || $this->input->post('catalogo')[$key] == "19420" || $this->input->post('catalogo')[$key] == "19421" || $this->input->post('catalogo')[$key] == "24792" || $this->input->post('catalogo')[$key] == "24793" || $this->input->post('catalogo')[$key] == "19428" || $this->input->post('catalogo')[$key] == "19429"))) */ {
                                $serie = $this->input->post('numero_serie')[$contador_alto_costo];
                                $interno = $this->input->post('numero_interno')[$contador_alto_costo];
                            } else {
                                $serie = null;
                                $interno = null;
                            }
                            $data = array(
                                'tbl_almacen_movimientos_idtbl_almacen_movimientos' => $insert_id,
                                'cantidad' => $this->input->post('cantidad')[$key],
                                'precio' => $this->input->post('precio')[$key],
								'nota' => $this->input->post('nota')[$key],
                                'tbl_catalogo_idtbl_catalogo' => $value,
                                'tipo_moneda' => $this->input->post('moneda')[$key],
                                'numero_serie' => $serie,
                                'numero_interno' => $interno,
                            );
                            $this->db->insert('dtl_almacen_movimientos', $data);
							var_dump($data);
                    
							if ($this->input->post('categoria')[$key] == ID_HERRAMIENTA_ALTO_COSTO || $this->input->post('categoria')[$key] == ID_HERRAMIENTA || $this->input->post('categoria')[$key] == ID_HERRAMIENTA_HILTI || $this->input->post('categoria')[$key] == ID_ACTIVO_FIJO || $this->input->post('categoria')[$key] == ID_HERRAMIENTA_MEDIANO_COSTO || (isset($this->input->post('catalogo')[$key]) && ($this->input->post('catalogo')[$key] == "25053" || $this->input->post('catalogo')[$key] == "19955" || $this->input->post('catalogo')[$key] == "25054" || $this->input->post('catalogo')[$key] == "19420" || $this->input->post('catalogo')[$key] == "19421" || $this->input->post('catalogo')[$key] == "24792" || $this->input->post('catalogo')[$key] == "24793" || $this->input->post('catalogo')[$key] == "19428" || $this->input->post('catalogo')[$key] == "19429")))
                            /* if ($this->input->post('categoria')[$key] == ID_HERRAMIENTA || $this->input->post('categoria')[$key] == ID_ACTIVO_FIJO || $this->input->post('categoria')[$key] == ID_HERRAMIENTA_MEDIANO_COSTO || (isset($this->input->post('catalogo')[$key]) && ($this->input->post('catalogo')[$key] == "25053" || $this->input->post('catalogo')[$key] == "19955" || $this->input->post('catalogo')[$key] == "25054" || $this->input->post('catalogo')[$key] == "19420" || $this->input->post('catalogo')[$key] == "19421" || $this->input->post('catalogo')[$key] == "24792" || $this->input->post('catalogo')[$key] == "24793" || $this->input->post('catalogo')[$key] == "19428" || $this->input->post('catalogo')[$key] == "19429"))) */ {
                                $this->db->where('tbl_catalogo_idtbl_catalogo', $value);
                                $this->db->where('numero_serie', $this->input->post('numero_serie')[$contador_alto_costo]);
                                $q = $this->db->get('dtl_almacen');
                                if ($q->num_rows() > 0) {
                                    $this->db->trans_rollback();
                                    return 'Número de serie repetido (' . $this->input->post('numero_serie')[$contador_alto_costo] . ')';
                                } else {
                                    $data = array(
                                        'tbl_almacenes_idtbl_almacenes' => $id_almacen,
                                        'tbl_catalogo_idtbl_catalogo' => $value,
                                        'existencias' => $this->input->post('cantidad')[$key],
                                        'numero_serie' => $this->input->post('numero_serie')[$contador_alto_costo],
                                        'numero_interno' => $this->input->post('numero_interno')[$contador_alto_costo],
                                        'estatus' => 'almacen',
                                        'nota' => $this->input->post('nota')[$contador_alto_costo]
                                    );
                                    $this->db->insert('dtl_almacen', $data);
                                }
                                $contador_alto_costo++;
                            } else {
                                $this->db->where('tbl_almacenes_idtbl_almacenes', $id_almacen);
                                $this->db->where('tbl_catalogo_idtbl_catalogo', $value);
                                $this->db->where('estatus', 'almacen');
								if($this->session->userdata('tipo') == 1){
									$this->db->where('estado', 'nuevo');									
								}
                                $q = $this->db->get('dtl_almacen');
                                if ($q->num_rows() > 0) {
                                    $this->db->set('existencias', 'existencias+' . $this->input->post('cantidad')[$key], false);
                                    $this->db->where('tbl_almacenes_idtbl_almacenes', $id_almacen);
									$this->db->where('estatus', 'almacen');
									if($this->session->userdata('tipo') == 1){
										$this->db->where('estado', 'nuevo');									
									}
                                    $this->db->where('tbl_catalogo_idtbl_catalogo', $value);
                                    $this->db->update('dtl_almacen');
                                } else {
                                    $data = array(
                                        'tbl_almacenes_idtbl_almacenes' => $id_almacen,
                                        'tbl_catalogo_idtbl_catalogo' => $value,
                                        'estatus' => 'almacen',
                                        'existencias' => $this->input->post('cantidad')[$key]
                                    );
                                    $this->db->insert('dtl_almacen', $data);
                                }
                            }
                        }
                    }
                }	
            } elseif ($tipo == 'externo' || $tipo == 'interno') {				
                $insert_id = $this->input->post('id_movimiento');
                $modificaciones = 0;
                $contador_alto_costo = 0;
				/*if($this->input->post('tipo_entrada') == 'traspaso'){
					$query = $this->db->query("SELECT COUNT(idtbl_almacen_movimientos) as total FROM `tbl_almacen_movimientos` WHERE `tipo` = 'traspaso-almacen'");
		
					$data = array(
					'fecha' => date('Y-m-d H:i:s'),			
					'tbl_users_idtbl_users' => $this->session->userdata('id'),
					'tbl_almacenes_idtbl_almacenes' => ID_ALMACEN_GENERAL,
					'tbl_almacenes_idtbl_almacenes_destino' => $id_almacen,
					'uid' => uniqid(),
					'tipo' => 'traspaso-almacen',
					'estatus' => 1,
					'folio' => $query->result()[0]->total + 1,
					//'tipo_movimiento' => $this->input->post('tipo')
					);
					//Se registra el traspaso
					$this->db->insert('tbl_almacen_movimientos', $data);

					$id_traspaso = $this->db->insert_id();
				}*/
                foreach ($this->input->post('producto') as $key => $value) {
					$entrada = '';
                    if ($this->input->post('categoria')[$key] == ID_ACTIVO_FIJO || $this->input->post('categoria')[$key] == ID_HERRAMIENTA_HILTI || $this->input->post('categoria')[$key] == ID_HERRAMIENTA_MEDIANO_COSTO || ($this->input->post('producto')[$key] == "25053" || $this->input->post('producto')[$key] == "25054") || (isset($this->input->post('catalogo')[$key]) && ($this->input->post('catalogo')[$key] == "25053" || $this->input->post('catalogo')[$key] == "19955" || $this->input->post('catalogo')[$key] == "25054" || $this->input->post('catalogo')[$key] == "19420" || $this->input->post('catalogo')[$key] == "19421" || $this->input->post('catalogo')[$key] == "24792" || $this->input->post('catalogo')[$key] == "24793" || $this->input->post('catalogo')[$key] == "19428" || $this->input->post('catalogo')[$key] == "19429"))) {						
						if((isset($_POST['existencias']) && ($this->input->post('existencias')[$contador_alto_costo] != '' && $this->input->post('existencias')[$contador_alto_costo] != null)) || ($this->input->post('tipo') == 'interno' || $this->input->post('tipo') == 'externo')){
							$entrada = 'si';
							$serie = $this->input->post('numero_serie')[$key];
                            $interno = $this->input->post('numero_interno')[$key];
                            $nota = $this->input->post('nota')[$key];
							$index_antes = $contador_alto_costo;
                            $contador_alto_costo++;
						}else{
							$serie = null;
                            $interno = null;
                            $nota = null;                           
							$entrada = 'no';
                        }
                    } else {
                        $serie = null;
                        $interno = null;
						$nota = null;
                    }
					if($this->input->post('movimiento_virtual') == 3 && $this->input->post('modificado') == 0){
						$data = array(
							'numero_serie' => $serie,
							'numero_interno' => $interno,
							'cantidad' => $this->input->post('entregado')[$key],
							'cantidad_anterior' => $this->input->post('cantidad')[$key]
							);
							$this->db->where('iddtl_almacen_entradas', $this->input->post('id_detalle_movimiento')[$key]);
                    		$this->db->update('dtl_almacen_movimientos', $data);
							if ($this->input->post('categoria')[$key] == ID_ACTIVO_FIJO || $this->input->post('categoria')[$key] == ID_HERRAMIENTA_HILTI || $this->input->post('categoria')[$key] == ID_HERRAMIENTA_MEDIANO_COSTO || (isset($this->input->post('catalogo')[$key]) && ($this->input->post('catalogo')[$key] == "25053" || $this->input->post('catalogo')[$key] == "19955" || $this->input->post('catalogo')[$key] == "25054" || $this->input->post('catalogo')[$key] == "19420" || $this->input->post('catalogo')[$key] == "19421" || $this->input->post('catalogo')[$key] == "24792" || $this->input->post('catalogo')[$key] == "24793" || $this->input->post('catalogo')[$key] == "19428" || $this->input->post('catalogo')[$key] == "19429"))) {
							$this->db->where('iddtl_almacen', $this->input->post('existencias')[$index_antes]);
							$this->db->set('estatus', 'traspaso');
							$this->db->update('dtl_almacen');
						}
					}elseif($this->input->post('movimiento_virtual') == 3 && $this->input->post('modificado') == 1){
                        if ($this->input->post('categoria')[$key] == ID_ACTIVO_FIJO || $this->input->post('categoria')[$key] == ID_HERRAMIENTA_HILTI || $this->input->post('categoria')[$key] == ID_HERRAMIENTA_MEDIANO_COSTO || (isset($this->input->post('catalogo')[$key]) && ($this->input->post('catalogo')[$key] == "25053" || $this->input->post('catalogo')[$key] == "19955" || $this->input->post('catalogo')[$key] == "25054" || $this->input->post('catalogo')[$key] == "19420" || $this->input->post('catalogo')[$key] == "19421" || $this->input->post('catalogo')[$key] == "24792" || $this->input->post('catalogo')[$key] == "24793" || $this->input->post('catalogo')[$key] == "19428" || $this->input->post('catalogo')[$key] == "19429"))) {
							$data = array(
								'numero_serie' => $serie,
								'numero_interno' => $interno,
								'cantidad' => $this->input->post('entregado')[$key]
								//'cantidad_anterior' => $this->input->post('cantidad')[$key]
							);
								$this->db->where('iddtl_almacen_entradas', $this->input->post('id_detalle_movimiento')[$key]);
								$this->db->update('dtl_almacen_movimientos', $data);

								$this->db->where('iddtl_almacen', $this->input->post('existencias')[$index_antes]);
								$this->db->set('estatus', 'traspaso');
								$this->db->update('dtl_almacen');
						}else{
                            $this->db->set('cantidad', 'cantidad+' . $this->input->post('entregado')[$key], false);
                            $this->db->where('iddtl_almacen_entradas', $this->input->post('id_detalle_movimiento')[$key]);
                            $this->db->update('dtl_almacen_movimientos');
                        }
					}else{						
                        $data = array(
                    		'cantidad' => $this->input->post('entregado')[$key],
                    		'cantidad_anterior' => $this->input->post('cantidad')[$key]
                    		);
							$this->db->where('iddtl_almacen_entradas', $this->input->post('id_detalle_movimiento')[$key]);
							$this->db->update('dtl_almacen_movimientos', $data);
                    }
                    
					/*if($this->input->post('tipo_entrada') == 'traspaso'){
						$data = array(
							'tbl_almacen_movimientos_idtbl_almacen_movimientos' => $id_traspaso,
							'cantidad' => $this->input->post('entregado')[$key],
							//'precio' => $this->input->post('precio')[$key],
							'tbl_catalogo_idtbl_catalogo' => $value,
							//'tipo_moneda' => $this->input->post('moneda')[$key],
							//'numero_serie' => $serie,
							//'numero_interno' => $interno,
						);
						$this->db->insert('dtl_almacen_movimientos', $data);

								$this->db->where('tbl_almacenes_idtbl_almacenes', $this->input->post('almacen_origen'));
                                $this->db->where('tbl_catalogo_idtbl_catalogo', $value);
                                $this->db->where('estatus', 'almacen');
                                $q2 = $this->db->get('dtl_almacen');
                                if ($q2->num_rows() > 0) {
                                    $this->db->set('existencias', 'existencias-' . $this->input->post('entregado')[$key], false);
                                    $this->db->where('tbl_almacenes_idtbl_almacenes', $this->input->post('almacen_origen'));
                                    $this->db->where('tbl_catalogo_idtbl_catalogo', $value);
                                    $this->db->update('dtl_almacen');
                                }
					}*/
                    if ($entrada == 'si' && ($this->input->post('categoria')[$key] == ID_ACTIVO_FIJO || $this->input->post('categoria')[$key] == ID_HERRAMIENTA_HILTI || $this->input->post('categoria')[$key] == ID_HERRAMIENTA_MEDIANO_COSTO) || (isset($this->input->post('producto')[$key]) && ($this->input->post('producto')[$key] == "25053" || $this->input->post('producto')[$key] == "19955" || $this->input->post('producto')[$key] == "25054" || $this->input->post('producto')[$key] == "19420" || $this->input->post('producto')[$key] == "19421" || $this->input->post('producto')[$key] == "24792" || $this->input->post('producto')[$key] == "24793" || $this->input->post('producto')[$key] == "19428" || $this->input->post('producto')[$key] == "19429"))) {                       
						$this->db->where('tbl_catalogo_idtbl_catalogo', $value);
                        $this->db->where('numero_serie', $serie);				
						$this->db->where('tbl_almacenes_idtbl_almacenes', $id_almacen);
                        $q = $this->db->get('dtl_almacen')->result();						
                        //if (count($q) > 0) {							
                        //    $this->db->trans_rollback();
                        //    return 'Número de serie repetido (' . $serie . ')';
                        //} else {
							if($this->input->post('tipo') == 'interno'){
								$data = array(
									'tbl_almacenes_idtbl_almacenes' => $id_almacen,
									'tbl_catalogo_idtbl_catalogo' => $value,
									'existencias' => $this->input->post('entregado')[$key],
									'numero_serie' => $serie,
									'numero_interno' => $interno,
									'estatus' => 'almacen',
									'nota' => $nota,
									'sitio' => $this->input->post('sitio')
								);
							}else{								
								$data = array(
									'tbl_almacenes_idtbl_almacenes' => $id_almacen,
									'tbl_catalogo_idtbl_catalogo' => $value,
									'existencias' => $this->input->post('entregado')[$key],
									'numero_serie' => $serie,
									'numero_interno' => $interno,
									'estatus' => 'almacen',
									'nota' => $nota
								);
							}
                            
                            $this->db->insert('dtl_almacen', $data);
                        //}                        
                    } else {						
						if($this->input->post('entregado')[$key] == $this->input->post('cantidad')[$key]){
							$this->db->where('tbl_almacenes_idtbl_almacenes', $id_almacen);
							$this->db->where('tbl_catalogo_idtbl_catalogo', $value);
							if($this->session->userdata('tipo') == 1 && $id_almacen == 2){
								$this->db->where('estado', 'nuevo');
							}
							$this->db->where('estatus', 'almacen');
							$q = $this->db->get('dtl_almacen');
							if ($q->num_rows() > 0) {
                            	$this->db->set('existencias', 'existencias+' . $this->input->post('entregado')[$key], false);
                            	$this->db->where('tbl_almacenes_idtbl_almacenes', $id_almacen);
								if($this->session->userdata('tipo') == 1 && $id_almacen == 2){
									$this->db->where('estado', 'nuevo');
								}
								$this->db->where('estatus', 'almacen');
                            	$this->db->where('tbl_catalogo_idtbl_catalogo', $value);
                            	$this->db->update('dtl_almacen');

								if(isset($_POST['autor'])){
									if($this->input->post('movimiento_virtual') == 3){
										$this->db->set('existencias', 'existencias-' . $this->input->post('entregado')[$key], false);
                            			$this->db->where('tbl_almacenes_idtbl_almacenes', $this->input->post('almacen_origen'));
										if($this->session->userdata('tipo') == 1){
											$this->db->where('estado', 'nuevo');
										}
										$this->db->where('estatus', 'almacen');							
                            			$this->db->where('tbl_catalogo_idtbl_catalogo', $value);
                            			$this->db->update('dtl_almacen');
									}
								}
								if($this->input->post('id_detalle_explosion')[$key] != NULL && $this->input->post('id_detalle_explosion')[$key] != ''){
									$this->db->set('entregado', 'entregado+' . $this->input->post('entregado')[$key], false);
									$this->db->where('iddtl_almacen_entradas', $this->input->post('id_detalle_explosion')[$key]);
									$this->db->update('dtl_almacen_movimientos');
								}
                        	} else {

                            	$data = array(
                            	'tbl_almacenes_idtbl_almacenes' => $id_almacen,
                            	'tbl_catalogo_idtbl_catalogo' => $value,
                            	'estatus' => 'almacen',
                            	'existencias' => $this->input->post('entregado')[$key]
                        		);
                            	$this->db->insert('dtl_almacen', $data);

								if(isset($_POST['autor'])){
									if($this->input->post('movimiento_virtual') == 3){
										$this->db->set('existencias', 'existencias-' . $this->input->post('entregado')[$key], false);
                            			$this->db->where('tbl_almacenes_idtbl_almacenes', $this->input->post('almacen_origen'));
										if($this->session->userdata('tipo') == 1){
											$this->db->where('estado', 'nuevo');
										}
										$this->db->where('estatus', 'almacen');
                            			$this->db->where('tbl_catalogo_idtbl_catalogo', $value);
                            			$this->db->update('dtl_almacen');
									}
									if($this->input->post('id_detalle_explosion')[$key] != NULL && $this->input->post('id_detalle_explosion')[$key] != ''){
										$this->db->set('entregado', 'entregado+' . $this->input->post('entregado')[$key], false);
										$this->db->where('iddtl_almacen_entradas', $this->input->post('id_detalle_explosion')[$key]);
										$this->db->update('dtl_almacen_movimientos');
									}
								}
                        	}
						}else{							
							$modificaciones++;
							$sobrante = $this->input->post('cantidad')[$key] - $this->input->post('entregado')[$key];
							$this->db->where('tbl_almacenes_idtbl_almacenes', $id_almacen);
							$this->db->where('tbl_catalogo_idtbl_catalogo', $value);
							if($this->session->userdata('tipo') == 1 && $id_almacen == 2){
								$this->db->where('estado', 'nuevo');
							}
							$this->db->where('estatus', 'almacen');
							$q = $this->db->get('dtl_almacen');
							if ($q->num_rows() > 0){
                            	$this->db->set('existencias', 'existencias+' . $this->input->post('entregado')[$key], false);
                            	$this->db->where('tbl_almacenes_idtbl_almacenes', $id_almacen);
								if($this->session->userdata('tipo') == 1 && $id_almacen == 2){
									$this->db->where('estado', 'nuevo');
								}
								$this->db->where('estatus', 'almacen');
                            	$this->db->where('tbl_catalogo_idtbl_catalogo', $value);
                            	$this->db->update('dtl_almacen');

								if(isset($_POST['autor'])){
									if($this->input->post('movimiento_virtual') == 3){
										$this->db->set('existencias', 'existencias-' . $this->input->post('entregado')[$key], false);
                            			$this->db->where('tbl_almacenes_idtbl_almacenes', $this->input->post('almacen_origen'));	
										if($this->session->userdata('tipo') == 1){
											$this->db->where('estado', 'nuevo');
										}
										$this->db->where('estatus', 'almacen');							
                            			$this->db->where('tbl_catalogo_idtbl_catalogo', $value);
                            			$this->db->update('dtl_almacen');
									}
								}
								if($this->input->post('id_detalle_explosion')[$key] != NULL && $this->input->post('id_detalle_explosion')[$key] != ''){
									$this->db->set('entregado', 'entregado+' . $this->input->post('entregado')[$key], false);
									$this->db->where('iddtl_almacen_entradas', $this->input->post('id_detalle_explosion')[$key]);
									$this->db->update('dtl_almacen_movimientos');

								}
                        	} else {
                                //if ($this->input->post('existencias')[$index_antes] != '' && $this->input->post('existencias')[$index_antes] != null) {									
                                    if ($this->session->userdata('tipo') == 1 && $id_almacen == 2) {
                                        $estado = 'nuevo';
                                    } else {
                                        $estado = '';
                                    }
                                    $data = array(
                                		'tbl_almacenes_idtbl_almacenes' => $id_almacen,
                                		'tbl_catalogo_idtbl_catalogo' => $value,
                                		'estatus' => 'almacen',
                                		'existencias' => $this->input->post('entregado')[$key],
                                		'estado' => $estado
                                	);
                                    $this->db->insert('dtl_almacen', $data);

                                    if (isset($_POST['autor'])) {
                                        if ($this->input->post('movimiento_virtual') == 3) {
                                            $this->db->set('existencias', 'existencias-' . $this->input->post('entregado')[$key], false);
											if($this->session->userdata('tipo') == 1){
												$this->db->where('estado', 'nuevo');
											}
                                            $this->db->where('tbl_almacenes_idtbl_almacenes', $this->input->post('almacen_origen'));
                                            $this->db->where('estatus', 'almacen');
                                            $this->db->where('tbl_catalogo_idtbl_catalogo', $value);
                                            $this->db->update('dtl_almacen');
                                        }
                                    }
									if($this->input->post('id_detalle_explosion')[$key] != NULL && $this->input->post('id_detalle_explosion')[$key] != ''){
										$this->db->set('entregado', 'entregado+' . $this->input->post('entregado')[$key], false);
										$this->db->where('iddtl_almacen_entradas', $this->input->post('id_detalle_explosion')[$key]);
										$this->db->update('dtl_almacen_movimientos');
									}
                                //}
                        	}
                            if ($this->input->post('tipo_entrada') == 'traspaso') {
                                $this->db->where('tbl_almacenes_idtbl_almacenes', $this->input->post('almacen_origen'));
                                $this->db->where('tbl_catalogo_idtbl_catalogo', $value);
                                $this->db->where('estatus', 'almacen');
                                $q2 = $this->db->get('dtl_almacen');
                                if ($q2->num_rows() > 0) {
                                    $this->db->set('existencias', 'existencias+' . $sobrante, false);
                                    $this->db->where('tbl_almacenes_idtbl_almacenes', $this->input->post('almacen_origen'));
                                    $this->db->where('tbl_catalogo_idtbl_catalogo', $value);
									$this->db->where('estatus', 'almacen');
                                    $this->db->update('dtl_almacen');
                                } else {
									if($this->session->userdata('tipo') == 1){
										$estado = 'nuevo';
									}else{
										$estado = '';
									}
                                    $data = array(
                                	'tbl_almacenes_idtbl_almacenes' => $id_almacen,
                                	'tbl_catalogo_idtbl_catalogo' => $value,
                                	'estatus' => 'almacen',
                                	'existencias' => $sobrante,
									'estado' => $estado
									);
                                    $this->db->insert('dtl_almacen', $data);
                                }
                            }
						}
                        
                    }
                }
				if($modificaciones>0){
					$data = array(
						'estatus' => 1,
						'tbl_users_idtbl_users_ag' => $this->session->userdata('id'),
						'modificado' => 1
					);
					$this->db->where('idtbl_almacen_movimientos', $this->input->post('id_movimiento'));
					$this->db->update('tbl_almacen_movimientos', $data);
				}else{
					$data = array(
						'estatus' => 1,
						'tbl_users_idtbl_users_ag' => $this->session->userdata('id')
					);
					$this->db->where('idtbl_almacen_movimientos', $this->input->post('id_movimiento'));
					$this->db->update('tbl_almacen_movimientos', $data);
				}
				
            }
        }else{
			$insert_id = $this->input->post('id_movimiento');
			$data = array(
				'estatus' => 2
			);
			//Se cancela el traspaso
			$this->db->where('idtbl_almacen_movimientos', $this->input->post('id_traspaso'));
			$this->db->update('tbl_almacen_movimientos', $data);

			//Se cancela la salida
			$this->db->where('idtbl_almacen_movimientos', $this->input->post('id_salida'));
			$this->db->update('tbl_almacen_movimientos', $data);

			//Se cancela la entrada
			$this->db->where('idtbl_almacen_movimientos', $this->input->post('id_movimiento'));
			$this->db->update('tbl_almacen_movimientos', $data);

			//Se regresará el material al almacen de origen
			$contador_alto_costo = 0;
			foreach ($this->input->post('producto') as $key => $value) {
				if ($this->input->post('categoria')[$key] == ID_HERRAMIENTA_ALTO_COSTO || $this->input->post('categoria')[$key] == ID_HERRAMIENTA_HILTI || $this->input->post('categoria')[$key] == ID_ACTIVO_FIJO || $this->input->post('categoria')[$key] == ID_HERRAMIENTA_MEDIANO_COSTO || (isset($this->input->post('catalogo')[$key]) && ($this->input->post('catalogo')[$key] == "25053" || $this->input->post('catalogo')[$key] == "19955" || $this->input->post('catalogo')[$key] == "25054" || $this->input->post('catalogo')[$key] == "19420"))) {
					$serie = $this->input->post('numero_serie')[$contador_alto_costo];
					$interno = $this->input->post('numero_interno')[$contador_alto_costo];
				} else {
					$serie = null;
					$interno = null;
				}
							
				if ($this->input->post('categoria')[$key] == ID_HERRAMIENTA_ALTO_COSTO || $this->input->post('categoria')[$key] == ID_HERRAMIENTA_HILTI || $this->input->post('categoria')[$key] == ID_ACTIVO_FIJO || $this->input->post('categoria')[$key] == ID_HERRAMIENTA_MEDIANO_COSTO || (isset($this->input->post('producto')[$key]) && ($this->input->post('producto')[$key] == "25053" || $this->input->post('producto')[$key] == "19955" || $this->input->post('producto')[$key] == "25054" || $this->input->post('producto')[$key] == "19420"))) { //value es id de herramienta
					$this->db->where('tbl_catalogo_idtbl_catalogo', $value);
					$this->db->where('numero_serie', $this->input->post('numero_serie')[$key]);
					$q = $this->db->get('dtl_almacen');
					if ($q->num_rows() > 0) {
						$this->db->trans_rollback();
						return 'Número de serie repetido (' . $this->input->post('numero_serie')[$key] . ')';
					} else {
						$data = array(
						'tbl_almacenes_idtbl_almacenes' => $this->input->post('almacen_origen'),
						'tbl_catalogo_idtbl_catalogo' => $value,
						'existencias' => $this->input->post('cantidad')[$key],
						'numero_serie' => $this->input->post('numero_serie')[$key],
						'numero_interno' => $this->input->post('numero_interno')[$key],
						'estatus' => 'almacen',
						'nota' => $this->input->post('nota')[$contador_alto_costo]
					);
						$this->db->insert('dtl_almacen', $data);
					}
					$contador_alto_costo++;
				} else {
					$this->db->where('tbl_almacenes_idtbl_almacenes', $this->input->post('almacen_origen'));
					$this->db->where('tbl_catalogo_idtbl_catalogo', $value);
					$this->db->where('estatus', 'almacen');
					$q = $this->db->get('dtl_almacen');
					if ($q->num_rows() > 0) {
						$this->db->set('existencias', 'existencias+' . $this->input->post('cantidad')[$key], false);
						$this->db->where('tbl_almacenes_idtbl_almacenes', $this->input->post('almacen_origen'));
						$this->db->where('tbl_catalogo_idtbl_catalogo', $value);
						$this->db->where('estatus', 'almacen');
						$this->db->update('dtl_almacen');
					} else {
						$data = array(
						'tbl_almacenes_idtbl_almacenes' => $this->input->post('almacen_origen'),
						'tbl_catalogo_idtbl_catalogo' => $value,
						'estatus' => 'almacen',
						'existencias' => $this->input->post('cantidad')[$key]
					);
						$this->db->insert('dtl_almacen', $data);
					}
				}
			}
		}
		$data = array(
			'fecha' => date('Y-m-d H:i:s'),
			'id_evento' => $insert_id,
			'tbl_almacenes_idtbl_almacenes' => $id_almacen
		);
		$this->db->insert('tbl_log_almacen', $data);
		if ($this->db->trans_status() === FALSE) {
			$this->db->trans_rollback();
			return 'Ocurrio un error intente nuevamente';
		} else {
			$this->db->trans_commit();
			return true;
		}
	}

	public function verificarCuadrilla(){

        $cuadrilla = $this->input->post('nombre_cuadrilla');

        $this->db->query("SELECT * FROM tbl_cuadrillas WHERE nombre_cuadrilla='$cuadrilla'");
        $this->db->from("tbl_cuadrillas");
		$this->db->where("nombre_cuadrilla", $cuadrilla);
        $query = $this->db->get();

        return count($query->result()) > 0 ? true : false;
    }

	public function nuevaCuadrilla() {
        $this->db->trans_begin();
       
        $data = array(
            'nombre_cuadrilla' => $this->input->post('nombre_cuadrilla')
        );
        //Se registra la asistencia
        $this->db->insert('tbl_cuadrillas', $data);
		$id_cuadrilla = $this->db->insert_id();

		if ($this->db->trans_status() === FALSE) {
			$this->db->trans_rollback();
			return false;
		} else {
			$this->db->trans_commit();
			return true;
		}
	}

	public function editarCuadrilla() {
        $this->db->trans_begin();
       
        $data = array(
            'nombre_cuadrilla' => $this->input->post('nombre_cuadrillaEdit')
        );
        //Se registra la asistencia
        $this->db->where('idtbl_cuadrillas', $this->input->post('id_cuadrillaEdit'));
        $this->db->update('tbl_cuadrillas', $data);

		if ($this->db->trans_status() === FALSE) {
			$this->db->trans_rollback();
			return false;
		} else {
			$this->db->trans_commit();
			return true;
		}
	}

	public function getCuadrillas($buscar = '', $inicio = false, $cantidadRegistro = false) {
		$limit = '';
		if ($inicio !== false && $cantidadRegistro !== false) {
			$limit = 'LIMIT ' . $inicio . "," . $cantidadRegistro;
		}

		$query = $this->db->query("SELECT tbl_cuadrillas.* FROM tbl_cuadrillas WHERE (tbl_cuadrillas.nombre_cuadrilla LIKE '%$buscar%') ORDER BY tbl_cuadrillas.idtbl_cuadrillas DESC " . $limit);
		
		return $query->result();
	}

	public function guardar_personal_cuadrilla()
    {
        $id_cuadrilla = $this->input->post('id_cuadrilla');
        
            foreach($this->input->post('personal_cuadrilla') AS $key => $value){
                $uid = uniqid();
                $data = array(
                'tbl_cuadrillas_idtbl_cuadrillas' => $this->input->post('id_cuadrilla'),
                'tbl_usuarios_idtbl_usuarios' => $this->input->post('personal_cuadrilla')[$key]
                );
                $this->db->insert('tbl_usuarios_cuadrillas', $data);
            }
        
        return true;
    }

	//Función para guardar explosión de insumo
	public function guardar_nueva_explosion_insumos($uid, $id_almacen) {
		$this->db->trans_begin();
        						
			$query = $this->db->query("SELECT COUNT(idtbl_almacen_movimientos) as total FROM `tbl_almacen_movimientos` WHERE `tipo` = 'entrada-almacen'");
			if(isset($_POST['sitio'])){
				$sitio = trim($_POST['sitio']);
			}else{
				$sitio = '';
			}
			$data = array(
			'fecha' => date('Y-m-d H:i:s'),
			'tbl_users_idtbl_users' => $this->session->userdata('id'),
			'ctl_tipo_documento_idctl_tipo_documento' => $this->input->post('tipo_documento'),
			'numero_documento' => strtoupper($this->input->post('numero_documento')),
			'tbl_almacenes_idtbl_almacenes' => $id_almacen,
			'tbl_almacenes_idtbl_almacenes_origen' => $this->input->post('almacen_origen'),
			'uid' => $uid,
			'tipo' => ($id_almacen == 2) ? 'entrada' : 'entrada-almacen',
			'estatus' => $this->input->post('cliente') != 11 && $this->input->post('cliente') != 28 && $this->input->post('cliente') != 47 ? 0 : 1,
			'folio' => $query->result()[0]->total + 1,
			//'tbl_proyectos_idtbl_proyectos' => (empty($this->input->post('proyecto'))) ? null : $this->input->post('proyecto'),
			'tbl_segmentos_proyecto_idtbl_segmentos_proyecto' => (empty($this->input->post('segmento'))) ? null : $this->input->post('segmento'),
			'movimiento_virtual' => 3,
			'sitio' => $sitio
			);
			//Se registra la entrada
			$this->db->insert('tbl_almacen_movimientos', $data);
			//Se obtiene id de la entrada para hacer la relación con su detalle
			$insert_id = $this->db->insert_id();
			$contador_alto_costo = 0;
			//se recorre el arreglo que trae los productos del formulario
			foreach ($this->input->post('producto') as $key => $value) {
				if ($this->input->post('categoria')[$key] == ID_HERRAMIENTA_ALTO_COSTO || $this->input->post('categoria')[$key] == ID_HERRAMIENTA_HILTI || $this->input->post('categoria')[$key] == ID_HERRAMIENTA_MEDIANO_COSTO || (isset($this->input->post('catalogo')[$key]) && ($this->input->post('catalogo')[$key] == "25053" || $this->input->post('catalogo')[$key] == "19955" || $this->input->post('catalogo')[$key] == "25054" || $this->input->post('catalogo')[$key] == "19420" || $this->input->post('catalogo')[$key] == "19421" || $this->input->post('catalogo')[$key] == "24792" || $this->input->post('catalogo')[$key] == "24793" || $this->input->post('catalogo')[$key] == "19428" || $this->input->post('catalogo')[$key] == "19429"))) {
					$serie = $this->input->post('numero_serie')[$contador_alto_costo];
					$interno = $this->input->post('numero_interno')[$contador_alto_costo];
					$contador_alto_costo++;
				} else {
					$serie = null;
					$interno = null;
				}
				$data = array(
				'tbl_almacen_movimientos_idtbl_almacen_movimientos' => $insert_id,
				'cantidad' => $this->input->post('cantidad')[$key],
				//'precio' => $this->input->post('precio')[$key],
				'tbl_catalogo_idtbl_catalogo' => $value,
				//'tipo_moneda' => $this->input->post('moneda')[$key],
				'numero_serie' => $serie,
				'numero_interno' => $interno,
			);
				if($this->input->post('cantidad')[$key] > 0){
					$this->db->insert('dtl_almacen_movimientos', $data);
				}
			}
		     
       
		$data = array(
			'fecha' => date('Y-m-d H:i:s'),
			'id_evento' => $insert_id,
			'tbl_almacenes_idtbl_almacenes' => $id_almacen
		);
		$this->db->insert('tbl_log_almacen', $data);
		if ($this->db->trans_status() === FALSE) {
			$this->db->trans_rollback();
			return 'Ocurrio un error intente nuevamente';
		} else {
			$this->db->trans_commit();
			return true;
		}
	}

	//Función para guardar explosión de insumo
	public function guardar_nueva_entrada_explosion($uid, $id_almacen) {
		$this->db->trans_begin();
        						
			$query = $this->db->query("SELECT COUNT(idtbl_almacen_movimientos) as total FROM `tbl_almacen_movimientos` WHERE `tipo` = 'entrada-almacen'");
			
			$data = array(
			'fecha' => date('Y-m-d H:i:s'),
			'tbl_users_idtbl_users' => $this->session->userdata('id'),
			'ctl_tipo_documento_idctl_tipo_documento' => NULL,
			'numero_documento' => NULL,
			'tbl_almacenes_idtbl_almacenes' => $id_almacen,
			'tbl_almacenes_idtbl_almacenes_origen' => ID_ALMACEN_GENERAL,
			'uid' => $uid,
			'tipo' => ($id_almacen == 2) ? 'entrada' : 'entrada-almacen',
			'estatus' => 0,
			'folio' => $query->result()[0]->total + 1,
			//'tbl_proyectos_idtbl_proyectos' => (empty($this->input->post('proyecto'))) ? null : $this->input->post('proyecto'),
			//'tbl_segmentos_proyecto_idtbl_segmentos_proyecto' => (empty($this->input->post('segmento'))) ? null : $this->input->post('segmento'),
			'movimiento_virtual' => 3,
			//'idtbl_almacen_movimientos_explosion' => $this->input->post('idtbl_almacen_movimientos')
			//'sitio' => $sitio
			);
			//Se registra la entrada
			$this->db->insert('tbl_almacen_movimientos', $data);
			//Se obtiene id de la entrada para hacer la relación con su detalle
			$insert_id = $this->db->insert_id();
			$contador_alto_costo = 0;
			//se recorre el arreglo que trae los productos del formulario
			foreach ($this->input->post('idtbl_catalogo') as $key => $value) {
				/*if ($this->input->post('categoria')[$key] == ID_HERRAMIENTA_ALTO_COSTO || $this->input->post('categoria')[$key] == ID_HERRAMIENTA_HILTI || $this->input->post('categoria')[$key] == ID_HERRAMIENTA_MEDIANO_COSTO || (isset($this->input->post('idtbl_catalogo')[$key]) && ($this->input->post('idtbl_catalogo')[$key] == "25053" || $this->input->post('idtbl_catalogo')[$key] == "19955" || $this->input->post('idtbl_catalogo')[$key] == "25054" || $this->input->post('idtbl_catalogo')[$key] == "19420" || $this->input->post('idtbl_catalogo')[$key] == "19421" || $this->input->post('idtbl_catalogo')[$key] == "24792" || $this->input->post('idtbl_catalogo')[$key] == "24793" || $this->input->post('idtbl_catalogo')[$key] == "19428" || $this->input->post('idtbl_catalogo')[$key] == "19429"))) {
					$serie = $this->input->post('numero_serie')[$contador_alto_costo];
					$interno = $this->input->post('numero_interno')[$contador_alto_costo];
					$contador_alto_costo++;
				} else {
					$serie = null;
					$interno = null;
				}*/
				
				$data = array(
				'tbl_almacen_movimientos_idtbl_almacen_movimientos' => $insert_id,
				'cantidad' => $this->input->post('entrada')[$key],
				//'precio' => $this->input->post('precio')[$key],
				'tbl_catalogo_idtbl_catalogo' => $value,
				//'tipo_moneda' => $this->input->post('moneda')[$key],
				//'numero_serie' => $serie,
				//'numero_interno' => $interno,
				'dtl_almacen_movimientos_iddtl_almacen_movimientos' => $this->input->post('iddtl_almacen_entradas')[$key]
				);
				$this->db->insert('dtl_almacen_movimientos', $data);

				//$this->db->set('entregado', 'entregado+' . $this->input->post('entrada')[$key], FALSE);
				//$this->db->set('numero_serie', $this->input->post('numero_serie')[$key]);
				//$this->db->set('numero_interno', $this->input->post('numero_interno')[$key]);
				//$this->db->where('iddtl_almacen_entradas', $this->input->post('iddtl_almacen_entradas')[$key]);
				//$this->db->update('dtl_almacen_movimientos');

				//$this->db->where('tbl_almacenes_idtbl_almacenes', $id_almacen);
				//$this->db->where('tbl_catalogo_idtbl_catalogo', $value);
				//$this->db->where('estatus', 'almacen');
				//$q = $this->db->get('dtl_almacen');
				/*if($this->input->post('numero_serie')[$key] != '' && $this->input->post('numero_serie') != NULL){
					$data = array(
                        'tbl_almacenes_idtbl_almacenes' => $this->input->post('id_almacen'),
                        'tbl_catalogo_idtbl_catalogo' => $value,
                        'estatus' => 'almacen',
                        'existencias' => $this->input->post('cantidad')[$key],
						'numero_serie' => $this->input->post('numero_serie')[$key],
						'numero_interno' => $this->input->post('numero_interno')[$key],
						'marca_almacen'=> $this->input->post('marca_almacen')[$key],
						'modelo_almacen'=> $this->input->post('modelo_almacen')[$key],
						'precio'=> $this->input->post('precio')[$key]
                    );
                        $this->db->insert('dtl_almacen', $data);
				}else{*/
                    /*if ($q->num_rows() > 0) {
                        $this->db->set('existencias', 'existencias+' . $this->input->post('entrada')[$key], false);
                        $this->db->where('tbl_almacenes_idtbl_almacenes', $id_almacen);
						//if($this->session->userdata('tipo') == 1){
						//	$this->db->where('estado', 'nuevo');
						//}
                        $this->db->where('tbl_catalogo_idtbl_catalogo', $value);
                        $this->db->where('estatus', 'almacen');
                        $this->db->update('dtl_almacen');
                    } else {
                        $data = array(
                        'tbl_almacenes_idtbl_almacenes' => $id_almacen,
                        'tbl_catalogo_idtbl_catalogo' => $value,
                        'estatus' => 'almacen',
                        'existencias' => $this->input->post('entrada')[$key]
                    );
                        $this->db->insert('dtl_almacen', $data);
                    }*/
                //}
			}
		     
       
		$data = array(
			'fecha' => date('Y-m-d H:i:s'),
			'id_evento' => $insert_id,
			'tbl_almacenes_idtbl_almacenes' => $id_almacen
		);
		$this->db->insert('tbl_log_almacen', $data);
		if ($this->db->trans_status() === FALSE) {
			$this->db->trans_rollback();
			return 'Ocurrio un error intente nuevamente';
		} else {
			$this->db->trans_commit();
			return true;
		}
	}

	public function guardar_nueva_entrada_area_medica($uid, $id_almacen) {
		$this->db->trans_begin();
		$query = $this->db->query("SELECT COUNT(idtbl_almacen_movimientos) as total FROM `tbl_almacen_movimientos` WHERE `tipo` = 'entrada'");
		$data = array(
			'fecha' => date('Y-m-d H:i:s'),
			'tbl_users_idtbl_users' => $this->session->userdata('id'),
			'ctl_tipo_documento_idctl_tipo_documento' => $this->input->post('tipo_documento'),
			'numero_documento' => strtoupper($this->input->post('numero_documento')),
			'tbl_almacenes_idtbl_almacenes' => $id_almacen,
			'uid' => $uid,
			'tipo' => ($id_almacen == 2) ? 'entrada' : 'entrada-almacen',
			'estatus' => 1,
			'folio' => $query->result()[0]->total + 1,
			'tbl_proyectos_idtbl_proyectos' => (empty($this->input->post('proyecto'))) ? NULL : $this->input->post('proyecto'),
			'tbl_segmentos_proyecto_idtbl_segmentos_proyecto' => (empty($this->input->post('segmento'))) ? NULL : $this->input->post('segmento')
		);
		//Se registra la entrada
		$this->db->insert('tbl_almacen_movimientos', $data);
		//Se obtiene id de la entrada para hacer la relación con su detalle
		$insert_id = $this->db->insert_id();
		$contador_alto_costo = 0;
		//se recorre el arreglo que trae los productos del formulario
		foreach ($this->input->post('producto') as $key => $value) {
			$data = array(
				'tbl_almacen_movimientos_idtbl_almacen_movimientos' => $insert_id,
				'cantidad' => $this->input->post('cantidad')[$key],
				'precio' => $this->input->post('precio')[$key],
				'tbl_catalogo_idtbl_catalogo' => $value,
				'tipo_moneda' => $this->input->post('moneda')[$key]
			);
			$this->db->insert('dtl_almacen_movimientos', $data);
			if ($this->input->post('categoria')[$key] == ID_HERRAMIENTA_ALTO_COSTO || $this->input->post('categoria')[$key] == ID_HERRAMIENTA_HILTI || $this->input->post('categoria')[$key] == ID_HERRAMIENTA_MEDIANO_COSTO) { //value es id de herramienta
				$this->db->where('tbl_catalogo_idtbl_catalogo', $value);
				$this->db->where('numero_serie', $this->input->post('numero_serie')[$contador_alto_costo]);
				$q = $this->db->get('dtl_almacen');
				if ($q->num_rows() > 0) {
					$this->db->trans_rollback();
					return 'Número de serie repetido (' . $this->input->post('numero_serie')[$contador_alto_costo] . ')';
				} else {
					$data = array(
						'tbl_almacenes_idtbl_almacenes' => $id_almacen,
						'tbl_catalogo_idtbl_catalogo' => $value,
						'existencias' => $this->input->post('cantidad')[$key],
						'numero_serie' => $this->input->post('numero_serie')[$contador_alto_costo],
						'numero_interno' => $this->input->post('numero_interno')[$contador_alto_costo],
						'estatus' => 'almacen',
						'nota' => $this->input->post('nota')[$contador_alto_costo]
					);
					$this->db->insert('dtl_almacen', $data);
				}
				$contador_alto_costo++;
			} else {
				$this->db->where('tbl_almacenes_idtbl_almacenes', $id_almacen);
				$this->db->where('tbl_catalogo_idtbl_catalogo', $value);
				$q = $this->db->get('dtl_almacen');
				if ($q->num_rows() > 0) {
					$this->db->set('existencias', 'existencias+' . $this->input->post('cantidad')[$key], FALSE);
                    if ($value == 26212) {
						$this->db->where('tbl_almacenes_idtbl_almacenes', 1);
                    }else{
                        $this->db->where('tbl_almacenes_idtbl_almacenes', $id_almacen);
                    }
					$this->db->where('tbl_catalogo_idtbl_catalogo', $value);
					$this->db->where('estatus', 'almacen');
					$this->db->update('dtl_almacen');
				} else {
					$data = array(
						'tbl_almacenes_idtbl_almacenes' => $id_almacen,
						'tbl_catalogo_idtbl_catalogo' => $value,
						'estatus' => 'almacen',
						'existencias' => $this->input->post('cantidad')[$key]
					);
					$this->db->insert('dtl_almacen', $data);
				}
			}
		}
		$data = array(
			'fecha' => date('Y-m-d H:i:s'),
			'id_evento' => $insert_id,
			'tbl_almacenes_idtbl_almacenes' => $id_almacen
		);
		$this->db->insert('tbl_log_almacen', $data);
		if ($this->db->trans_status() === FALSE) {
			$this->db->trans_rollback();
			return 'Ocurrio un error intente nuevamente';
		} else {
			$this->db->trans_commit();
			return true;
		}
	}

	public function guardar_nueva_entrada_autos_control_vehicular($uid, $id_almacen) {
		$this->db->trans_begin();
		$query = $this->db->query("SELECT COUNT(idtbl_almacen_movimientos) as total FROM `tbl_almacen_movimientos` WHERE `tipo` = 'entrada'");
		$data = array(
			'fecha' => date('Y-m-d H:i:s'),
			'tbl_users_idtbl_users' => $this->session->userdata('id'),
			'ctl_tipo_documento_idctl_tipo_documento' => $this->input->post('tipo_documento'),
			'numero_documento' => strtoupper($this->input->post('numero_documento')),
			'tbl_almacenes_idtbl_almacenes' => $id_almacen,
			'uid' => $uid,
			'tipo' => ($id_almacen == 2) ? 'entrada' : 'entrada-almacen',
			'estatus' => 1,
			'folio' => $query->result()[0]->total + 1,
			'tbl_proyectos_idtbl_proyectos' => (empty($this->input->post('proyecto'))) ? NULL : $this->input->post('proyecto'),
			'tbl_segmentos_proyecto_idtbl_segmentos_proyecto' => (empty($this->input->post('segmento'))) ? NULL : $this->input->post('segmento')
		);
		//Se registra la entrada
		$this->db->insert('tbl_almacen_movimientos', $data);
		//Se obtiene id de la entrada para hacer la relación con su detalle
		$insert_id = $this->db->insert_id();
		$contador_alto_costo = 0;
		//se recorre el arreglo que trae los productos del formulario
		foreach ($this->input->post('producto') as $key => $value) {
			$data = array(
				'tbl_almacen_movimientos_idtbl_almacen_movimientos' => $insert_id,
				'cantidad' => $this->input->post('cantidad')[$key],
				'precio' => $this->input->post('precio')[$key],
				'tbl_catalogo_idtbl_catalogo' => $value,
				'tipo_moneda' => $this->input->post('moneda')[$key]
			);
			$this->db->insert('dtl_almacen_movimientos', $data);
			if ($this->input->post('categoria')[$key] == 16 || $this->input->post('categoria')[$key] == 10) { //value es id de herramienta
				$this->db->where('tbl_catalogo_idtbl_catalogo', $value);
				$this->db->where('numero_serie', $this->input->post('numero_serie')[$contador_alto_costo]);
				$q = $this->db->get('dtl_almacen');
				if ($q->num_rows() > 0) {
					$this->db->trans_rollback();
					return 'Número de serie repetido (' . $this->input->post('numero_serie')[$contador_alto_costo] . ')';
				} else {
					$data = array(
						'tbl_almacenes_idtbl_almacenes' => $id_almacen,
						'tbl_catalogo_idtbl_catalogo' => $value,
						'existencias' => $this->input->post('cantidad')[$key],
						'numero_serie' => $this->input->post('numero_serie')[$contador_alto_costo],
						'numero_interno' => $this->input->post('numero_interno')[$contador_alto_costo],
						'estatus' => $this->input->post('categoria')[$key] == 16 ? 'disponible' : 'almacen',
						'nota' => $this->input->post('nota')[$contador_alto_costo]
					);
					$this->db->insert('dtl_almacen', $data);
				}
				$contador_alto_costo++;
			}
		}
		$data = array(
			'fecha' => date('Y-m-d H:i:s'),
			'id_evento' => $insert_id,
			'tbl_almacenes_idtbl_almacenes' => $id_almacen
		);
		$this->db->insert('tbl_log_almacen', $data);
		if ($this->db->trans_status() === FALSE) {
			$this->db->trans_rollback();
			return 'Ocurrio un error intente nuevamente';
		} else {
			$this->db->trans_commit();
			return true;
		}
	}

	public function guardar_nueva_entrada_sistemas($uid, $id_almacen) {
		$this->db->trans_begin();
		$query = $this->db->query("SELECT COUNT(idtbl_almacen_movimientos) as total FROM `tbl_almacen_movimientos` WHERE `tipo` = 'entrada'");
		$data = array(
			'fecha' => date('Y-m-d H:i:s'),
			'tbl_users_idtbl_users' => $this->session->userdata('id'),
			'ctl_tipo_documento_idctl_tipo_documento' => $this->input->post('tipo_documento'),
			'numero_documento' => strtoupper($this->input->post('numero_documento')),
			'tbl_almacenes_idtbl_almacenes' => $id_almacen,
			'uid' => $uid,
			'tipo' => ($id_almacen == 2) ? 'entrada' : 'entrada-almacen',
			'estatus' => 1,
			'folio' => $query->result()[0]->total + 1,
			'tbl_proyectos_idtbl_proyectos' => (empty($this->input->post('proyecto'))) ? NULL : $this->input->post('proyecto'),
			'tbl_segmentos_proyecto_idtbl_segmentos_proyecto' => (empty($this->input->post('segmento'))) ? NULL : $this->input->post('segmento')
		);
		//Se registra la entrada
		$this->db->insert('tbl_almacen_movimientos', $data);
		//Se obtiene id de la entrada para hacer la relación con su detalle
		$insert_id = $this->db->insert_id();
		$contador_alto_costo = 0;
		//se recorre el arreglo que trae los productos del formulario
		foreach ($this->input->post('producto') as $key => $value) {
			$data = array(
				'tbl_almacen_movimientos_idtbl_almacen_movimientos' => $insert_id,
				'cantidad' => $this->input->post('cantidad')[$key],
				'precio' => $this->input->post('precio')[$key],
				'tbl_catalogo_idtbl_catalogo' => $value,
				'tipo_moneda' => $this->input->post('moneda')[$key]
			);
			$this->db->insert('dtl_almacen_movimientos', $data);
			if ($this->input->post('categoria')[$key] == 16 || $this->input->post('categoria')[$key] == 10) { //value es id de herramienta
				$this->db->where('tbl_catalogo_idtbl_catalogo', $value);
				$this->db->where('numero_serie', $this->input->post('numero_serie')[$contador_alto_costo]);
				$q = $this->db->get('dtl_almacen');
				if ($q->num_rows() > 0) {
					$this->db->trans_rollback();
					return 'Número de serie repetido (' . $this->input->post('numero_serie')[$contador_alto_costo] . ')';
				} else {
					$data = array(
						'tbl_almacenes_idtbl_almacenes' => $id_almacen,
						'tbl_catalogo_idtbl_catalogo' => $value,
						'existencias' => $this->input->post('cantidad')[$key],
						'numero_serie' => $this->input->post('numero_serie')[$contador_alto_costo],
						'numero_interno' => $this->input->post('numero_interno')[$contador_alto_costo],
						'estatus' => 'almacen',
						'nota' => $this->input->post('nota')[$contador_alto_costo]
					);
					$this->db->insert('dtl_almacen', $data);
				}
				$contador_alto_costo++;
			} else {
				$this->db->where('tbl_almacenes_idtbl_almacenes', $id_almacen);
				$this->db->where('tbl_catalogo_idtbl_catalogo', $value);
				$q = $this->db->get('dtl_almacen');
				if ($q->num_rows() > 0) {
					$this->db->set('existencias', 'existencias+' . $this->input->post('cantidad')[$key], FALSE);
					$this->db->where('tbl_almacenes_idtbl_almacenes', $id_almacen);
					$this->db->where('tbl_catalogo_idtbl_catalogo', $value);
					$this->db->where('estatus', 'almacen');
					$this->db->update('dtl_almacen');
				} else {
					$data = array(
						'tbl_almacenes_idtbl_almacenes' => $id_almacen,
						'tbl_catalogo_idtbl_catalogo' => $value,
						'estatus' => 'almacen',
						'existencias' => $this->input->post('cantidad')[$key]
					);
					$this->db->insert('dtl_almacen', $data);
				}
			}
		}
		$data = array(
			'fecha' => date('Y-m-d H:i:s'),
			'id_evento' => $insert_id,
			'tbl_almacenes_idtbl_almacenes' => $id_almacen
		);
		$this->db->insert('tbl_log_almacen', $data);
		if ($this->db->trans_status() === FALSE) {
			$this->db->trans_rollback();
			return 'Ocurrio un error intente nuevamente';
		} else {
			$this->db->trans_commit();
			return true;
		}
	}

	public function guardar_nueva_entrada($uid) {
		$this->db->trans_begin();
		$query = $this->db->query("SELECT COUNT(idtbl_almacen_movimientos) as total FROM `tbl_almacen_movimientos` WHERE `tipo` = 'entrada-almacen'");
		$data = array(
			'fecha' => date('Y-m-d H:i:s'),
			'tbl_users_idtbl_users' => $this->session->userdata('id'),
			'ctl_tipo_documento_idctl_tipo_documento' => $this->input->post('tipo_documento'),
			//'numero_documento' => strtoupper($this->input->post('numero_documento')),
			//'numero_documento' => strtoupper($this->input->post('numero_documento')),
			'tbl_almacenes_idtbl_almacenes' => $this->input->post('id_almacen'),
			'uid' => $uid,
			'tipo' => 'entrada-almacen',
			'estatus' => 1,
			'tbl_proyectos_idtbl_proyectos' => $this->input->post('tbl_proyectos_idtbl_proyectos'),
			'folio' => $query->result()[0]->total + 1,
			'parent' => $this->input->post('idtbl_pedidos'),
			'ctl_autorizados_entrega_idctl_autorizados_entrega' => $this->input->post('usuario_entrega')
		);
		//Se registra la entrada
		$this->db->insert('tbl_almacen_movimientos', $data);
		//Se obtiene id de la entrada para hacer la relación con su detalle
		$insert_id = $this->db->insert_id();
		//se recorre el arreglo que trae los productos del formulario
		foreach ($this->input->post('id-producto-catalogo') as $key => $value) {
			if ($this->input->post('cantidad')[$key] > 0) {
				$this->db->set('entregado', 'entregado+' . $this->input->post('cantidad')[$key], FALSE);
				$this->db->set('numero_serie', $this->input->post('numero_serie')[$key]);
				$this->db->set('numero_interno', $this->input->post('numero_interno')[$key]);
				$this->db->set('marca', $this->input->post('marca_almacen')[$key]);
				$this->db->set('modelo', $this->input->post('modelo_almacen')[$key]);
				$this->db->where('iddtl_pedido_catalogo', $this->input->post('id_registro')[$key]);
				$this->db->update('dtl_pedido_catalogo');
				$data = array(
					'tbl_almacen_movimientos_idtbl_almacen_movimientos' => $insert_id,
					'cantidad' => $this->input->post('cantidad')[$key],
					'precio' => $this->input->post('precio')[$key],
					'tbl_catalogo_idtbl_catalogo' => $value,
					'tipo_moneda' => $this->input->post('tipo_moneda')
				);
				$this->db->insert('dtl_almacen_movimientos', $data);
				$this->db->where('tbl_almacenes_idtbl_almacenes', $this->input->post('id_almacen'));
				$this->db->where('tbl_catalogo_idtbl_catalogo', $value);
				$q = $this->db->get('dtl_almacen');
				if($this->input->post('numero_serie')[$key] != '' && $this->input->post('numero_serie') != NULL){
					$data = array(
                        'tbl_almacenes_idtbl_almacenes' => $this->input->post('id_almacen'),
                        'tbl_catalogo_idtbl_catalogo' => $value,
                        'estatus' => 'almacen',
                        'existencias' => $this->input->post('cantidad')[$key],
						'numero_serie' => $this->input->post('numero_serie')[$key],
						'numero_interno' => $this->input->post('numero_interno')[$key],
						'marca_almacen'=> $this->input->post('marca_almacen')[$key],
						'modelo_almacen'=> $this->input->post('modelo_almacen')[$key],
						'rack'=> isset($this->input->post('rack')[$key]) ? $this->input->post('rack')[$key] : NULL,
						'nivel'=> isset($this->input->post('nivel')[$key]) ? $this->input->post('nivel')[$key] : NULL,
						'precio'=> $this->input->post('precio')[$key]
                    );
                        $this->db->insert('dtl_almacen', $data);
				}else{
                    if ($q->num_rows() > 0) {
                        $this->db->set('existencias', 'existencias+' . $this->input->post('cantidad')[$key], false);
						if($this->session->userdata('tipo') != 1){
							$this->db->set('rack', $this->input->post('rack')[$key]);
							$this->db->set('nivel', $this->input->post('nivel')[$key]);
						}
                        $this->db->where('tbl_almacenes_idtbl_almacenes', $this->input->post('id_almacen'));
						if($this->session->userdata('tipo') == 1){
							$this->db->where('estado', 'nuevo');
						}
                        $this->db->where('tbl_catalogo_idtbl_catalogo', $value);
                        $this->db->where('estatus', 'almacen');
                        $this->db->update('dtl_almacen');
                    } else {
                        $data = array(
                        'tbl_almacenes_idtbl_almacenes' => $this->input->post('id_almacen'),
                        'tbl_catalogo_idtbl_catalogo' => $value,
                        'estatus' => 'almacen',
                        'existencias' => $this->input->post('cantidad')[$key],
                        'rack' => isset($this->input->post('rack')[$key]) ? $this->input->post('rack')[$key] : NULL,
                        'nivel' => isset($this->input->post('nivel')[$key]) ? $this->input->post('nivel')[$key] : NULL
                    );
                        $this->db->insert('dtl_almacen', $data);
                    }
                }
			}
		}
		$data = array(
			'fecha' => date('Y-m-d H:i:s'),
			'id_evento' => $insert_id,
			'tbl_almacenes_idtbl_almacenes' => $this->input->post('id_almacen')
		);
		$this->db->insert('tbl_log_almacen', $data);
		if ($this->db->trans_status() === FALSE) {
			$this->db->trans_rollback();
			return 'Ocurrio un error intente nuevamente';
		} else {
			$this->db->trans_commit();
			return true;
		}
	}

	public function guardar_nueva_entrada_virtual($uid, $uidsalida) {
		//Hacer la entrada
		$this->db->trans_begin();
		$query = $this->db->query("SELECT COUNT(idtbl_almacen_movimientos) as total FROM `tbl_almacen_movimientos` WHERE `tipo` = 'entrada-almacen'");
		$data = array(
			'fecha' => date('Y-m-d H:i:s'),
			'tbl_users_idtbl_users' => $this->session->userdata('id'),
			//'ctl_tipo_documento_idctl_tipo_documento' => $this->input->post('tipo_documento'),
			//'numero_documento' => strtoupper($this->input->post('numero_documento')),
			'tbl_almacenes_idtbl_almacenes' => ID_ALMACEN_GENERAL,
			'uid' => $uid,
			'tipo' => 'entrada-almacen',
			'estatus' => 1,
			'tbl_proyectos_idtbl_proyectos' => $this->input->post('proyecto'),
			'folio' => $query->result()[0]->total + 1,
			'parent' => $this->input->post('idpedido'),
			'ctl_autorizados_entrega_idctl_autorizados_entrega' => 2,
			'movimiento_virtual' => 1
		);
		//Se registra la entrada
		$this->db->insert('tbl_almacen_movimientos', $data);
		//Se obtiene id de la entrada para hacer la relación con su detalle
		$insert_id = $this->db->insert_id();
		//Se hace el update en dtlpedido para marcar que ya se hizo la entrega
		$this->db->set('entregado', 'cantidad+0', FALSE);
		$this->db->where('tbl_pedidos_idtbl_pedidos', $this->input->post('idpedido'));
		$this->db->update('dtl_pedido_catalogo');
		//Se obtiene los datos del pedido para hacer un insert en almacen movimientos
		$query2 = $this->db->query("SELECT cantidad, precio, tbl_catalogo_idtbl_catalogo FROM `dtl_pedido_catalogo` WHERE `tbl_pedidos_idtbl_pedidos` = ".$this->input->post('idpedido') );
		$resultado = $query2->result_array();
		//se recorre el arreglo
		foreach($resultado as $valores) {
			$arreglo[] = array (
				'tbl_almacen_movimientos_idtbl_almacen_movimientos' => $insert_id,
				'cantidad' => $valores['cantidad'],
				'precio' => $valores['precio'],
				'tbl_catalogo_idtbl_catalogo' => $valores['tbl_catalogo_idtbl_catalogo']
			);
		}
		//se recorre el arreglo que trae los productos del formulario
		foreach ($arreglo as $key => $value) {
				
				$data = array(
					'tbl_almacen_movimientos_idtbl_almacen_movimientos' => $insert_id,
					'cantidad' => $query2->result()[$key]->cantidad,
					'precio' => $query2->result()[$key]->precio,
					'tbl_catalogo_idtbl_catalogo' => $query2->result()[$key]->tbl_catalogo_idtbl_catalogo
					//'tipo_moneda' => $this->input->post('tipo_moneda')
				);
				$this->db->insert('dtl_almacen_movimientos', $data);								
			
		}
		$data = array(
			'fecha' => date('Y-m-d H:i:s'),
			'id_evento' => $insert_id,
			'tbl_almacenes_idtbl_almacenes' => ID_ALMACEN_GENERAL
		);
		$this->db->insert('tbl_log_almacen', $data);

		//Hacer la salida
		$querysalida = $this->db->query("SELECT COUNT(idtbl_almacen_movimientos) as total FROM `tbl_almacen_movimientos` WHERE `tipo` = 'salida-almacen'");
		$data = array(
			'fecha' => date('Y-m-d H:i:s'),
			'tbl_usuarios_idtbl_usuarios' => $this->input->post('usuario'),
			'tbl_users_idtbl_users' => $this->session->userdata('id'),
			'tbl_almacenes_idtbl_almacenes' => ID_ALMACEN_GENERAL,
			'tbl_proyectos_idtbl_proyectos' => $this->input->post('proyecto'),
			//'tbl_proyectos_idtbl_proyectos_destino' => (empty($this->input->post('idtbl_segmentos_proyecto'))) ? NULL : $this->input->post('idtbl_segmentos_proyecto'),
			'uid' => $uidsalida,
			'tipo' => 'salida-almacen',
			'estatus' => 1,
			'folio' => $querysalida->result()[0]->total + 1,
			'parent' => $this->input->post('idpedido'),
			'ctl_autorizados_entrega_idctl_autorizados_entrega' => 2,
			'movimiento_virtual' => 1
		);
		//Se registra la entrada
		$this->db->insert('tbl_almacen_movimientos', $data);
		$insert_idsalida = $this->db->insert_id();
		
		
		foreach ($arreglo as $key2 => $value2) {
			
			$querysalida = $this->db->query("SELECT iddtl_almacen FROM dtl_almacen WHERE tbl_catalogo_idtbl_catalogo = ".$query2->result()[$key2]->tbl_catalogo_idtbl_catalogo. " AND estatus='almacen' AND tbl_almacenes_idtbl_almacenes = 1");	

			if($querysalida->num_rows() > 0){
				$iddtl_almacen = $querysalida->result()[0]->iddtl_almacen;
			}else{				
				$insert = array(
					'tbl_almacenes_idtbl_almacenes' => ID_ALMACEN_GENERAL,
					'tbl_catalogo_idtbl_catalogo' => $query2->result()[$key2]->tbl_catalogo_idtbl_catalogo,
					'existencias' => 0.00,
					'estatus' => 'almacen'
				);
				$this->db->insert('dtl_almacen', $insert);
				$iddtl_almacen = $this->db->insert_id();
			}
			
			$data = array(
					'dtl_almacen_iddtl_almacen' => $iddtl_almacen,
					'tbl_usuarios_idtbl_usuarios' => $this->input->post('usuario'),
					'tbl_almacen_movimientos_idtbl_almacen_movimientos' => $insert_idsalida,
					'estatus_asignacion' => 'activa',
					'cantidad' => $query2->result()[$key2]->cantidad,
					//'observaciones' => $this->input->post('notas')[$key]
				);
				
				$this->db->insert('dtl_asignacion', $data);
			
		}

		if ($this->db->trans_status() === FALSE) {
			$this->db->trans_rollback();
			return 'Ocurrio un error intente nuevamente';
		} else {
			$this->db->trans_commit();
			return true;
		}
	}

	public function mostrarCajasChicas($buscar = '', $inicio = false, $cantidadRegistro = false)
    {
        $user = $this->session->userdata('id');
		$usuario = $this->session->userdata('id_usuario');
        $limit = '';
        if ($inicio !== false && $cantidadRegistro !== false) {
            $limit = 'LIMIT ' . $inicio . "," . $cantidadRegistro;
        }

		$permisos = $this->departamentos_model->permisos('caja_chica');

		if($this->session->userdata('tipo') == 17 || $this->session->userdata('tipo') == 19) {
            $query = $this->db->query("SELECT tbl_solicitud_recursos.*, (SELECT SUM(tbl_caja_chica.monto) FROM tbl_caja_chica JOIN tbl_solicitud_recursos tsr ON tsr.uid = tbl_caja_chica.uid_solicitud_recursos WHERE tbl_caja_chica.uid_solicitud_recursos = tbl_solicitud_recursos.uid AND tbl_caja_chica.ciclo = tsr.ciclo) AS cantidad_comprobada, tuautor.nombre AS autor, TU.nombre AS nombre_aprobacion, tbl_usuarios.nombres AS nombre_recibe, tbl_usuarios.apellido_paterno, tbl_usuarios.apellido_materno, tbl_proyectos.numero_proyecto, tbl_proyectos.nombre_proyecto, recibio.idtbl_users AS usuario_recibio FROM tbl_solicitud_recursos JOIN tbl_users tuautor ON tuautor.idtbl_users = tbl_solicitud_recursos.tbl_users_idtbl_users_autor JOIN tbl_proyectos ON tbl_proyectos.idtbl_proyectos = tbl_solicitud_recursos.tbl_proyectos_idtbl_proyectos LEFT JOIN tbl_segmentos_proyecto ON tbl_segmentos_proyecto.idtbl_segmentos_proyecto = tbl_solicitud_recursos.tbl_segmentos_proyecto_idtbl_segmentos_proyecto LEFT JOIN tbl_users TU ON TU.idtbl_users = tbl_solicitud_recursos.tbl_users_idtbl_users_aprobacion LEFT JOIN tbl_usuarios ON tbl_usuarios.idtbl_usuarios = tbl_solicitud_recursos.tbl_usuarios_idtbl_usuarios LEFT JOIN tbl_users recibio ON recibio.tbl_usuarios_idtbl_usuarios = tbl_usuarios.idtbl_usuarios LEFT JOIN tbl_caja_chica ON tbl_caja_chica.uid_solicitud_recursos = tbl_solicitud_recursos.uid WHERE (tbl_caja_chica.tbl_users_idtbl_users_aprobacion = $user OR tbl_solicitud_recursos.tbl_users_idtbl_users_autor = $user) AND tbl_solicitud_recursos.tipo = 'caja_chica' AND (tbl_solicitud_recursos.uid LIKE '%$buscar%') GROUP BY tbl_solicitud_recursos.idtbl_solicitud_recursos ORDER BY tbl_solicitud_recursos.idtbl_solicitud_recursos DESC " . $limit);
        }elseif ($permisos == 3 && $this->session->userdata('jefe') == 1) {
            $query = $this->db->query("SELECT tbl_solicitud_recursos.*, (SELECT SUM(tbl_caja_chica.monto) FROM tbl_caja_chica JOIN tbl_solicitud_recursos tsr ON tsr.uid = tbl_caja_chica.uid_solicitud_recursos WHERE tbl_caja_chica.uid_solicitud_recursos = tbl_solicitud_recursos.uid AND tbl_caja_chica.ciclo = tsr.ciclo) AS cantidad_comprobada, tuautor.nombre AS autor, TU.nombre AS nombre_aprobacion, tbl_usuarios.nombres AS nombre_recibe, tbl_usuarios.apellido_paterno, tbl_usuarios.apellido_materno, tbl_proyectos.numero_proyecto, tbl_proyectos.nombre_proyecto, recibio.idtbl_users AS usuario_recibio FROM tbl_solicitud_recursos JOIN tbl_users tuautor ON tuautor.idtbl_users = tbl_solicitud_recursos.tbl_users_idtbl_users_autor JOIN tbl_proyectos ON tbl_proyectos.idtbl_proyectos = tbl_solicitud_recursos.tbl_proyectos_idtbl_proyectos LEFT JOIN tbl_segmentos_proyecto ON tbl_segmentos_proyecto.idtbl_segmentos_proyecto = tbl_solicitud_recursos.tbl_segmentos_proyecto_idtbl_segmentos_proyecto LEFT JOIN tbl_users TU ON TU.idtbl_users = tbl_solicitud_recursos.tbl_users_idtbl_users_aprobacion LEFT JOIN tbl_usuarios ON tbl_usuarios.idtbl_usuarios = tbl_solicitud_recursos.tbl_usuarios_idtbl_usuarios LEFT JOIN tbl_users recibio ON recibio.tbl_usuarios_idtbl_usuarios = tbl_usuarios.idtbl_usuarios LEFT JOIN tbl_caja_chica ON tbl_caja_chica.uid_solicitud_recursos = tbl_solicitud_recursos.uid WHERE (tbl_solicitud_recursos.tbl_users_idtbl_users_aprobacion = $user OR tbl_solicitud_recursos.tbl_users_idtbl_users_autor = $user) AND tbl_solicitud_recursos.tipo = 'caja_chica' AND (tbl_solicitud_recursos.uid LIKE '%$buscar%') GROUP BY tbl_solicitud_recursos.idtbl_solicitud_recursos ORDER BY tbl_solicitud_recursos.idtbl_solicitud_recursos DESC " . $limit);
        }elseif($this->session->userdata('tipo') == 16) {
            $query = $this->db->query("SELECT tbl_solicitud_recursos.*, (SELECT SUM(tbl_caja_chica.monto) FROM tbl_caja_chica JOIN tbl_solicitud_recursos tsr ON tsr.uid = tbl_caja_chica.uid_solicitud_recursos WHERE tbl_caja_chica.uid_solicitud_recursos = tbl_solicitud_recursos.uid AND tbl_caja_chica.ciclo = tsr.ciclo) AS cantidad_comprobada, tuautor.nombre AS autor, TU.nombre AS nombre_aprobacion, tbl_usuarios.nombres AS nombre_recibe, tbl_usuarios.apellido_paterno, tbl_usuarios.apellido_materno, tbl_proyectos.numero_proyecto, tbl_proyectos.nombre_proyecto, recibio.idtbl_users AS usuario_recibio FROM tbl_solicitud_recursos JOIN tbl_users tuautor ON tuautor.idtbl_users = tbl_solicitud_recursos.tbl_users_idtbl_users_autor JOIN tbl_proyectos ON tbl_proyectos.idtbl_proyectos = tbl_solicitud_recursos.tbl_proyectos_idtbl_proyectos LEFT JOIN tbl_segmentos_proyecto ON tbl_segmentos_proyecto.idtbl_segmentos_proyecto = tbl_solicitud_recursos.tbl_segmentos_proyecto_idtbl_segmentos_proyecto LEFT JOIN tbl_users TU ON TU.idtbl_users = tbl_solicitud_recursos.tbl_users_idtbl_users_aprobacion LEFT JOIN tbl_usuarios ON tbl_usuarios.idtbl_usuarios = tbl_solicitud_recursos.tbl_usuarios_idtbl_usuarios LEFT JOIN tbl_users recibio ON recibio.tbl_usuarios_idtbl_usuarios = tbl_usuarios.idtbl_usuarios LEFT JOIN tbl_caja_chica ON tbl_caja_chica.uid_solicitud_recursos = tbl_solicitud_recursos.uid WHERE (tbl_solicitud_recursos.estatus = 'aprobada' OR tbl_solicitud_recursos.estatus = 'finalizada') AND tbl_solicitud_recursos.tipo = 'caja_chica' AND (tbl_solicitud_recursos.uid LIKE '%$buscar%') GROUP BY tbl_solicitud_recursos.idtbl_solicitud_recursos ORDER BY tbl_solicitud_recursos.idtbl_solicitud_recursos DESC " . $limit);
        }elseif($this->session->userdata('id') == 68) {
            $query = $this->db->query("SELECT tbl_solicitud_recursos.*, (SELECT SUM(tbl_caja_chica.monto) FROM tbl_caja_chica JOIN tbl_solicitud_recursos tsr ON tsr.uid = tbl_caja_chica.uid_solicitud_recursos WHERE tbl_caja_chica.uid_solicitud_recursos = tbl_solicitud_recursos.uid AND tbl_caja_chica.ciclo = tsr.ciclo) AS cantidad_comprobada, tuautor.nombre AS autor, TU.nombre AS nombre_aprobacion, tbl_usuarios.nombres AS nombre_recibe, tbl_usuarios.apellido_paterno, tbl_usuarios.apellido_materno, tbl_proyectos.numero_proyecto, tbl_proyectos.nombre_proyecto, recibio.idtbl_users AS usuario_recibio FROM tbl_solicitud_recursos JOIN tbl_users tuautor ON tuautor.idtbl_users = tbl_solicitud_recursos.tbl_users_idtbl_users_autor JOIN tbl_proyectos ON tbl_proyectos.idtbl_proyectos = tbl_solicitud_recursos.tbl_proyectos_idtbl_proyectos LEFT JOIN tbl_segmentos_proyecto ON tbl_segmentos_proyecto.idtbl_segmentos_proyecto = tbl_solicitud_recursos.tbl_segmentos_proyecto_idtbl_segmentos_proyecto LEFT JOIN tbl_users TU ON TU.idtbl_users = tbl_solicitud_recursos.tbl_users_idtbl_users_aprobacion LEFT JOIN tbl_usuarios ON tbl_usuarios.idtbl_usuarios = tbl_solicitud_recursos.tbl_usuarios_idtbl_usuarios LEFT JOIN tbl_users recibio ON recibio.tbl_usuarios_idtbl_usuarios = tbl_usuarios.idtbl_usuarios LEFT JOIN tbl_caja_chica ON tbl_caja_chica.uid_solicitud_recursos = tbl_solicitud_recursos.uid WHERE ((tbl_solicitud_recursos.estatus = 'aprobada' OR tbl_solicitud_recursos.estatus = 'finalizada') OR tbl_solicitud_recursos.tbl_users_idtbl_users_aprobacion = $user) AND tbl_solicitud_recursos.tipo = 'caja_chica' AND (tbl_solicitud_recursos.uid LIKE '%$buscar%') GROUP BY tbl_solicitud_recursos.idtbl_solicitud_recursos ORDER BY tbl_solicitud_recursos.idtbl_solicitud_recursos DESC " . $limit);
        }else {
            $query = $this->db->query("SELECT tbl_solicitud_recursos.*, (SELECT SUM(tbl_caja_chica.monto) FROM tbl_caja_chica JOIN tbl_solicitud_recursos tsr ON tsr.uid = tbl_caja_chica.uid_solicitud_recursos WHERE tbl_caja_chica.uid_solicitud_recursos = tbl_solicitud_recursos.uid AND tbl_caja_chica.ciclo = tsr.ciclo) AS cantidad_comprobada, tuautor.nombre AS autor, TU.nombre AS nombre_aprobacion, tbl_usuarios.nombres AS nombre_recibe, tbl_usuarios.apellido_paterno, tbl_usuarios.apellido_materno, tbl_proyectos.numero_proyecto, tbl_proyectos.nombre_proyecto, recibio.idtbl_users AS usuario_recibio FROM tbl_solicitud_recursos JOIN tbl_users tuautor ON tuautor.idtbl_users = tbl_solicitud_recursos.tbl_users_idtbl_users_autor JOIN tbl_proyectos ON tbl_proyectos.idtbl_proyectos = tbl_solicitud_recursos.tbl_proyectos_idtbl_proyectos LEFT JOIN tbl_segmentos_proyecto ON tbl_segmentos_proyecto.idtbl_segmentos_proyecto = tbl_solicitud_recursos.tbl_segmentos_proyecto_idtbl_segmentos_proyecto LEFT JOIN tbl_users TU ON TU.idtbl_users = tbl_solicitud_recursos.tbl_users_idtbl_users_aprobacion LEFT JOIN tbl_usuarios ON tbl_usuarios.idtbl_usuarios = tbl_solicitud_recursos.tbl_usuarios_idtbl_usuarios LEFT JOIN tbl_users recibio ON recibio.tbl_usuarios_idtbl_usuarios = tbl_usuarios.idtbl_usuarios LEFT JOIN tbl_caja_chica ON tbl_caja_chica.uid_solicitud_recursos = tbl_solicitud_recursos.uid WHERE recibio.idtbl_users = $user AND tbl_solicitud_recursos.tipo = 'caja_chica' AND (tbl_solicitud_recursos.uid LIKE '%%') GROUP BY tbl_solicitud_recursos.idtbl_solicitud_recursos ORDER BY tbl_solicitud_recursos.idtbl_solicitud_recursos DESC " . $limit);
        }
        return $query->result();
    }

	public function mostrarViaticos($buscar = '', $inicio = false, $cantidadRegistro = false)
    {
        $user = $this->session->userdata('id');
		$id_usuario = $this->session->userdata('id_usuario');
        $limit = '';
        if ($inicio !== false && $cantidadRegistro !== false) {
            $limit = 'LIMIT ' . $inicio . "," . $cantidadRegistro;
        }

		$permisos = $this->departamentos_model->permisos('viaticos');

        if ($permisos == 2) {
            $query = $this->db->query("SELECT tbl_solicitud_recursos.*, tuautor.nombre AS autor, TU.nombre AS nombre_aprobacion, tbl_usuarios.nombres AS nombre_recibe, tbl_usuarios.apellido_paterno, tbl_usuarios.apellido_materno, tbl_proyectos.numero_proyecto, tbl_proyectos.nombre_proyecto FROM tbl_solicitud_recursos JOIN tbl_users tuautor ON tuautor.idtbl_users = tbl_solicitud_recursos.tbl_users_idtbl_users_autor LEFT JOIN tbl_proyectos ON tbl_proyectos.idtbl_proyectos = tbl_solicitud_recursos.tbl_proyectos_idtbl_proyectos LEFT JOIN tbl_segmentos_proyecto ON tbl_segmentos_proyecto.idtbl_segmentos_proyecto = tbl_solicitud_recursos.tbl_segmentos_proyecto_idtbl_segmentos_proyecto LEFT JOIN tbl_users TU ON TU.idtbl_users = tbl_solicitud_recursos.tbl_users_idtbl_users_aprobacion LEFT JOIN tbl_usuarios ON tbl_usuarios.idtbl_usuarios = tbl_solicitud_recursos.tbl_usuarios_idtbl_usuarios LEFT JOIN tbl_caja_chica ON tbl_caja_chica.uid_solicitud_recursos = tbl_solicitud_recursos.uid WHERE (tbl_solicitud_recursos.tbl_users_idtbl_users_aprobacion = $user OR tbl_solicitud_recursos.tbl_users_idtbl_users_autor = $user OR tbl_solicitud_recursos.tbl_usuarios_idtbl_usuarios = $id_usuario) AND tbl_solicitud_recursos.tipo = 'viaticos' AND (tbl_solicitud_recursos.uid LIKE '%$buscar%') ORDER BY tbl_solicitud_recursos.idtbl_solicitud_recursos DESC " . $limit);
        } elseif ($this->session->userdata('tipo') == 17 || $this->session->userdata('tipo') == 19) {
            $query = $this->db->query("SELECT tbl_solicitud_recursos.*, tuautor.nombre AS autor, TU.nombre AS nombre_aprobacion, tbl_usuarios.nombres AS nombre_recibe, tbl_usuarios.apellido_paterno, tbl_usuarios.apellido_materno, tbl_proyectos.numero_proyecto, tbl_proyectos.nombre_proyecto FROM tbl_solicitud_recursos JOIN tbl_users tuautor ON tuautor.idtbl_users = tbl_solicitud_recursos.tbl_users_idtbl_users_autor LEFT JOIN tbl_proyectos ON tbl_proyectos.idtbl_proyectos = tbl_solicitud_recursos.tbl_proyectos_idtbl_proyectos LEFT JOIN tbl_segmentos_proyecto ON tbl_segmentos_proyecto.idtbl_segmentos_proyecto = tbl_solicitud_recursos.tbl_segmentos_proyecto_idtbl_segmentos_proyecto LEFT JOIN tbl_users TU ON TU.idtbl_users = tbl_solicitud_recursos.tbl_users_idtbl_users_aprobacion LEFT JOIN tbl_usuarios ON tbl_usuarios.idtbl_usuarios = tbl_solicitud_recursos.tbl_usuarios_idtbl_usuarios LEFT JOIN tbl_caja_chica ON tbl_caja_chica.uid_solicitud_recursos = tbl_solicitud_recursos.uid WHERE ((tbl_solicitud_recursos.pm_cargo = $user AND tbl_solicitud_recursos.tbl_users_idtbl_users_aprobacion IS NOT NULL) OR tbl_solicitud_recursos.tbl_users_idtbl_users_autor = $user) AND tbl_solicitud_recursos.tipo = 'viaticos' AND (tbl_solicitud_recursos.uid LIKE '%$buscar%') ORDER BY tbl_solicitud_recursos.idtbl_solicitud_recursos DESC " . $limit);
        } elseif($this->session->userdata('tipo') == 16) {
            $query = $this->db->query("SELECT tbl_solicitud_recursos.*, tuautor.nombre AS autor, TU.nombre AS nombre_aprobacion, tbl_usuarios.nombres AS nombre_recibe, tbl_usuarios.apellido_paterno, tbl_usuarios.apellido_materno, tbl_proyectos.numero_proyecto, tbl_proyectos.nombre_proyecto FROM tbl_solicitud_recursos JOIN tbl_users tuautor ON tuautor.idtbl_users = tbl_solicitud_recursos.tbl_users_idtbl_users_autor LEFT JOIN tbl_proyectos ON tbl_proyectos.idtbl_proyectos = tbl_solicitud_recursos.tbl_proyectos_idtbl_proyectos LEFT JOIN tbl_segmentos_proyecto ON tbl_segmentos_proyecto.idtbl_segmentos_proyecto = tbl_solicitud_recursos.tbl_segmentos_proyecto_idtbl_segmentos_proyecto LEFT JOIN tbl_users TU ON TU.idtbl_users = tbl_solicitud_recursos.tbl_users_idtbl_users_aprobacion LEFT JOIN tbl_usuarios ON tbl_usuarios.idtbl_usuarios = tbl_solicitud_recursos.tbl_usuarios_idtbl_usuarios LEFT JOIN tbl_caja_chica ON tbl_caja_chica.uid_solicitud_recursos = tbl_solicitud_recursos.uid WHERE tbl_solicitud_recursos.tipo = 'viaticos' AND (tbl_solicitud_recursos.estatus = 'aprobada_rh' OR tbl_solicitud_recursos.estatus = 'finalizada') AND (tbl_solicitud_recursos.uid LIKE '%$buscar%') ORDER BY tbl_solicitud_recursos.idtbl_solicitud_recursos DESC " . $limit);
        } elseif($this->session->userdata('tipo') == 5) {
            $query = $this->db->query("SELECT tbl_solicitud_recursos.*, tuautor.nombre AS autor, TU.nombre AS nombre_aprobacion, tbl_usuarios.nombres AS nombre_recibe, tbl_usuarios.apellido_paterno, tbl_usuarios.apellido_materno, tbl_proyectos.numero_proyecto, tbl_proyectos.nombre_proyecto FROM tbl_solicitud_recursos JOIN tbl_users tuautor ON tuautor.idtbl_users = tbl_solicitud_recursos.tbl_users_idtbl_users_autor LEFT JOIN tbl_proyectos ON tbl_proyectos.idtbl_proyectos = tbl_solicitud_recursos.tbl_proyectos_idtbl_proyectos LEFT JOIN tbl_segmentos_proyecto ON tbl_segmentos_proyecto.idtbl_segmentos_proyecto = tbl_solicitud_recursos.tbl_segmentos_proyecto_idtbl_segmentos_proyecto LEFT JOIN tbl_users TU ON TU.idtbl_users = tbl_solicitud_recursos.tbl_users_idtbl_users_aprobacion LEFT JOIN tbl_usuarios ON tbl_usuarios.idtbl_usuarios = tbl_solicitud_recursos.tbl_usuarios_idtbl_usuarios LEFT JOIN tbl_caja_chica ON tbl_caja_chica.uid_solicitud_recursos = tbl_solicitud_recursos.uid WHERE tbl_solicitud_recursos.tipo = 'viaticos' AND (tbl_solicitud_recursos.estatus = 'aprobada_pm' OR tbl_solicitud_recursos.estatus = 'aprobada_rh') AND (tbl_solicitud_recursos.uid LIKE '%$buscar%') ORDER BY tbl_solicitud_recursos.idtbl_solicitud_recursos DESC " . $limit);
        }else {
            $query = $this->db->query("SELECT tbl_solicitud_recursos.*, tuautor.nombre AS autor, TU.nombre AS nombre_aprobacion, tbl_usuarios.nombres AS nombre_recibe, tbl_usuarios.apellido_paterno, tbl_usuarios.apellido_materno, tbl_proyectos.numero_proyecto, tbl_proyectos.nombre_proyecto, recibio.idtbl_users AS usuario_recibio FROM tbl_solicitud_recursos JOIN tbl_users tuautor ON tuautor.idtbl_users = tbl_solicitud_recursos.tbl_users_idtbl_users_autor JOIN tbl_proyectos ON tbl_proyectos.idtbl_proyectos = tbl_solicitud_recursos.tbl_proyectos_idtbl_proyectos LEFT JOIN tbl_segmentos_proyecto ON tbl_segmentos_proyecto.idtbl_segmentos_proyecto = tbl_solicitud_recursos.tbl_segmentos_proyecto_idtbl_segmentos_proyecto LEFT JOIN tbl_users TU ON TU.idtbl_users = tbl_solicitud_recursos.tbl_users_idtbl_users_aprobacion LEFT JOIN tbl_usuarios ON tbl_usuarios.idtbl_usuarios = tbl_solicitud_recursos.tbl_usuarios_idtbl_usuarios LEFT JOIN tbl_users recibio ON recibio.tbl_usuarios_idtbl_usuarios = tbl_usuarios.idtbl_usuarios LEFT JOIN tbl_caja_chica ON tbl_caja_chica.uid_solicitud_recursos = tbl_solicitud_recursos.uid WHERE recibio.idtbl_users = $user AND tbl_solicitud_recursos.estatus = 'finalizada' AND (tbl_solicitud_recursos.uid LIKE '%%') ORDER BY tbl_solicitud_recursos.idtbl_solicitud_recursos DESC " . $limit);
        }
        return $query->result();
    }

	public function mostrarCajasPersonal($buscar = '', $inicio = false, $cantidadRegistro = false)
    {
        //$user = $this->input->post('usuario');
        $limit = '';
        if ($inicio !== false && $cantidadRegistro !== false) {
            $limit = 'LIMIT ' . $inicio . "," . $cantidadRegistro;
        }

		$permisos = $this->departamentos_model->permisos('caja_chica');

        $query = $this->db->query("SELECT tbl_usuarios.nombres, tbl_usuarios.apellido_paterno, tbl_usuarios.apellido_materno, tbl_usuarios.uid FROM tbl_solicitud_recursos JOIN tbl_caja_chica ON tbl_caja_chica.uid_solicitud_recursos = tbl_solicitud_recursos.uid JOIN tbl_usuarios ON tbl_usuarios.idtbl_usuarios = tbl_solicitud_recursos.tbl_usuarios_idtbl_usuarios WHERE (tbl_solicitud_recursos.uid LIKE '%$buscar%') GROUP BY tbl_usuarios.idtbl_usuarios ORDER BY tbl_solicitud_recursos.idtbl_solicitud_recursos DESC " . $limit);
        
        return $query->result();
    }

	public function registro_caja_chica($uid){ 
        $this->db->trans_begin();
        $this->db->set('fecha_compra', $this->input->post('fecha_compra'));
        $this->db->set('uid', $uid);
        $this->db->set('comprobante', $this->input->post('comprobante'));
        $this->db->set('tipo', $this->input->post('tipo'));
        $this->db->set('descripcion',  $this->input->post('descripcion'));
        $this->db->set('monto', $this->input->post('costo'));
        $this->db->set('uid_solicitud_recursos', $this->input->post("uid") != "" ? $this->input->post("uid") : NULL );
		$this->db->set('ciclo', $this->input->post("ciclo") != "" ? $this->input->post("ciclo") : NULL);
		$this->db->set('reembolsado', $this->input->post('reembolsado'));
		if($this->session->userdata('tipo') == 5){
			$this->db->set('confirmacion', 1);
		}
        $this->db->set('tbl_users_idtbl_users_aprobacion', $this->input->post("persona_autorizacion") != "" ? $this->input->post("persona_autorizacion") : NULL);
        $this->db->set('tbl_proyectos_idtbl_proyectos', $this->input->post("idtbl_proyectos"));
        if($this->input->post('idtbl_caja_chica') != ""){
            $this->db->where('idtbl_caja_chica', $this->input->post('idtbl_caja_chica'));
            $this->db->update('tbl_caja_chica');
        }else{
            $this->db->insert('tbl_caja_chica');
        }
        if ($this->db->trans_status() === FALSE) {
            $this->db->trans_rollback();
            return false;
        } else {
            $this->db->trans_commit();
            return true;
        }
    }

	//Guardar imagen de firma
    public function guardarFirma($parametros)
    {
		$this->db->set($parametros);
		$this->db->where('uid', $this->input->post('uid'));
        $this->db->update('tbl_solicitud_recursos');
    }

	//Función para traer detalle de un recurso por uid
    public function detalle_recurso($uid, $tipo)
    {
		if($tipo == 'viaticos'){
			$query = $this->db->query("SELECT tbl_solicitud_recursos.*, tus.nombre AS autor, user_aprobacion.nombre AS nombre_aprobacion, tbl_proyectos.nombre_proyecto, tbl_proyectos.numero_proyecto, tbl_segmentos_proyecto.segmento, tbl_usuarios.nombres AS nombre_recibe, tbl_usuarios.apellido_paterno, tbl_usuarios.apellido_materno FROM tbl_solicitud_recursos LEFT JOIN tbl_users tus ON tus.idtbl_users = tbl_solicitud_recursos.tbl_users_idtbl_users_autor LEFT JOIN tbl_users user_aprobacion ON user_aprobacion.idtbl_users = tbl_solicitud_recursos.tbl_users_idtbl_users_aprobacion LEFT JOIN tbl_proyectos ON tbl_proyectos.idtbl_proyectos = tbl_solicitud_recursos.tbl_proyectos_idtbl_proyectos LEFT JOIN tbl_segmentos_proyecto ON tbl_segmentos_proyecto.idtbl_segmentos_proyecto = tbl_solicitud_recursos.tbl_segmentos_proyecto_idtbl_segmentos_proyecto LEFT JOIN tbl_usuarios ON tbl_usuarios.idtbl_usuarios = tbl_solicitud_recursos.tbl_usuarios_idtbl_usuarios WHERE tbl_solicitud_recursos.uid = '$uid' ");

		}else{
        	$query = $this->db->query("SELECT tbl_solicitud_recursos.*, tus.nombre AS autor, user_aprobacion.nombre AS nombre_aprobacion, tbl_proyectos.nombre_proyecto, tbl_proyectos.numero_proyecto, tbl_segmentos_proyecto.segmento, tbl_usuarios.nombres AS nombre_recibe, tbl_usuarios.apellido_paterno, tbl_usuarios.apellido_materno FROM tbl_solicitud_recursos LEFT JOIN tbl_users tus ON tus.idtbl_users = tbl_solicitud_recursos.tbl_users_idtbl_users_autor LEFT JOIN tbl_users user_aprobacion ON user_aprobacion.idtbl_users = tbl_solicitud_recursos.tbl_users_idtbl_users_aprobacion LEFT JOIN tbl_proyectos ON tbl_proyectos.idtbl_proyectos = tbl_solicitud_recursos.tbl_proyectos_idtbl_proyectos LEFT JOIN tbl_segmentos_proyecto ON tbl_segmentos_proyecto.idtbl_segmentos_proyecto = tbl_solicitud_recursos.tbl_segmentos_proyecto_idtbl_segmentos_proyecto LEFT JOIN tbl_usuarios ON tbl_usuarios.idtbl_usuarios = tbl_solicitud_recursos.tbl_usuarios_idtbl_usuarios WHERE tbl_solicitud_recursos.uid = '$uid' ");
		}
        return $query->result();
    }

	//Función para aprobar caja chica
    public function aprobar_caja_chica($proceso)
    {
		if($this->input->post('tipo') == 'viaticos'){
			if($proceso != 'finalizar'){
				if($this->input->post('estatus') == 'aprobada'){
					$data = array(
						'estatus' => 'aprobada_pm',
						'fecha_aprobacion_pm' => date('Y-m-d H:i:s')
					);

					foreach($this->input->post('iddtl_recurso') AS $key => $value){
						if($this->input->post('total')[$key] != $this->input->post('total_anterior')[$key]){
							
							if($this->session->userdata('tipo') == 5){
								$transporte_modificacion = 'transporte_rh';
								$hospedaje_modificacion = 'hospedaje_rh';
								$casetas_modificacion = 'casetas_rh';
								$alimentos_modificacion = 'alimentos_rh';
							}elseif($this->session->userdata('tipo') == 17 || $this->session->userdata('tipo') == 19){
								$transporte_modificacion = 'transporte_pm';
								$hospedaje_modificacion = 'hospedaje_pm';
								$casetas_modificacion = 'casetas_pm';
								$alimentos_modificacion = 'alimentos_pm';
							}else{
								$transporte_modificacion = 'transporte_jefe';
								$hospedaje_modificacion = 'hospedaje_jefe';
								$casetas_modificacion = 'casetas_jefe';
								$alimentos_modificacion = 'alimentos_jefe';
							}
							$this->db->set('tbl_solicitud_recursos_idtbl_solicitud_recursos', $this->input->post('idtbl_recurso')[$key]);
							$this->db->set('transporte', $this->input->post('transporte')[$key]);
							$this->db->set('hospedaje', $this->input->post('hospedaje')[$key]);
							$this->db->set('casetas', $this->input->post('casetas')[$key]);
							$this->db->set('alimentos', $this->input->post('alimentos')[$key]);
							$this->db->set('total', $this->input->post('total')[$key]);
							$this->db->set($transporte_modificacion, $this->input->post('transporte_anterior')[$key]);
							$this->db->set($hospedaje_modificacion, $this->input->post('hospedaje_anterior')[$key]);
							$this->db->set($casetas_modificacion, $this->input->post('casetas_anterior')[$key]);
							$this->db->set($alimentos_modificacion, $this->input->post('alimentos_anterior')[$key]);
							
							$this->db->where('iddtl_solicitud_recursos', $this->input->post('iddtl_recurso')[$key]);
							$this->db->update('dtl_solicitud_recursos');

						}
					}
				}elseif($this->input->post('estatus') == 'aprobada_pm' && $this->session->userdata('tipo') == 5){
					
					$data = array(
						'estatus' => 'aprobada_rh',
						'tbl_users_idtbl_users_rh' => $this->session->userdata('id'),
						'fecha_aprobacion_rh' => date('Y-m-d H:i:s')
					);

					foreach($this->input->post('iddtl_recurso') AS $key => $value){
						if($this->input->post('total')[$key] != $this->input->post('total_anterior')[$key]){
							
							if($this->session->userdata('tipo') == 5){
								$transporte_modificacion = 'transporte_rh';
								$hospedaje_modificacion = 'hospedaje_rh';
								$casetas_modificacion = 'casetas_rh';
								$alimentos_modificacion = 'alimentos_rh';
							}elseif($this->session->userdata('tipo') == 17 || $this->session->userdata('tipo') == 19){
								$transporte_modificacion = 'transporte_pm';
								$hospedaje_modificacion = 'hospedaje_pm';
								$casetas_modificacion = 'casetas_pm';
								$alimentos_modificacion = 'alimentos_pm';
							}else{
								$transporte_modificacion = 'transporte_jefe';
								$hospedaje_modificacion = 'hospedaje_jefe';
								$casetas_modificacion = 'casetas_jefe';
								$alimentos_modificacion = 'alimentos_jefe';
							}

							$this->db->set('tbl_solicitud_recursos_idtbl_solicitud_recursos', $this->input->post('idtbl_recurso')[$key]);
							$this->db->set('transporte', $this->input->post('transporte')[$key]);
							$this->db->set('hospedaje', $this->input->post('hospedaje')[$key]);
							$this->db->set('casetas', $this->input->post('casetas')[$key]);
							$this->db->set('alimentos', $this->input->post('alimentos')[$key]);
							$this->db->set('total', $this->input->post('total')[$key]);
							$this->db->set($transporte_modificacion, $this->input->post('transporte_anterior')[$key]);
							$this->db->set($hospedaje_modificacion, $this->input->post('hospedaje_anterior')[$key]);
							$this->db->set($casetas_modificacion, $this->input->post('casetas_anterior')[$key]);
							$this->db->set($alimentos_modificacion, $this->input->post('alimentos_anterior')[$key]);
							
							$this->db->where('iddtl_solicitud_recursos', $this->input->post('iddtl_recurso')[$key]);
							$this->db->update('dtl_solicitud_recursos');

						}
					}
					
				}elseif($this->input->post('estatus') == 'aprobada_rh' && $this->session->userdata('tipo') == 16){
					$data = array(
						'estatus' => 'finalizada',
						'tbl_users_idtbl_users_contabilidad' => $this->session->userdata('id'),
						'fecha_aprobacion_contabilidad' => date('Y-m-d H:i:s')
					);
				}else{
					$data = array(
						'estatus' => 'aprobada',
						'fecha_aprobacion' => date('Y-m-d H:i:s')
					);

					foreach($this->input->post('iddtl_recurso') AS $key => $value){
						if($this->input->post('total')[$key] != $this->input->post('total_anterior')[$key]){
							
							if($this->session->userdata('tipo') == 5){
								$transporte_modificacion = 'transporte_rh';
								$hospedaje_modificacion = 'hospedaje_rh';
								$casetas_modificacion = 'casetas_rh';
								$alimentos_modificacion = 'alimentos_rh';
							}elseif($this->session->userdata('tipo') == 17 || $this->session->userdata('tipo') == 19){
								$transporte_modificacion = 'transporte_pm';
								$hospedaje_modificacion = 'hospedaje_pm';
								$casetas_modificacion = 'casetas_pm';
								$alimentos_modificacion = 'alimentos_pm';
							}else{
								$transporte_modificacion = 'transporte_jefe';
								$hospedaje_modificacion = 'hospedaje_jefe';
								$casetas_modificacion = 'casetas_jefe';
								$alimentos_modificacion = 'alimentos_jefe';
							}

							$this->db->set('tbl_solicitud_recursos_idtbl_solicitud_recursos', $this->input->post('idtbl_recurso')[$key]);
							$this->db->set('transporte', $this->input->post('transporte')[$key]);
							$this->db->set('hospedaje', $this->input->post('hospedaje')[$key]);
							$this->db->set('casetas', $this->input->post('casetas')[$key]);
							$this->db->set('alimentos', $this->input->post('alimentos')[$key]);
							$this->db->set('total', $this->input->post('total')[$key]);
							$this->db->set($transporte_modificacion, $this->input->post('transporte_anterior')[$key]);
							$this->db->set($hospedaje_modificacion, $this->input->post('hospedaje_anterior')[$key]);
							$this->db->set($casetas_modificacion, $this->input->post('casetas_anterior')[$key]);
							$this->db->set($alimentos_modificacion, $this->input->post('alimentos_anterior')[$key]);
							
							$this->db->where('iddtl_solicitud_recursos', $this->input->post('iddtl_recurso')[$key]);
							$this->db->update('dtl_solicitud_recursos');

						}
					}
				}
			}else{
				$data = array(
					'estatus' => 'finalizada',
					'tbl_users_idtbl_users_contabilidad' => $this->session->userdata('id'),
					'fecha_aprobacion_contabilidad' => date('Y-m-d H:i:s')
				);
			}
	}else{
		if($proceso != 'finalizar'){
			if($this->input->post('estatus') == 'aprobada'){
				$data = array(
					'estatus' => 'aprobada_pm',
					'fecha_aprobacion_pm' => date('Y-m-d H:i:s')
				);

			
			}elseif($this->input->post('estatus') == 'aprobada_pm' && $this->session->userdata('tipo') == 5){
				
				$data = array(
					'estatus' => 'aprobada_rh',
					'tbl_users_idtbl_users_rh' => $this->session->userdata('id'),
					'fecha_aprobacion_rh' => date('Y-m-d H:i:s')
				);

				
				
			}elseif($this->input->post('estatus') == 'aprobada_rh' && $this->session->userdata('tipo') == 16){
				$data = array(
					'estatus' => 'finalizada',
					'tbl_users_idtbl_users_contabilidad' => $this->session->userdata('id'),
					'fecha_aprobacion_contabilidad' => date('Y-m-d H:i:s')
				);
			}else{
				$data = array(
					'estatus' => 'aprobada',
					'fecha_aprobacion' => date('Y-m-d H:i:s')
				);

			}
		}else{
			$data = array(
				'estatus' => 'finalizada',
				'tbl_users_idtbl_users_contabilidad' => $this->session->userdata('id'),
				'fecha_aprobacion_contabilidad' => date('Y-m-d H:i:s')
			);
		}
	}
        $this->db->set($data);
        $this->db->where('uid', $this->input->post('uid'));
        $result = $this->db->update('tbl_solicitud_recursos');

        return  $result;
    }

	//Función para regresar viaticos
    public function regresar_viaticos()
    {
		
		$data = array(
			'estatus' => 'aprobada',
			'fecha_aprobacion_pm' => NULL,
			'comentarios_regreso' => $this->input->post('comentarios')
		);
			
		
        $this->db->set($data);
        $this->db->where('uid', $this->input->post('uid'));
        $result = $this->db->update('tbl_solicitud_recursos');

        return  $result;
    }

	public function nueva_solicitud_caja($uid, $estatus) {
		
		
		if ($this->input->post('segmento') === null || $this->input->post('segmento') === '') {
			$segmento = null;
		} else {
			$segmento = $this->input->post('segmento');
		}	
		$data = array(
			'fecha_creacion' => date('Y-m-d H:i:s'),
			'estatus' => $estatus,
			'uid' => $uid,
			'tbl_users_idtbl_users_autor' => $this->session->userdata('id'),
			'tbl_proyectos_idtbl_proyectos' => $this->input->post('proyecto'),
			'tbl_segmentos_proyecto_idtbl_segmentos_proyecto' => $segmento,
			'tbl_users_idtbl_users_aprobacion' => $this->input->post('persona_autorizacion'),
			'tbl_usuarios_idtbl_usuarios' => $this->input->post('recibe'),
			'cantidad' => $this->input->post('cantidad'),
			'motivo' => $this->input->post('motivo'),
			'tipo' => $this->input->post('tipo'),
			'pm_cargo' => isset($_POST['pm_cargo']) ? $this->input->post('pm_cargo') : NULL,
			'ubicacion' => isset($_POST['mercado']) ? $this->input->post('mercado') : NULL,
			'ciclo' => $this->input->post('tipo') == 'caja_chica' ? 0 : NULL
		);	

		$this->db->insert('tbl_solicitud_recursos', $data);
		

		if ($this->db->trans_status() === FALSE) {
			$this->db->trans_rollback();
			return false;
		} else {
			$this->db->trans_commit();
			return true;
		}
	}

	public function nueva_solicitud_viaticos($uid, $estatus) {
			
		if (!isset($_POST['segmento']) && ($this->input->post('segmento') === null || $this->input->post('segmento') === '')) {
			$segmento = NULL;
		} else {
			$segmento = $this->input->post('segmento');
		}	
		$data = array(
			'fecha_creacion' => date('Y-m-d H:i:s'),
			'estatus' => $estatus,
			'uid' => $uid,
			'tbl_users_idtbl_users_autor' => $this->session->userdata('id'),
			'tbl_proyectos_idtbl_proyectos' => isset($_POST['proyecto']) ? $this->input->post('proyecto') : NULL,
			'tbl_segmentos_proyecto_idtbl_segmentos_proyecto' => $segmento,
			'tbl_users_idtbl_users_aprobacion' => $this->input->post('persona_autorizacion'),
			'tbl_usuarios_idtbl_usuarios' => $this->input->post('recibe'),
			'cantidad' => $this->input->post('cantidad'),
			'motivo' => $this->input->post('motivo'),
			'pm_cargo' => $this->input->post('pm_cargo'),
			'tipo' => 'viaticos',
			'tipo_viatico' => $this->input->post('tipo_viatico'),
			'ubicacion' => $this->input->post('mercado'),
			'tipo_recibe' => $this->input->post('tipo_recibe')
		);	

		$this->db->insert('tbl_solicitud_recursos', $data);

		$insert = $this->db->insert_id();
		
		if($this->input->post('tipo_viatico') == 'traslado'){
			if(isset($_POST['idtbl_usuarios'][0])){
				foreach ($this->input->post('idtbl_usuarios') as $key => $value) {
					$datadtl = array(
						'tbl_solicitud_recursos_idtbl_solicitud_recursos' => $insert,
						'tbl_usuarios_idtbl_usuarios' => $this->input->post('idtbl_usuarios')[$key],
						'transporte' => $this->input->post('transporte')[$key],
						'hospedaje' => $this->input->post('hospedaje')[$key],
						'casetas' => $this->input->post('casetas')[$key],
						'alimentos' => $this->input->post('alimentos')[$key],
						'total' => $this->input->post('total')[$key],
						'observaciones' => $this->input->post('observaciones')[$key],
						'lunes' => isset($_POST['ch1'][$key]) && $this->input->post('ch1')[$key] == 1 ? 1 : 0,
						'martes' => isset($_POST['ch2'][$key]) && $this->input->post('ch2')[$key] == 1 ? 1 : 0,
						'miercoles' => isset($_POST['ch3'][$key]) && $this->input->post('ch3')[$key] == 1 ? 1 : 0,
						'jueves' => isset($_POST['ch4'][$key]) && $this->input->post('ch4')[$key] == 1 ? 1 : 0,
						'viernes' => isset($_POST['ch5'][$key]) && $this->input->post('ch5')[$key] == 1 ? 1 : 0,
						'sabado' => isset($_POST['ch6'][$key]) && $this->input->post('ch6')[$key] == 1 ? 1 : 0,
						'domingo' => isset($_POST['ch7'][$key]) && $this->input->post('ch7')[$key] == 1 ? 1 : 0,
						'fechas' => $this->input->post('fechas')[$key]
					);	
					$this->db->insert('dtl_solicitud_recursos', $datadtl);				
				}
			}else{
				$datadtl = array(
					'tbl_solicitud_recursos_idtbl_solicitud_recursos' => $insert,
					'tbl_usuarios_idtbl_usuarios' => $this->input->post('recibe'),
					'transporte' => $this->input->post('transporte')[0],
					'hospedaje' => $this->input->post('hospedaje')[0],
					'casetas' => $this->input->post('casetas')[0],
					'alimentos' => $this->input->post('alimentos')[0],
					'total' => $this->input->post('total'),
					'observaciones' => $this->input->post('observaciones'),
					'lunes' => isset($_POST['ch1']) && $this->input->post('ch1') == 1 ? 1 : 0,
					'martes' => isset($_POST['ch2']) && $this->input->post('ch2') == 1 ? 1 : 0,
					'miercoles' => isset($_POST['ch3']) && $this->input->post('ch3') == 1 ? 1 : 0,
					'jueves' => isset($_POST['ch4']) && $this->input->post('ch4') == 1 ? 1 : 0,
					'viernes' => isset($_POST['ch5']) && $this->input->post('ch5') == 1 ? 1 : 0,
					'sabado' => isset($_POST['ch6']) && $this->input->post('ch6') == 1 ? 1 : 0,
					'domingo' => isset($_POST['ch7']) && $this->input->post('ch7') == 1 ? 1 : 0,
					'fechas' => $this->input->post('fechas')
				);
				$this->db->insert('dtl_solicitud_recursos', $datadtl);	
			}

			
			
		}else{
			if(isset($_POST['idtbl_usuarios'])){
				foreach ($this->input->post('idtbl_usuarios') as $key => $value) {
					$datadtl = array(
						'tbl_solicitud_recursos_idtbl_solicitud_recursos' => $insert,
						'tbl_usuarios_idtbl_usuarios' => $this->input->post('idtbl_usuarios')[$key],
						'dias_laborar' => $this->input->post('dias_laborar')[$key],
						'cantidad_dia' => $this->input->post('cantidad_dia')[$key],
						'dias_descontar' => $this->input->post('dias_descontar')[$key],
						'descuento' => $this->input->post('descuento')[$key],
						'total' => $this->input->post('total')[$key],
						'observaciones' => $this->input->post('observaciones')[$key],
						'lunes' => isset($_POST['ch1'][$key]) && $this->input->post('ch1')[$key] == 1 ? 1 : 0,
						'martes' => isset($_POST['ch2'][$key]) && $this->input->post('ch2')[$key] == 1 ? 1 : 0,
						'miercoles' => isset($_POST['ch3'][$key]) && $this->input->post('ch3')[$key] == 1 ? 1 : 0,
						'jueves' => isset($_POST['ch4'][$key]) && $this->input->post('ch4')[$key] == 1 ? 1 : 0,
						'viernes' => isset($_POST['ch5'][$key]) && $this->input->post('ch5')[$key] == 1 ? 1 : 0,
						'sabado' => isset($_POST['ch6'][$key]) && $this->input->post('ch6')[$key] == 1 ? 1 : 0,
						'domingo' => isset($_POST['ch7'][$key]) && $this->input->post('ch7')[$key] == 1 ? 1 : 0,
						'fechas' => $this->input->post('fechas')[$key],
						'lunes_descuento' => isset($_POST['ch8'][$key]) && $this->input->post('ch8')[$key] == 1 ? 1 : 0,
						'martes_descuento' => isset($_POST['ch9'][$key]) && $this->input->post('ch9')[$key] == 1 ? 1 : 0,
						'miercoles_descuento' => isset($_POST['ch10'][$key]) && $this->input->post('ch10')[$key] == 1 ? 1 : 0,
						'jueves_descuento' => isset($_POST['ch11'][$key]) && $this->input->post('ch11')[$key] == 1 ? 1 : 0,
						'viernes_descuento' => isset($_POST['ch12'][$key]) && $this->input->post('ch12')[$key] == 1 ? 1 : 0,
						'sabado_descuento' => isset($_POST['ch13'][$key]) && $this->input->post('ch13')[$key] == 1 ? 1 : 0,
						'domingo_descuento' => isset($_POST['ch14'][$key]) && $this->input->post('ch14')[$key] == 1 ? 1 : 0
					);
					$this->db->insert('dtl_solicitud_recursos', $datadtl);
				}
			}else{
				$datadtl = array(
					'tbl_solicitud_recursos_idtbl_solicitud_recursos' => $insert,
					'tbl_usuarios_idtbl_usuarios' => $this->input->post('recibe'),
					'dias_laborar' => $this->input->post('dias_laborar')[0],
					'cantidad_dia' => $this->input->post('cantidad_dia')[0],
					'dias_descontar' => $this->input->post('dias_descontar')[0],
					'descuento' => $this->input->post('descuento')[0],
					'total' => $this->input->post('total')[0],
					'observaciones' => $this->input->post('observaciones')[0],
					'lunes' => isset($_POST['ch1']) && $this->input->post('ch1') == 1 ? 1 : 0,
					'martes' => isset($_POST['ch2']) && $this->input->post('ch2') == 1 ? 1 : 0,
					'miercoles' => isset($_POST['ch3']) && $this->input->post('ch3') == 1 ? 1 : 0,
					'jueves' => isset($_POST['ch4']) && $this->input->post('ch4') == 1 ? 1 : 0,
					'viernes' => isset($_POST['ch5']) && $this->input->post('ch5') == 1 ? 1 : 0,
					'sabado' => isset($_POST['ch6']) && $this->input->post('ch6') == 1 ? 1 : 0,
					'domingo' => isset($_POST['ch7']) && $this->input->post('ch7') == 1 ? 1 : 0,
					'fechas' => $this->input->post('fechas'),
					'lunes_descuento' => isset($_POST['ch8']) && $this->input->post('ch8') == 1 ? 1 : 0,
					'martes_descuento' => isset($_POST['ch9']) && $this->input->post('ch9') == 1 ? 1 : 0,
					'miercoles_descuento' => isset($_POST['ch10']) && $this->input->post('ch10') == 1 ? 1 : 0,
					'jueves_descuento' => isset($_POST['ch11']) && $this->input->post('ch11') == 1 ? 1 : 0,
					'viernes_descuento' => isset($_POST['ch12']) && $this->input->post('ch12') == 1 ? 1 : 0,
					'sabado_descuento' => isset($_POST['ch13']) && $this->input->post('ch13') == 1 ? 1 : 0,
					'domingo_descuento' => isset($_POST['ch14']) && $this->input->post('ch14') == 1 ? 1 : 0
				);
				$this->db->insert('dtl_solicitud_recursos', $datadtl);
			}
			
		}
		

		if ($this->db->trans_status() === FALSE) {
			$this->db->trans_rollback();
			return false;
		} else {
			$this->db->trans_commit();
			return true;
		}
	}

	public function nueva_solicitud($uid, $estatus) {
		if(isset($_POST['uid'])) {
			$uid_orden_servicio = $_POST['uid'];
		}
		else {
			$uid_orden_servicio = NULL;
		}
		if(isset($_POST['eco'])) {
			$eco = $_POST['eco'];
		}
		else {
			$eco = NULL;
		}
		$this->db->trans_begin();
		$contratista = $this->input->post('contratista');
		$supervisor = $this->input->post('supervisor');
		if ($this->session->userdata('tipo') == 11) {
			$user_co = $this->session->userdata('id');
		} else {
			$user_co = null;
		}
		if ($this->input->post('segmento') === null || $this->input->post('segmento') === '') {
			$segmento = null;
		} else {
			$segmento = $this->input->post('segmento');
		}		
		if($this->input->post('tipo_producto') == 'Almacen General'){
			if($this->input->post('id_cliente') == 47 || $this->input->post('id_cliente') == 11 || $this->input->post('id_cliente') == 28){
				$data = array(
					'estatus_solicitud' => $estatus,
					'uid' => $uid,
					'comentarios' => $this->input->post('comentarios'),
					'tipo_producto' => $this->input->post('tipo_producto'),
					'tbl_usuarios_idtbl_usuarios' => $this->input->post('usuario'),
					'tbl_users_idtbl_users_autor' => $this->session->userdata('id'),
					'tbl_users_idtbl_users_aprobacion' => $this->input->post('persona_autorizacion'),
					'tbl_proyectos_idtbl_proyectos' => $this->input->post('proyecto'),
					'tbl_contratistas_idtbl_contratistas' => $contratista,
					'tbl_usuarios_idtbl_usuarios_supervisor' => $supervisor,
					'tbl_users_idtbl_users_co' => $user_co,
					'tbl_segmentos_proyecto_idtbl_segmentos_proyecto' => $segmento,
					'uid_orden_servicio' => $uid_orden_servicio,
					'uid_almacen_seleccionado' => $this->input->post('uid_almacen'),
					'dtl_almacen_iddtl_almacen' => $eco,
					'cleanup' => $this->input->post('cleanup'),
					'tbl_mantenimientos_idtbl_mantenimientos' => $this->input->post('mantenimiento') == NULL ?  NULL : $this->input->post('mantenimiento'),
					'activo_fijo' => 0,
					'tbl_hoja_asignacion_idtbl_hoja_asignacion' => isset($_POST['id_hoja_asignacion']) && $this->input->post('id_hoja_asignacion') != NULL ? $this->input->post('id_hoja_asignacion') : NULL					
				);
			}else{
				$data = array(
					'estatus_solicitud' => $estatus,
					'uid' => $uid,
					'comentarios' => $this->input->post('comentarios'),
					'tipo_producto' => $this->input->post('tipo_producto'),
					'tbl_usuarios_idtbl_usuarios' => $this->input->post('usuario'),
					'tbl_users_idtbl_users_autor' => $this->session->userdata('id'),
					'tbl_users_idtbl_users_aprobacion' => $this->input->post('persona_autorizacion'),
					'tbl_proyectos_idtbl_proyectos' => $this->input->post('proyecto'),
					'tbl_contratistas_idtbl_contratistas' => $contratista,
					'tbl_usuarios_idtbl_usuarios_supervisor' => $supervisor,
					'tbl_users_idtbl_users_co' => $user_co,
					'tbl_segmentos_proyecto_idtbl_segmentos_proyecto' => $segmento,
					'uid_orden_servicio' => $uid_orden_servicio,
					'dtl_almacen_iddtl_almacen' => $eco,
					'cleanup' => $this->input->post('cleanup'),
					'tbl_mantenimientos_idtbl_mantenimientos' => $this->input->post('mantenimiento') == NULL ?  NULL : $this->input->post('mantenimiento'),
					'activo_fijo' => 0,
					'tbl_hoja_asignacion_idtbl_hoja_asignacion' => isset($_POST['id_hoja_asignacion']) && $this->input->post('id_hoja_asignacion') != NULL ? $this->input->post('id_hoja_asignacion') : NULL			
				);
			}
		}else{
			$data = array(
				'estatus_solicitud' => $estatus,
				'uid' => $uid,
				'comentarios' => $this->input->post('comentarios'),
				'tipo_producto' => $this->input->post('tipo_producto'),
				'tbl_usuarios_idtbl_usuarios' => $this->input->post('usuario'),
				'tbl_users_idtbl_users_autor' => $this->session->userdata('id'),
				'tbl_users_idtbl_users_aprobacion' => $this->input->post('persona_autorizacion'),
				'tbl_proyectos_idtbl_proyectos' => $this->input->post('proyecto'),
				'tbl_contratistas_idtbl_contratistas' => $contratista,
				'tbl_usuarios_idtbl_usuarios_supervisor' => $supervisor,
				'tbl_users_idtbl_users_co' => $user_co,
				'tbl_segmentos_proyecto_idtbl_segmentos_proyecto' => $segmento,
				'uid_orden_servicio' => $uid_orden_servicio,
				'dtl_almacen_iddtl_almacen' => $eco,
				'tbl_mantenimientos_idtbl_mantenimientos' => $this->input->post('mantenimiento') == NULL ?  NULL : $this->input->post('mantenimiento'),
				'tbl_tramites_vehiculares_idtbl_tramites_vehiculares' => $this->input->post('idtbl_tramites_vehiculares') == NULL ? NULL : $this->input->post('idtbl_tramites_vehiculares'),
				'activo_fijo' => 0,
				'tbl_hoja_asignacion_idtbl_hoja_asignacion' => isset($_POST['id_hoja_asignacion']) && $this->input->post('id_hoja_asignacion') != NULL ? $this->input->post('id_hoja_asignacion') : NULL
			);
		}
		$this->db->insert('tbl_solicitud_material', $data);
		$insert_id = $this->db->insert_id();
		$activos_fijos = 0;
		foreach ($this->input->post('producto') as $key => $value) {			
			if ($value != 0) {
				$data = array(
					'tbl_solicitud_material_idtbl_solicitud_material' => $insert_id,
					'tbl_catalogo_idtbl_catalogo' => $value,					
					'cantidad' => $this->input->post('cantidad')[$key],
					'observaciones' => $this->input->post('observaciones')[$key],
					'sitio' => @$this->input->post('sitio')[$key],								
					'aditamento' => @$this->input->post('aditamento')[$key]
					//'dtl_almacen_iddtl_almacen' => $_POST['tipo_producto'] == 'Control Vehicular' ? $this->input->post('iddtl_almacen') : NULL
				);
				/*if($this->session->userdata("tipo") != 3 && $this->session->userdata("tipo") != 15){
					if($this->input->post('categoria')[$key] == 16){
						$activos_fijos++;
					}				
			}*/
			if(isset($_POST['iddtl_hoja_asignacion'][$key]) && $this->input->post('iddtl_hoja_asignacion')[$key] != NULL){
				$this->db->set('entregado', 'entregado+' . $this->input->post('cantidad')[$key], FALSE);
				$this->db->where('iddtl_hoja_asignacion', $this->input->post('iddtl_hoja_asignacion')[$key]);
				$this->db->update('dtl_hoja_asignacion');
			}
		}
			if ($this->input->post('cantidad')[$key] != 0) {
				//Se registra la entrada
				$this->db->insert('dtl_solicitud_material', $data);
			}			
		}

		if($activos_fijos > 0){
			$this->db->where('idtbl_solicitud_material', $insert_id);
			$this->db->set('activo_fijo', 1);
			$this->db->update('tbl_solicitud_material');
		}

		if($this->input->post('idtbl_tramites_vehiculares') != NULL){
			$data = array(
				'estatus' => 'SRCV'
			);
			$this->db->where('tbl_tramites_vehiculares_idtbl_tramites_vehiculares', $this->input->post('idtbl_tramites_vehiculares'));
			$this->db->update('dtl_servicio', $data);	
		}

		if ($this->db->trans_status() === FALSE) {
			$this->db->trans_rollback();
			return false;
		} else {
			$this->db->trans_commit();
			return true;
		}
	}

	public function guardar_hoja_asignacion($uid, $estatus) {
		
		$this->db->trans_begin();
		$contratista = $this->input->post('contratista');
		$supervisor = $this->input->post('supervisor');
		if ($this->session->userdata('tipo') == 11) {
			$user_co = $this->session->userdata('id');
			$fecha = date('Y-m-d H:i:s');
		} else {
			$user_co = null;
			$fecha = null;
		}
		if ($this->input->post('segmento') === null || $this->input->post('segmento') === '') {
			$segmento = null;
		} else {
			$segmento = $this->input->post('segmento');
		}		
		
		if($this->input->post('tipo_hoja') == 'contratista'){
			$data = array(
				'estatus' => $estatus,
				'uid' => $uid,
				'fecha_creacion' => date('Y-m-d H:i:s'),
				//'tipo_producto' => $this->input->post('tipo_producto'),
				//'tbl_usuarios_idtbl_usuarios' => $this->id_usuario($this->input->post('recibe')),
				'tbl_users_idtbl_users_autor' => $this->session->userdata('id'),
				//'tbl_users_idtbl_users_aprobacion' => $this->input->post('persona_autorizacion'),
				'tbl_proyectos_idtbl_proyectos' => $this->input->post('proyecto'),
				'tbl_contratistas_idtbl_contratistas' => $this->input->post('recibe'),
				//'tbl_usuarios_idtbl_usuarios_supervisor' => $supervisor,
				'tbl_users_idtbl_users_co' => $user_co,
				'fecha_aprobacion_co' => $fecha,
				'tbl_segmentos_proyecto_idtbl_segmentos_proyecto' => $segmento,
				//'uid_orden_servicio' => $uid_orden_servicio,
				//'dtl_almacen_iddtl_almacen' => $eco,
				//'tbl_mantenimientos_idtbl_mantenimientos' => $this->input->post('mantenimiento') == NULL ?  NULL : $this->input->post('mantenimiento'),
				//'tbl_tramites_vehiculares_idtbl_tramites_vehiculares' => $this->input->post('idtbl_tramites_vehiculares') == NULL ? NULL : $this->input->post('idtbl_tramites_vehiculares'),
				//'activo_fijo' => 0
			);
		}else{
			$data = array(
				'estatus' => $estatus,
				'uid' => $uid,
				'fecha_creacion' => date('Y-m-d H:i:s'),
				//'tipo_producto' => $this->input->post('tipo_producto'),
				'tbl_usuarios_idtbl_usuarios' => $this->id_usuario($this->input->post('recibe')),
				'tbl_users_idtbl_users_autor' => $this->session->userdata('id'),
				//'tbl_users_idtbl_users_aprobacion' => $this->input->post('persona_autorizacion'),
				'tbl_proyectos_idtbl_proyectos' => $this->input->post('proyecto'),
				//'tbl_contratistas_idtbl_contratistas' => $contratista,
				//'tbl_usuarios_idtbl_usuarios_supervisor' => $supervisor,
				'tbl_users_idtbl_users_co' => $user_co,
				'fecha_aprobacion_co' => $fecha,
				'tbl_segmentos_proyecto_idtbl_segmentos_proyecto' => $segmento,
				//'uid_orden_servicio' => $uid_orden_servicio,
				//'dtl_almacen_iddtl_almacen' => $eco,
				//'tbl_mantenimientos_idtbl_mantenimientos' => $this->input->post('mantenimiento') == NULL ?  NULL : $this->input->post('mantenimiento'),
				//'tbl_tramites_vehiculares_idtbl_tramites_vehiculares' => $this->input->post('idtbl_tramites_vehiculares') == NULL ? NULL : $this->input->post('idtbl_tramites_vehiculares'),
				//'activo_fijo' => 0
			);
		}
		$this->db->insert('tbl_hoja_asignacion', $data);
		$insert_id = $this->db->insert_id();
		foreach ($this->input->post('producto') as $key => $value) {			
			if ($value != 0) {
				$data = array(
					'tbl_hoja_asignacion_idtbl_hoja_asignacion' => $insert_id,
					'tbl_catalogo_idtbl_catalogo' => $value,					
					'cantidad' => $this->input->post('cantidad')[$key],
					'observaciones' => $this->input->post('observaciones')[$key],
					//'sitio' => @$this->input->post('sitio')[$key]												
					//'dtl_almacen_iddtl_almacen' => $_POST['tipo_producto'] == 'Control Vehicular' ? $this->input->post('iddtl_almacen') : NULL
				);
				/*if($this->session->userdata("tipo") != 3 && $this->session->userdata("tipo") != 15){
					if($this->input->post('categoria')[$key] == 16){
						$activos_fijos++;
					}				
			}*/
		}
			if ($this->input->post('cantidad')[$key] != 0) {
				//Se registra la entrada
				$this->db->insert('dtl_hoja_asignacion', $data);
			}			
		}					

		if ($this->db->trans_status() === FALSE) {
			$this->db->trans_rollback();
			return false;
		} else {
			$this->db->trans_commit();
			return true;
		}
	}

	//Crea una nueva solicitud hecha desde un generador
	public function nueva_solicitud_generador() {
		$this->db->trans_begin();
		if($this->session->userdata('id') != 180){
		$contratista = $this->input->post('contratista');
		if(isset($_POST['supervisor_asignado'])){
			$supervisor = $this->input->post('supervisor_asignado');
		}else{
			$supervisor = $this->input->post('supervisor');
		}

		if ($this->input->post('segmento') === null || $this->input->post('segmento') === '') {
			$segmento = null;
		} else {
			$segmento = $this->input->post('segmento');
		}

		$alto_costo = 0;
		$almacen_general = 0;

		foreach ($this->input->post('producto') as $key => $value) {			
			if ($this->input->post('tipo_producto')[$key] == 2) {				
				$alto_costo++;
			}else{
				$almacen_general++;
			}
		}
		if(isset($_POST['mantenimiento']) && $this->input->post('mantenimiento') != NULL){
			if(isset($_POST['supervisor_asignado'])){
				$updateMantenimiento = array(
					'tbl_users_idtbl_users_supervisor' => $supervisor,
					'tbl_usuarios_idtbl_usuarios' => $this->input->post('usuario')
				);
			}else{
			$querySupervisor = $this->db->query("SELECT idtbl_users FROM tbl_users WHERE tbl_usuarios_idtbl_usuarios =" . $supervisor);
			$updateMantenimiento = array(
				'tbl_users_idtbl_users_supervisor' => $querySupervisor->result()[0]->idtbl_users,
				'tbl_usuarios_idtbl_usuarios' => $this->input->post('usuario')
			);
			}
			$this->db->set($updateMantenimiento);
			$this->db->where('idtbl_mantenimientos', $this->input->post('mantenimiento'));
			$this->db->update('tbl_mantenimientos');
		}
		if($this->session->userdata('tipo') == 21 || $this->session->userdata('tipo') == 9){
			$status = 'PM';
			$aprobacion = $this->input->post('persona_autorizacion');
			$fecha_aprobacion = NULL;
		}else{
			if($this->input->post('tipo') == 'contratista'){
				$status = 'CO PM';
			}else{
                $status = 'AG';
            }
			$aprobacion = $this->session->userdata('id');
			$fecha_aprobacion = date('Y-m-d H:i:s');
		}
		if(isset($_POST['supervisor_asignado'])){
			$querySupervisorAsignado = $this->db->query("SELECT tbl_usuarios_idtbl_usuarios FROM tbl_users WHERE idtbl_users =" . $supervisor);
			$supervisor = $querySupervisorAsignado->result()[0]->tbl_usuarios_idtbl_usuarios;
		}
        if ($almacen_general > 0) {
			$uid_ag = uniqid();
            $data_tbl_ag = array(
                'estatus_solicitud' => $status,
                'uid' => $uid_ag,
                'comentarios' => $this->input->post('comentarios'),
                'tipo_producto' => 'Almacen General',
                'tbl_usuarios_idtbl_usuarios' => $this->input->post('usuario'),
                'tbl_users_idtbl_users_autor' => $this->session->userdata('id'),
                'tbl_users_idtbl_users_aprobacion' => $aprobacion,
                'fecha_aprobacion_pm' => $fecha_aprobacion,
                'tbl_proyectos_idtbl_proyectos' => $this->input->post('proyecto'),
                'tbl_contratistas_idtbl_contratistas' => $contratista,
                'tbl_usuarios_idtbl_usuarios_supervisor' => $supervisor,
                'tbl_users_idtbl_users_co' => '',
                'tbl_segmentos_proyecto_idtbl_segmentos_proyecto' => $segmento,
                'uid_orden_servicio' => '',
                'dtl_almacen_iddtl_almacen' => '',
                'cleanup' => $this->input->post('cleanup'),
                'tbl_mantenimientos_idtbl_mantenimientos' => $this->input->post('mantenimiento') == null ?  null : $this->input->post('mantenimiento')
            );
        
            $this->db->insert('tbl_solicitud_material', $data_tbl_ag);
            $insert_id = $this->db->insert_id();
            foreach ($this->input->post('producto') as $key => $value) {
                if ($this->input->post('tipo_producto')[$key] != 2) {
                    $data_dtl_ag = array(
                    'tbl_solicitud_material_idtbl_solicitud_material' => $insert_id,
                    'tbl_catalogo_idtbl_catalogo' => $value,
                    'cantidad' => $this->input->post('cantidad')[$key],
                    'observaciones' => $this->input->post('observaciones')[$key],
                    'sitio' => @$this->input->post('sitio')[$key]
                    //'dtl_almacen_iddtl_almacen' => $_POST['tipo_producto'] == 'Control Vehicular' ? $this->input->post('iddtl_almacen') : NULL
                );
                }
                if ($this->input->post('cantidad')[$key] != 0 && $this->input->post('tipo_producto')[$key] != 2) {
                    //Se registra la entrada
                    $this->db->insert('dtl_solicitud_material', $data_dtl_ag);
                }
            }
        }

		//Si tiene productos de alto costo se crea otra solicitud
        if ($alto_costo > 0) {
			$uid_ac = uniqid();
            $data_tbl_ac = array(
                'estatus_solicitud' => 'CO AC',
                'uid' => $uid_ac,
                'comentarios' => $this->input->post('comentarios'),
                'tipo_producto' => 'Alto costo',
                'tbl_usuarios_idtbl_usuarios' => $this->input->post('usuario'),
                'tbl_users_idtbl_users_autor' => $this->session->userdata('id'),
                'tbl_users_idtbl_users_aprobacion' => $this->session->userdata('id'),
                'fecha_aprobacion_pm' => date('Y-m-d H:i:s'),
                'tbl_proyectos_idtbl_proyectos' => $this->input->post('proyecto'),
                'tbl_contratistas_idtbl_contratistas' => $contratista,
                'tbl_usuarios_idtbl_usuarios_supervisor' => $supervisor,
                'tbl_users_idtbl_users_co' => '',
                'tbl_segmentos_proyecto_idtbl_segmentos_proyecto' => $segmento,
                'uid_orden_servicio' => '',
                'dtl_almacen_iddtl_almacen' => '',
                'cleanup' => $this->input->post('cleanup'),
                'tbl_mantenimientos_idtbl_mantenimientos' => $this->input->post('mantenimiento') == null ?  null : $this->input->post('mantenimiento')
            );
        
            $this->db->insert('tbl_solicitud_material', $data_tbl_ac);
            $insert_id_ac = $this->db->insert_id();
            foreach ($this->input->post('producto') as $key => $value) {
                if ($this->input->post('tipo_producto')[$key] == 2) {
                    $data_dtl_ac = array(
                    'tbl_solicitud_material_idtbl_solicitud_material' => $insert_id_ac,
                    'tbl_catalogo_idtbl_catalogo' => $value,
                    'cantidad' => $this->input->post('cantidad')[$key],
                    'observaciones' => $this->input->post('observaciones')[$key],
                    'sitio' => @$this->input->post('sitio')[$key]
                    //'dtl_almacen_iddtl_almacen' => $_POST['tipo_producto'] == 'Control Vehicular' ? $this->input->post('iddtl_almacen') : NULL
                );
                }
                if ($this->input->post('cantidad')[$key] != 0 && $this->input->post('tipo_producto')[$key] == 2) {
                    //Se registra la entrada
                    $this->db->insert('dtl_solicitud_material', $data_dtl_ac);
                }
            }
        }
	}else{
		foreach($this->input->post('producto') AS $key => $value){
			$data_ext = array(
				'tbl_catalogo_idtbl_catalogo' => $value,
				'cantidad' => $this->input->post('cantidad')[$key],
				'tbl_mantenimientos_idtbl_mantenimientos' => $this->input->post('mantenimiento')
			);
			$this->db->insert('dtl_material_extemporaneo', $data_ext);
		}
	}

		if ($this->db->trans_status() === FALSE) {
			$this->db->trans_rollback();
			return false;
		} else {
			$this->db->trans_commit();
			return true;
		}
	}

	public function nueva_justificacion_material($uid, $estatus, $filepath1) {
		$this->db->trans_begin();
		if ($this->input->post('segmento') === null || $this->input->post('segmento') === '') {
			$segmento = null;
		} else {
			$segmento = $this->input->post('segmento');
		}
		$actividades = array(
    		'pi1' => isset($_POST['pi1']) ? $_POST['pi1'] : '',
    		'pe1' => isset($_POST['pe1']) ? $_POST['pe1'] : '',
    		'p1' => isset($_POST['p1']) ? $_POST['p1'] : '',

    		'pi2' => isset($_POST['pi2']) ? $_POST['pi2'] : '',
    		'pe2' => isset($_POST['pe2']) ? $_POST['pe2'] : '',
    		'p2' => isset($_POST['p2']) ? $_POST['p2'] : '',

    		'pi3' => isset($_POST['pi3']) ? $_POST['pi3'] : '',
    		'pe3' => isset($_POST['pe3']) ? $_POST['pe3'] : '',
    		'p3' => isset($_POST['p3']) ? $_POST['p3'] : '',

    		'pi4' => isset($_POST['pi4']) ? $_POST['pi4'] : '',
    		'pe4' => isset($_POST['pe4']) ? $_POST['pe4'] : '',
    		'p4' => isset($_POST['p4']) ? $_POST['p4'] : '',

    		'pi5' => isset($_POST['pi5']) ? $_POST['pi5'] : '',
    		'pe5' => isset($_POST['pe5']) ? $_POST['pe5'] : '',
    		'p5' => isset($_POST['p5']) ? $_POST['p5'] : '',

    		'pi6' => isset($_POST['pi6']) ? $_POST['pi6'] : '',
    		'pe6' => isset($_POST['pe6']) ? $_POST['pe6'] : '',
    		'p6' => isset($_POST['p6']) ? $_POST['p6'] : '',

    		'pi7' => isset($_POST['pi7']) ? $_POST['pi7'] : '',
    		'pe7' => isset($_POST['pe7']) ? $_POST['pe7'] : '',
    		'p7' => isset($_POST['p7']) ? $_POST['p7'] : '',

    		'pi8' => isset($_POST['pi8']) ? $_POST['pi8'] : '',
    		'pe8' => isset($_POST['pe8']) ? $_POST['pe8'] : '',
    		'p8' => isset($_POST['p8']) ? $_POST['p8'] : '',

    		'pi9' => isset($_POST['pi9']) ? $_POST['pi9'] : '',
    		'pe9' => isset($_POST['pe9']) ? $_POST['pe9'] : '',
    		'p9' => isset($_POST['p9']) ? $_POST['p9'] : '',

    		'pi10' => isset($_POST['pi10']) ? $_POST['pi10'] : '',
    		'pe10' => isset($_POST['pe10']) ? $_POST['pe10'] : '',
    		'p10' => isset($_POST['p10']) ? $_POST['p10'] : ''
    	);
		$data = array(
			'uid' => $uid,
			'fecha_creacion' => date('Y-m-d H:i:s'),
			'tbl_users_idtbl_users_autor' => $this->session->userdata('id'),
			'tbl_usuarios_idtbl_usuarios_empalmador' => $this->input->post('empalmador'),
			'tbl_users_idtbl_users_supervisor' => $this->input->post('supervisor'),
			'tbl_proyectos_idtbl_proyectos' => $this->input->post('proyecto'),
			'tbl_segmentos_proyecto_idtbl_segmentos_proyecto' => $segmento,
			'estatus' => $estatus,
			'tbl_usuarios_idtbl_usuarios_auxiliar' => $this->input->post('auxiliar'),
			'area' => $this->input->post('area'),
			'mercado' => $this->input->post('mercado'),
			'segmento' => $this->input->post('segmento2'),
			'id_sitio' => $this->input->post('id_sitio'),
			'nombre_sitio' => $this->input->post('nombre_sitio'),
			'activo_fijo_dfo' => $this->input->post('activo_fijo_dfo'),
			'activo_fijo_caja_empalme' => $this->input->post('activo_fijo_caja_empalme'),
			'actividades_realizadas' => json_encode($actividades),
			'actividad_finalizada' => $this->input->post('actividad_finalizada'),
			'estatus_odk' => $this->input->post('estatus_odk'),
			'folio_incidencia' => $this->input->post('folio_incidencia'), 
			'incidencia' => $this->input->post('incidencia'),
			'comentarios' => $this->input->post('comentarios'),
			'evidencia_fotografica' => $uid,
			'firma' => $filepath1
		);
		$this->db->insert('tbl_justificacion_material', $data);
		$insert_id = $this->db->insert_id();
		foreach ($this->input->post('iddtl_asignacion') as $key => $value) {
			if($this->input->post('cantidad_justificada')[$key] > 0 && is_numeric($this->input->post('cantidad_justificada')[$key])) {
				$data = array(
					'tbl_justificacion_material_idtbl_justificacion_material' => $insert_id,
					'dtl_asignacion_iddtl_asignacion' => $this->input->post('iddtl_asignacion')[$key],
					'cantidad_justificada' => $this->input->post('cantidad_justificada')[$key],
					'observaciones' => $this->input->post('observaciones')[$key]
				);
				$this->db->insert('dtl_justificacion_material', $data);
			}	
		}

		if ($this->db->trans_status() === FALSE) {
			$this->db->trans_rollback();
			return false;
		} else {
			$this->db->trans_commit();
			return true;
		}
	}

	public function cancelar_asignacion() {
		
			$data = array(
				'estatus' => 2,
				//'observaciones' => $this->input->post('comentarios'),
				//'fecha_finalizacion' => date('Y-m-d H:i:s')
			);
        if ($this->session->userdata('tipo') == 3) {
            $query = $this->db->query("SELECT idtbl_almacen_movimientos FROM `tbl_almacen_movimientos` WHERE `folio` =" . $this->input->post('folio') . " AND tbl_almacenes_idtbl_almacenes=28");
        }elseif($this->session->userdata('tipo') == 2){
			$query = $this->db->query("SELECT idtbl_almacen_movimientos FROM `tbl_almacen_movimientos` WHERE `folio` =" . $this->input->post('folio') . " AND tbl_almacenes_idtbl_almacenes=30");
		}elseif($this->session->userdata('tipo') == 1){
			$query = $this->db->query("SELECT idtbl_almacen_movimientos FROM `tbl_almacen_movimientos` WHERE `folio` =" . $this->input->post('folio') . " AND tbl_almacenes_idtbl_almacenes=2");
		}
		$this->db->set($data);
		$this->db->where('tbl_almacen_movimientos.idtbl_almacen_movimientos', $query->result()[0]->idtbl_almacen_movimientos);
		$result = $this->db->update('tbl_almacen_movimientos');
		return  $result;
	}

	public function cancelar_solicitud() {
		$query = $this->db->query("SELECT dtl_solicitud_material.tbl_catalogo_idtbl_catalogo, dtl_solicitud_material.dtl_almacen_iddtl_almacen, dtl_solicitud_material.cantidad, tbl_almacenes.idtbl_almacenes, ctl_categorias_idctl_categorias, tbl_solicitud_material.tbl_mantenimientos_idtbl_mantenimientos FROM tbl_solicitud_material JOIN dtl_solicitud_material ON tbl_solicitud_material.idtbl_solicitud_material = dtl_solicitud_material.tbl_solicitud_material_idtbl_solicitud_material JOIN tbl_almacenes ON tbl_almacenes.uid = tbl_solicitud_material.uid_almacen_seleccionado JOIN tbl_catalogo ON tbl_catalogo.idtbl_catalogo = dtl_solicitud_material.tbl_catalogo_idtbl_catalogo WHERE tbl_solicitud_material.uid = '" .  $this->input->post('uid') . "'");
		$queryMan = $this->db->query("SELECT dtl_solicitud_material.tbl_catalogo_idtbl_catalogo, dtl_solicitud_material.dtl_almacen_iddtl_almacen, dtl_solicitud_material.cantidad, tbl_almacenes.idtbl_almacenes, ctl_categorias_idctl_categorias, tbl_solicitud_material.tbl_mantenimientos_idtbl_mantenimientos FROM tbl_solicitud_material JOIN dtl_solicitud_material ON tbl_solicitud_material.idtbl_solicitud_material = dtl_solicitud_material.tbl_solicitud_material_idtbl_solicitud_material LEFT JOIN tbl_almacenes ON tbl_almacenes.uid = tbl_solicitud_material.uid_almacen_seleccionado JOIN tbl_catalogo ON tbl_catalogo.idtbl_catalogo = dtl_solicitud_material.tbl_catalogo_idtbl_catalogo WHERE tbl_solicitud_material.uid = '" .  $this->input->post('uid') . "' AND tbl_solicitud_material.tbl_mantenimientos_idtbl_mantenimientos IS NOT NULL");
			$data = $query->result();
			$dataMan = $queryMan->result();
            if (COUNT($dataMan) > 0) {
                $mantenimiento = $queryMan->result()[0]->tbl_mantenimientos_idtbl_mantenimientos;
				
				$dataMan = array(
					'tbl_users_idtbl_users_supervisor' => NULL,
					'tbl_usuarios_idtbl_usuarios' => NULL
				);
				$this->db->where('idtbl_mantenimientos', $mantenimiento);
				$this->db->update('tbl_mantenimientos', $dataMan);	
            }
		if(($this->session->userdata('tipo') == 4 || ($this->session->userdata('encargado_almacen') != null && $this->session->userdata('encargado_almacen') != '')) && ($this->input->post('estatus') == 'SU' || $this->input->post('estatus') == 'SU A')){						
			foreach ($data as  $value) {
				if(($value->tbl_catalogo_idtbl_catalogo == "25053" || $value->tbl_catalogo_idtbl_catalogo == "19955" || $value->tbl_catalogo_idtbl_catalogo == "25054" || $value->tbl_catalogo_idtbl_catalogo == "22124" || $value->tbl_catalogo_idtbl_catalogo == "22882" || $value->tbl_catalogo_idtbl_catalogo == "22463" || $value->tbl_catalogo_idtbl_catalogo == "22918" || $value->tbl_catalogo_idtbl_catalogo == "19420" || $value->tbl_catalogo_idtbl_catalogo == "19421" || $value->tbl_catalogo_idtbl_catalogo == "24792" || $value->tbl_catalogo_idtbl_catalogo == "24793" || $value->tbl_catalogo_idtbl_catalogo == "19428" || $value->tbl_catalogo_idtbl_catalogo == "19429" || $value->ctl_categorias_idctl_categorias == "16" || $value->ctl_categorias_idctl_categorias == "7")){
					$this->db->set("estatus", "almacen");
					$this->db->where("iddtl_almacen", $value->dtl_almacen_iddtl_almacen);
					$this->db->update('dtl_almacen');
				}else{
					$this->db->set('existencias', 'existencias + ' . $value->cantidad, FALSE);
					$this->db->where("tbl_catalogo_idtbl_catalogo", $value->tbl_catalogo_idtbl_catalogo);
					$this->db->where("estatus", "almacen");
					$this->db->where('tbl_almacenes_idtbl_almacenes', $value->idtbl_almacenes);
					$this->db->update('dtl_almacen');
				}
			}
		}

		if (($this->session->userdata('tipo') == 9 || $this->session->userdata('tipo') == 1 || $this->session->userdata('tipo') == 12 || $this->session->userdata('tipo') == 17 || $this->session->userdata('tipo') == 19) && $this->session->userdata('permiso_autorizar') == 'si' && ($this->input->post('tipo_solicitud') == 'Almacen General' || $this->input->post('tipo_solicitud') == 'Seguridad e Higiene')) {					
			$data = array(
				'estatus_solicitud' => 'cancelada PM',
				'comentarios' => $this->input->post('comentarios'),
				'fecha_aprobacion_pm' => date('Y-m-d H:i:s'),				
				'tbl_mantenimientos_idtbl_mantenimientos' => NULL
			);
		} elseif (($this->session->userdata('tipo') == 9 || $this->session->userdata('tipo') == 12) && $this->session->userdata('permiso_autorizar') == 'si' && $this->input->post('tipo_solicitud') == 'Alto costo') {
			$data = array(
				'estatus_solicitud' => 'cancelada PM AC',
				'comentarios' => $this->input->post('comentarios'),
				'fecha_aprobacion_pm' => date('Y-m-d H:i:s')
			);
		} elseif (($this->session->userdata('tipo') == 9 || $this->session->userdata('tipo') == 12) && $this->session->userdata('id') != 48 && $this->session->userdata('permiso_autorizar') == 'si' && $this->input->post('tipo_solicitud') == 'Kuali') {
			$data = array(
				'estatus_solicitud' => 'cancelada PM K',
				'comentarios' => $this->input->post('comentarios'),
				'fecha_aprobacion_pm' => date('Y-m-d H:i:s')
			);
		} elseif (($this->session->userdata('tipo') == 9 || $this->session->userdata('tipo') == 12 || $this->session->userdata('tipo') == 17 || $this->session->userdata('tipo') == 19) && $this->session->userdata('permiso_autorizar') == 'si' && $this->input->post('tipo_solicitud') == 'Control Vehicular') {
			$data = array(
				'estatus_solicitud' => 'cancelada PM CV',
				'comentarios' => $this->input->post('comentarios'),
				'fecha_aprobacion_pm' => date('Y-m-d H:i:s')
			);
		} elseif ($this->session->userdata('tipo') == 10 && $this->session->userdata('permiso_autorizar') == 'si' && $this->input->post('tipo_solicitud') == 'Seguridad e Higiene') {
			$data = array(
				'estatus_solicitud' => 'cancelada SH',
				'comentarios' => $this->input->post('comentarios'),
				'fecha_aprobacion_pm' => date('Y-m-d H:i:s')
			);
		} elseif ($this->session->userdata('tipo') == 11 && $this->session->userdata('permiso_autorizar') == 'si' && ($this->input->post('tipo_solicitud') == 'Almacen General' || $this->input->post('tipo_solicitud') == 'Seguridad e Higiene')) {
			$data = array(
				'estatus_solicitud' => 'cancelada CO',
				'tbl_users_idtbl_users_co' => $this->session->userdata('id'),
				'comentarios' => $this->input->post('comentarios'),
				'fecha_aprobacion_co' => date('Y-m-d H:i:s'),				
				'tbl_mantenimientos_idtbl_mantenimientos' => NULL
			);
		} elseif ($this->session->userdata('tipo') == 11 && $this->session->userdata('permiso_autorizar') == 'si' && $this->input->post('tipo_solicitud') == 'Alto costo') {
			$data = array(
				'estatus_solicitud' => 'cancelada CO AC',
				'tbl_users_idtbl_users_co' => $this->session->userdata('id'),
				'comentarios' => $this->input->post('comentarios'),
				'fecha_aprobacion_co' => date('Y-m-d H:i:s')
			);
		} elseif ($this->session->userdata('tipo') == 11 && $this->session->userdata('permiso_autorizar') == 'si' && $this->input->post('tipo_solicitud') == 'Control Vehicular') {
			$data = array(
				'estatus_solicitud' => 'cancelada CO CV',
				'tbl_users_idtbl_users_co' => $this->session->userdata('id'),
				'comentarios' => $this->input->post('comentarios'),
				'fecha_aprobacion_co' => date('Y-m-d H:i:s')
			);
		} elseif (($this->session->userdata('tipo') == 4 || ($this->session->userdata('encargado_almacen') != null && $this->session->userdata('encargado_almacen') != '')) && ($this->input->post('tipo_solicitud') == 'Almacen General' || $this->input->post('tipo_solicitud') == 'Seguridad e Higiene')) {
			$data = array(
				'estatus_solicitud' => 'cancelada AG',
				'tbl_users_idtbl_users_ag' => $this->session->userdata('id'),
				'comentarios' => $this->input->post('comentarios'),
				'fecha_aprobacion_ag' => date('Y-m-d H:i:s'),				
				'tbl_mantenimientos_idtbl_mantenimientos' => NULL
			);
		} else if ($this->session->userdata('tipo') == 1 && $this->session->userdata('permiso_autorizar') == 'si' && $this->input->post('tipo_solicitud') == 'Alto costo') {
			$data = array(
				'estatus_solicitud' => 'cancelada AC',
				'tbl_users_idtbl_users_ac' => $this->session->userdata('id'),
				'comentarios' => $this->input->post('comentarios'),
				'fecha_aprobacion_ac' => date('Y-m-d H:i:s')
			);
		} else if ($this->session->userdata('tipo') == 3 && ($this->input->post('tipo_solicitud') == 'Control Vehicular' || $this->input->post('tipo_solicitud') == 'Tarjetas')) {
			$data = array(
				'estatus_solicitud' => 'cancelada CV',
				'tbl_users_idtbl_users_cv' => $this->session->userdata('id'),
				'comentarios' => $this->input->post('comentarios'),
				'fecha_aprobacion_cv' => date('Y-m-d H:i:s')
			);
		} else if ($this->session->userdata('tipo') == 4 && $this->session->userdata('permiso_autorizar') == 'si' && $this->input->post('tipo_solicitud') == 'Kuali') {
			$data = array(
				'estatus_solicitud' => 'cancelada K',
				'tbl_users_idtbl_users_ag' => $this->session->userdata('id'),
				'comentarios' => $this->input->post('comentarios'),
				'fecha_aprobacion_ag' => date('Y-m-d H:i:s')
			);
		} else if ($this->session->userdata('id') == 48 && $this->session->userdata('permiso_autorizar') == 'si' && $this->input->post('tipo_solicitud') == 'Kuali') {
			$data = array(
				'estatus_solicitud' => 'cancelada CO K',
				'tbl_users_idtbl_users_ag' => $this->session->userdata('id'),
				'comentarios' => $this->input->post('comentarios'),
				'fecha_aprobacion_ag' => date('Y-m-d H:i:s')
			);
		} else if ($this->session->userdata('tipo') == 3 && $this->session->userdata('permiso_autorizar') == 'si' && $this->input->post('tipo_solicitud') == 'Refacciones Control Vehicular') {
			$data = array(
				'estatus_solicitud' => 'cancelada RCV',
				'tbl_users_idtbl_users_rcv' => $this->session->userdata('id'),
				'comentarios' => $this->input->post('comentarios'),
				'fecha_aprobacion_rcv' => date('Y-m-d H:i:s')
			);
		} else if ($this->session->userdata('tipo') == 4 && $this->session->userdata('permiso_autorizar') == 'si' && $this->input->post('tipo_solicitud') == 'Refacciones Control Vehicular') {
			$data = array(
				'estatus_solicitud' => 'cancelada AG',
				'tbl_users_idtbl_users_ag' => $this->session->userdata('id'),
				'comentarios' => $this->input->post('comentarios'),
				'fecha_aprobacion_ag' => date('Y-m-d H:i:s')
			);
		} else if (($this->session->userdata('tipo') == 17 || $this->session->userdata('tipo') == 19 || $this->session->userdata('tipo') == 1) && $this->session->userdata('permiso_autorizar') == 'si' && ($this->input->post('tipo_solicitud') == 'Sistemas' || $this->input->post('tipo_solicitud') == 'Kuali' || $this->input->post('tipo_solicitud') == 'Tarjetas')) {					
			$data = array(
				'estatus_solicitud' => 'cancelada PM',
				'comentarios' => $this->input->post('comentarios'),
				'fecha_aprobacion_pm' => date('Y-m-d H:i:s'),				
				'tbl_mantenimientos_idtbl_mantenimientos' => NULL
			);
		} else if($this->session->userdata('tipo') == 11 && $this->session->userdata('permiso_autorizar') == 'si' && $this->input->post('tipo_solicitud') == 'Sistemas'){
			$data = array(
				'estatus_solicitud' => 'cancelada CO PM',
				'comentarios' => $this->input->post('comentarios'),
				'fecha_aprobacion_pm' => date('Y-m-d H:i:s'),				
				'tbl_mantenimientos_idtbl_mantenimientos' => NULL
			);
		}else if($this->session->userdata('tipo') == 2 && $this->session->userdata('permiso_autorizar') == 'si' && $this->input->post('tipo_solicitud') == 'Sistemas'){
			$data = array(
				'estatus_solicitud' => 'cancelada Sis',
				'comentarios' => $this->input->post('comentarios'),
				'fecha_aprobacion_pm' => date('Y-m-d H:i:s'),				
				'tbl_mantenimientos_idtbl_mantenimientos' => NULL
			);
		}

		if($this->session->userdata('permiso_autorizar') == 'si' && $this->input->post('tipo_solicitud') == 'Refacciones Control Vehicular' && ($this->session->userdata('tipo') == 4 || $this->session->userdata('tipo') == 3)){
			$this->db->query("UPDATE dtl_servicio SET dtl_servicio.estatus = 'CL' WHERE tbl_tramites_vehiculares_idtbl_tramites_vehiculares = (SELECT IF(tbl_solicitud_material.tbl_tramites_vehiculares_idtbl_tramites_vehiculares IS NOT NULL, tbl_solicitud_material.tbl_tramites_vehiculares_idtbl_tramites_vehiculares, 0) FROM tbl_solicitud_material WHERE uid = '" . $this->input->post('uid') . "')");
		}
		$this->db->set($data);
		$this->db->where('uid', $this->input->post('uid'));
		$result = $this->db->update('tbl_solicitud_material');
		return  $result;
	}

	public function cancelar_recurso()
    {
        $data = array(
            'estatus' => 'cancelado',
            'motivo_cancelacion' => $this->input->post('comentarios'),
            'fecha_aprobacion' => date('Y-m-d H:i:s')
        );        
        
        $this->db->set($data);
        $this->db->where('uid', $this->input->post('uid'));
        $result = $this->db->update('tbl_solicitud_recursos');
        return  $result;
    }

	public function cancelar_justificacion() {
		if (isset($this->session->userdata('permisos')['supervisor']) && $this->session->userdata('permisos')['supervisor']>0) {
			$data = array(
				'estatus' => 'Cancelada Supervisor',
				//'comentarios' => $this->input->post('comentarios'),
				'fecha_aprobacion_supervisor' => date('Y-m-d H:i:s')
			);
		}
		$this->db->set($data);
		$this->db->where('uid', $this->input->post('uid_justificacion'));
		$result = $this->db->update('tbl_justificacion_material');
		return  $result;
	}

	public function activar_codigo(){
		$data = array(
			'estatus_producto' => 1
		);
		$this->db->set($data);
		$this->db->where('uid', $this->input->post('uid'));
		$result = $this->db->update('tbl_catalogo');
		return  $result;

	}

	public function desactivar_codigo(){
		$data = array(
			'estatus_producto' => 0
		);
		$this->db->set($data);
		$this->db->where('uid', $this->input->post('uid'));
		$result = $this->db->update('tbl_catalogo');
		return  $result;

	}


	public function modificar_solicitud() {
		$this->db->trans_begin();
		/*if ($this->session->userdata('tipo') == 1 && $this->session->userdata('permiso_autorizar') == 'si' && $this->input->post('tipo_solicitud') == 'Almacen General') {
			$data = array(
				'estatus_solicitud' => 'modificada PM',
				'uid' => '_' . $this->input->post('uid'),
				'fecha_aprobacion_co' => date('Y-m-d H:i:s')
			);
			$aprobacion = "AG";
			$user_co = null;
		}*/
		if (($this->session->userdata('tipo') == 1 || $this->session->userdata('tipo') == 17 || $this->session->userdata('tipo') == 19) && $this->session->userdata('permiso_autorizar') == 'si' && $this->input->post('tipo_solicitud') == 'Sistemas') {
			$data = array(
				'estatus_solicitud' => 'modificada PM',
				'uid' => '_' . $this->input->post('uid'),
				'fecha_aprobacion_pm' => date('Y-m-d H:i:s')
			);
			$aprobacion = "Sis";
			$user_co = null;
			$user_pm = $this->session->userdata('id');
		}
		if ($this->session->userdata('tipo') == 3 && $this->session->userdata('permiso_autorizar') == 'si' && $this->input->post('tipo_solicitud') == 'Control Vehicular') {
			$data = array(
				'estatus_solicitud' => 'modificada CV',
				'uid' => '___' . $this->input->post('uid'),
				'fecha_aprobacion_cv' => date('Y-m-d H:i:s')
			);
			$aprobacion = "SU CV";
			$user_cv = $this->session->userdata('id');
		}
		if ($this->session->userdata('tipo') == 3 && $this->session->userdata('permiso_autorizar') == 'si' && $this->input->post('tipo_solicitud') == 'Refacciones Control Vehicular') {
			$data = array(
				'estatus_solicitud' => 'modificada CV',
				'uid' => '_' . $this->input->post('uid'),
				'fecha_aprobacion_rcv' => date('Y-m-d H:i:s')
			);
			$aprobacion = "AG";
			$user_rcv = $this->session->userdata('id');
		}
		if ($this->session->userdata('tipo') ==  4 && $this->session->userdata('permiso_autorizar') == 'si' && $this->input->post('tipo_solicitud') == 'Refacciones Control Vehicular') {
			if (isset($_POST['user_asignacion']) && $this->input->post('user_asignacion') != '') {
                $query = $this->db->get_where("ctl_autorizados_entrega", array("idctl_autorizados_entrega" => $this->input->post('user_asignacion')));
                $result = $query->result()[0];
                $user_id = $result->tbl_users_idtbl_users;
				$aprobacion = "SU RCV A";
            }else{
				$user_id = NULL;	
				$aprobacion = "SU RCV";	
			}
			$data = array(
				'estatus_solicitud' => 'modificada AG',
				'uid' => '___' . $this->input->post('uid'),
				'fecha_aprobacion_ag' => date('Y-m-d H:i:s')
			);			
			$user_ag = $this->session->userdata('id');
		}
		if ($this->session->userdata('tipo') == 1 && $this->session->userdata('permiso_autorizar') == 'si' && $this->input->post('tipo_solicitud') == 'Alto costo') {
			$data = array(
				'estatus_solicitud' => 'modificada AC',
				'uid' => '___' . $this->input->post('uid'),
				'fecha_aprobacion_ac' => date('Y-m-d H:i:s')
			);
			$aprobacion = "SU AC";
			$user_ac = $this->session->userdata('id');
		}
		if (($this->session->userdata('tipo') == 9 || $this->session->userdata('tipo') == 12 || $this->session->userdata('tipo') == 17 || $this->session->userdata('tipo') == 19) && $this->input->post('tipo_solicitud') == 'Almacen General' && $this->session->userdata('permiso_autorizar') == 'si') {
			$data = array(
				'estatus_solicitud' => 'modificada PM',
				'uid' => '_' . $this->input->post('uid'),
				'fecha_aprobacion_pm' => date('Y-m-d H:i:s'),
				'tbl_mantenimientos_idtbl_mantenimientos' => NULL
			);
			
			$aprobacion = "CO PM"; 
			
			
			$user_co = null;
			$user_pm = $this->session->userdata('id');
		}
		if (($this->session->userdata('tipo') == 9 || $this->session->userdata('tipo') == 12) && $this->input->post('tipo_solicitud') == 'Control Vehicular' && $this->session->userdata('permiso_autorizar') == 'si') {
			$data = array(
				'estatus_solicitud' => 'modificada PM',
				'uid' => '_' . $this->input->post('uid'),
				'fecha_aprobacion_pm' => date('Y-m-d H:i:s')
			);
			$aprobacion = "CO CV";
			$user_co = null;
			$user_pm = $this->session->userdata('id');
		}
		if ($this->session->userdata('tipo') == 10 && $this->session->userdata('permiso_autorizar') == 'si' && $this->input->post('tipo_solicitud') == 'Seguridad e Higiene') {
			$data = array(
				'estatus_solicitud' => 'modificada SH',
				'uid' => '_' . $this->input->post('uid'),
				'fecha_aprobacion_pm' => date('Y-m-d H:i:s')
			);
			$aprobacion = "AG";
			$user_co = null;
			$user_pm = $this->session->userdata('id');
		}
		if (($this->session->userdata('tipo') == 9 || $this->session->userdata('tipo') == 12 || $this->session->userdata('tipo') == 17 || $this->session->userdata('tipo') == 19) && $this->input->post('tipo_solicitud') == 'Alto costo' && $this->session->userdata('permiso_autorizar') == 'si') {
			$data = array(
				'estatus_solicitud' => 'modificada PM',
				'uid' => '_' . $this->input->post('uid'),
				'fecha_aprobacion_pm' => date('Y-m-d H:i:s')
			);
			$aprobacion = "AC";
			$user_co = null;
			$user_pm = $this->session->userdata('id');
		}
		if (($this->session->userdata('tipo') == 9 || $this->session->userdata('tipo') == 12) && $this->input->post('tipo_solicitud') == 'Kuali' && $this->session->userdata('permiso_autorizar') == 'si') {
			$data = array(
				'estatus_solicitud' => 'modificada PM',
				'uid' => '_' . $this->input->post('uid'),
				'fecha_aprobacion_pm' => date('Y-m-d H:i:s')
			);
			$aprobacion = "K";
			$user_co = null;
			$user_pm = $this->session->userdata('id');
		}
		if ($this->session->userdata('tipo') == 11 && ($this->input->post('tipo_solicitud') == 'Almacen General' || $this->input->post('tipo_solicitud') == 'Seguridad e Higiene') && $this->session->userdata('permiso_autorizar') == 'si') {
			$data = array(
				'estatus_solicitud' => 'modificada CO',
				'uid' => '__' . $this->input->post('uid'),
				'tbl_users_idtbl_users_co' => $this->session->userdata('id'),
				'fecha_aprobacion_co' => date('Y-m-d H:i:s'),
				'tbl_mantenimientos_idtbl_mantenimientos' => NULL
			);
			$aprobacion = "AG";
			$user_co = $this->session->userdata('id');
		}
		if ($this->session->userdata('tipo') == 11 && $this->input->post('tipo_solicitud') == 'Alto costo' && $this->session->userdata('permiso_autorizar') == 'si') {
			$data = array(
				'estatus_solicitud' => 'modificada CO',
				'uid' => '__' . $this->input->post('uid'),
				'tbl_users_idtbl_users_co' => $this->session->userdata('id'),
				'fecha_aprobacion_co' => date('Y-m-d H:i:s'),
				'tbl_mantenimientos_idtbl_mantenimientos' => NULL
			);
			$aprobacion = "AC";
			$user_co = $this->session->userdata('id');
			
		}
		if ($this->session->userdata('tipo') == 11 && $this->input->post('tipo_solicitud') == 'Control Vehicular' && $this->session->userdata('permiso_autorizar') == 'si') {
			$data = array(
				'estatus_solicitud' => 'modificada CO',
				'uid' => '__' . $this->input->post('uid'),
				'tbl_users_idtbl_users_co' => $this->session->userdata('id'),
				'fecha_aprobacion_co' => date('Y-m-d H:i:s')
			);
			$aprobacion = "CV";
			$user_co = $this->session->userdata('id');
		}
		if (($this->session->userdata('tipo') == 4 || ($this->session->userdata('encargado_almacen') != null && $this->session->userdata('encargado_almacen') != '')) && $this->input->post('tipo_solicitud') == 'Almacen General') {
			if (isset($_POST['user_asignacion']) && $this->input->post('user_asignacion') != '') {
                $query = $this->db->get_where("ctl_autorizados_entrega", array("idctl_autorizados_entrega" => $this->input->post('user_asignacion')));
                $result = $query->result()[0];
                $user_id = $result->tbl_users_idtbl_users;
				$aprobacion = "SU A";
            }else{
				$user_id = NULL;	
				$aprobacion = "SU";			
			}
			$data = array(
				'estatus_solicitud' => 'modificada AG',
				'uid' => '___' . $this->input->post('uid'),
				'tbl_users_idtbl_users_ag' => $this->session->userdata('id'),
				'fecha_aprobacion_ag' => date('Y-m-d H:i:s'),
				'tbl_mantenimientos_idtbl_mantenimientos' => NULL
			);
			
			$user_ag = $this->session->userdata('id');
		}
		if (($this->session->userdata('tipo') == 4 || ($this->session->userdata('encargado_almacen') != null && $this->session->userdata('encargado_almacen') != '')) && $this->input->post('tipo_solicitud') == 'Seguridad e Higiene') {
			if (isset($_POST['user_asignacion']) && $this->input->post('user_asignacion') != '') {
                $query = $this->db->get_where("ctl_autorizados_entrega", array("idctl_autorizados_entrega" => $this->input->post('user_asignacion')));
                $result = $query->result()[0];
                $user_id = $result->tbl_users_idtbl_users;
				$aprobacion = "SU A";
            }else{
				$user_id = NULL;	
				$aprobacion = "SU";			
			}
			$data = array(
				'estatus_solicitud' => 'modificada AG',
				'uid' => '___' . $this->input->post('uid'),
				'tbl_users_idtbl_users_ag' => $this->session->userdata('id'),
				'fecha_aprobacion_ag' => date('Y-m-d H:i:s')
			);			
			$user_ag = $this->session->userdata('id');
		}
		//else {
		//	$data = array(
		//	    'estatus_solicitud' => 'modificada',
		//        'uid' => '_'.$this->input->post('uid')
		//	);
		//	$aprobacion = "aprobada";
		//	$user_co = '';
		//}	
		$this->db->set($data);
		$this->db->where('uid', $this->input->post('uid'));
		$this->db->update('tbl_solicitud_material');
		if (isset($user_cv)) {
			$solicitud = $this->detalle_solicitud('___' . $this->input->post('uid'));
			$data = array(
				'fecha_creacion' => $solicitud->fecha_creacion,
				'estatus_solicitud' => $aprobacion,
				'uid' => $this->input->post('uid'),
				'comentarios' => $this->input->post('comentarios'),
				'tbl_usuarios_idtbl_usuarios' => $solicitud->tbl_usuarios_idtbl_usuarios,
				'tbl_users_idtbl_users_autor' => $solicitud->tbl_users_idtbl_users_autor,
				'tbl_users_idtbl_users_aprobacion' => $solicitud->tbl_users_idtbl_users_aprobacion,
				'tbl_proyectos_idtbl_proyectos' => $solicitud->tbl_proyectos_idtbl_proyectos,
				'tbl_segmentos_proyecto_idtbl_segmentos_proyecto' => $solicitud->tbl_segmentos_proyecto_idtbl_segmentos_proyecto,
				'tbl_contratistas_idtbl_contratistas' => $solicitud->tbl_contratistas_idtbl_contratistas,
				'tbl_usuarios_idtbl_usuarios_supervisor' => $solicitud->tbl_usuarios_idtbl_usuarios_supervisor,
				'tbl_users_idtbl_users_cv' => $user_cv,
				'tbl_users_idtbl_users_co' => $solicitud->tbl_users_idtbl_users_co,
				'tipo_producto' => $this->input->post('tipo_solicitud'),
				'fecha_aprobacion_pm' => $solicitud->fecha_aprobacion_pm,
				'fecha_aprobacion_co' => $solicitud->fecha_aprobacion_co,
				'fecha_aprobacion_cv' => $solicitud->fecha_aprobacion_cv
			);
		}
		if (isset($user_rcv)) {
			$solicitud = $this->detalle_solicitud('_' . $this->input->post('uid'));
			$data = array(
				'fecha_creacion' => $solicitud->fecha_creacion,
				'estatus_solicitud' => $aprobacion,
				'uid' => $this->input->post('uid'),
				'comentarios' => $this->input->post('comentarios'),
				'tbl_usuarios_idtbl_usuarios' => $solicitud->tbl_usuarios_idtbl_usuarios,
				'tbl_users_idtbl_users_autor' => $solicitud->tbl_users_idtbl_users_autor,
				'tbl_users_idtbl_users_aprobacion' => $solicitud->tbl_users_idtbl_users_aprobacion,
				'tbl_proyectos_idtbl_proyectos' => $solicitud->tbl_proyectos_idtbl_proyectos,
				'tbl_segmentos_proyecto_idtbl_segmentos_proyecto' => $solicitud->tbl_segmentos_proyecto_idtbl_segmentos_proyecto,
				'tbl_contratistas_idtbl_contratistas' => $solicitud->tbl_contratistas_idtbl_contratistas,
				'tbl_usuarios_idtbl_usuarios_supervisor' => $solicitud->tbl_usuarios_idtbl_usuarios_supervisor,
				'tbl_users_idtbl_users_rcv' => $user_rcv,
				'tbl_users_idtbl_users_co' => $solicitud->tbl_users_idtbl_users_co,
				'tipo_producto' => $this->input->post('tipo_solicitud'),
				'fecha_aprobacion_pm' => $solicitud->fecha_aprobacion_pm,
				'fecha_aprobacion_co' => $solicitud->fecha_aprobacion_co,
				'fecha_aprobacion_rcv' => $solicitud->fecha_aprobacion_rcv,
				'tbl_tramites_vehiculares_idtbl_tramites_vehiculares' => $solicitud->tbl_tramites_vehiculares_idtbl_tramites_vehiculares
			);
		}
		if (isset($user_ac)) {
			$solicitud = $this->detalle_solicitud('___' . $this->input->post('uid'));
			$data = array(
				'fecha_creacion' => $solicitud->fecha_creacion,
				'estatus_solicitud' => $aprobacion,
				'uid' => $this->input->post('uid'),
				'comentarios' => $this->input->post('comentarios'),
				'tbl_usuarios_idtbl_usuarios' => $solicitud->tbl_usuarios_idtbl_usuarios,
				'tbl_users_idtbl_users_autor' => $solicitud->tbl_users_idtbl_users_autor,
				'tbl_users_idtbl_users_aprobacion' => $solicitud->tbl_users_idtbl_users_aprobacion,
				'tbl_proyectos_idtbl_proyectos' => $solicitud->tbl_proyectos_idtbl_proyectos,
				'tbl_segmentos_proyecto_idtbl_segmentos_proyecto' => $solicitud->tbl_segmentos_proyecto_idtbl_segmentos_proyecto,
				'tbl_contratistas_idtbl_contratistas' => $solicitud->tbl_contratistas_idtbl_contratistas,
				'tbl_usuarios_idtbl_usuarios_supervisor' => $solicitud->tbl_usuarios_idtbl_usuarios_supervisor,
				'tbl_users_idtbl_users_ac' => $user_ac,
				'tbl_users_idtbl_users_co' => $solicitud->tbl_users_idtbl_users_co,
				'tipo_producto' => $this->input->post('tipo_solicitud'),
				'fecha_aprobacion_pm' => $solicitud->fecha_aprobacion_pm,
				'fecha_aprobacion_co' => $solicitud->fecha_aprobacion_co,
				'fecha_aprobacion_ac' => $solicitud->fecha_aprobacion_ac
			);
		}
		if (isset($user_ag)) {
			$solicitud = $this->detalle_solicitud('___' . $this->input->post('uid'));
			if (isset($_POST['id_mantenimiento']) && $this->input->post('id_mantenimiento') != '') {
				$mantenimiento = $this->input->post('id_mantenimiento');
            }else{
				$mantenimiento = NULL;
			}
			$data = array(
				'fecha_creacion' => $solicitud->fecha_creacion,
				'estatus_solicitud' => $aprobacion,
				'uid' => $this->input->post('uid'),
				'comentarios' => $this->input->post('comentarios'),
				'tbl_usuarios_idtbl_usuarios' => $solicitud->tbl_usuarios_idtbl_usuarios,
				'tbl_users_idtbl_users_autor' => $solicitud->tbl_users_idtbl_users_autor,
				'tbl_users_idtbl_users_aprobacion' => $solicitud->tbl_users_idtbl_users_aprobacion,
				'tbl_proyectos_idtbl_proyectos' => $solicitud->tbl_proyectos_idtbl_proyectos,
				'tbl_segmentos_proyecto_idtbl_segmentos_proyecto' => $solicitud->tbl_segmentos_proyecto_idtbl_segmentos_proyecto,
				'tbl_contratistas_idtbl_contratistas' => $solicitud->tbl_contratistas_idtbl_contratistas,
				'tbl_usuarios_idtbl_usuarios_supervisor' => $solicitud->tbl_usuarios_idtbl_usuarios_supervisor,
				'uid_almacen_seleccionado' => $this->input->post('uid_almacen'),
				'tbl_users_idtbl_users_ag' => $user_ag,
				'tbl_users_idtbl_users_co' => $solicitud->tbl_users_idtbl_users_co,
				'tipo_producto' => $this->input->post('tipo_solicitud'),
				'fecha_aprobacion_pm' => $solicitud->fecha_aprobacion_pm,
				'fecha_aprobacion_co' => $solicitud->fecha_aprobacion_co,
				'fecha_aprobacion_ag' => $solicitud->fecha_aprobacion_ag,
				'tbl_tramites_vehiculares_idtbl_tramites_vehiculares' => $solicitud->tbl_tramites_vehiculares_idtbl_tramites_vehiculares,
				'tbl_users_idtbl_users_asignacion' => $user_id,
				'tbl_mantenimientos_idtbl_mantenimientos' => $mantenimiento
			);
		}
		if (isset($user_co)) {
			$solicitud = $this->detalle_solicitud('__' . $this->input->post('uid'));
			if (isset($_POST['id_mantenimiento']) && $this->input->post('id_mantenimiento') != '') {
				$mantenimiento = $this->input->post('id_mantenimiento');
            }else{
				$mantenimiento = NULL;
			}
			$data = array(
				'fecha_creacion' => $solicitud->fecha_creacion,
				'estatus_solicitud' => $aprobacion,
				'uid' => $this->input->post('uid'),
				'comentarios' => $this->input->post('comentarios'),
				'tbl_usuarios_idtbl_usuarios' => $solicitud->tbl_usuarios_idtbl_usuarios,
				'tbl_users_idtbl_users_autor' => $solicitud->tbl_users_idtbl_users_autor,
				'tbl_users_idtbl_users_aprobacion' => $solicitud->tbl_users_idtbl_users_aprobacion,
				'tbl_proyectos_idtbl_proyectos' => $solicitud->tbl_proyectos_idtbl_proyectos,
				'tbl_segmentos_proyecto_idtbl_segmentos_proyecto' => $solicitud->tbl_segmentos_proyecto_idtbl_segmentos_proyecto,
				'tbl_contratistas_idtbl_contratistas' => $solicitud->tbl_contratistas_idtbl_contratistas,
				'tbl_usuarios_idtbl_usuarios_supervisor' => $solicitud->tbl_usuarios_idtbl_usuarios_supervisor,
				'tbl_users_idtbl_users_co' => $user_co,
				'uid_almacen_seleccionado' => $solicitud->uid_almacen_seleccionado,
				'tipo_producto' => $this->input->post('tipo_solicitud'),
				'fecha_aprobacion_pm' => $solicitud->fecha_aprobacion_pm,
				'fecha_aprobacion_co' => $solicitud->fecha_aprobacion_co,
				'tbl_mantenimientos_idtbl_mantenimientos' => $mantenimiento
			);
		}
		if (isset($user_pm)) {
			$solicitud = $this->detalle_solicitud('_' . $this->input->post('uid'));
			if (isset($_POST['id_mantenimiento']) && $this->input->post('id_mantenimiento') != '') {
				$mantenimiento = $this->input->post('id_mantenimiento');
            }else{
				$mantenimiento = NULL;
			}
			$data = array(
				'fecha_creacion' => $solicitud->fecha_creacion,
				'estatus_solicitud' => $aprobacion,
				'uid' => $this->input->post('uid'),
				'comentarios' => $this->input->post('comentarios'),
				'tbl_usuarios_idtbl_usuarios' => $solicitud->tbl_usuarios_idtbl_usuarios,
				'tbl_users_idtbl_users_autor' => $solicitud->tbl_users_idtbl_users_autor,
				'tbl_users_idtbl_users_aprobacion' => $solicitud->tbl_users_idtbl_users_aprobacion,
				'tbl_proyectos_idtbl_proyectos' => $solicitud->tbl_proyectos_idtbl_proyectos,
				'tbl_segmentos_proyecto_idtbl_segmentos_proyecto' => $solicitud->tbl_segmentos_proyecto_idtbl_segmentos_proyecto,
				'tbl_contratistas_idtbl_contratistas' => $solicitud->tbl_contratistas_idtbl_contratistas,
				'tbl_usuarios_idtbl_usuarios_supervisor' => $solicitud->tbl_usuarios_idtbl_usuarios_supervisor,
				'tipo_producto' => $this->input->post('tipo_solicitud'),
				'fecha_aprobacion_pm' => $solicitud->fecha_aprobacion_pm,
				'tbl_mantenimientos_idtbl_mantenimientos' => $mantenimiento
			);
		}
		$this->db->insert('tbl_solicitud_material', $data);
		$insert_id = $this->db->insert_id();
		foreach ($this->input->post('producto') as $key => $value) {
			if ($value != 0) {
				if((($this->input->post('categoria')[$key] == 7 || $this->input->post('categoria')[$key] == 16 || $value == "25053" || $value == "22124" || $value == "22882" || $value == "22463" || $value == "22918" || $value == "19955" || $value == "25054" || $value == "19420" || $value == "19421" || $value =="22763" || $value == "24792" || $value == "24793" || $value == "19428" || $value == "19429"))){
					$data = array(
						'tbl_solicitud_material_idtbl_solicitud_material' => $insert_id,
						'tbl_catalogo_idtbl_catalogo' => $value,
						'cantidad' => $this->input->post('cantidad')[$key],
						'observaciones' => $this->input->post('observaciones')[$key],
						'dtl_almacen_iddtl_almacen' => is_float($this->input->post('existencias')[$key] || !isset($this->input->post('existencias')[$key])) ? NULL : $this->input->post('existencias')[$key],
						'sitio' => isset($this->input->post('sitios')[$key]) ? $this->input->post('sitios')[$key] : ''
					); 
				}else{
					$data = array(
						'tbl_solicitud_material_idtbl_solicitud_material' => $insert_id,
						'tbl_catalogo_idtbl_catalogo' => $value,
						'cantidad' => $this->input->post('cantidad')[$key],
						'observaciones' => $this->input->post('observaciones')[$key],
                        //'dtl_almacen_iddtl_almacen' => '',
						'sitio' => isset($this->input->post('sitios')[$key]) ? $this->input->post('sitios')[$key] : ''
					); 
				}
				
			}
			//if ($this->input->post('cantidad')[$key] != 0) {
				//Se registra la entrada
				$this->db->insert('dtl_solicitud_material', $data);
			//}
			if($this->session->userdata('tipo') == 4 || ($this->session->userdata('encargado_almacen') != null && $this->session->userdata('encargado_almacen') != '')){
				if ($this->input->post('cantidad')[$key] != 0){
					if((($this->input->post('categoria')[$key] == 7 || $this->input->post('categoria')[$key] == 16 || $value == "25053" || $value == "19955" || $value == "25054" || $value == "22124" || $value == "22882" || $value == "22463" || $value == "22918" || $value == "19420" || $value == "19421" || $value == "22763" || $value == "24792" || $value == "24793" || $value == "19428" || $value == "19429"))){
						$this->db->set('estatus', 'asignado');
						$this->db->where('iddtl_almacen', $this->input->post('existencias')[$key]);
						$this->db->update('dtl_almacen');
						$this->db->set('dtl_almacen_iddtl_almacen', $this->input->post('existencias')[$key]);
						$this->db->where("iddtl_solicitud_material", $this->input->post('iddtl_solicitud_material')[$key]);
						$this->db->update('dtl_solicitud_material');
					}else{
						$this->db->set('existencias', 'existencias - ' . $this->input->post('cantidad')[$key], FALSE);
						$this->db->where("tbl_catalogo_idtbl_catalogo", $value);
						$this->db->where('tbl_almacenes_idtbl_almacenes', $this->input->post("idtbl_almacenes"));
						$this->db->where('estatus', 'almacen');
						$this->db->update('dtl_almacen');
					}
				}
			}
		}
		if ($this->db->trans_status() === FALSE) {
			$this->db->trans_rollback();
			return false;
		} else {
			$this->db->trans_commit();
			return true;
		}
	}
	
	public function aprobar_solicitud($aux = '') {
		if ($this->session->userdata('tipo') == 1 && $this->session->userdata('permiso_autorizar') == 'si' && $this->input->post('tipo_solicitud') == 'Almacen General') {
			$data = array(
				'estatus_solicitud' => 'AG',
				'fecha_aprobacion_pm' => date('Y-m-d H:i:s')
			);
		}elseif (($this->session->userdata('tipo') == 9 || $this->session->userdata('tipo') == 12 || $this->session->userdata('tipo') == 17 || $this->session->userdata('tipo') == 19) && $this->session->userdata('permiso_autorizar') == 'si' && $this->input->post('tipo_solicitud') == 'Almacen General' && $this->session->userdata('id') != 48 && $this->session->userdata('id') != 46 && $this->session->userdata('id') != 47 && ($this->input->post('contratista') != '' && $this->input->post('contratista') != NULL)) {
			$data = array(
				'estatus_solicitud' => 'CO PM',
				'fecha_aprobacion_pm' => date('Y-m-d H:i:s')
			);
		}
		elseif (($this->session->userdata('tipo') == 9 || $this->session->userdata('tipo') == 12 || $this->session->userdata('tipo') == 17 || $this->session->userdata('tipo') == 19) && $this->session->userdata('permiso_autorizar') == 'si' && $this->input->post('tipo_solicitud') == 'Tarjetas' && $this->session->userdata('id') != 48 && $this->session->userdata('id') != 46 && $this->session->userdata('id') != 47 && ($this->input->post('contratista') != '' && $this->input->post('contratista') != NULL)) {
			$data = array(
				'estatus_solicitud' => 'CO PM',
				'fecha_aprobacion_pm' => date('Y-m-d H:i:s')
			);
		}
		elseif (($this->session->userdata('tipo') == 9 || (($this->session->userdata('tipo') == 17 || $this->session->userdata('tipo') == 19 || $this->session->userdata('tipo') == 1) && $this->session->userdata('encargado_almacen') == null) || $this->session->userdata('tipo') == 12) && $this->session->userdata('permiso_autorizar') == 'si' && $this->input->post('tipo_solicitud') == 'Control Vehicular' && $this->session->userdata('id') != 48 && $this->session->userdata('id') != 46 && $this->session->userdata('id') != 47 && ($this->input->post('contratista') != '' && $this->input->post('contratista') != NULL)) {
			$data = array(
				'estatus_solicitud' => 'CO CV',
				'fecha_aprobacion_pm' => date('Y-m-d H:i:s')
			);
		}
		elseif (($this->session->userdata('tipo') == 17 || $this->session->userdata('tipo') == 19) && $this->session->userdata('permiso_autorizar') == 'si' && $this->input->post('tipo_solicitud') == 'Sistemas' && ($this->input->post('contratista') != '' && $this->input->post('contratista') != NULL)) {
			$data = array(
				'estatus_solicitud' => 'CO PM',
				'fecha_aprobacion_pm' => date('Y-m-d H:i:s')
			);
		}
		elseif ($this->session->userdata('tipo') == 10 && $this->input->post('tipo_solicitud') == 'Seguridad e Higiene' && $this->session->userdata('permiso_autorizar') == 'si' && ($this->input->post('contratista') != '' && $this->input->post('contratista') != NULL)) {
			$data = array(
				'estatus_solicitud' => 'CO SH',
				'fecha_aprobacion_pm' => date('Y-m-d H:i:s')
			);
		}
		elseif (($this->session->userdata('tipo') == 9 || $this->session->userdata('tipo') == 12 || $this->session->userdata('tipo') == 17 || $this->session->userdata('tipo') == 19) && $this->session->userdata('permiso_autorizar') == 'si' && $this->input->post('tipo_solicitud') == 'Alto costo' && $this->session->userdata('id') != 48 && $this->session->userdata('id') != 46 && $this->session->userdata('id') != 47 && ($this->input->post('contratista') != '' && $this->input->post('contratista') != NULL)) {
			$data = array(
				'estatus_solicitud' => 'CO AC',
				'fecha_aprobacion_pm' => date('Y-m-d H:i:s')
			);
		}
		elseif (($this->session->userdata('tipo') == 9 || $this->session->userdata('tipo') == 12 || $this->session->userdata('tipo') == 17 || $this->session->userdata('tipo') == 19) && $this->session->userdata('permiso_autorizar') == 'si' && $this->input->post('tipo_solicitud') == 'Almacen General' && $this->session->userdata('id') != 48 && $this->session->userdata('id') != 46 && $this->session->userdata('id') != 47) {
			$data = array(
				'estatus_solicitud' => 'CO PM',
				'fecha_aprobacion_pm' => date('Y-m-d H:i:s')
			);
		}
		elseif (($this->session->userdata('tipo') == 9 || $this->session->userdata('tipo') == 12 || $this->session->userdata('tipo') == 17 || $this->session->userdata('tipo') == 19 || $this->session->userdata('tipo') == 1) && $this->session->userdata('permiso_autorizar') == 'si' && $this->input->post('tipo_solicitud') == 'Tarjetas' && $this->session->userdata('id') != 48 && $this->session->userdata('id') != 46 && $this->session->userdata('id') != 47) {
			$data = array(
				'estatus_solicitud' => 'RCV',
				'fecha_aprobacion_pm' => date('Y-m-d H:i:s')
			);
		}
		elseif (($this->session->userdata('tipo') == 9 || (($this->session->userdata('tipo') == 17 || $this->session->userdata('id') == 226 || $this->session->userdata('tipo') == 19 || $this->session->userdata('tipo') == 1) && $this->session->userdata('encargado_almacen') == null) || $this->session->userdata('tipo') == 12) && $this->session->userdata('permiso_autorizar') == 'si' && $this->input->post('tipo_solicitud') == 'Control Vehicular' && $this->session->userdata('id') != 48 && $this->session->userdata('id') != 46 && $this->session->userdata('id') != 47) {
			$data = array(
				'estatus_solicitud' => 'CV',
				'fecha_aprobacion_pm' => date('Y-m-d H:i:s')
			);
		}
		elseif (($this->session->userdata('tipo') == 17 || $this->session->userdata('tipo') == 19 || $this->session->userdata('tipo') == 1) && $this->session->userdata('permiso_autorizar') == 'si' && $this->input->post('tipo_solicitud') == 'Sistemas') {
			$data = array(
				'estatus_solicitud' => 'Sis',
				'fecha_aprobacion_pm' => date('Y-m-d H:i:s')
			);
		}
		elseif ($this->session->userdata('tipo') == 10 && $this->input->post('tipo_solicitud') == 'Seguridad e Higiene' && $this->session->userdata('permiso_autorizar') == 'si') {
			$data = array(
				'estatus_solicitud' => 'AG',
				'fecha_aprobacion_pm' => date('Y-m-d H:i:s')
			);
		}
		elseif (($this->session->userdata('tipo') == 9 || $this->session->userdata('tipo') == 12 || $this->session->userdata('tipo') == 17 || $this->session->userdata('tipo') == 19) && $this->session->userdata('permiso_autorizar') == 'si' && $this->input->post('tipo_solicitud') == 'Alto costo' && $this->session->userdata('id') != 48 && $this->session->userdata('id') != 46 && $this->session->userdata('id') != 47) {
			$data = array(
				'estatus_solicitud' => 'AC',
				'fecha_aprobacion_pm' => date('Y-m-d H:i:s')
			);
		}
		elseif (($this->session->userdata('tipo') == 11 || $this->session->userdata('id') == 48 || $this->session->userdata('id') == 47 || $this->session->userdata('id') == 46) && $this->session->userdata('permiso_autorizar') == 'si' && ($this->input->post('tipo_solicitud') == 'Almacen General' || $this->input->post('tipo_solicitud') == 'Seguridad e Higiene')) {
			$data = array(
				'estatus_solicitud' => 'AG',
				'tbl_users_idtbl_users_co' => $this->session->userdata('id'),
				'fecha_aprobacion_co' => date('Y-m-d H:i:s')
			);
		}
		elseif (($this->session->userdata('tipo') == 11 || $this->session->userdata('id') == 48 || $this->session->userdata('id') == 47 || $this->session->userdata('id') == 46) && $this->session->userdata('permiso_autorizar') == 'si' && $this->input->post('tipo_solicitud') == 'Alto costo') {
			$data = array(
				'estatus_solicitud' => 'AC',
				'tbl_users_idtbl_users_co' => $this->session->userdata('id'),
				'fecha_aprobacion_co' => date('Y-m-d H:i:s')
			);
		}
		elseif (($this->session->userdata('tipo') == 11 || $this->session->userdata('id') == 48 || $this->session->userdata('id') == 47 || $this->session->userdata('id') == 46) && $this->session->userdata('permiso_autorizar') == 'si' && $this->input->post('tipo_solicitud') == 'Control Vehicular') {
			$data = array(
				'estatus_solicitud' => 'CV',
				'tbl_users_idtbl_users_co' => $this->session->userdata('id'),
				'fecha_aprobacion_co' => date('Y-m-d H:i:s')
			);
		}
		elseif ($this->session->userdata('tipo') == 11 && $this->session->userdata('permiso_autorizar') == 'si' && $this->input->post('tipo_solicitud') == 'Sistemas') {
			$data = array(
				'estatus_solicitud' => 'Sis',
				'tbl_users_idtbl_users_co' => $this->session->userdata('id'),
				'fecha_aprobacion_co' => date('Y-m-d H:i:s')
			);
		}
		elseif ($this->session->userdata('tipo') == 9 && ($this->session->userdata('id') == 60) && $this->session->userdata('permiso_autorizar') == 'si' && $this->input->post('tipo_solicitud') == 'Kuali') {
			$data = array(
				'estatus_solicitud' => 'K',
				'fecha_aprobacion_pm' => date('Y-m-d H:i:s')
				//'tbl_users_idtbl_users_co' => $this->session->userdata('id')
			);
		}
		elseif (($this->session->userdata('tipo') == 19 || $this->session->userdata('tipo') == 17 || $this->session->userdata('tipo') == 10) && $this->session->userdata('permiso_autorizar') == 'si' && $this->input->post('tipo_solicitud') == 'Kuali') {
			$data = array(
				'estatus_solicitud' => 'K',
				'fecha_aprobacion_pm' => date('Y-m-d H:i:s')
				//'tbl_users_idtbl_users_co' => $this->session->userdata('id')
			);
		}
		elseif (($this->session->userdata('id') == 48 || $this->session->userdata('id') == 369) && $this->session->userdata('permiso_autorizar') == 'si' && $this->input->post('tipo_solicitud') == 'Kuali') {
			$data = array(
				'estatus_solicitud' => 'K',
				'fecha_aprobacion_co' => date('Y-m-d H:i:s'),
				'tbl_users_idtbl_users_co' => $this->session->userdata('id')
			);
		}
		elseif ($this->session->userdata('tipo') == 12 && $this->session->userdata('id') == 17  && $this->session->userdata('permiso_autorizar') == 'si' && $this->input->post('tipo_solicitud') == 'Kuali') {
			$data = array(
				'estatus_solicitud' => 'K',
				'fecha_aprobacion_pm' => date('Y-m-d H:i:s')
				//'tbl_users_idtbl_users_co' => $this->session->userdata('id')
			);
		}
		elseif ($this->session->userdata('tipo') == 9 && @$this->session->userdata('permisos')['orden_servicio'] == 3  && $this->session->userdata('permiso_autorizar') == 'si' && $this->input->post('tipo_solicitud') == 'Material Instalacion Kuali') {
			$data = array(
				'estatus_solicitud' => 'K',
				'fecha_aprobacion_pm' => date('Y-m-d H:i:s')
				//'tbl_users_idtbl_users_co' => $this->session->userdata('id')
			);
		}
		elseif ($this->session->userdata('tipo') == 14  && $this->session->userdata('permiso_autorizar') == 'si' && $this->input->post('tipo_solicitud') == 'Medica') {
			$data = array(
				'estatus_solicitud' => 'SU AM',
				'tbl_users_idtbl_users_am' => $this->session->userdata('id'),
				'fecha_aprobacion_am' => date('Y-m-d H:i:s')
				//'tbl_users_idtbl_users_co' => $this->session->userdata('id')
			);
		}
		elseif ($this->session->userdata('tipo') == 3  && $this->session->userdata('permiso_autorizar') == 'si' && $this->input->post('tipo_solicitud') == 'Refacciones Control Vehicular') {
			$data = array(
				'estatus_solicitud' => 'AG',
				'tbl_users_idtbl_users_rcv' => $this->session->userdata('id'),
				'fecha_aprobacion_rcv' => date('Y-m-d H:i:s')
				//'tbl_users_idtbl_users_co' => $this->session->userdata('id')
			);
		}
		elseif ($this->session->userdata('tipo') == 4 && $aux === '' && $this->session->userdata('permiso_autorizar') == 'si' && $this->input->post('tipo_solicitud') == 'Refacciones Control Vehicular') {
			if (isset($_POST['user_asignacion']) && $this->input->post('user_asignacion') != '') {
                $query = $this->db->get_where("ctl_autorizados_entrega", array("idctl_autorizados_entrega" => $this->input->post('user_asignacion')));
                $result = $query->result()[0];
                $user_id = $result->tbl_users_idtbl_users;
				$data = array(
					'estatus_solicitud' => 'SU RCV A',
					'tbl_users_idtbl_users_ag' => $this->session->userdata('id'),
					'uid_almacen_seleccionado' => UID_ALMACEN_REFACCIONES_CONTROL_VEHICULAR,
					'fecha_aprobacion_ag' => date('Y-m-d H:i:s'),
					'tbl_users_idtbl_users_asignacion' => $user_id
				);				
            }else{
				$user_id = NULL;
				$data = array(
					'estatus_solicitud' => 'SU RCV',
					'tbl_users_idtbl_users_ag' => $this->session->userdata('id'),
					'uid_almacen_seleccionado' => UID_ALMACEN_REFACCIONES_CONTROL_VEHICULAR,
					'fecha_aprobacion_ag' => date('Y-m-d H:i:s'),
					'tbl_users_idtbl_users_asignacion' => $user_id
				);	
			}
		}
		elseif ($this->session->userdata('tipo') == 3 && $aux === '' && $this->session->userdata('permiso_autorizar') == 'si' && $this->input->post('tipo_solicitud') == 'Tarjetas') {
							
			$data = array(
				'estatus_solicitud' => 'SU RCV',
				'tbl_users_idtbl_users_cv' => $this->session->userdata('id'),
				'uid_almacen_seleccionado' => UID_ALMACEN_TARJETAS_GASOLINA,
				'fecha_aprobacion_cv' => date('Y-m-d H:i:s')
			);	
			
		}
		elseif (($this->session->userdata('tipo') == 4 || ($this->session->userdata('encargado_almacen') != null && $this->session->userdata('encargado_almacen') != '')) && empty($aux) && ($this->input->post('tipo_solicitud')=='Almacen General' || $this->input->post('tipo_solicitud') == 'Kuali' || $this->input->post('tipo_solicitud')=='Seguridad e Higiene')) {
            if (isset($_POST['user_asignacion']) && $this->input->post('user_asignacion') != '') {
                $query = $this->db->get_where("ctl_autorizados_entrega", array("idctl_autorizados_entrega" => $this->input->post('user_asignacion')));
                $result = $query->result()[0];
                $user_id = $result->tbl_users_idtbl_users;
				if(isset($_POST['uid_almacen'])){
					$uid_almacen = $this->input->post('uid_almacen');
					
				}else{
					$uid_almacen = '5e786c1641355';
				}
				$data = array(
					'estatus_solicitud' => $this->session->userdata('id') == 50 ? 'SU K' : 'SU A',
					'tbl_users_idtbl_users_ag' => $this->session->userdata('id'),
					'uid_almacen_seleccionado' => $uid_almacen,
					'fecha_aprobacion_ag' => date('Y-m-d H:i:s'),
					'tbl_users_idtbl_users_asignacion' => $user_id
				);
            }else{
				if(isset($_POST['uid_almacen'])){
					$uid_almacen = $this->input->post('uid_almacen');
					
				}else{
					$uid_almacen = '5e786c1641355';
				}
				$user_id = NULL;
				$data = array(
					'estatus_solicitud' => $this->session->userdata('id') == 50 ? 'SU K' : 'SU A',
					'tbl_users_idtbl_users_ag' => $this->session->userdata('id'),
					'uid_almacen_seleccionado' => $uid_almacen,
					'fecha_aprobacion_ag' => date('Y-m-d H:i:s'),
					'tbl_users_idtbl_users_asignacion' => $user_id
				);
			}
			
		}
		elseif ($this->session->userdata('tipo') == 1 && empty($aux) && $this->input->post('tipo_solicitud') == 'Alto costo') {
			$data = array(
				'estatus_solicitud' => 'SU AC',
				'tbl_users_idtbl_users_ac' => $this->session->userdata('id'),
				'uid_almacen_seleccionado' => '25839864557600771',
				'fecha_aprobacion_ac' => date('Y-m-d H:i:s')
			);
		}
		elseif ($this->session->userdata('tipo') == 3 && empty($aux) && $this->input->post('tipo_solicitud') == 'Control Vehicular') {
			$data = array(
				'estatus_solicitud' => 'SU CV',
				'tbl_users_idtbl_users_cv' => $this->session->userdata('id'),
				'uid_almacen_seleccionado' => UID_ALMACEN_AUTOS_CONTROL_VEHICULAR,
				'fecha_aprobacion_cv' => date('Y-m-d H:i:s')
			);
		}
		elseif ($this->session->userdata('tipo') == 4 && $aux === 3 && $this->input->post('tipo_solicitud') == 'Refacciones Control Vehicular') {
			$data = array(
				'estatus_solicitud' => 'SRCV',
				'tbl_users_idtbl_users_ag' => $this->session->userdata('id'),
				'uid_almacen_seleccionado' => UID_ALMACEN_REFACCIONES_CONTROL_VEHICULAR,
				'fecha_aprobacion_ag' => date('Y-m-d H:i:s')
			);
		}
		elseif ($this->session->userdata('tipo') == 2 && empty($aux) && $this->input->post('tipo_solicitud') == 'Sistemas') {
			$data = array(
				'estatus_solicitud' => 'SU Sis',
				'tbl_users_idtbl_users_sis' => $this->session->userdata('id'),
				'uid_almacen_seleccionado' => UID_ALMACEN_SISTEMAS,
				'fecha_aprobacion_sis' => date('Y-m-d H:i:s')
			);
		}
		/*elseif ($this->session->userdata('tipo') == 4 && empty($aux) && $this->input->post('tipo_solicitud') == 'Kuali') {
			$data = array(
				'estatus_solicitud' => 'SU K',
				'tbl_users_idtbl_users_ag' => $this->session->userdata('id'),
				'uid_almacen_seleccionado' => '5e786c1641355',
				'fecha_aprobacion_ag' => date('Y-m-d H:i:s')				
				//'uid_almacen_seleccionado' => $_POST['uid_almacen']
			);
		}*/
		elseif ($this->session->userdata('tipo') == 4 && empty($aux) && $this->input->post('tipo_solicitud') == 'Material Instalacion Kuali') {
			$data = array(
				'estatus_solicitud' => 'SU K',
				'tbl_users_idtbl_users_ag' => $this->session->userdata('id'),
				'uid_almacen_seleccionado' => '5e786c1641355',
				'fecha_aprobacion_ag' => date('Y-m-d H:i:s')				
				//'uid_almacen_seleccionado' => $_POST['uid_almacen']
			);
		}
		if ($aux == 1) {
			$data = array(
				'estatus_solicitud' => 'S'
			);
		}elseif($aux == 2){
			$data = array(
				'estatus_solicitud' => 'SK'
			);
		}
		//else {
		//	$data = array(
		//		'estatus_solicitud' => 'aprobada'
		//	);
		//}
		$this->db->set($data);
		$this->db->where('uid', $this->input->post('uid'));
		$result = $this->db->update('tbl_solicitud_material');

        if ($aux == '') {
            if ($this->session->userdata('tipo') == 4 || ($this->session->userdata('encargado_almacen') != null && $this->session->userdata('encargado_almacen') != '')) {
                foreach ($this->input->post('producto') as $key => $value) {
                    if ($this->input->post('cantidad')[$key] != 0) {
                        if ((($this->input->post('categoria')[$key] == 7 || $this->input->post('categoria')[$key] == 16 || $value == "25053" || $value == "19955" || $value == "25054" || $value == "22124" || $value == "22882" || $value == "22463" || $value == "22918" || $value == "19420" || $value == "19421" || $value == "22763" || $value == "24792" || $value == "24793" || $value == "19428" || $value == "19429"))) {
                            $this->db->set('estatus', 'asignado');
                            $this->db->where('iddtl_almacen', $this->input->post('existencias')[$key]);
                            $this->db->update('dtl_almacen');
                            $this->db->set('dtl_almacen_iddtl_almacen', $this->input->post('existencias')[$key]);
                            $this->db->where("iddtl_solicitud_material", $this->input->post('iddtl_solicitud_material')[$key]);
                            $this->db->update('dtl_solicitud_material');
                        } else {
					
                            $this->db->set('existencias', 'existencias - ' . $this->input->post('cantidad_inicial')[$key], false);
                            $this->db->where("tbl_catalogo_idtbl_catalogo", $value);
                            $this->db->where('tbl_almacenes_idtbl_almacenes', $this->input->post("idtbl_almacenes"));
                            $this->db->where('estatus', 'almacen');
                            $this->db->update('dtl_almacen');
							
                        }
                    }
                }
            }
        }

		return  $result;
	}


	//Actualiza el neodata de una salida
	public function actualizar_neodata() {
        
            $data = array(
            	'neodata_salida' => $this->input->post('neodata')
        	);
        
            $this->db->set($data);
            $this->db->where('uid', $this->input->post('uid'));
            $result = $this->db->update('tbl_solicitud_material');
        

		return  $result;
	}

	//Actualiza el neodata de una salida
	public function comentarios_neodata() {
		
        foreach ($this->input->post('iddtl_solicitud_material') as $key => $value) {
			
            $data = array(
            	'observaciones_neodata' => $this->input->post('observacionesNeodata')[$key]
        	);
        
            $this->db->set($data);
            $this->db->where('iddtl_solicitud_material', $this->input->post('iddtl_solicitud_material')[$key]);
            $result = $this->db->update('dtl_solicitud_material');
        }

		return  $result;
	}

	//Actualiza el neodata de una salida
	public function comentarios_neodata_devolucion() {
		
        foreach ($this->input->post('iddtl_solicitud_devolucion') as $key => $value) {
			
            $data = array(
            	'observaciones_neodata' => $this->input->post('observacionesNeodata')[$key]
        	);
        
            $this->db->set($data);
            $this->db->where('iddtl_solicitud_devolucion', $this->input->post('iddtl_solicitud_devolucion')[$key]);
            $result = $this->db->update('dtl_solicitud_devolucion');
        }

		return  $result;
	}

	//Actualiza el recorrido de un mantenimiento
	public function guardar_recorrido() {
		$array = [
			'estatus' => 'SPM',
			'tbl_users_idtbl_users_supervisor' => $this->input->post('supervisor_asignado'),
			'tbl_usuarios_idtbl_usuarios' => $this->input->post('lider_asignado')
			//'fecha_aprobacion_pm' => date('Y-m-d H:i:s'),
			//'user_aprobacion_pm' => $this->session->userdata("id")			
		];
		$this->db->where('idtbl_mantenimientos', $this->input->post('idtbl_mantenimientos'));
		$this->db->update('tbl_mantenimientos', $array);

		$arrayJustificar = [
			'kilometraje' => $this->input->post('rematado_final'),
			'kilometraje_tendido' => $this->input->post('tendido_final'),
			'latitud' => $this->input->post('latitud'),
			'longitud' => $this->input->post('longitud'),
			'tbl_mantenimientos_idtbl_mantenimientos' => $this->input->post('idtbl_mantenimientos'),
			'tbl_users_idtbl_users_supervisor' => $this->input->post('supervisor_asignado')
		];
		$result = $this->db->insert('tbl_justificacion_generador', $arrayJustificar);

		return  $result;
	}

	public function aprobar_justificacion() {
		if (isset($this->session->userdata('permisos')['supervisor']) && $this->session->userdata('permisos')['supervisor']>0) {
			$data = array(
				'estatus' => 'Autorizado Supervisor',
				'fecha_aprobacion_supervisor' => date('Y-m-d H:i:s')
			);
		}
		
		$this->db->set($data);
		$this->db->where('uid', $this->input->post('uid_justificacion'));
		$result = $this->db->update('tbl_justificacion_material');
		return  $result;
	}
	
	public function surtir_solicitudAC($aux = '') {
		if ($this->session->userdata('tipo') == 1 && empty($aux)) {
			$data = array(
				'estatus_solicitud' => 'SAC',
				//'tbl_users_idtbl_users_ac' => $this->session->userdata('id')
				//'uid_almacen_seleccionado' => $_POST['uid_almacen']
			);
		}elseif(($this->session->userdata('tipo') == 10 || $this->session->userdata('tipo')==14) && empty($aux)){
			$data = array(
				'estatus_solicitud' => 'SAM',
				//'tbl_users_idtbl_users_ac' => $this->session->userdata('id')
				//'uid_almacen_seleccionado' => $_POST['uid_almacen']
			);
		}
		if ($aux == 1) {
			$data = array(
				'estatus_solicitud' => 'S'
			);
		}
		//else {
		//	$data = array(
		//		'estatus_solicitud' => 'aprobada'
		//	);
		//}
		$this->db->set($data);
		$this->db->where('uid', $this->input->post('uid'));
		$result = $this->db->update('tbl_solicitud_material');
		return  $result;
	}

	public function surtir_solicitudCV($aux = '') {
		if ($this->session->userdata('tipo') == 3 && empty($aux)) {
			$data = array(
				'estatus_solicitud' => 'SCV',
				//'tbl_users_idtbl_users_ac' => $this->session->userdata('id')
				//'uid_almacen_seleccionado' => $_POST['uid_almacen']
			);
		}
		if ($aux == 1) {
			$data = array(
				'estatus_solicitud' => 'S'
			);
		}
		//else {
		//	$data = array(
		//		'estatus_solicitud' => 'aprobada'
		//	);
		//}
		$this->db->set($data);
		$this->db->where('uid', $this->input->post('uid'));
		$result = $this->db->update('tbl_solicitud_material');
		return  $result;
	}

	public function surtir_solicitudRCV($aux = '') {
		if ($this->session->userdata('tipo') == 3 && empty($aux)) {
			$data = array(
				'estatus_solicitud' => 'SRCV',
				//'tbl_users_idtbl_users_ac' => $this->session->userdata('id')
				//'uid_almacen_seleccionado' => $_POST['uid_almacen']
			);
		}
		if ($aux == 1) {
			$data = array(
				'estatus_solicitud' => 'S'
			);
		}
		//else {
		//	$data = array(
		//		'estatus_solicitud' => 'aprobada'
		//	);
		//}
		$this->db->set($data);
		$this->db->where('uid', $this->input->post('uid'));
		$result = $this->db->update('tbl_solicitud_material');
		return  $result;
	}

	public function surtir_solicitudSistemas($aux = '') {
		if ($this->session->userdata('tipo') == 2 && empty($aux)) {
			$data = array(
				'estatus_solicitud' => 'SSis',
				//'tbl_users_idtbl_users_ac' => $this->session->userdata('id')
				//'uid_almacen_seleccionado' => $_POST['uid_almacen']
			);
		}
		if ($aux == 1) {
			$data = array(
				'estatus_solicitud' => 'S'
			);
		}
		//else {
		//	$data = array(
		//		'estatus_solicitud' => 'aprobada'
		//	);
		//}
		$this->db->set($data);
		$this->db->where('uid', $this->input->post('uid'));
		$result = $this->db->update('tbl_solicitud_material');
		return  $result;
	}

	public function mis_solicitudes($buscar = '', $inicio = false, $cantidadRegistro = false) {
		if ($this->session->userdata('tipo') != 11) {
			$limit = '';
			if ($inicio !== false && $cantidadRegistro !== false) {
				$limit = 'LIMIT ' . $inicio . "," . $cantidadRegistro;
			}
			/*$this->db->select('tbl_proyectos.nombre_proyecto');
			$this->db->select('tbl_proyectos.numero_proyecto');
			$this->db->select('tbl_solicitud_material.*');
			$this->db->select('user_autor.nombre as user_autor');
			$this->db->select('user_aprobacion.nombre as user_aprobacion');
			$this->db->select('CONCAT(tbl_usuarios.nombres," ",tbl_usuarios.apellido_paterno," ",tbl_usuarios.apellido_materno) as recibe');

			$this->db->from('tbl_solicitud_material');

			$this->db->join('tbl_proyectos', 'tbl_solicitud_material.tbl_proyectos_idtbl_proyectos=tbl_proyectos.idtbl_proyectos', 'left');
			$this->db->join('tbl_users as user_autor', 'tbl_solicitud_material.tbl_users_idtbl_users_autor=user_autor.idtbl_users', 'left');
			$this->db->join('tbl_users as user_aprobacion', 'tbl_solicitud_material.tbl_users_idtbl_users_aprobacion=user_aprobacion.idtbl_users', 'left');
			$this->db->join('tbl_usuarios', 'tbl_solicitud_material.tbl_usuarios_idtbl_usuarios=tbl_usuarios.idtbl_usuarios', 'left');
			$this->db->not_like('tbl_solicitud_material.uid', '_');
			$this->db->where('user_autor.idtbl_users', $this->session->userdata('id'));
			$this->db->or_where('user_aprobacion.idtbl_users', $this->session->userdata('id'));
			$this->db->order_by('tbl_solicitud_material.idtbl_solicitud_material', 'DESC');*/
			$query = $this->db->query('SELECT tbl_proyectos.nombre_proyecto, tbl_proyectos.numero_proyecto, tbl_solicitud_material.*, user_autor.nombre as user_autor, user_aprobacion.nombre as user_aprobacion, CONCAT(tbl_usuarios.nombres," ",tbl_usuarios.apellido_paterno," ",tbl_usuarios.apellido_materno) as recibe FROM tbl_solicitud_material LEFT JOIN tbl_proyectos ON tbl_solicitud_material.tbl_proyectos_idtbl_proyectos=tbl_proyectos.idtbl_proyectos LEFT JOIN tbl_users as user_autor ON tbl_solicitud_material.tbl_users_idtbl_users_autor=user_autor.idtbl_users LEFT JOIN tbl_users as user_aprobacion ON tbl_solicitud_material.tbl_users_idtbl_users_aprobacion=user_aprobacion.idtbl_users LEFT JOIN tbl_usuarios ON tbl_solicitud_material.tbl_usuarios_idtbl_usuarios=tbl_usuarios.idtbl_usuarios WHERE tbl_solicitud_material.estatus_solicitud NOT LIKE "modificada%" AND (user_autor.idtbl_users = ' . $this->session->userdata("id") . ' OR user_aprobacion.idtbl_users = ' . $this->session->userdata("id") . ') AND (tbl_solicitud_material.uid LIKE ' . "'%$buscar%'" . ' OR tbl_proyectos.numero_proyecto LIKE ' . "'%$buscar%'" . ')' . ' ORDER BY tbl_solicitud_material.fecha_creacion DESC ' . $limit);
		}
		if ($this->session->userdata('tipo') == 11) {
			$limit = '';
			if ($inicio !== false && $cantidadRegistro !== false) {
				$limit = 'LIMIT ' . $inicio . "," . $cantidadRegistro;
			}
			/*$this->db->select('tbl_proyectos.nombre_proyecto');
			$this->db->select('tbl_proyectos.numero_proyecto');
			$this->db->select('tbl_solicitud_material.*');
			$this->db->select('user_autor.nombre as user_autor');
			$this->db->select('user_aprobacion.nombre as user_aprobacion');
			$this->db->select('CONCAT(tbl_usuarios.nombres," ",tbl_usuarios.apellido_paterno," ",tbl_usuarios.apellido_materno) as recibe');
			$this->db->from('tbl_solicitud_material');
			$this->db->join('tbl_proyectos', 'tbl_solicitud_material.tbl_proyectos_idtbl_proyectos=tbl_proyectos.idtbl_proyectos', 'left');
			$this->db->join('tbl_users as user_autor', 'tbl_solicitud_material.tbl_users_idtbl_users_autor=user_autor.idtbl_users', 'left');
			$this->db->join('tbl_users as user_aprobacion', 'tbl_solicitud_material.tbl_users_idtbl_users_aprobacion=user_aprobacion.idtbl_users', 'left');
			$this->db->join('tbl_usuarios', 'tbl_solicitud_material.tbl_usuarios_idtbl_usuarios=tbl_usuarios.idtbl_usuarios', 'left');
			$this->db->where('tbl_solicitud_material.estatus_solicitud', 'CO PM');
			$this->db->or_where('tbl_solicitud_material.estatus_solicitud', 'CO SH');
			$this->db->or_where('tbl_solicitud_material.estatus_solicitud', 'CO AC');
			$this->db->or_where('tbl_solicitud_material.estatus_solicitud', 'AG');
			$this->db->or_where('tbl_solicitud_material.estatus_solicitud', 'AC');
			$this->db->or_where('tbl_solicitud_material.estatus_solicitud', 'cancelada CO');
			$this->db->or_where('tbl_solicitud_material.estatus_solicitud', 'cancelada CO AC');
			$this->db->order_by('tbl_solicitud_material.idtbl_solicitud_material', 'DESC');*/
			$query = $this->db->query('SELECT tbl_proyectos.nombre_proyecto, tbl_proyectos.numero_proyecto, tbl_solicitud_material.*, user_autor.nombre as user_autor, user_aprobacion.nombre as user_aprobacion, CONCAT(tbl_usuarios.nombres," ",tbl_usuarios.apellido_paterno," ",tbl_usuarios.apellido_materno) as recibe FROM tbl_solicitud_material LEFT JOIN tbl_proyectos ON tbl_solicitud_material.tbl_proyectos_idtbl_proyectos=tbl_proyectos.idtbl_proyectos LEFT JOIN tbl_users as user_autor ON tbl_solicitud_material.tbl_users_idtbl_users_autor=user_autor.idtbl_users LEFT JOIN tbl_users as user_aprobacion ON tbl_solicitud_material.tbl_users_idtbl_users_aprobacion=user_aprobacion.idtbl_users LEFT JOIN tbl_usuarios ON tbl_solicitud_material.tbl_usuarios_idtbl_usuarios=tbl_usuarios.idtbl_usuarios WHERE tbl_solicitud_material.uid NOT LIKE "_" AND (tbl_solicitud_material.estatus_solicitud = "CO PM" OR tbl_solicitud_material.estatus_solicitud = "CO SH" OR tbl_solicitud_material.estatus_solicitud = "CO AC" OR tbl_solicitud_material.estatus_solicitud = "AG" OR tbl_solicitud_material.estatus_solicitud = "AC" OR tbl_solicitud_material.estatus_solicitud = "cancelada CO" OR tbl_solicitud_material.estatus_solicitud = "cancelada CO AC") AND (tbl_solicitud_material.uid LIKE ' . "'%$buscar%'" . ' OR tbl_proyectos.numero_proyecto LIKE ' . "'%$buscar%'" . ') ' . ' ORDER BY tbl_solicitud_material.fecha_creacion DESC ' . $limit);
		}
		//$this->db->not_like('tbl_solicitud_material.uid', '_');
		//$this->db->order_by('tbl_solicitud_material.idtbl_solicitud_material', 'DESC');
		//$query = $this->db->get();
		return $query->result();
	}

	public function editar_entrada_almacen_cliente() {
		$this->db->trans_begin();																																
		foreach ($this->input->post('producto') as $key => $value) {			
			//if ($this->input->post('cantidad')[$key] != 0){
				if((($this->input->post('categoria')[$key] == 7 || $this->input->post('categoria')[$key] == 16 || $value == "25053" || $value == "19955" || $value == "25054" || $value == "22124" || $value == "22882" || $value == "22463" || $value == "22918" || $value == "19420" || $value == "19421" || $value == "22763" || $value == "24792" || $value == "24793" || $value == "19428" || $value == "19429"))){					
					$this->db->set('cantidad', $this->input->post('nueva_cantidad')[$key]);
					$this->db->where("iddtl_almacen_entradas", $this->input->post('id_detalle_movimiento')[$key]);
					$this->db->update('dtl_almacen_movimientos');
				}else{					
					$this->db->set('cantidad', $this->input->post('nueva_cantidad')[$key]);
					$this->db->where("iddtl_almacen_entradas", $this->input->post('id_detalle_movimiento')[$key]);
					$this->db->update('dtl_almacen_movimientos');
				}
			//}else{
				//¿En caso de que sea cero eliminar el registro?
			//}
		}
		$this->db->set('sitio', $this->input->post('sitio'));
		$this->db->where('idtbl_almacen_movimientos', $this->input->post('id_movimiento'));
		$this->db->update('tbl_almacen_movimientos');

		if ($this->db->trans_status() === FALSE) {
			$this->db->trans_rollback();
			return false;
		} else {
			$this->db->trans_commit();
			return true;
		}
	}

	public function mis_solicitudesAG($buscar = '', $inicio = false, $cantidadRegistro = false) {
		if ($this->session->userdata('tipo') != 11) {
			$limit = '';
			if ($inicio !== false && $cantidadRegistro !== false) {
				$limit = 'LIMIT ' . $inicio . "," . $cantidadRegistro;
			}
			/*$this->db->select('tbl_proyectos.nombre_proyecto');
			$this->db->select('tbl_proyectos.numero_proyecto');
			$this->db->select('tbl_solicitud_material.*');
			$this->db->select('user_autor.nombre as user_autor');
			$this->db->select('user_aprobacion.nombre as user_aprobacion');
			$this->db->select('CONCAT(tbl_usuarios.nombres," ",tbl_usuarios.apellido_paterno," ",tbl_usuarios.apellido_materno) as recibe');

			$this->db->from('tbl_solicitud_material');

			$this->db->join('tbl_proyectos', 'tbl_solicitud_material.tbl_proyectos_idtbl_proyectos=tbl_proyectos.idtbl_proyectos', 'left');
			$this->db->join('tbl_users as user_autor', 'tbl_solicitud_material.tbl_users_idtbl_users_autor=user_autor.idtbl_users', 'left');
			$this->db->join('tbl_users as user_aprobacion', 'tbl_solicitud_material.tbl_users_idtbl_users_aprobacion=user_aprobacion.idtbl_users', 'left');
			$this->db->join('tbl_usuarios', 'tbl_solicitud_material.tbl_usuarios_idtbl_usuarios=tbl_usuarios.idtbl_usuarios', 'left');
			$this->db->not_like('tbl_solicitud_material.uid', '_');
			$this->db->where('user_autor.idtbl_users', $this->session->userdata('id'));
			$this->db->or_where('user_aprobacion.idtbl_users', $this->session->userdata('id'));
			$this->db->order_by('tbl_solicitud_material.idtbl_solicitud_material', 'DESC');*/
			//QUERY DONDE NO SE MUESTRAN LAS FECHAS Y HORAS DE APROBACIÓN DE LOS FILTROS
			//$query = $this->db->query('SELECT tbl_proyectos.nombre_proyecto, tbl_proyectos.numero_proyecto, tbl_solicitud_material.*, user_autor.nombre as user_autor, user_aprobacion.nombre as user_aprobacion, CONCAT(tbl_usuarios.nombres," ",tbl_usuarios.apellido_paterno," ",tbl_usuarios.apellido_materno) as recibe FROM tbl_solicitud_material LEFT JOIN tbl_proyectos ON tbl_solicitud_material.tbl_proyectos_idtbl_proyectos=tbl_proyectos.idtbl_proyectos LEFT JOIN tbl_users as user_autor ON tbl_solicitud_material.tbl_users_idtbl_users_autor=user_autor.idtbl_users LEFT JOIN tbl_users as user_aprobacion ON tbl_solicitud_material.tbl_users_idtbl_users_aprobacion=user_aprobacion.idtbl_users LEFT JOIN tbl_usuarios ON tbl_solicitud_material.tbl_usuarios_idtbl_usuarios=tbl_usuarios.idtbl_usuarios WHERE tbl_solicitud_material.estatus_solicitud NOT LIKE "modificada%" AND (tbl_solicitud_material.tipo_producto="Almacen General" OR tbl_solicitud_material.tipo_producto="Seguridad e Higiene") AND (user_autor.idtbl_users = ' . $this->session->userdata("id") . ' OR user_aprobacion.idtbl_users = ' . $this->session->userdata("id") . ') AND (tbl_solicitud_material.uid LIKE ' . "'%$buscar%'" . ' OR tbl_proyectos.numero_proyecto LIKE ' . "'%$buscar%'" . ')' . ' ORDER BY tbl_solicitud_material.fecha_creacion DESC ' . $limit);
			//QUERY DONDE SE MUESTRAN LAS FECHAS Y HORAS DE APROBACIÓN DE LOS FILTROS
			$query = $this->db->query("SELECT tbl_proyectos.nombre_proyecto, tbl_proyectos.numero_proyecto, tbl_solicitud_material.*, user_autor.nombre as user_autor, user_aprobacion.nombre as user_aprobacion, user_co.nombre as user_control_obra, user_ag.nombre as user_almacen_general, CONCAT(tbl_usuarios.nombres,' ',tbl_usuarios.apellido_paterno,' ',tbl_usuarios.apellido_materno) as recibe FROM tbl_solicitud_material LEFT JOIN tbl_users as user_co ON user_co.idtbl_users=tbl_solicitud_material.tbl_users_idtbl_users_co LEFT JOIN tbl_users as user_ag ON user_ag.idtbl_users=tbl_solicitud_material.tbl_users_idtbl_users_ag LEFT JOIN tbl_proyectos ON tbl_solicitud_material.tbl_proyectos_idtbl_proyectos=tbl_proyectos.idtbl_proyectos LEFT JOIN tbl_users as user_autor ON tbl_solicitud_material.tbl_users_idtbl_users_autor=user_autor.idtbl_users LEFT JOIN tbl_users as user_aprobacion ON tbl_solicitud_material.tbl_users_idtbl_users_aprobacion=user_aprobacion.idtbl_users LEFT JOIN tbl_usuarios ON tbl_solicitud_material.tbl_usuarios_idtbl_usuarios=tbl_usuarios.idtbl_usuarios WHERE tbl_solicitud_material.estatus_solicitud NOT LIKE 'modificada%' AND (tbl_solicitud_material.tipo_producto='Almacen General' OR tbl_solicitud_material.tipo_producto='Seguridad e Higiene') AND (user_autor.idtbl_users = " . $this->session->userdata("id") . " OR user_aprobacion.idtbl_users = " . $this->session->userdata("id") . ") AND (tbl_solicitud_material.uid LIKE '%$buscar%' OR tbl_proyectos.numero_proyecto LIKE '%$buscar%' OR user_autor.nombre LIKE '%$buscar%' OR user_aprobacion.nombre LIKE '%$buscar%' OR user_co.nombre LIKE '%$buscar%' OR user_ag.nombre LIKE '%$buscar%' OR CONCAT(tbl_usuarios.nombres,' ',tbl_usuarios.apellido_paterno,' ',tbl_usuarios.apellido_materno) LIKE '%$buscar%') ORDER BY tbl_solicitud_material.fecha_creacion DESC " . $limit);
		}
		if ($this->session->userdata('tipo') == 11) {
			$limit = '';
			if ($inicio !== false && $cantidadRegistro !== false) {
				$limit = 'LIMIT ' . $inicio . "," . $cantidadRegistro;
			}
			/*$this->db->select('tbl_proyectos.nombre_proyecto');
			$this->db->select('tbl_proyectos.numero_proyecto');
			$this->db->select('tbl_solicitud_material.*');
			$this->db->select('user_autor.nombre as user_autor');
			$this->db->select('user_aprobacion.nombre as user_aprobacion');
			$this->db->select('CONCAT(tbl_usuarios.nombres," ",tbl_usuarios.apellido_paterno," ",tbl_usuarios.apellido_materno) as recibe');
			$this->db->from('tbl_solicitud_material');
			$this->db->join('tbl_proyectos', 'tbl_solicitud_material.tbl_proyectos_idtbl_proyectos=tbl_proyectos.idtbl_proyectos', 'left');
			$this->db->join('tbl_users as user_autor', 'tbl_solicitud_material.tbl_users_idtbl_users_autor=user_autor.idtbl_users', 'left');
			$this->db->join('tbl_users as user_aprobacion', 'tbl_solicitud_material.tbl_users_idtbl_users_aprobacion=user_aprobacion.idtbl_users', 'left');
			$this->db->join('tbl_usuarios', 'tbl_solicitud_material.tbl_usuarios_idtbl_usuarios=tbl_usuarios.idtbl_usuarios', 'left');
			$this->db->where('tbl_solicitud_material.estatus_solicitud', 'CO PM');
			$this->db->or_where('tbl_solicitud_material.estatus_solicitud', 'CO SH');
			$this->db->or_where('tbl_solicitud_material.estatus_solicitud', 'CO AC');
			$this->db->or_where('tbl_solicitud_material.estatus_solicitud', 'AG');
			$this->db->or_where('tbl_solicitud_material.estatus_solicitud', 'AC');
			$this->db->or_where('tbl_solicitud_material.estatus_solicitud', 'cancelada CO');
			$this->db->or_where('tbl_solicitud_material.estatus_solicitud', 'cancelada CO AC');
			$this->db->order_by('tbl_solicitud_material.idtbl_solicitud_material', 'DESC');*/

			//QUERY DONDE NO SE MUESTRAN LAS FECHAS Y HORAS DE APROBACIÓN DE LOS FILTROS
			/*$query = $this->db->query('SELECT tbl_proyectos.nombre_proyecto, tbl_proyectos.numero_proyecto, tbl_solicitud_material.*, user_autor.nombre as user_autor, user_aprobacion.nombre as user_aprobacion, CONCAT(tbl_usuarios.nombres," ",tbl_usuarios.apellido_paterno," ",tbl_usuarios.apellido_materno) as recibe FROM tbl_solicitud_material LEFT JOIN tbl_proyectos ON tbl_solicitud_material.tbl_proyectos_idtbl_proyectos=tbl_proyectos.idtbl_proyectos LEFT JOIN tbl_users as user_autor ON tbl_solicitud_material.tbl_users_idtbl_users_autor=user_autor.idtbl_users LEFT JOIN tbl_users as user_aprobacion ON tbl_solicitud_material.tbl_users_idtbl_users_aprobacion=user_aprobacion.idtbl_users LEFT JOIN tbl_usuarios ON tbl_solicitud_material.tbl_usuarios_idtbl_usuarios=tbl_usuarios.idtbl_usuarios WHERE tbl_solicitud_material.uid NOT LIKE "_" AND (tbl_solicitud_material.tipo_producto="Almacen General" OR tbl_solicitud_material.tipo_producto="Seguridad e Higiene") AND (tbl_solicitud_material.estatus_solicitud = "CO PM" OR tbl_solicitud_material.estatus_solicitud = "CO SH" OR tbl_solicitud_material.estatus_solicitud = "CO AC" OR tbl_solicitud_material.estatus_solicitud = "AG" OR tbl_solicitud_material.estatus_solicitud = "AC" OR tbl_solicitud_material.estatus_solicitud = "cancelada CO" OR tbl_solicitud_material.estatus_solicitud = "cancelada CO AC") AND (tbl_solicitud_material.uid LIKE ' . "'%$buscar%'" . ' OR tbl_proyectos.numero_proyecto LIKE ' . "'%$buscar%'" . ') ' . ' ORDER BY tbl_solicitud_material.fecha_creacion DESC ' . $limit);*/
			//QUERY DONDE SE MUESTRAN LAS FECHAS Y HORAS DE APROBACIÓN DE LOS FILTROS
			$query = $this->db->query("SELECT tbl_proyectos.nombre_proyecto, tbl_proyectos.numero_proyecto, tbl_solicitud_material.*, user_autor.nombre as user_autor, user_aprobacion.nombre as user_aprobacion, user_co.nombre as user_control_obra, user_ag.nombre as user_almacen_general, CONCAT(tbl_usuarios.nombres,' ',tbl_usuarios.apellido_paterno,' ',tbl_usuarios.apellido_materno) as recibe FROM tbl_solicitud_material LEFT JOIN tbl_users as user_co ON user_co.idtbl_users=tbl_solicitud_material.tbl_users_idtbl_users_co LEFT JOIN tbl_users as user_ag ON user_ag.idtbl_users=tbl_solicitud_material.tbl_users_idtbl_users_ag LEFT JOIN tbl_proyectos ON tbl_solicitud_material.tbl_proyectos_idtbl_proyectos=tbl_proyectos.idtbl_proyectos LEFT JOIN tbl_users as user_autor ON tbl_solicitud_material.tbl_users_idtbl_users_autor=user_autor.idtbl_users LEFT JOIN tbl_users as user_aprobacion ON tbl_solicitud_material.tbl_users_idtbl_users_aprobacion=user_aprobacion.idtbl_users LEFT JOIN tbl_usuarios ON tbl_solicitud_material.tbl_usuarios_idtbl_usuarios=tbl_usuarios.idtbl_usuarios WHERE tbl_solicitud_material.uid NOT LIKE '_' AND (tbl_solicitud_material.tipo_producto='Almacen General' OR tbl_solicitud_material.tipo_producto='Seguridad e Higiene') AND (tbl_solicitud_material.estatus_solicitud = 'CO PM' OR tbl_solicitud_material.estatus_solicitud = 'CO SH' OR tbl_solicitud_material.estatus_solicitud = 'CO AC' OR tbl_solicitud_material.estatus_solicitud = 'AG' OR tbl_solicitud_material.estatus_solicitud = 'SU' OR tbl_solicitud_material.estatus_solicitud = 'cancelada CO' OR tbl_solicitud_material.estatus_solicitud = 'cancelada CO AC') AND (tbl_solicitud_material.uid LIKE '%$buscar%' OR tbl_proyectos.numero_proyecto LIKE '%$buscar%' OR user_autor.nombre LIKE '%$buscar%' OR user_aprobacion.nombre LIKE '%$buscar%' OR user_co.nombre LIKE '%$buscar%' OR user_ag.nombre LIKE '%$buscar%' OR CONCAT(tbl_usuarios.nombres,' ',tbl_usuarios.apellido_paterno,' ',tbl_usuarios.apellido_materno) LIKE '%$buscar%') ORDER BY tbl_solicitud_material.fecha_creacion DESC " . $limit);
		}
		//$this->db->not_like('tbl_solicitud_material.uid', '_');
		//$this->db->order_by('tbl_solicitud_material.idtbl_solicitud_material', 'DESC');
		//$query = $this->db->get();
		return $query->result();
	}

	public function mis_solicitudesMarco($buscar = '', $inicio = false, $cantidadRegistro = false) {
		if ($this->session->userdata('tipo') == 11) {
			$limit = '';
			if ($inicio !== false && $cantidadRegistro !== false) {
				$limit = 'LIMIT ' . $inicio . "," . $cantidadRegistro;
			}
			/*$this->db->select('tbl_proyectos.nombre_proyecto');
			$this->db->select('tbl_proyectos.numero_proyecto');
			$this->db->select('tbl_solicitud_material.*');
			$this->db->select('user_autor.nombre as user_autor');
			$this->db->select('user_aprobacion.nombre as user_aprobacion');
			$this->db->select('CONCAT(tbl_usuarios.nombres," ",tbl_usuarios.apellido_paterno," ",tbl_usuarios.apellido_materno) as recibe');

			$this->db->from('tbl_solicitud_material');

			$this->db->join('tbl_proyectos', 'tbl_solicitud_material.tbl_proyectos_idtbl_proyectos=tbl_proyectos.idtbl_proyectos', 'left');
			$this->db->join('tbl_users as user_autor', 'tbl_solicitud_material.tbl_users_idtbl_users_autor=user_autor.idtbl_users', 'left');
			$this->db->join('tbl_users as user_aprobacion', 'tbl_solicitud_material.tbl_users_idtbl_users_aprobacion=user_aprobacion.idtbl_users', 'left');
			$this->db->join('tbl_usuarios', 'tbl_solicitud_material.tbl_usuarios_idtbl_usuarios=tbl_usuarios.idtbl_usuarios', 'left');
			$this->db->not_like('tbl_solicitud_material.uid', '_');
			$this->db->where('user_autor.idtbl_users', $this->session->userdata('id'));
			$this->db->or_where('user_aprobacion.idtbl_users', $this->session->userdata('id'));
			$this->db->order_by('tbl_solicitud_material.idtbl_solicitud_material', 'DESC');*/
			//QUERY DONDE NO SE MUESTRAN LAS FECHAS Y HORAS DE APROBACIÓN DE LOS FILTROS
			//$query = $this->db->query('SELECT tbl_proyectos.nombre_proyecto, tbl_proyectos.numero_proyecto, tbl_solicitud_material.*, user_autor.nombre as user_autor, user_aprobacion.nombre as user_aprobacion, CONCAT(tbl_usuarios.nombres," ",tbl_usuarios.apellido_paterno," ",tbl_usuarios.apellido_materno) as recibe FROM tbl_solicitud_material LEFT JOIN tbl_proyectos ON tbl_solicitud_material.tbl_proyectos_idtbl_proyectos=tbl_proyectos.idtbl_proyectos LEFT JOIN tbl_users as user_autor ON tbl_solicitud_material.tbl_users_idtbl_users_autor=user_autor.idtbl_users LEFT JOIN tbl_users as user_aprobacion ON tbl_solicitud_material.tbl_users_idtbl_users_aprobacion=user_aprobacion.idtbl_users LEFT JOIN tbl_usuarios ON tbl_solicitud_material.tbl_usuarios_idtbl_usuarios=tbl_usuarios.idtbl_usuarios WHERE tbl_solicitud_material.estatus_solicitud NOT LIKE "modificada%" AND (tbl_solicitud_material.tipo_producto="Almacen General" OR tbl_solicitud_material.tipo_producto="Seguridad e Higiene") AND (user_autor.idtbl_users = ' . $this->session->userdata("id") . ' OR user_aprobacion.idtbl_users = ' . $this->session->userdata("id") . ') AND (tbl_solicitud_material.uid LIKE ' . "'%$buscar%'" . ' OR tbl_proyectos.numero_proyecto LIKE ' . "'%$buscar%'" . ')' . ' ORDER BY tbl_solicitud_material.fecha_creacion DESC ' . $limit);
			//QUERY DONDE SE MUESTRAN LAS FECHAS Y HORAS DE APROBACIÓN DE LOS FILTROS
			$query = $this->db->query("SELECT tbl_proyectos.nombre_proyecto, tbl_proyectos.numero_proyecto, tbl_solicitud_material.*, user_autor.nombre as user_autor, user_aprobacion.nombre as user_aprobacion, user_co.nombre as user_control_obra, user_ag.nombre as user_almacen_general, CONCAT(tbl_usuarios.nombres,' ',tbl_usuarios.apellido_paterno,' ',tbl_usuarios.apellido_materno) as recibe FROM tbl_solicitud_material LEFT JOIN tbl_users as user_co ON user_co.idtbl_users=tbl_solicitud_material.tbl_users_idtbl_users_co LEFT JOIN tbl_users as user_ag ON user_ag.idtbl_users=tbl_solicitud_material.tbl_users_idtbl_users_ag LEFT JOIN tbl_proyectos ON tbl_solicitud_material.tbl_proyectos_idtbl_proyectos=tbl_proyectos.idtbl_proyectos LEFT JOIN tbl_users as user_autor ON tbl_solicitud_material.tbl_users_idtbl_users_autor=user_autor.idtbl_users LEFT JOIN tbl_users as user_aprobacion ON tbl_solicitud_material.tbl_users_idtbl_users_aprobacion=user_aprobacion.idtbl_users LEFT JOIN tbl_usuarios ON tbl_solicitud_material.tbl_usuarios_idtbl_usuarios=tbl_usuarios.idtbl_usuarios WHERE tbl_solicitud_material.estatus_solicitud NOT LIKE 'modificada%' AND (tbl_solicitud_material.tipo_producto='Almacen General' OR tbl_solicitud_material.tipo_producto='Seguridad e Higiene') AND (user_autor.idtbl_users = " . 24 . " OR user_aprobacion.idtbl_users = " . $this->session->userdata("id") . ") AND (tbl_solicitud_material.uid LIKE '%$buscar%' OR tbl_proyectos.numero_proyecto LIKE '%$buscar%' OR user_autor.nombre LIKE '%$buscar%' OR user_aprobacion.nombre LIKE '%$buscar%' OR user_co.nombre LIKE '%$buscar%' OR user_ag.nombre LIKE '%$buscar%' OR CONCAT(tbl_usuarios.nombres,' ',tbl_usuarios.apellido_paterno,' ',tbl_usuarios.apellido_materno) LIKE '%$buscar%') ORDER BY tbl_solicitud_material.fecha_creacion DESC " . $limit);
		}
		
		//$this->db->not_like('tbl_solicitud_material.uid', '_');
		//$this->db->order_by('tbl_solicitud_material.idtbl_solicitud_material', 'DESC');
		//$query = $this->db->get();
		return $query->result();
	}

	public function mis_solicitudesCV($buscar = '', $inicio = false, $cantidadRegistro = false) {
		if ($this->session->userdata('tipo') != 11) {
			$limit = '';
			if ($inicio !== false && $cantidadRegistro !== false) {
				$limit = 'LIMIT ' . $inicio . "," . $cantidadRegistro;
			}
			/*$this->db->select('tbl_proyectos.nombre_proyecto');
			$this->db->select('tbl_proyectos.numero_proyecto');
			$this->db->select('tbl_solicitud_material.*');
			$this->db->select('user_autor.nombre as user_autor');
			$this->db->select('user_aprobacion.nombre as user_aprobacion');
			$this->db->select('CONCAT(tbl_usuarios.nombres," ",tbl_usuarios.apellido_paterno," ",tbl_usuarios.apellido_materno) as recibe');

			$this->db->from('tbl_solicitud_material');

			$this->db->join('tbl_proyectos', 'tbl_solicitud_material.tbl_proyectos_idtbl_proyectos=tbl_proyectos.idtbl_proyectos', 'left');
			$this->db->join('tbl_users as user_autor', 'tbl_solicitud_material.tbl_users_idtbl_users_autor=user_autor.idtbl_users', 'left');
			$this->db->join('tbl_users as user_aprobacion', 'tbl_solicitud_material.tbl_users_idtbl_users_aprobacion=user_aprobacion.idtbl_users', 'left');
			$this->db->join('tbl_usuarios', 'tbl_solicitud_material.tbl_usuarios_idtbl_usuarios=tbl_usuarios.idtbl_usuarios', 'left');
			$this->db->not_like('tbl_solicitud_material.uid', '_');
			$this->db->where('user_autor.idtbl_users', $this->session->userdata('id'));
			$this->db->or_where('user_aprobacion.idtbl_users', $this->session->userdata('id'));
			$this->db->order_by('tbl_solicitud_material.idtbl_solicitud_material', 'DESC');*/
			//QUERY DONDE NO SE MUESTRAN LAS FECHAS Y HORAS DE APROBACIÓN DE LOS FILTROS
			//$query = $this->db->query('SELECT tbl_proyectos.nombre_proyecto, tbl_proyectos.numero_proyecto, tbl_solicitud_material.*, user_autor.nombre as user_autor, user_aprobacion.nombre as user_aprobacion, CONCAT(tbl_usuarios.nombres," ",tbl_usuarios.apellido_paterno," ",tbl_usuarios.apellido_materno) as recibe FROM tbl_solicitud_material LEFT JOIN tbl_proyectos ON tbl_solicitud_material.tbl_proyectos_idtbl_proyectos=tbl_proyectos.idtbl_proyectos LEFT JOIN tbl_users as user_autor ON tbl_solicitud_material.tbl_users_idtbl_users_autor=user_autor.idtbl_users LEFT JOIN tbl_users as user_aprobacion ON tbl_solicitud_material.tbl_users_idtbl_users_aprobacion=user_aprobacion.idtbl_users LEFT JOIN tbl_usuarios ON tbl_solicitud_material.tbl_usuarios_idtbl_usuarios=tbl_usuarios.idtbl_usuarios WHERE tbl_solicitud_material.estatus_solicitud NOT LIKE "modificada%" AND (tbl_solicitud_material.tipo_producto="Almacen General" OR tbl_solicitud_material.tipo_producto="Seguridad e Higiene") AND (user_autor.idtbl_users = ' . $this->session->userdata("id") . ' OR user_aprobacion.idtbl_users = ' . $this->session->userdata("id") . ') AND (tbl_solicitud_material.uid LIKE ' . "'%$buscar%'" . ' OR tbl_proyectos.numero_proyecto LIKE ' . "'%$buscar%'" . ')' . ' ORDER BY tbl_solicitud_material.fecha_creacion DESC ' . $limit);
			//QUERY DONDE SE MUESTRAN LAS FECHAS Y HORAS DE APROBACIÓN DE LOS FILTROS
			$query = $this->db->query("SELECT tbl_proyectos.nombre_proyecto, tbl_proyectos.numero_proyecto, tbl_solicitud_material.*, user_autor.nombre as user_autor, user_aprobacion.nombre as user_aprobacion, user_co.nombre as user_control_obra, user_cv.nombre as user_control_vehicular, CONCAT(tbl_usuarios.nombres,' ',tbl_usuarios.apellido_paterno,' ',tbl_usuarios.apellido_materno) as recibe FROM tbl_solicitud_material LEFT JOIN tbl_users as user_co ON user_co.idtbl_users=tbl_solicitud_material.tbl_users_idtbl_users_co LEFT JOIN tbl_users as user_cv ON user_cv.idtbl_users=tbl_solicitud_material.tbl_users_idtbl_users_cv LEFT JOIN tbl_proyectos ON tbl_solicitud_material.tbl_proyectos_idtbl_proyectos=tbl_proyectos.idtbl_proyectos LEFT JOIN tbl_users as user_autor ON tbl_solicitud_material.tbl_users_idtbl_users_autor=user_autor.idtbl_users LEFT JOIN tbl_users as user_aprobacion ON tbl_solicitud_material.tbl_users_idtbl_users_aprobacion=user_aprobacion.idtbl_users LEFT JOIN tbl_usuarios ON tbl_solicitud_material.tbl_usuarios_idtbl_usuarios=tbl_usuarios.idtbl_usuarios WHERE tbl_solicitud_material.estatus_solicitud NOT LIKE 'modificada%' AND (tbl_solicitud_material.tipo_producto='Control Vehicular') AND (user_autor.idtbl_users = " . $this->session->userdata("id") . " OR user_aprobacion.idtbl_users = " . $this->session->userdata("id") . ") AND (tbl_solicitud_material.uid LIKE '%$buscar%' OR tbl_proyectos.numero_proyecto LIKE '%$buscar%' OR user_autor.nombre LIKE '%$buscar%' OR user_aprobacion.nombre LIKE '%$buscar%' OR user_co.nombre LIKE '%$buscar%' OR user_cv.nombre LIKE '%$buscar%' OR CONCAT(tbl_usuarios.nombres,' ',tbl_usuarios.apellido_paterno,' ',tbl_usuarios.apellido_materno) LIKE '%$buscar%') ORDER BY tbl_solicitud_material.fecha_creacion DESC " . $limit);
		}
		if ($this->session->userdata('tipo') == 11) {
			$limit = '';
			if ($inicio !== false && $cantidadRegistro !== false) {
				$limit = 'LIMIT ' . $inicio . "," . $cantidadRegistro;
			}
			/*$this->db->select('tbl_proyectos.nombre_proyecto');
			$this->db->select('tbl_proyectos.numero_proyecto');
			$this->db->select('tbl_solicitud_material.*');
			$this->db->select('user_autor.nombre as user_autor');
			$this->db->select('user_aprobacion.nombre as user_aprobacion');
			$this->db->select('CONCAT(tbl_usuarios.nombres," ",tbl_usuarios.apellido_paterno," ",tbl_usuarios.apellido_materno) as recibe');
			$this->db->from('tbl_solicitud_material');
			$this->db->join('tbl_proyectos', 'tbl_solicitud_material.tbl_proyectos_idtbl_proyectos=tbl_proyectos.idtbl_proyectos', 'left');
			$this->db->join('tbl_users as user_autor', 'tbl_solicitud_material.tbl_users_idtbl_users_autor=user_autor.idtbl_users', 'left');
			$this->db->join('tbl_users as user_aprobacion', 'tbl_solicitud_material.tbl_users_idtbl_users_aprobacion=user_aprobacion.idtbl_users', 'left');
			$this->db->join('tbl_usuarios', 'tbl_solicitud_material.tbl_usuarios_idtbl_usuarios=tbl_usuarios.idtbl_usuarios', 'left');
			$this->db->where('tbl_solicitud_material.estatus_solicitud', 'CO PM');
			$this->db->or_where('tbl_solicitud_material.estatus_solicitud', 'CO SH');
			$this->db->or_where('tbl_solicitud_material.estatus_solicitud', 'CO AC');
			$this->db->or_where('tbl_solicitud_material.estatus_solicitud', 'AG');
			$this->db->or_where('tbl_solicitud_material.estatus_solicitud', 'AC');
			$this->db->or_where('tbl_solicitud_material.estatus_solicitud', 'cancelada CO');
			$this->db->or_where('tbl_solicitud_material.estatus_solicitud', 'cancelada CO AC');
			$this->db->order_by('tbl_solicitud_material.idtbl_solicitud_material', 'DESC');*/

			//QUERY DONDE NO SE MUESTRAN LAS FECHAS Y HORAS DE APROBACIÓN DE LOS FILTROS
			/*$query = $this->db->query('SELECT tbl_proyectos.nombre_proyecto, tbl_proyectos.numero_proyecto, tbl_solicitud_material.*, user_autor.nombre as user_autor, user_aprobacion.nombre as user_aprobacion, CONCAT(tbl_usuarios.nombres," ",tbl_usuarios.apellido_paterno," ",tbl_usuarios.apellido_materno) as recibe FROM tbl_solicitud_material LEFT JOIN tbl_proyectos ON tbl_solicitud_material.tbl_proyectos_idtbl_proyectos=tbl_proyectos.idtbl_proyectos LEFT JOIN tbl_users as user_autor ON tbl_solicitud_material.tbl_users_idtbl_users_autor=user_autor.idtbl_users LEFT JOIN tbl_users as user_aprobacion ON tbl_solicitud_material.tbl_users_idtbl_users_aprobacion=user_aprobacion.idtbl_users LEFT JOIN tbl_usuarios ON tbl_solicitud_material.tbl_usuarios_idtbl_usuarios=tbl_usuarios.idtbl_usuarios WHERE tbl_solicitud_material.uid NOT LIKE "_" AND (tbl_solicitud_material.tipo_producto="Almacen General" OR tbl_solicitud_material.tipo_producto="Seguridad e Higiene") AND (tbl_solicitud_material.estatus_solicitud = "CO PM" OR tbl_solicitud_material.estatus_solicitud = "CO SH" OR tbl_solicitud_material.estatus_solicitud = "CO AC" OR tbl_solicitud_material.estatus_solicitud = "AG" OR tbl_solicitud_material.estatus_solicitud = "AC" OR tbl_solicitud_material.estatus_solicitud = "cancelada CO" OR tbl_solicitud_material.estatus_solicitud = "cancelada CO AC") AND (tbl_solicitud_material.uid LIKE ' . "'%$buscar%'" . ' OR tbl_proyectos.numero_proyecto LIKE ' . "'%$buscar%'" . ') ' . ' ORDER BY tbl_solicitud_material.fecha_creacion DESC ' . $limit);*/
			//QUERY DONDE SE MUESTRAN LAS FECHAS Y HORAS DE APROBACIÓN DE LOS FILTROS
			$query = $this->db->query("SELECT tbl_proyectos.nombre_proyecto, tbl_proyectos.numero_proyecto, tbl_solicitud_material.*, user_autor.nombre as user_autor, user_aprobacion.nombre as user_aprobacion, user_co.nombre as user_control_obra, user_cv.nombre as user_control_vehicular, CONCAT(tbl_usuarios.nombres,' ',tbl_usuarios.apellido_paterno,' ',tbl_usuarios.apellido_materno) as recibe FROM tbl_solicitud_material LEFT JOIN tbl_users as user_co ON user_co.idtbl_users=tbl_solicitud_material.tbl_users_idtbl_users_co LEFT JOIN tbl_users as user_cv ON user_cv.idtbl_users=tbl_solicitud_material.tbl_users_idtbl_users_cv LEFT JOIN tbl_proyectos ON tbl_solicitud_material.tbl_proyectos_idtbl_proyectos=tbl_proyectos.idtbl_proyectos LEFT JOIN tbl_users as user_autor ON tbl_solicitud_material.tbl_users_idtbl_users_autor=user_autor.idtbl_users LEFT JOIN tbl_users as user_aprobacion ON tbl_solicitud_material.tbl_users_idtbl_users_aprobacion=user_aprobacion.idtbl_users LEFT JOIN tbl_usuarios ON tbl_solicitud_material.tbl_usuarios_idtbl_usuarios=tbl_usuarios.idtbl_usuarios WHERE tbl_solicitud_material.uid NOT LIKE '_' AND (tbl_solicitud_material.tipo_producto='Control Vehicular') AND (tbl_solicitud_material.estatus_solicitud = 'CO PM' OR tbl_solicitud_material.estatus_solicitud = 'CO SH' OR tbl_solicitud_material.estatus_solicitud = 'CO AC' OR tbl_solicitud_material.estatus_solicitud = 'AG' OR tbl_solicitud_material.estatus_solicitud = 'SU' OR tbl_solicitud_material.estatus_solicitud = 'cancelada CO' OR tbl_solicitud_material.estatus_solicitud = 'cancelada CO AC' OR tbl_solicitud_material.estatus_solicitud = 'CO CV' OR tbl_solicitud_material.estatus_solicitud = 'CV') AND (tbl_solicitud_material.uid LIKE '%$buscar%' OR tbl_proyectos.numero_proyecto LIKE '%$buscar%' OR user_autor.nombre LIKE '%$buscar%' OR user_aprobacion.nombre LIKE '%$buscar%' OR user_co.nombre LIKE '%$buscar%' OR user_cv.nombre LIKE '%$buscar%' OR CONCAT(tbl_usuarios.nombres,' ',tbl_usuarios.apellido_paterno,' ',tbl_usuarios.apellido_materno) LIKE '%$buscar%') ORDER BY tbl_solicitud_material.fecha_creacion DESC " . $limit);
		}
		//$this->db->not_like('tbl_solicitud_material.uid', '_');
		//$this->db->order_by('tbl_solicitud_material.idtbl_solicitud_material', 'DESC');
		//$query = $this->db->get();
		return $query->result();
	}

	public function mis_solicitudesSistemas($buscar = '', $inicio = false, $cantidadRegistro = false) {
		if ($this->session->userdata('tipo') != 11) {
			$limit = '';
			if ($inicio !== false && $cantidadRegistro !== false) {
				$limit = 'LIMIT ' . $inicio . "," . $cantidadRegistro;
			}
			/*$this->db->select('tbl_proyectos.nombre_proyecto');
			$this->db->select('tbl_proyectos.numero_proyecto');
			$this->db->select('tbl_solicitud_material.*');
			$this->db->select('user_autor.nombre as user_autor');
			$this->db->select('user_aprobacion.nombre as user_aprobacion');
			$this->db->select('CONCAT(tbl_usuarios.nombres," ",tbl_usuarios.apellido_paterno," ",tbl_usuarios.apellido_materno) as recibe');

			$this->db->from('tbl_solicitud_material');

			$this->db->join('tbl_proyectos', 'tbl_solicitud_material.tbl_proyectos_idtbl_proyectos=tbl_proyectos.idtbl_proyectos', 'left');
			$this->db->join('tbl_users as user_autor', 'tbl_solicitud_material.tbl_users_idtbl_users_autor=user_autor.idtbl_users', 'left');
			$this->db->join('tbl_users as user_aprobacion', 'tbl_solicitud_material.tbl_users_idtbl_users_aprobacion=user_aprobacion.idtbl_users', 'left');
			$this->db->join('tbl_usuarios', 'tbl_solicitud_material.tbl_usuarios_idtbl_usuarios=tbl_usuarios.idtbl_usuarios', 'left');
			$this->db->not_like('tbl_solicitud_material.uid', '_');
			$this->db->where('user_autor.idtbl_users', $this->session->userdata('id'));
			$this->db->or_where('user_aprobacion.idtbl_users', $this->session->userdata('id'));
			$this->db->order_by('tbl_solicitud_material.idtbl_solicitud_material', 'DESC');*/
			//QUERY DONDE NO SE MUESTRAN LAS FECHAS Y HORAS DE APROBACIÓN DE LOS FILTROS
			//$query = $this->db->query('SELECT tbl_proyectos.nombre_proyecto, tbl_proyectos.numero_proyecto, tbl_solicitud_material.*, user_autor.nombre as user_autor, user_aprobacion.nombre as user_aprobacion, CONCAT(tbl_usuarios.nombres," ",tbl_usuarios.apellido_paterno," ",tbl_usuarios.apellido_materno) as recibe FROM tbl_solicitud_material LEFT JOIN tbl_proyectos ON tbl_solicitud_material.tbl_proyectos_idtbl_proyectos=tbl_proyectos.idtbl_proyectos LEFT JOIN tbl_users as user_autor ON tbl_solicitud_material.tbl_users_idtbl_users_autor=user_autor.idtbl_users LEFT JOIN tbl_users as user_aprobacion ON tbl_solicitud_material.tbl_users_idtbl_users_aprobacion=user_aprobacion.idtbl_users LEFT JOIN tbl_usuarios ON tbl_solicitud_material.tbl_usuarios_idtbl_usuarios=tbl_usuarios.idtbl_usuarios WHERE tbl_solicitud_material.estatus_solicitud NOT LIKE "modificada%" AND (tbl_solicitud_material.tipo_producto="Almacen General" OR tbl_solicitud_material.tipo_producto="Seguridad e Higiene") AND (user_autor.idtbl_users = ' . $this->session->userdata("id") . ' OR user_aprobacion.idtbl_users = ' . $this->session->userdata("id") . ') AND (tbl_solicitud_material.uid LIKE ' . "'%$buscar%'" . ' OR tbl_proyectos.numero_proyecto LIKE ' . "'%$buscar%'" . ')' . ' ORDER BY tbl_solicitud_material.fecha_creacion DESC ' . $limit);
			//QUERY DONDE SE MUESTRAN LAS FECHAS Y HORAS DE APROBACIÓN DE LOS FILTROS
			$query = $this->db->query("SELECT tbl_proyectos.nombre_proyecto, tbl_proyectos.numero_proyecto, tbl_solicitud_material.*, user_autor.nombre as user_autor, user_aprobacion.nombre as user_aprobacion, user_co.nombre as user_control_obra, user_sis.nombre as user_sistemas, CONCAT(tbl_usuarios.nombres,' ',tbl_usuarios.apellido_paterno,' ',tbl_usuarios.apellido_materno) as recibe FROM tbl_solicitud_material LEFT JOIN tbl_users as user_co ON user_co.idtbl_users=tbl_solicitud_material.tbl_users_idtbl_users_co LEFT JOIN tbl_users as user_sis ON user_sis.idtbl_users=tbl_solicitud_material.tbl_users_idtbl_users_sis LEFT JOIN tbl_proyectos ON tbl_solicitud_material.tbl_proyectos_idtbl_proyectos=tbl_proyectos.idtbl_proyectos LEFT JOIN tbl_users as user_autor ON tbl_solicitud_material.tbl_users_idtbl_users_autor=user_autor.idtbl_users LEFT JOIN tbl_users as user_aprobacion ON tbl_solicitud_material.tbl_users_idtbl_users_aprobacion=user_aprobacion.idtbl_users LEFT JOIN tbl_usuarios ON tbl_solicitud_material.tbl_usuarios_idtbl_usuarios=tbl_usuarios.idtbl_usuarios WHERE tbl_solicitud_material.estatus_solicitud NOT LIKE 'modificada%' AND (tbl_solicitud_material.tipo_producto='Sistemas') AND (tbl_solicitud_material.estatus_solicitud != 'CO PM' OR tbl_solicitud_material.estatus_solicitud != 'cancelada CO PM' OR tbl_solicitud_material.estatus_solicitud != 'Sis' OR tbl_solicitud_material.estatus_solicitud != 'SU Sis' OR tbl_solicitud_material.estatus_solicitud != 'SSis') AND (user_autor.idtbl_users = " . $this->session->userdata("id") . " OR user_aprobacion.idtbl_users = " . $this->session->userdata("id") . ") AND (tbl_solicitud_material.uid LIKE '%$buscar%' OR tbl_proyectos.numero_proyecto LIKE '%$buscar%' OR user_autor.nombre LIKE '%$buscar%' OR user_aprobacion.nombre LIKE '%$buscar%' OR user_co.nombre LIKE '%$buscar%' OR user_sis.nombre LIKE '%$buscar%' OR CONCAT(tbl_usuarios.nombres,' ',tbl_usuarios.apellido_paterno,' ',tbl_usuarios.apellido_materno) LIKE '%$buscar%') ORDER BY tbl_solicitud_material.fecha_creacion DESC " . $limit);
		}
		if ($this->session->userdata('tipo') == 11) {
			$limit = '';
			if ($inicio !== false && $cantidadRegistro !== false) {
				$limit = 'LIMIT ' . $inicio . "," . $cantidadRegistro;
			}
			/*$this->db->select('tbl_proyectos.nombre_proyecto');
			$this->db->select('tbl_proyectos.numero_proyecto');
			$this->db->select('tbl_solicitud_material.*');
			$this->db->select('user_autor.nombre as user_autor');
			$this->db->select('user_aprobacion.nombre as user_aprobacion');
			$this->db->select('CONCAT(tbl_usuarios.nombres," ",tbl_usuarios.apellido_paterno," ",tbl_usuarios.apellido_materno) as recibe');
			$this->db->from('tbl_solicitud_material');
			$this->db->join('tbl_proyectos', 'tbl_solicitud_material.tbl_proyectos_idtbl_proyectos=tbl_proyectos.idtbl_proyectos', 'left');
			$this->db->join('tbl_users as user_autor', 'tbl_solicitud_material.tbl_users_idtbl_users_autor=user_autor.idtbl_users', 'left');
			$this->db->join('tbl_users as user_aprobacion', 'tbl_solicitud_material.tbl_users_idtbl_users_aprobacion=user_aprobacion.idtbl_users', 'left');
			$this->db->join('tbl_usuarios', 'tbl_solicitud_material.tbl_usuarios_idtbl_usuarios=tbl_usuarios.idtbl_usuarios', 'left');
			$this->db->where('tbl_solicitud_material.estatus_solicitud', 'CO PM');
			$this->db->or_where('tbl_solicitud_material.estatus_solicitud', 'CO SH');
			$this->db->or_where('tbl_solicitud_material.estatus_solicitud', 'CO AC');
			$this->db->or_where('tbl_solicitud_material.estatus_solicitud', 'AG');
			$this->db->or_where('tbl_solicitud_material.estatus_solicitud', 'AC');
			$this->db->or_where('tbl_solicitud_material.estatus_solicitud', 'cancelada CO');
			$this->db->or_where('tbl_solicitud_material.estatus_solicitud', 'cancelada CO AC');
			$this->db->order_by('tbl_solicitud_material.idtbl_solicitud_material', 'DESC');*/

			//QUERY DONDE NO SE MUESTRAN LAS FECHAS Y HORAS DE APROBACIÓN DE LOS FILTROS
			/*$query = $this->db->query('SELECT tbl_proyectos.nombre_proyecto, tbl_proyectos.numero_proyecto, tbl_solicitud_material.*, user_autor.nombre as user_autor, user_aprobacion.nombre as user_aprobacion, CONCAT(tbl_usuarios.nombres," ",tbl_usuarios.apellido_paterno," ",tbl_usuarios.apellido_materno) as recibe FROM tbl_solicitud_material LEFT JOIN tbl_proyectos ON tbl_solicitud_material.tbl_proyectos_idtbl_proyectos=tbl_proyectos.idtbl_proyectos LEFT JOIN tbl_users as user_autor ON tbl_solicitud_material.tbl_users_idtbl_users_autor=user_autor.idtbl_users LEFT JOIN tbl_users as user_aprobacion ON tbl_solicitud_material.tbl_users_idtbl_users_aprobacion=user_aprobacion.idtbl_users LEFT JOIN tbl_usuarios ON tbl_solicitud_material.tbl_usuarios_idtbl_usuarios=tbl_usuarios.idtbl_usuarios WHERE tbl_solicitud_material.uid NOT LIKE "_" AND (tbl_solicitud_material.tipo_producto="Almacen General" OR tbl_solicitud_material.tipo_producto="Seguridad e Higiene") AND (tbl_solicitud_material.estatus_solicitud = "CO PM" OR tbl_solicitud_material.estatus_solicitud = "CO SH" OR tbl_solicitud_material.estatus_solicitud = "CO AC" OR tbl_solicitud_material.estatus_solicitud = "AG" OR tbl_solicitud_material.estatus_solicitud = "AC" OR tbl_solicitud_material.estatus_solicitud = "cancelada CO" OR tbl_solicitud_material.estatus_solicitud = "cancelada CO AC") AND (tbl_solicitud_material.uid LIKE ' . "'%$buscar%'" . ' OR tbl_proyectos.numero_proyecto LIKE ' . "'%$buscar%'" . ') ' . ' ORDER BY tbl_solicitud_material.fecha_creacion DESC ' . $limit);*/
			//QUERY DONDE SE MUESTRAN LAS FECHAS Y HORAS DE APROBACIÓN DE LOS FILTROS
			$query = $this->db->query("SELECT tbl_proyectos.nombre_proyecto, tbl_proyectos.numero_proyecto, tbl_solicitud_material.*, user_autor.nombre as user_autor, user_aprobacion.nombre as user_aprobacion, user_co.nombre as user_control_obra, user_sis.nombre as user_sistemas, CONCAT(tbl_usuarios.nombres,' ',tbl_usuarios.apellido_paterno,' ',tbl_usuarios.apellido_materno) as recibe FROM tbl_solicitud_material LEFT JOIN tbl_users as user_co ON user_co.idtbl_users=tbl_solicitud_material.tbl_users_idtbl_users_co LEFT JOIN tbl_users as user_sis ON user_sis.idtbl_users=tbl_solicitud_material.tbl_users_idtbl_users_sis LEFT JOIN tbl_proyectos ON tbl_solicitud_material.tbl_proyectos_idtbl_proyectos=tbl_proyectos.idtbl_proyectos LEFT JOIN tbl_users as user_autor ON tbl_solicitud_material.tbl_users_idtbl_users_autor=user_autor.idtbl_users LEFT JOIN tbl_users as user_aprobacion ON tbl_solicitud_material.tbl_users_idtbl_users_aprobacion=user_aprobacion.idtbl_users LEFT JOIN tbl_usuarios ON tbl_solicitud_material.tbl_usuarios_idtbl_usuarios=tbl_usuarios.idtbl_usuarios WHERE tbl_solicitud_material.uid NOT LIKE '_' AND (tbl_solicitud_material.tipo_producto='Sistemas') AND (tbl_solicitud_material.estatus_solicitud != 'PM' OR tbl_solicitud_material.estatus_solicitud != 'cancelada PM' OR tbl_solicitud_material.estatus_solicitud != 'Sis' OR tbl_solicitud_material.estatus_solicitud != 'SU Sis' OR tbl_solicitud_material.estatus_solicitud != 'SSis') AND (tbl_solicitud_material.uid LIKE '%$buscar%' OR tbl_proyectos.numero_proyecto LIKE '%$buscar%' OR user_autor.nombre LIKE '%$buscar%' OR user_aprobacion.nombre LIKE '%$buscar%' OR user_co.nombre LIKE '%$buscar%' OR user_sis.nombre LIKE '%$buscar%' OR CONCAT(tbl_usuarios.nombres,' ',tbl_usuarios.apellido_paterno,' ',tbl_usuarios.apellido_materno) LIKE '%$buscar%') ORDER BY tbl_solicitud_material.fecha_creacion DESC " . $limit);
		}
		//$this->db->not_like('tbl_solicitud_material.uid', '_');
		//$this->db->order_by('tbl_solicitud_material.idtbl_solicitud_material', 'DESC');
		//$query = $this->db->get();
		return $query->result();
	}

	public function mis_solicitudesAC($buscar = '', $inicio = false, $cantidadRegistro = false) {
		if ($this->session->userdata('tipo') != 11) {
			$limit = '';
			if ($inicio !== false && $cantidadRegistro !== false) {
				$limit = 'LIMIT ' . $inicio . "," . $cantidadRegistro;
			}
			/*$this->db->select('tbl_proyectos.nombre_proyecto');
			$this->db->select('tbl_proyectos.numero_proyecto');
			$this->db->select('tbl_solicitud_material.*');
			$this->db->select('user_autor.nombre as user_autor');
			$this->db->select('user_aprobacion.nombre as user_aprobacion');
			$this->db->select('CONCAT(tbl_usuarios.nombres," ",tbl_usuarios.apellido_paterno," ",tbl_usuarios.apellido_materno) as recibe');

			$this->db->from('tbl_solicitud_material');

			$this->db->join('tbl_proyectos', 'tbl_solicitud_material.tbl_proyectos_idtbl_proyectos=tbl_proyectos.idtbl_proyectos', 'left');
			$this->db->join('tbl_users as user_autor', 'tbl_solicitud_material.tbl_users_idtbl_users_autor=user_autor.idtbl_users', 'left');
			$this->db->join('tbl_users as user_aprobacion', 'tbl_solicitud_material.tbl_users_idtbl_users_aprobacion=user_aprobacion.idtbl_users', 'left');
			$this->db->join('tbl_usuarios', 'tbl_solicitud_material.tbl_usuarios_idtbl_usuarios=tbl_usuarios.idtbl_usuarios', 'left');
			$this->db->not_like('tbl_solicitud_material.uid', '_');
			$this->db->where('user_autor.idtbl_users', $this->session->userdata('id'));
			$this->db->or_where('user_aprobacion.idtbl_users', $this->session->userdata('id'));
			$this->db->order_by('tbl_solicitud_material.idtbl_solicitud_material', 'DESC');*/
			$query = $this->db->query("SELECT tbl_proyectos.nombre_proyecto, tbl_proyectos.numero_proyecto, tbl_solicitud_material.*, user_autor.nombre as user_autor, user_aprobacion.nombre as user_aprobacion, user_co.nombre as user_control_obra, user_ac.nombre as user_alto_costo, CONCAT(tbl_usuarios.nombres,' ',tbl_usuarios.apellido_paterno,' ',tbl_usuarios.apellido_materno) as recibe FROM tbl_solicitud_material LEFT JOIN tbl_users as user_co ON user_co.idtbl_users=tbl_solicitud_material.tbl_users_idtbl_users_co LEFT JOIN tbl_users as user_ac ON user_ac.idtbl_users=tbl_solicitud_material.tbl_users_idtbl_users_ac LEFT JOIN tbl_proyectos ON tbl_solicitud_material.tbl_proyectos_idtbl_proyectos=tbl_proyectos.idtbl_proyectos LEFT JOIN tbl_users as user_autor ON tbl_solicitud_material.tbl_users_idtbl_users_autor=user_autor.idtbl_users LEFT JOIN tbl_users as user_aprobacion ON tbl_solicitud_material.tbl_users_idtbl_users_aprobacion=user_aprobacion.idtbl_users LEFT JOIN tbl_usuarios ON tbl_solicitud_material.tbl_usuarios_idtbl_usuarios=tbl_usuarios.idtbl_usuarios WHERE tbl_solicitud_material.estatus_solicitud NOT LIKE 'modificada%' AND tbl_solicitud_material.tipo_producto='Alto costo' AND (user_autor.idtbl_users = " . $this->session->userdata("id") . " OR user_aprobacion.idtbl_users = " . $this->session->userdata("id") . ") AND (tbl_solicitud_material.uid LIKE '%$buscar%' OR tbl_proyectos.numero_proyecto LIKE '%$buscar%' OR user_autor.nombre LIKE '%$buscar%' OR user_aprobacion.nombre LIKE '%$buscar%' OR user_co.nombre LIKE '%$buscar%' OR user_ac.nombre LIKE '%$buscar%' OR CONCAT(tbl_usuarios.nombres,' ',tbl_usuarios.apellido_paterno,' ',tbl_usuarios.apellido_materno) LIKE '%$buscar%') ORDER BY tbl_solicitud_material.fecha_creacion DESC " . $limit);
		}
		if ($this->session->userdata('tipo') == 11) {
			$limit = '';
			if ($inicio !== false && $cantidadRegistro !== false) {
				$limit = 'LIMIT ' . $inicio . "," . $cantidadRegistro;
			}
			/*$this->db->select('tbl_proyectos.nombre_proyecto');
			$this->db->select('tbl_proyectos.numero_proyecto');
			$this->db->select('tbl_solicitud_material.*');
			$this->db->select('user_autor.nombre as user_autor');
			$this->db->select('user_aprobacion.nombre as user_aprobacion');
			$this->db->select('CONCAT(tbl_usuarios.nombres," ",tbl_usuarios.apellido_paterno," ",tbl_usuarios.apellido_materno) as recibe');
			$this->db->from('tbl_solicitud_material');
			$this->db->join('tbl_proyectos', 'tbl_solicitud_material.tbl_proyectos_idtbl_proyectos=tbl_proyectos.idtbl_proyectos', 'left');
			$this->db->join('tbl_users as user_autor', 'tbl_solicitud_material.tbl_users_idtbl_users_autor=user_autor.idtbl_users', 'left');
			$this->db->join('tbl_users as user_aprobacion', 'tbl_solicitud_material.tbl_users_idtbl_users_aprobacion=user_aprobacion.idtbl_users', 'left');
			$this->db->join('tbl_usuarios', 'tbl_solicitud_material.tbl_usuarios_idtbl_usuarios=tbl_usuarios.idtbl_usuarios', 'left');
			$this->db->where('tbl_solicitud_material.estatus_solicitud', 'CO PM');
			$this->db->or_where('tbl_solicitud_material.estatus_solicitud', 'CO SH');
			$this->db->or_where('tbl_solicitud_material.estatus_solicitud', 'CO AC');
			$this->db->or_where('tbl_solicitud_material.estatus_solicitud', 'AG');
			$this->db->or_where('tbl_solicitud_material.estatus_solicitud', 'AC');
			$this->db->or_where('tbl_solicitud_material.estatus_solicitud', 'cancelada CO');
			$this->db->or_where('tbl_solicitud_material.estatus_solicitud', 'cancelada CO AC');
			$this->db->order_by('tbl_solicitud_material.idtbl_solicitud_material', 'DESC');*/
			$query = $this->db->query("SELECT tbl_proyectos.nombre_proyecto, tbl_proyectos.numero_proyecto, tbl_solicitud_material.*, user_autor.nombre as user_autor, user_aprobacion.nombre as user_aprobacion, user_co.nombre as user_control_obra, user_ac.nombre as user_alto_costo, CONCAT(tbl_usuarios.nombres,' ',tbl_usuarios.apellido_paterno,' ',tbl_usuarios.apellido_materno) as recibe FROM tbl_solicitud_material LEFT JOIN tbl_users as user_co ON user_co.idtbl_users=tbl_solicitud_material.tbl_users_idtbl_users_co LEFT JOIN tbl_users as user_ac ON user_ac.idtbl_users=tbl_solicitud_material.tbl_users_idtbl_users_ac LEFT JOIN tbl_proyectos ON tbl_solicitud_material.tbl_proyectos_idtbl_proyectos=tbl_proyectos.idtbl_proyectos LEFT JOIN tbl_users as user_autor ON tbl_solicitud_material.tbl_users_idtbl_users_autor=user_autor.idtbl_users LEFT JOIN tbl_users as user_aprobacion ON tbl_solicitud_material.tbl_users_idtbl_users_aprobacion=user_aprobacion.idtbl_users LEFT JOIN tbl_usuarios ON tbl_solicitud_material.tbl_usuarios_idtbl_usuarios=tbl_usuarios.idtbl_usuarios WHERE tbl_solicitud_material.uid NOT LIKE '_' AND tbl_solicitud_material.tipo_producto='Alto costo' AND (tbl_solicitud_material.estatus_solicitud = 'CO PM' OR tbl_solicitud_material.estatus_solicitud = 'CO SH' OR tbl_solicitud_material.estatus_solicitud = 'CO AC' OR tbl_solicitud_material.estatus_solicitud = 'AG' OR tbl_solicitud_material.estatus_solicitud = 'AC' OR tbl_solicitud_material.estatus_solicitud = 'cancelada CO' OR tbl_solicitud_material.estatus_solicitud = 'cancelada CO AC') AND (tbl_solicitud_material.uid LIKE '%$buscar%' OR tbl_proyectos.numero_proyecto LIKE '%$buscar%' OR user_autor.nombre LIKE '%$buscar%' OR user_aprobacion.nombre LIKE '$buscar' OR user_co.nombre LIKE '%$buscar%' OR user_ac.nombre LIKE '%$buscar%' OR CONCAT(tbl_usuarios.nombres,' ',tbl_usuarios.apellido_paterno,' ',tbl_usuarios.apellido_materno) LIKE '%$buscar%') ORDER BY tbl_solicitud_material.fecha_creacion DESC " . $limit);
		}
		//$this->db->not_like('tbl_solicitud_material.uid', '_');
		//$this->db->order_by('tbl_solicitud_material.idtbl_solicitud_material', 'DESC');
		//$query = $this->db->get();
		return $query->result();
	}

	public function mis_solicitudesKuali($buscar = '', $inicio = false, $cantidadRegistro = false) {
		if ($this->session->userdata('tipo') != 11 && $this->session->userdata('id') != 48) {
			$limit = '';
			if ($inicio !== false && $cantidadRegistro !== false) {
				$limit = 'LIMIT ' . $inicio . "," . $cantidadRegistro;
			}
			/*$this->db->select('tbl_proyectos.nombre_proyecto');
			$this->db->select('tbl_proyectos.numero_proyecto');
			$this->db->select('tbl_solicitud_material.*');
			$this->db->select('user_autor.nombre as user_autor');
			$this->db->select('user_aprobacion.nombre as user_aprobacion');
			$this->db->select('CONCAT(tbl_usuarios.nombres," ",tbl_usuarios.apellido_paterno," ",tbl_usuarios.apellido_materno) as recibe');

			$this->db->from('tbl_solicitud_material');

			$this->db->join('tbl_proyectos', 'tbl_solicitud_material.tbl_proyectos_idtbl_proyectos=tbl_proyectos.idtbl_proyectos', 'left');
			$this->db->join('tbl_users as user_autor', 'tbl_solicitud_material.tbl_users_idtbl_users_autor=user_autor.idtbl_users', 'left');
			$this->db->join('tbl_users as user_aprobacion', 'tbl_solicitud_material.tbl_users_idtbl_users_aprobacion=user_aprobacion.idtbl_users', 'left');
			$this->db->join('tbl_usuarios', 'tbl_solicitud_material.tbl_usuarios_idtbl_usuarios=tbl_usuarios.idtbl_usuarios', 'left');
			$this->db->not_like('tbl_solicitud_material.uid', '_');
			$this->db->where('user_autor.idtbl_users', $this->session->userdata('id'));
			$this->db->or_where('user_aprobacion.idtbl_users', $this->session->userdata('id'));
			$this->db->order_by('tbl_solicitud_material.idtbl_solicitud_material', 'DESC');*/
			$query = $this->db->query("SELECT tbl_proyectos.nombre_proyecto, tbl_proyectos.numero_proyecto, tbl_solicitud_material.*, user_autor.nombre as user_autor, user_aprobacion.nombre as user_aprobacion, CONCAT(tbl_usuarios.nombres,' ',tbl_usuarios.apellido_paterno,' ',tbl_usuarios.apellido_materno) as recibe FROM tbl_solicitud_material LEFT JOIN tbl_proyectos ON tbl_solicitud_material.tbl_proyectos_idtbl_proyectos=tbl_proyectos.idtbl_proyectos LEFT JOIN tbl_users as user_autor ON tbl_solicitud_material.tbl_users_idtbl_users_autor=user_autor.idtbl_users LEFT JOIN tbl_users as user_aprobacion ON tbl_solicitud_material.tbl_users_idtbl_users_aprobacion=user_aprobacion.idtbl_users LEFT JOIN tbl_usuarios ON tbl_solicitud_material.tbl_usuarios_idtbl_usuarios=tbl_usuarios.idtbl_usuarios WHERE tbl_solicitud_material.estatus_solicitud NOT LIKE 'modificada%' AND tbl_solicitud_material.tipo_producto='Kuali' AND (user_autor.idtbl_users = " . $this->session->userdata("id") . " OR user_aprobacion.idtbl_users = " . $this->session->userdata("id") . ") AND (tbl_solicitud_material.uid LIKE '%$buscar%' OR tbl_proyectos.numero_proyecto LIKE '%$buscar%' OR user_autor.nombre LIKE '%$buscar%' OR user_aprobacion.nombre LIKE '%$buscar%' OR CONCAT(tbl_usuarios.nombres,' ',tbl_usuarios.apellido_paterno,' ',tbl_usuarios.apellido_materno) LIKE '%$buscar%') ORDER BY tbl_solicitud_material.fecha_creacion DESC " . $limit);
		}
		else if ($this->session->userdata('tipo') == 11 && $this->session->userdata('id') != 48) {
			$limit = '';
			if ($inicio !== false && $cantidadRegistro !== false) {
				$limit = 'LIMIT ' . $inicio . "," . $cantidadRegistro;
			}
			/*$this->db->select('tbl_proyectos.nombre_proyecto');
			$this->db->select('tbl_proyectos.numero_proyecto');
			$this->db->select('tbl_solicitud_material.*');
			$this->db->select('user_autor.nombre as user_autor');
			$this->db->select('user_aprobacion.nombre as user_aprobacion');
			$this->db->select('CONCAT(tbl_usuarios.nombres," ",tbl_usuarios.apellido_paterno," ",tbl_usuarios.apellido_materno) as recibe');
			$this->db->from('tbl_solicitud_material');
			$this->db->join('tbl_proyectos', 'tbl_solicitud_material.tbl_proyectos_idtbl_proyectos=tbl_proyectos.idtbl_proyectos', 'left');
			$this->db->join('tbl_users as user_autor', 'tbl_solicitud_material.tbl_users_idtbl_users_autor=user_autor.idtbl_users', 'left');
			$this->db->join('tbl_users as user_aprobacion', 'tbl_solicitud_material.tbl_users_idtbl_users_aprobacion=user_aprobacion.idtbl_users', 'left');
			$this->db->join('tbl_usuarios', 'tbl_solicitud_material.tbl_usuarios_idtbl_usuarios=tbl_usuarios.idtbl_usuarios', 'left');
			$this->db->where('tbl_solicitud_material.estatus_solicitud', 'CO PM');
			$this->db->or_where('tbl_solicitud_material.estatus_solicitud', 'CO SH');
			$this->db->or_where('tbl_solicitud_material.estatus_solicitud', 'CO AC');
			$this->db->or_where('tbl_solicitud_material.estatus_solicitud', 'AG');
			$this->db->or_where('tbl_solicitud_material.estatus_solicitud', 'AC');
			$this->db->or_where('tbl_solicitud_material.estatus_solicitud', 'cancelada CO');
			$this->db->or_where('tbl_solicitud_material.estatus_solicitud', 'cancelada CO AC');
			$this->db->order_by('tbl_solicitud_material.idtbl_solicitud_material', 'DESC');*/
			$query = $this->db->query("SELECT tbl_proyectos.nombre_proyecto, tbl_proyectos.numero_proyecto, tbl_solicitud_material.*, user_autor.nombre as user_autor, user_aprobacion.nombre as user_aprobacion, CONCAT(tbl_usuarios.nombres,' ',tbl_usuarios.apellido_paterno,' ',tbl_usuarios.apellido_materno) as recibe FROM tbl_solicitud_material LEFT JOIN tbl_proyectos ON tbl_solicitud_material.tbl_proyectos_idtbl_proyectos=tbl_proyectos.idtbl_proyectos LEFT JOIN tbl_users as user_autor ON tbl_solicitud_material.tbl_users_idtbl_users_autor=user_autor.idtbl_users LEFT JOIN tbl_users as user_aprobacion ON tbl_solicitud_material.tbl_users_idtbl_users_aprobacion=user_aprobacion.idtbl_users LEFT JOIN tbl_usuarios ON tbl_solicitud_material.tbl_usuarios_idtbl_usuarios=tbl_usuarios.idtbl_usuarios WHERE tbl_solicitud_material.uid NOT LIKE '_' AND tbl_solicitud_material.tipo_producto='Kuali' AND (tbl_solicitud_material.estatus_solicitud = 'CO PM' OR tbl_solicitud_material.estatus_solicitud = 'CO SH' OR tbl_solicitud_material.estatus_solicitud = 'CO AC' OR tbl_solicitud_material.estatus_solicitud = 'AG' OR tbl_solicitud_material.estatus_solicitud = 'AC' OR tbl_solicitud_material.estatus_solicitud = 'cancelada CO' OR tbl_solicitud_material.estatus_solicitud = 'cancelada CO AC') AND (tbl_solicitud_material.uid LIKE '%$buscar%' OR tbl_proyectos.numero_proyecto LIKE '%$buscar%' OR user_autor.nombre LIKE '%$buscar%' OR user_aprobacion.nombre LIKE '%$buscar%' OR CONCAT(tbl_usuarios.nombres,' ',tbl_usuarios.apellido_paterno,' ',tbl_usuarios.apellido_materno) LIKE '%$buscar%') ORDER BY tbl_solicitud_material.fecha_creacion DESC " . $limit);
		} else if ($this->session->userdata('id') == 48) {
			$limit = '';
			if ($inicio !== false && $cantidadRegistro !== false) {
				$limit = 'LIMIT ' . $inicio . "," . $cantidadRegistro;
			}
			/*$this->db->select('tbl_proyectos.nombre_proyecto');
			$this->db->select('tbl_proyectos.numero_proyecto');
			$this->db->select('tbl_solicitud_material.*');
			$this->db->select('user_autor.nombre as user_autor');
			$this->db->select('user_aprobacion.nombre as user_aprobacion');
			$this->db->select('CONCAT(tbl_usuarios.nombres," ",tbl_usuarios.apellido_paterno," ",tbl_usuarios.apellido_materno) as recibe');
			$this->db->from('tbl_solicitud_material');
			$this->db->join('tbl_proyectos', 'tbl_solicitud_material.tbl_proyectos_idtbl_proyectos=tbl_proyectos.idtbl_proyectos', 'left');
			$this->db->join('tbl_users as user_autor', 'tbl_solicitud_material.tbl_users_idtbl_users_autor=user_autor.idtbl_users', 'left');
			$this->db->join('tbl_users as user_aprobacion', 'tbl_solicitud_material.tbl_users_idtbl_users_aprobacion=user_aprobacion.idtbl_users', 'left');
			$this->db->join('tbl_usuarios', 'tbl_solicitud_material.tbl_usuarios_idtbl_usuarios=tbl_usuarios.idtbl_usuarios', 'left');
			$this->db->where('tbl_solicitud_material.estatus_solicitud', 'CO PM');
			$this->db->or_where('tbl_solicitud_material.estatus_solicitud', 'CO SH');
			$this->db->or_where('tbl_solicitud_material.estatus_solicitud', 'CO AC');
			$this->db->or_where('tbl_solicitud_material.estatus_solicitud', 'AG');
			$this->db->or_where('tbl_solicitud_material.estatus_solicitud', 'AC');
			$this->db->or_where('tbl_solicitud_material.estatus_solicitud', 'cancelada CO');
			$this->db->or_where('tbl_solicitud_material.estatus_solicitud', 'cancelada CO AC');
			$this->db->order_by('tbl_solicitud_material.idtbl_solicitud_material', 'DESC');*/
			$query = $this->db->query("SELECT tbl_proyectos.nombre_proyecto, tbl_proyectos.numero_proyecto, tbl_solicitud_material.*, user_co.nombre as user_control_obra, user_autor.nombre as user_autor, user_aprobacion.nombre as user_aprobacion, CONCAT(tbl_usuarios.nombres,' ',tbl_usuarios.apellido_paterno,' ',tbl_usuarios.apellido_materno) as recibe FROM tbl_solicitud_material LEFT JOIN tbl_proyectos ON tbl_solicitud_material.tbl_proyectos_idtbl_proyectos=tbl_proyectos.idtbl_proyectos LEFT JOIN tbl_users as user_autor ON tbl_solicitud_material.tbl_users_idtbl_users_autor=user_autor.idtbl_users LEFT JOIN tbl_users as user_co ON user_co.idtbl_users = tbl_solicitud_material.tbl_users_idtbl_users_co LEFT JOIN tbl_users as user_aprobacion ON tbl_solicitud_material.tbl_users_idtbl_users_aprobacion=user_aprobacion.idtbl_users LEFT JOIN tbl_usuarios ON tbl_solicitud_material.tbl_usuarios_idtbl_usuarios=tbl_usuarios.idtbl_usuarios WHERE tbl_solicitud_material.uid NOT LIKE '_' AND tbl_solicitud_material.tipo_producto='Kuali' AND (tbl_solicitud_material.estatus_solicitud = 'CO K' OR tbl_solicitud_material.estatus_solicitud = 'K' OR tbl_solicitud_material.estatus_solicitud = 'SU K' OR tbl_solicitud_material.estatus_solicitud = 'SK' OR tbl_solicitud_material.estatus_solicitud = 'cancelada K' OR tbl_solicitud_material.estatus_solicitud = 'cancelada PM K' OR tbl_solicitud_material.estatus_solicitud = 'cancelada CO K') AND (tbl_solicitud_material.uid LIKE '%$buscar%' OR tbl_proyectos.numero_proyecto LIKE '%$buscar%' OR user_autor.nombre LIKE '%$buscar%' OR user_aprobacion.nombre LIKE '%$buscar%' OR CONCAT(tbl_usuarios.nombres,' ',tbl_usuarios.apellido_paterno,' ',tbl_usuarios.apellido_materno) LIKE '%$buscar%') ORDER BY tbl_solicitud_material.fecha_creacion DESC " . $limit);
		}elseif($this->session->userdata('tipo') == 10){
			$limit = '';
			if ($inicio !== false && $cantidadRegistro !== false) {
				$limit = 'LIMIT ' . $inicio . "," . $cantidadRegistro;
			}
			$query = $this->db->query("SELECT tbl_proyectos.nombre_proyecto, tbl_proyectos.numero_proyecto, tbl_solicitud_material.*, user_co.nombre as user_control_obra, user_autor.nombre as user_autor, user_aprobacion.nombre as user_aprobacion, CONCAT(tbl_usuarios.nombres,' ',tbl_usuarios.apellido_paterno,' ',tbl_usuarios.apellido_materno) as recibe FROM tbl_solicitud_material LEFT JOIN tbl_proyectos ON tbl_solicitud_material.tbl_proyectos_idtbl_proyectos=tbl_proyectos.idtbl_proyectos LEFT JOIN tbl_users as user_autor ON tbl_solicitud_material.tbl_users_idtbl_users_autor=user_autor.idtbl_users LEFT JOIN tbl_users as user_co ON user_co.idtbl_users = tbl_solicitud_material.tbl_users_idtbl_users_co LEFT JOIN tbl_users as user_aprobacion ON tbl_solicitud_material.tbl_users_idtbl_users_aprobacion=user_aprobacion.idtbl_users LEFT JOIN tbl_usuarios ON tbl_solicitud_material.tbl_usuarios_idtbl_usuarios=tbl_usuarios.idtbl_usuarios WHERE tbl_solicitud_material.uid NOT LIKE '_' AND tbl_solicitud_material.tipo_producto='Kuali' AND (tbl_solicitud_material.estatus_solicitud = 'CO K' OR tbl_solicitud_material.estatus_solicitud = 'K' OR tbl_solicitud_material.estatus_solicitud = 'SU K' OR tbl_solicitud_material.estatus_solicitud = 'SK') AND (tbl_solicitud_material.uid LIKE '%$buscar%' OR tbl_proyectos.numero_proyecto LIKE '%$buscar%' OR user_autor.nombre LIKE '%$buscar%' OR user_aprobacion.nombre LIKE '%$buscar%' OR CONCAT(tbl_usuarios.nombres,' ',tbl_usuarios.apellido_paterno,' ',tbl_usuarios.apellido_materno) LIKE '%$buscar%') ORDER BY tbl_solicitud_material.fecha_creacion DESC " . $limit);
		}
		//$this->db->not_like('tbl_solicitud_material.uid', '_');
		//$this->db->order_by('tbl_solicitud_material.idtbl_solicitud_material', 'DESC');
		//$query = $this->db->get();
		return $query->result();
	}

	public function mis_solicitudesKualiMI($buscar = '', $inicio = false, $cantidadRegistro = false) {
		$limit = '';
		if ($inicio !== false && $cantidadRegistro !== false) {
			$limit = 'LIMIT ' . $inicio . "," . $cantidadRegistro;
		}
		/*$this->db->select('tbl_proyectos.nombre_proyecto');
		$this->db->select('tbl_proyectos.numero_proyecto');
		$this->db->select('tbl_solicitud_material.*');
		$this->db->select('user_autor.nombre as user_autor');
		$this->db->select('user_aprobacion.nombre as user_aprobacion');
		$this->db->select('CONCAT(tbl_usuarios.nombres," ",tbl_usuarios.apellido_paterno," ",tbl_usuarios.apellido_materno) as recibe');

		$this->db->from('tbl_solicitud_material');

		$this->db->join('tbl_proyectos', 'tbl_solicitud_material.tbl_proyectos_idtbl_proyectos=tbl_proyectos.idtbl_proyectos', 'left');
		$this->db->join('tbl_users as user_autor', 'tbl_solicitud_material.tbl_users_idtbl_users_autor=user_autor.idtbl_users', 'left');
		$this->db->join('tbl_users as user_aprobacion', 'tbl_solicitud_material.tbl_users_idtbl_users_aprobacion=user_aprobacion.idtbl_users', 'left');
		$this->db->join('tbl_usuarios', 'tbl_solicitud_material.tbl_usuarios_idtbl_usuarios=tbl_usuarios.idtbl_usuarios', 'left');
		$this->db->not_like('tbl_solicitud_material.uid', '_');
		$this->db->where('user_autor.idtbl_users', $this->session->userdata('id'));
		$this->db->or_where('user_aprobacion.idtbl_users', $this->session->userdata('id'));
		$this->db->order_by('tbl_solicitud_material.idtbl_solicitud_material', 'DESC');*/
		$query = $this->db->query("SELECT tbl_proyectos.nombre_proyecto, tbl_proyectos.numero_proyecto, tbl_solicitud_material.*, user_autor.nombre as user_autor, user_aprobacion.nombre as user_aprobacion, CONCAT(tbl_usuarios.nombres,' ',tbl_usuarios.apellido_paterno,' ',tbl_usuarios.apellido_materno) as recibe FROM tbl_solicitud_material LEFT JOIN tbl_proyectos ON tbl_solicitud_material.tbl_proyectos_idtbl_proyectos=tbl_proyectos.idtbl_proyectos LEFT JOIN tbl_users as user_autor ON tbl_solicitud_material.tbl_users_idtbl_users_autor=user_autor.idtbl_users LEFT JOIN tbl_users as user_aprobacion ON tbl_solicitud_material.tbl_users_idtbl_users_aprobacion=user_aprobacion.idtbl_users LEFT JOIN tbl_usuarios ON tbl_solicitud_material.tbl_usuarios_idtbl_usuarios=tbl_usuarios.idtbl_usuarios WHERE tbl_solicitud_material.estatus_solicitud NOT LIKE 'modificada%' AND tbl_solicitud_material.tipo_producto='Material Instalacion Kuali' AND (tbl_solicitud_material.uid LIKE '%$buscar%' OR tbl_proyectos.numero_proyecto LIKE '%$buscar%' OR user_autor.nombre LIKE '%$buscar%' OR user_aprobacion.nombre LIKE '%$buscar%' OR CONCAT(tbl_usuarios.nombres,' ',tbl_usuarios.apellido_paterno,' ',tbl_usuarios.apellido_materno) LIKE '%$buscar%') ORDER BY tbl_solicitud_material.fecha_creacion DESC " . $limit);
		return $query->result();
	}

	public function mis_solicitudesAreaMedica($buscar = '', $inicio = false, $cantidadRegistro = false) {
		if ($this->session->userdata('tipo') != 11) {
			$limit = '';
			if ($inicio !== false && $cantidadRegistro !== false) {
				$limit = 'LIMIT ' . $inicio . "," . $cantidadRegistro;
			}
			
			$query = $this->db->query("SELECT tbl_proyectos.nombre_proyecto, tbl_proyectos.numero_proyecto, tbl_solicitud_material.*, user_autor.nombre as user_autor, user_aprobacion.nombre as user_aprobacion, CONCAT(tbl_usuarios.nombres,' ',tbl_usuarios.apellido_paterno,' ',tbl_usuarios.apellido_materno) as recibe FROM tbl_solicitud_material LEFT JOIN tbl_proyectos ON tbl_solicitud_material.tbl_proyectos_idtbl_proyectos=tbl_proyectos.idtbl_proyectos LEFT JOIN tbl_users as user_autor ON tbl_solicitud_material.tbl_users_idtbl_users_autor=user_autor.idtbl_users LEFT JOIN tbl_users as user_aprobacion ON tbl_solicitud_material.tbl_users_idtbl_users_aprobacion=user_aprobacion.idtbl_users LEFT JOIN tbl_usuarios ON tbl_solicitud_material.tbl_usuarios_idtbl_usuarios=tbl_usuarios.idtbl_usuarios WHERE tbl_solicitud_material.estatus_solicitud NOT LIKE 'modificada%' AND tbl_solicitud_material.tipo_producto='Medica' AND (user_autor.idtbl_users = " . $this->session->userdata("id") . " OR user_aprobacion.idtbl_users = " . $this->session->userdata("id") . ") AND (tbl_solicitud_material.uid LIKE '%$buscar%' OR tbl_proyectos.numero_proyecto LIKE '%$buscar%' OR user_autor.nombre LIKE '%$buscar%' OR user_aprobacion.nombre LIKE '%$buscar%' OR CONCAT(tbl_usuarios.nombres,' ',tbl_usuarios.apellido_paterno,' ',tbl_usuarios.apellido_materno) LIKE '%$buscar%') ORDER BY tbl_solicitud_material.fecha_creacion DESC " . $limit);
		}
		if ($this->session->userdata('tipo') == 11) {
			$limit = '';
			if ($inicio !== false && $cantidadRegistro !== false) {
				$limit = 'LIMIT ' . $inicio . "," . $cantidadRegistro;
			}
			
			$query = $this->db->query("SELECT tbl_proyectos.nombre_proyecto, tbl_proyectos.numero_proyecto, tbl_solicitud_material.*, user_autor.nombre as user_autor, user_aprobacion.nombre as user_aprobacion, CONCAT(tbl_usuarios.nombres,' ',tbl_usuarios.apellido_paterno,' ',tbl_usuarios.apellido_materno) as recibe FROM tbl_solicitud_material LEFT JOIN tbl_proyectos ON tbl_solicitud_material.tbl_proyectos_idtbl_proyectos=tbl_proyectos.idtbl_proyectos LEFT JOIN tbl_users as user_autor ON tbl_solicitud_material.tbl_users_idtbl_users_autor=user_autor.idtbl_users LEFT JOIN tbl_users as user_aprobacion ON tbl_solicitud_material.tbl_users_idtbl_users_aprobacion=user_aprobacion.idtbl_users LEFT JOIN tbl_usuarios ON tbl_solicitud_material.tbl_usuarios_idtbl_usuarios=tbl_usuarios.idtbl_usuarios WHERE tbl_solicitud_material.uid NOT LIKE '_' AND tbl_solicitud_material.tipo_producto='Kuali' AND (tbl_solicitud_material.estatus_solicitud = 'CO PM' OR tbl_solicitud_material.estatus_solicitud = 'CO SH' OR tbl_solicitud_material.estatus_solicitud = 'CO AC' OR tbl_solicitud_material.estatus_solicitud = 'AG' OR tbl_solicitud_material.estatus_solicitud = 'AC' OR tbl_solicitud_material.estatus_solicitud = 'cancelada CO' OR tbl_solicitud_material.estatus_solicitud = 'cancelada CO AC') AND (tbl_solicitud_material.uid LIKE '%$buscar%' OR tbl_proyectos.numero_proyecto LIKE '%$buscar%' OR user_autor.nombre LIKE '%$buscar%' OR user_aprobacion.nombre LIKE '%$buscar%' OR CONCAT(tbl_usuarios.nombres,' ',tbl_usuarios.apellido_paterno,' ',tbl_usuarios.apellido_materno) LIKE '%$buscar%') ORDER BY tbl_solicitud_material.fecha_creacion DESC " . $limit);
		}
		
		return $query->result();
	}

	public function misSolicitudesTarjetas($buscar = '', $inicio = false, $cantidadRegistro = false) {
		if ($this->session->userdata('tipo') != 11) {
			$limit = '';
			if ($inicio !== false && $cantidadRegistro !== false) {
				$limit = 'LIMIT ' . $inicio . "," . $cantidadRegistro;
			}
			
			$query = $this->db->query("SELECT tbl_proyectos.nombre_proyecto, tbl_proyectos.numero_proyecto, tbl_solicitud_material.*, user_autor.nombre as user_autor, user_aprobacion.nombre as user_aprobacion, CONCAT(tbl_usuarios.nombres,' ',tbl_usuarios.apellido_paterno,' ',tbl_usuarios.apellido_materno) as recibe FROM tbl_solicitud_material LEFT JOIN tbl_proyectos ON tbl_solicitud_material.tbl_proyectos_idtbl_proyectos=tbl_proyectos.idtbl_proyectos LEFT JOIN tbl_users as user_autor ON tbl_solicitud_material.tbl_users_idtbl_users_autor=user_autor.idtbl_users LEFT JOIN tbl_users as user_aprobacion ON tbl_solicitud_material.tbl_users_idtbl_users_aprobacion=user_aprobacion.idtbl_users LEFT JOIN tbl_usuarios ON tbl_solicitud_material.tbl_usuarios_idtbl_usuarios=tbl_usuarios.idtbl_usuarios WHERE tbl_solicitud_material.estatus_solicitud NOT LIKE 'modificada%' AND tbl_solicitud_material.tipo_producto='Tarjetas' AND (user_autor.idtbl_users = " . $this->session->userdata("id") . " OR user_aprobacion.idtbl_users = " . $this->session->userdata("id") . ") AND (tbl_solicitud_material.uid LIKE '%$buscar%' OR tbl_proyectos.numero_proyecto LIKE '%$buscar%' OR user_autor.nombre LIKE '%$buscar%' OR user_aprobacion.nombre LIKE '%$buscar%' OR CONCAT(tbl_usuarios.nombres,' ',tbl_usuarios.apellido_paterno,' ',tbl_usuarios.apellido_materno) LIKE '%$buscar%') ORDER BY tbl_solicitud_material.fecha_creacion DESC " . $limit);
		}
		if ($this->session->userdata('tipo') == 11) {
			$limit = '';
			if ($inicio !== false && $cantidadRegistro !== false) {
				$limit = 'LIMIT ' . $inicio . "," . $cantidadRegistro;
			}
			
			$query = $this->db->query("SELECT tbl_proyectos.nombre_proyecto, tbl_proyectos.numero_proyecto, tbl_solicitud_material.*, user_autor.nombre as user_autor, user_aprobacion.nombre as user_aprobacion, CONCAT(tbl_usuarios.nombres,' ',tbl_usuarios.apellido_paterno,' ',tbl_usuarios.apellido_materno) as recibe FROM tbl_solicitud_material LEFT JOIN tbl_proyectos ON tbl_solicitud_material.tbl_proyectos_idtbl_proyectos=tbl_proyectos.idtbl_proyectos LEFT JOIN tbl_users as user_autor ON tbl_solicitud_material.tbl_users_idtbl_users_autor=user_autor.idtbl_users LEFT JOIN tbl_users as user_aprobacion ON tbl_solicitud_material.tbl_users_idtbl_users_aprobacion=user_aprobacion.idtbl_users LEFT JOIN tbl_usuarios ON tbl_solicitud_material.tbl_usuarios_idtbl_usuarios=tbl_usuarios.idtbl_usuarios WHERE tbl_solicitud_material.uid NOT LIKE '_' AND tbl_solicitud_material.tipo_producto='Kuali' AND (tbl_solicitud_material.estatus_solicitud = 'CO PM' OR tbl_solicitud_material.estatus_solicitud = 'CO SH' OR tbl_solicitud_material.estatus_solicitud = 'CO AC' OR tbl_solicitud_material.estatus_solicitud = 'AG' OR tbl_solicitud_material.estatus_solicitud = 'AC' OR tbl_solicitud_material.estatus_solicitud = 'cancelada CO' OR tbl_solicitud_material.estatus_solicitud = 'cancelada CO AC') AND (tbl_solicitud_material.uid LIKE '%$buscar%' OR tbl_proyectos.numero_proyecto LIKE '%$buscar%' OR user_autor.nombre LIKE '%$buscar%' OR user_aprobacion.nombre LIKE '%$buscar%' OR CONCAT(tbl_usuarios.nombres,' ',tbl_usuarios.apellido_paterno,' ',tbl_usuarios.apellido_materno) LIKE '%$buscar%') ORDER BY tbl_solicitud_material.fecha_creacion DESC " . $limit);
		}
		
		return $query->result();
	}

	public function mis_solicitudesRCV($buscar = '', $inicio = false, $cantidadRegistro = false) {
		if ($this->session->userdata('tipo') != 11) {
			$limit = '';
			if ($inicio !== false && $cantidadRegistro !== false) {
				$limit = 'LIMIT ' . $inicio . "," . $cantidadRegistro;
			}
			$query = $this->db->query("SELECT tbl_proyectos.nombre_proyecto, tbl_proyectos.numero_proyecto, tbl_solicitud_material.*, user_autor.nombre as user_autor, user_aprobacion.nombre as user_aprobacion, user_aprobacion_ag.nombre as user_aprobacion_ag, CONCAT(tbl_usuarios.nombres,' ',tbl_usuarios.apellido_paterno,' ',tbl_usuarios.apellido_materno) as recibe FROM tbl_solicitud_material LEFT JOIN tbl_proyectos ON tbl_solicitud_material.tbl_proyectos_idtbl_proyectos=tbl_proyectos.idtbl_proyectos LEFT JOIN tbl_users as user_autor ON tbl_solicitud_material.tbl_users_idtbl_users_autor=user_autor.idtbl_users LEFT JOIN tbl_users as user_aprobacion ON tbl_solicitud_material.tbl_users_idtbl_users_aprobacion=user_aprobacion.idtbl_users LEFT JOIN tbl_usuarios ON tbl_solicitud_material.tbl_usuarios_idtbl_usuarios=tbl_usuarios.idtbl_usuarios LEFT JOIN tbl_users as user_aprobacion_ag ON tbl_solicitud_material.tbl_users_idtbl_users_ag = user_aprobacion_ag.idtbl_users WHERE tbl_solicitud_material.estatus_solicitud NOT LIKE 'modificada%' AND tbl_solicitud_material.tipo_producto='Refacciones Control Vehicular' AND (user_autor.idtbl_users = " . $this->session->userdata("id") . ") AND (tbl_solicitud_material.uid LIKE '%$buscar%' OR tbl_proyectos.numero_proyecto LIKE '%$buscar%' OR user_autor.nombre LIKE '%$buscar%' OR user_aprobacion.nombre LIKE '%$buscar%' OR CONCAT(tbl_usuarios.nombres,' ',tbl_usuarios.apellido_paterno,' ',tbl_usuarios.apellido_materno) LIKE '%$buscar%') ORDER BY tbl_solicitud_material.fecha_creacion DESC " . $limit);
		}
		return $query->result();
	}

	//quitar esta función en la versión 1.0.0
	public function solicitudes($buscar = '', $inicio = false, $cantidadRegistro = false, $buscar2 = '') {
		if (($this->session->userdata('tipo') == 4 && $this->session->userdata('id')!=50) || $this->session->userdata('tipo') == 6) {
			$limit = '';
			if ($inicio !== false && $cantidadRegistro !== false) {
				$limit = 'LIMIT ' . $inicio . "," . $cantidadRegistro;
			}			

			$query = $this->db->query('SELECT tbl_proyectos.nombre_proyecto, tbl_proyectos.numero_proyecto, tbl_solicitud_material.*, user_autor.nombre as user_autor, user_aprobacion.nombre as user_aprobacion, CONCAT(tbl_usuarios.nombres," ",tbl_usuarios.apellido_paterno," ",tbl_usuarios.apellido_materno) as recibe FROM tbl_solicitud_material LEFT JOIN tbl_proyectos ON tbl_solicitud_material.tbl_proyectos_idtbl_proyectos=tbl_proyectos.idtbl_proyectos LEFT JOIN tbl_users as user_autor ON tbl_solicitud_material.tbl_users_idtbl_users_autor=user_autor.idtbl_users LEFT JOIN tbl_users as user_aprobacion ON tbl_solicitud_material.tbl_users_idtbl_users_aprobacion=user_aprobacion.idtbl_users LEFT JOIN tbl_usuarios ON tbl_solicitud_material.tbl_usuarios_idtbl_usuarios=tbl_usuarios.idtbl_usuarios WHERE tbl_solicitud_material.tipo_producto NOT LIKE "Alto costo" AND (tbl_solicitud_material.estatus_solicitud="AG" OR tbl_solicitud_material.estatus_solicitud="SU" OR tbl_solicitud_material.estatus_solicitud="S" OR tbl_solicitud_material.estatus_solicitud="cancelada AG" ) AND (tbl_solicitud_material.uid LIKE ' . '"%' . $buscar . '%"' . ' OR tbl_proyectos.numero_proyecto LIKE ' . '"%' . $buscar . '%"' . ') ORDER BY tbl_solicitud_material.fecha_creacion DESC' . $limit);
		} elseif ($this->session->userdata('tipo') == 1) {
			$limit = '';
			if ($inicio !== false && $cantidadRegistro !== false) {
				$limit = 'LIMIT ' . $inicio . "," . $cantidadRegistro;
			}
			
			$query = $this->db->query('SELECT tbl_proyectos.nombre_proyecto, tbl_proyectos.numero_proyecto, tbl_solicitud_material.*, user_autor.nombre as user_autor, user_aprobacion.nombre as user_aprobacion, CONCAT(tbl_usuarios.nombres," ",tbl_usuarios.apellido_paterno," ",tbl_usuarios.apellido_materno) as recibe FROM tbl_solicitud_material LEFT JOIN tbl_proyectos ON tbl_solicitud_material.tbl_proyectos_idtbl_proyectos=tbl_proyectos.idtbl_proyectos LEFT JOIN tbl_users as user_autor ON tbl_solicitud_material.tbl_users_idtbl_users_autor=user_autor.idtbl_users LEFT JOIN tbl_users as user_aprobacion ON tbl_solicitud_material.tbl_users_idtbl_users_aprobacion=user_aprobacion.idtbl_users LEFT JOIN tbl_usuarios ON tbl_solicitud_material.tbl_usuarios_idtbl_usuarios=tbl_usuarios.idtbl_usuarios WHERE tbl_solicitud_material.tipo_producto NOT LIKE "Almacen General" AND (tbl_solicitud_material.estatus_solicitud="AC" OR tbl_solicitud_material.estatus_solicitud="SU AC" OR tbl_solicitud_material.estatus_solicitud="SAC" OR tbl_solicitud_material.estatus_solicitud="cancelada AC" ) AND (tbl_solicitud_material.uid LIKE ' . "'%$buscar%'" . ' OR tbl_proyectos.numero_proyecto LIKE ' . "'%$buscar%'" . ') ORDER BY tbl_solicitud_material.fecha_creacion DESC' . $limit);
		} elseif ($this->session->userdata('tipo') == 4 && $this->session->userdata('id')==50) {
			$limit = '';
			if ($inicio !== false && $cantidadRegistro !== false) {
				$limit = 'LIMIT ' . $inicio . "," . $cantidadRegistro;
			}
			
			$query = $this->db->query('SELECT tbl_proyectos.nombre_proyecto, tbl_proyectos.numero_proyecto, tbl_solicitud_material.*, user_autor.nombre as user_autor, user_aprobacion.nombre as user_aprobacion, CONCAT(tbl_usuarios.nombres," ",tbl_usuarios.apellido_paterno," ",tbl_usuarios.apellido_materno) as recibe FROM tbl_solicitud_material LEFT JOIN tbl_proyectos ON tbl_solicitud_material.tbl_proyectos_idtbl_proyectos=tbl_proyectos.idtbl_proyectos LEFT JOIN tbl_users as user_autor ON tbl_solicitud_material.tbl_users_idtbl_users_autor=user_autor.idtbl_users LEFT JOIN tbl_users as user_aprobacion ON tbl_solicitud_material.tbl_users_idtbl_users_aprobacion=user_aprobacion.idtbl_users LEFT JOIN tbl_usuarios ON tbl_solicitud_material.tbl_usuarios_idtbl_usuarios=tbl_usuarios.idtbl_usuarios WHERE tbl_solicitud_material.tipo_producto = "Kuali" AND (tbl_solicitud_material.estatus_solicitud="K" OR tbl_solicitud_material.estatus_solicitud="SU K" OR tbl_solicitud_material.estatus_solicitud="SK" OR tbl_solicitud_material.estatus_solicitud="cancelada K" ) AND (tbl_solicitud_material.uid LIKE ' . "'%$buscar%'" . ' OR tbl_proyectos.numero_proyecto LIKE ' . "'%$buscar%'" . ') ORDER BY tbl_solicitud_material.fecha_creacion DESC' . $limit);
		}
		return $query->result();
	}

	public function solicitudesAG($buscar = '', $buscar2 = '', $inicio = false, $cantidadRegistro = false) {
		if($this->session->userdata('tipo')==4) {
			$id_almacenes = '';
			$almacenes_encargados = $this->db->query("SELECT tbl_almacenes.tbl_proyectos_idtbl_proyectos FROM tbl_encargado_almacen JOIN tbl_almacenes ON tbl_almacenes.idtbl_almacenes = tbl_encargado_almacen.tbl_almacenes_idtbl_almacenes GROUP BY tbl_almacenes.tbl_proyectos_idtbl_proyectos");
			foreach($almacenes_encargados->result() AS $key => $value){
                if (isset($almacenes_encargados->result()[$key+1]->tbl_proyectos_idtbl_proyectos)) {
                    	$id_almacenes .= $value->tbl_proyectos_idtbl_proyectos.', ';
                }else{
					$id_almacenes .= $value->tbl_proyectos_idtbl_proyectos;
				}
			}
			if($id_almacenes != ''){
				$not_in = "NOT IN ($id_almacenes)";
			}else{
				$not_in = '';
			}
			$limit = '';
			if ($inicio !== false && $cantidadRegistro !== false) {
				$limit = 'LIMIT ' . $inicio . "," . $cantidadRegistro;
			}
			if ($buscar2 == '') {
				$string = "AND (tbl_solicitud_material.estatus_solicitud='AG' OR tbl_solicitud_material.estatus_solicitud='SU' OR tbl_solicitud_material.estatus_solicitud='SU A' OR tbl_solicitud_material.estatus_solicitud='S' OR tbl_solicitud_material.estatus_solicitud='cancelada AG')";
			}
			if ($buscar2 != '') {
				if($buscar2 == 'neodata'){
					$string = "AND (dtl_solicitud_material.observaciones_neodata IS NULL AND tbl_solicitud_material.estatus_solicitud = 'S')";
				}elseif($buscar2 == 'neodata_salida'){
                    $string = "AND (tbl_solicitud_material.neodata_salida IS NULL AND tbl_solicitud_material.estatus_solicitud = '$buscar2')";
                }else{
                    $string = "AND (tbl_solicitud_material.estatus_solicitud = '$buscar2')";
                }
			}
			$query = $this->db->query("SELECT tbl_proyectos.nombre_proyecto, tbl_proyectos.numero_proyecto, tbl_solicitud_material.*, user_autor.nombre as user_autor, user_aprobacion.nombre as user_aprobacion, user_co.nombre as user_control_obra, user_ag.nombre as user_almacen_general, user_ac.nombre as user_alto_costo, user_asignacion.nombre AS nombre_asignacion, CONCAT(tbl_usuarios.nombres,' ',tbl_usuarios.apellido_paterno,' ',tbl_usuarios.apellido_materno) as recibe, dtl_solicitud_material.observaciones_neodata FROM tbl_solicitud_material LEFT JOIN dtl_solicitud_material ON tbl_solicitud_material.idtbl_solicitud_material = dtl_solicitud_material.tbl_solicitud_material_idtbl_solicitud_material LEFT JOIN tbl_users as user_co ON user_co.idtbl_users=tbl_solicitud_material.tbl_users_idtbl_users_co LEFT JOIN tbl_users as user_ag ON user_ag.idtbl_users=tbl_solicitud_material.tbl_users_idtbl_users_ag LEFT JOIN tbl_users as user_ac ON user_ac.idtbl_users=tbl_solicitud_material.tbl_users_idtbl_users_ac LEFT JOIN tbl_proyectos ON tbl_solicitud_material.tbl_proyectos_idtbl_proyectos=tbl_proyectos.idtbl_proyectos LEFT JOIN tbl_users as user_autor ON tbl_solicitud_material.tbl_users_idtbl_users_autor=user_autor.idtbl_users LEFT JOIN tbl_users as user_aprobacion ON tbl_solicitud_material.tbl_users_idtbl_users_aprobacion=user_aprobacion.idtbl_users LEFT JOIN tbl_users user_asignacion ON tbl_solicitud_material.tbl_users_idtbl_users_asignacion = user_asignacion.idtbl_users LEFT JOIN tbl_usuarios ON tbl_solicitud_material.tbl_usuarios_idtbl_usuarios=tbl_usuarios.idtbl_usuarios WHERE tbl_solicitud_material.tbl_proyectos_idtbl_proyectos $not_in AND tbl_solicitud_material.tipo_producto LIKE 'Almacen General' $string AND (tbl_solicitud_material.uid LIKE '%$buscar%' OR tbl_proyectos.numero_proyecto LIKE '%$buscar%' OR user_autor.nombre LIKE '%$buscar%' OR user_aprobacion.nombre LIKE '%$buscar%' OR user_co.nombre LIKE '%$buscar%' OR user_ag.nombre LIKE '%$buscar%' OR user_ac.nombre LIKE '%$buscar%' OR CONCAT(tbl_usuarios.nombres,' ',tbl_usuarios.apellido_paterno,' ',tbl_usuarios.apellido_materno) LIKE '%$buscar%') GROUP BY tbl_solicitud_material.idtbl_solicitud_material ORDER BY tbl_solicitud_material.fecha_creacion DESC " . $limit);
		}
		elseif($this->session->userdata('tipo')==6) {
			$limit = '';
			if ($inicio !== false && $cantidadRegistro !== false) {
				$limit = 'LIMIT ' . $inicio . "," . $cantidadRegistro;
			}
			if ($buscar2 == '') {
				$string = "AND (tbl_solicitud_material.estatus_solicitud='S')";
			}
			if ($buscar2 != '') {
				if($buscar2 == 'neodata'){
					$string = "AND (dtl_solicitud_material.observaciones_neodata IS NULL AND tbl_solicitud_material.estatus_solicitud = 'S')";
				}else{
                    $string = "AND (tbl_solicitud_material.estatus_solicitud = '$buscar2')";
                }
			}
			$query = $this->db->query("SELECT tbl_proyectos.nombre_proyecto, tbl_proyectos.numero_proyecto, tbl_solicitud_material.*, user_autor.nombre as user_autor, user_aprobacion.nombre as user_aprobacion, user_co.nombre as user_control_obra, user_ag.nombre as user_almacen_general, user_ac.nombre as user_alto_costo, CONCAT(tbl_usuarios.nombres,' ',tbl_usuarios.apellido_paterno,' ',tbl_usuarios.apellido_materno) as recibe, dtl_solicitud_material.observaciones_neodata FROM tbl_solicitud_material LEFT JOIN dtl_solicitud_material ON tbl_solicitud_material.idtbl_solicitud_material = dtl_solicitud_material.tbl_solicitud_material_idtbl_solicitud_material LEFT JOIN tbl_users as user_co ON user_co.idtbl_users=tbl_solicitud_material.tbl_users_idtbl_users_co LEFT JOIN tbl_users as user_ag ON user_ag.idtbl_users=tbl_solicitud_material.tbl_users_idtbl_users_ag LEFT JOIN tbl_users as user_ac ON user_ac.idtbl_users=tbl_solicitud_material.tbl_users_idtbl_users_ac LEFT JOIN tbl_proyectos ON tbl_solicitud_material.tbl_proyectos_idtbl_proyectos=tbl_proyectos.idtbl_proyectos LEFT JOIN tbl_users as user_autor ON tbl_solicitud_material.tbl_users_idtbl_users_autor=user_autor.idtbl_users LEFT JOIN tbl_users as user_aprobacion ON tbl_solicitud_material.tbl_users_idtbl_users_aprobacion=user_aprobacion.idtbl_users LEFT JOIN tbl_usuarios ON tbl_solicitud_material.tbl_usuarios_idtbl_usuarios=tbl_usuarios.idtbl_usuarios WHERE dtl_solicitud_material.observaciones_neodata IS NULL AND fecha_aprobacion_ag > '2023-01-14' AND tbl_solicitud_material.tipo_producto LIKE 'Almacen General' $string AND (tbl_solicitud_material.tbl_users_idtbl_users_ag = 18 OR tbl_solicitud_material.tbl_users_idtbl_users_ag = 93 OR tbl_solicitud_material.tbl_users_idtbl_users_ag = 211 OR tbl_solicitud_material.tbl_users_idtbl_users_ag = 238 OR tbl_solicitud_material.tbl_users_idtbl_users_ag = 250 OR tbl_solicitud_material.uid_almacen_seleccionado = '25839864557600770') AND (tbl_solicitud_material.uid LIKE '%$buscar%' OR tbl_proyectos.numero_proyecto LIKE '%$buscar%' OR user_autor.nombre LIKE '%$buscar%' OR user_aprobacion.nombre LIKE '%$buscar%' OR user_co.nombre LIKE '%$buscar%' OR user_ag.nombre LIKE '%$buscar%' OR user_ac.nombre LIKE '%$buscar%' OR CONCAT(tbl_usuarios.nombres,' ',tbl_usuarios.apellido_paterno,' ',tbl_usuarios.apellido_materno) LIKE '%$buscar%') GROUP BY tbl_solicitud_material.idtbl_solicitud_material ORDER BY tbl_solicitud_material.fecha_creacion DESC " . $limit);
		}
		elseif($this->session->userdata('tipo')==10) {
			$limit = '';
			if ($inicio !== false && $cantidadRegistro !== false) {
				$limit = 'LIMIT ' . $inicio . "," . $cantidadRegistro;
			}
			if ($buscar2 == '') {
				$string = "AND (tbl_solicitud_material.estatus_solicitud='SH' OR tbl_solicitud_material.estatus_solicitud='CO SH' OR tbl_solicitud_material.estatus_solicitud='AG' OR tbl_solicitud_material.estatus_solicitud='cancelada SH' OR tbl_solicitud_material.estatus_solicitud='SU' OR tbl_solicitud_material.estatus_solicitud='S')";
			}
			if ($buscar2 != '') {
				$string = "AND (tbl_solicitud_material.estatus_solicitud = '$buscar2')";
			}
			$query = $this->db->query("SELECT tbl_proyectos.nombre_proyecto, tbl_proyectos.numero_proyecto, tbl_solicitud_material.*, user_autor.nombre as user_autor, user_aprobacion.nombre as user_aprobacion, user_co.nombre as user_control_obra, user_ag.nombre as user_almacen_general, user_ac.nombre as user_alto_costo, CONCAT(tbl_usuarios.nombres,' ',tbl_usuarios.apellido_paterno,' ',tbl_usuarios.apellido_materno) as recibe FROM tbl_solicitud_material LEFT JOIN tbl_users as user_co ON user_co.idtbl_users=tbl_solicitud_material.tbl_users_idtbl_users_co LEFT JOIN tbl_users as user_ag ON user_ag.idtbl_users=tbl_solicitud_material.tbl_users_idtbl_users_ag LEFT JOIN tbl_users as user_ac ON user_ac.idtbl_users=tbl_solicitud_material.tbl_users_idtbl_users_ac LEFT JOIN tbl_proyectos ON tbl_solicitud_material.tbl_proyectos_idtbl_proyectos=tbl_proyectos.idtbl_proyectos LEFT JOIN tbl_users as user_autor ON tbl_solicitud_material.tbl_users_idtbl_users_autor=user_autor.idtbl_users LEFT JOIN tbl_users as user_aprobacion ON tbl_solicitud_material.tbl_users_idtbl_users_aprobacion=user_aprobacion.idtbl_users LEFT JOIN tbl_usuarios ON tbl_solicitud_material.tbl_usuarios_idtbl_usuarios=tbl_usuarios.idtbl_usuarios WHERE tbl_solicitud_material.tipo_producto = 'Seguridad e Higiene' $string AND (tbl_solicitud_material.uid LIKE '%$buscar%' OR tbl_proyectos.numero_proyecto LIKE '%$buscar%' OR user_autor.nombre LIKE '%$buscar%' OR user_aprobacion.nombre LIKE '%$buscar%' OR user_co.nombre LIKE '%$buscar%' OR user_ag.nombre LIKE '%$buscar%' OR user_ac.nombre LIKE '%$buscar%' OR CONCAT(tbl_usuarios.nombres,' ',tbl_usuarios.apellido_paterno,' ',tbl_usuarios.apellido_materno) LIKE '%$buscar%') ORDER BY tbl_solicitud_material.fecha_creacion DESC " . $limit);
		}
		elseif($this->session->userdata('encargado_almacen') != null && $this->session->userdata('encargado_almacen') != '') {
			$id_almacenes = '';
			$usuario = $this->session->userdata('id');
			if($this->session->userdata('id') == 324){
				$almacenes_encargados = $this->db->query("SELECT tbl_almacenes.uid FROM tbl_encargado_almacen JOIN tbl_almacenes ON tbl_almacenes.idtbl_almacenes = tbl_encargado_almacen.tbl_almacenes_idtbl_almacenes WHERE tbl_encargado_almacen.tbl_users_idtbl_users = $usuario GROUP BY tbl_almacenes.idtbl_almacenes");

				foreach($almacenes_encargados->result() AS $key => $value){
					if (isset($almacenes_encargados->result()[$key+1]->uid)) {
							$id_almacenes .= "'".$value->uid."'".', ';
					}else{
						$id_almacenes .= "'".$value->uid."'";
					}
				}
			}else{
				$almacenes_encargados = $this->db->query("SELECT tbl_almacenes.tbl_proyectos_idtbl_proyectos FROM tbl_encargado_almacen JOIN tbl_almacenes ON tbl_almacenes.idtbl_almacenes = tbl_encargado_almacen.tbl_almacenes_idtbl_almacenes WHERE tbl_encargado_almacen.tbl_users_idtbl_users = $usuario GROUP BY tbl_almacenes.tbl_proyectos_idtbl_proyectos");

				foreach($almacenes_encargados->result() AS $key => $value){
					if (isset($almacenes_encargados->result()[$key+1]->tbl_proyectos_idtbl_proyectos)) {
							$id_almacenes .= $value->tbl_proyectos_idtbl_proyectos.', ';
					}else{
						$id_almacenes .= $value->tbl_proyectos_idtbl_proyectos;
					}
				}
			}
			if($id_almacenes != ''){
				$in = "IN ($id_almacenes)";
			}else{
				$in = '';
			}
			$limit = '';
			if ($inicio !== false && $cantidadRegistro !== false) {
				$limit = 'LIMIT ' . $inicio . "," . $cantidadRegistro;
			}
			if ($buscar2 == '') {
				$string = "AND (tbl_solicitud_material.estatus_solicitud='AG' OR tbl_solicitud_material.estatus_solicitud='SU' OR tbl_solicitud_material.estatus_solicitud='SU A' OR tbl_solicitud_material.estatus_solicitud='S' OR tbl_solicitud_material.estatus_solicitud='cancelada AG')";
			}
			if ($buscar2 != '') {
				$string = "AND (tbl_solicitud_material.estatus_solicitud = '$buscar2')";
			}
			if($this->session->userdata('id') == 324){
				$query = $this->db->query("SELECT tbl_proyectos.nombre_proyecto, tbl_proyectos.numero_proyecto, tbl_solicitud_material.*, user_autor.nombre as user_autor, user_aprobacion.nombre as user_aprobacion, user_co.nombre as user_control_obra, user_ag.nombre as user_almacen_general, user_ac.nombre as user_alto_costo, CONCAT(tbl_usuarios.nombres,' ',tbl_usuarios.apellido_paterno,' ',tbl_usuarios.apellido_materno) as recibe FROM tbl_solicitud_material LEFT JOIN tbl_users as user_co ON user_co.idtbl_users=tbl_solicitud_material.tbl_users_idtbl_users_co LEFT JOIN tbl_users as user_ag ON user_ag.idtbl_users=tbl_solicitud_material.tbl_users_idtbl_users_ag LEFT JOIN tbl_users as user_ac ON user_ac.idtbl_users=tbl_solicitud_material.tbl_users_idtbl_users_ac LEFT JOIN tbl_proyectos ON tbl_solicitud_material.tbl_proyectos_idtbl_proyectos=tbl_proyectos.idtbl_proyectos LEFT JOIN tbl_users as user_autor ON tbl_solicitud_material.tbl_users_idtbl_users_autor=user_autor.idtbl_users LEFT JOIN tbl_users as user_aprobacion ON tbl_solicitud_material.tbl_users_idtbl_users_aprobacion=user_aprobacion.idtbl_users LEFT JOIN tbl_usuarios ON tbl_solicitud_material.tbl_usuarios_idtbl_usuarios=tbl_usuarios.idtbl_usuarios WHERE (tbl_solicitud_material.uid_almacen_seleccionado $in AND (tbl_solicitud_material.uid_almacen_seleccionado != '25839864557600770' OR tbl_solicitud_material.uid_almacen_seleccionado IS NULL)) AND tbl_solicitud_material.tipo_producto NOT LIKE 'Alto costo' $string AND (tbl_solicitud_material.uid LIKE '%$buscar%' OR tbl_proyectos.numero_proyecto LIKE '%$buscar%' OR user_autor.nombre LIKE '%$buscar%' OR user_aprobacion.nombre LIKE '%$buscar%' OR user_co.nombre LIKE '%$buscar%' OR user_ag.nombre LIKE '%$buscar%' OR user_ac.nombre LIKE '%$buscar%' OR CONCAT(tbl_usuarios.nombres,' ',tbl_usuarios.apellido_paterno,' ',tbl_usuarios.apellido_materno) LIKE '%$buscar%') ORDER BY tbl_solicitud_material.fecha_creacion DESC " . $limit);
			}else{
				$query = $this->db->query("SELECT tbl_proyectos.nombre_proyecto, tbl_proyectos.numero_proyecto, tbl_solicitud_material.*, user_autor.nombre as user_autor, user_aprobacion.nombre as user_aprobacion, user_co.nombre as user_control_obra, user_ag.nombre as user_almacen_general, user_ac.nombre as user_alto_costo, CONCAT(tbl_usuarios.nombres,' ',tbl_usuarios.apellido_paterno,' ',tbl_usuarios.apellido_materno) as recibe FROM tbl_solicitud_material LEFT JOIN tbl_users as user_co ON user_co.idtbl_users=tbl_solicitud_material.tbl_users_idtbl_users_co LEFT JOIN tbl_users as user_ag ON user_ag.idtbl_users=tbl_solicitud_material.tbl_users_idtbl_users_ag LEFT JOIN tbl_users as user_ac ON user_ac.idtbl_users=tbl_solicitud_material.tbl_users_idtbl_users_ac LEFT JOIN tbl_proyectos ON tbl_solicitud_material.tbl_proyectos_idtbl_proyectos=tbl_proyectos.idtbl_proyectos LEFT JOIN tbl_users as user_autor ON tbl_solicitud_material.tbl_users_idtbl_users_autor=user_autor.idtbl_users LEFT JOIN tbl_users as user_aprobacion ON tbl_solicitud_material.tbl_users_idtbl_users_aprobacion=user_aprobacion.idtbl_users LEFT JOIN tbl_usuarios ON tbl_solicitud_material.tbl_usuarios_idtbl_usuarios=tbl_usuarios.idtbl_usuarios WHERE (tbl_solicitud_material.tbl_proyectos_idtbl_proyectos $in AND (tbl_solicitud_material.uid_almacen_seleccionado != '25839864557600770' OR tbl_solicitud_material.uid_almacen_seleccionado IS NULL)) AND tbl_solicitud_material.tipo_producto NOT LIKE 'Alto costo' $string AND (tbl_solicitud_material.uid LIKE '%$buscar%' OR tbl_proyectos.numero_proyecto LIKE '%$buscar%' OR user_autor.nombre LIKE '%$buscar%' OR user_aprobacion.nombre LIKE '%$buscar%' OR user_co.nombre LIKE '%$buscar%' OR user_ag.nombre LIKE '%$buscar%' OR user_ac.nombre LIKE '%$buscar%' OR CONCAT(tbl_usuarios.nombres,' ',tbl_usuarios.apellido_paterno,' ',tbl_usuarios.apellido_materno) LIKE '%$buscar%') ORDER BY tbl_solicitud_material.fecha_creacion DESC " . $limit);
			}
		}
		return $query->result();
	}

	public function solicitudesAGEstatus($buscar = '', $buscar2 = '', $inicio = false, $cantidadRegistro = false) {
		if($this->session->userdata('tipo')==4) {
			$estatus = $this->input->post('estatus');
			$id_almacenes = '';
			$almacenes_encargados = $this->db->query("SELECT tbl_almacenes.tbl_proyectos_idtbl_proyectos FROM tbl_encargado_almacen JOIN tbl_almacenes ON tbl_almacenes.idtbl_almacenes = tbl_encargado_almacen.tbl_almacenes_idtbl_almacenes GROUP BY tbl_almacenes.tbl_proyectos_idtbl_proyectos");
			foreach($almacenes_encargados->result() AS $key => $value){
                if (isset($almacenes_encargados->result()[$key+1]->tbl_proyectos_idtbl_proyectos)) {
                    	$id_almacenes .= $value->tbl_proyectos_idtbl_proyectos.', ';
                }else{
					$id_almacenes .= $value->tbl_proyectos_idtbl_proyectos;
				}
			}
			if($id_almacenes != ''){
				$not_in = "NOT IN ($id_almacenes)";
			}else{
				$not_in = '';
			}
			$limit = '';
			if ($inicio !== false && $cantidadRegistro !== false) {
				$limit = 'LIMIT ' . $inicio . "," . $cantidadRegistro;
			}
			if ($buscar2 == '') {
				$string = "AND (tbl_solicitud_material.estatus_solicitud='$estatus')";
			}
			if ($buscar2 != '') {
				if($buscar2 == 'neodata'){
					$string = "AND (dtl_solicitud_material.observaciones_neodata IS NULL AND tbl_solicitud_material.estatus_solicitud = 'S')";
				}elseif($buscar2 == 'neodata_salida'){
                    $string = "AND (tbl_solicitud_material.neodata_salida IS NULL AND tbl_solicitud_material.estatus_solicitud = 'S')";
                }else{
                    $string = "AND (tbl_solicitud_material.estatus_solicitud = '$buscar2')";
                }
			}
			$query = $this->db->query("SELECT tbl_proyectos.nombre_proyecto, tbl_proyectos.numero_proyecto, tbl_solicitud_material.*, user_autor.nombre as user_autor, user_aprobacion.nombre as user_aprobacion, user_co.nombre as user_control_obra, user_ag.nombre as user_almacen_general, user_ac.nombre as user_alto_costo, CONCAT(tbl_usuarios.nombres,' ',tbl_usuarios.apellido_paterno,' ',tbl_usuarios.apellido_materno) as recibe, dtl_solicitud_material.observaciones_neodata, usuario_asignacion.nombre AS nombre_asignacion FROM tbl_solicitud_material LEFT JOIN dtl_solicitud_material ON tbl_solicitud_material.idtbl_solicitud_material = dtl_solicitud_material.tbl_solicitud_material_idtbl_solicitud_material LEFT JOIN tbl_users as user_co ON user_co.idtbl_users=tbl_solicitud_material.tbl_users_idtbl_users_co LEFT JOIN tbl_users as user_ag ON user_ag.idtbl_users=tbl_solicitud_material.tbl_users_idtbl_users_ag LEFT JOIN tbl_users as user_ac ON user_ac.idtbl_users=tbl_solicitud_material.tbl_users_idtbl_users_ac LEFT JOIN tbl_proyectos ON tbl_solicitud_material.tbl_proyectos_idtbl_proyectos=tbl_proyectos.idtbl_proyectos LEFT JOIN tbl_users as user_autor ON tbl_solicitud_material.tbl_users_idtbl_users_autor=user_autor.idtbl_users LEFT JOIN tbl_users as user_aprobacion ON tbl_solicitud_material.tbl_users_idtbl_users_aprobacion=user_aprobacion.idtbl_users LEFT JOIN tbl_users usuario_asignacion ON usuario_asignacion.idtbl_users = tbl_solicitud_material.tbl_users_idtbl_users_asignacion LEFT JOIN tbl_usuarios ON tbl_solicitud_material.tbl_usuarios_idtbl_usuarios=tbl_usuarios.idtbl_usuarios WHERE (tbl_solicitud_material.tbl_proyectos_idtbl_proyectos $not_in OR tbl_solicitud_material.uid_almacen_seleccionado = '25839864557600770') AND tbl_solicitud_material.tipo_producto LIKE 'Almacen General' $string AND (tbl_solicitud_material.uid LIKE '%$buscar%' OR tbl_proyectos.numero_proyecto LIKE '%$buscar%' OR user_autor.nombre LIKE '%$buscar%' OR user_aprobacion.nombre LIKE '%$buscar%' OR user_co.nombre LIKE '%$buscar%' OR user_ag.nombre LIKE '%$buscar%' OR user_ac.nombre LIKE '%$buscar%' OR CONCAT(tbl_usuarios.nombres,' ',tbl_usuarios.apellido_paterno,' ',tbl_usuarios.apellido_materno) LIKE '%$buscar%') GROUP BY tbl_solicitud_material.idtbl_solicitud_material ORDER BY tbl_solicitud_material.fecha_creacion DESC " . $limit);
		}
		elseif($this->session->userdata('tipo')==6) {
			$limit = '';
			if ($inicio !== false && $cantidadRegistro !== false) {
				$limit = 'LIMIT ' . $inicio . "," . $cantidadRegistro;
			}
			if ($buscar2 == '') {
				$string = "AND (tbl_solicitud_material.estatus_solicitud='S')";
			}
			if ($buscar2 != '') {
				if($buscar2 == 'neodata'){
					$string = "AND (dtl_solicitud_material.observaciones_neodata IS NULL AND tbl_solicitud_material.estatus_solicitud = 'S')";
				}else{
                    $string = "AND (tbl_solicitud_material.estatus_solicitud = '$buscar2')";
                }
			}
			$query = $this->db->query("SELECT tbl_proyectos.nombre_proyecto, tbl_proyectos.numero_proyecto, tbl_solicitud_material.*, user_autor.nombre as user_autor, user_aprobacion.nombre as user_aprobacion, user_co.nombre as user_control_obra, user_ag.nombre as user_almacen_general, user_ac.nombre as user_alto_costo, CONCAT(tbl_usuarios.nombres,' ',tbl_usuarios.apellido_paterno,' ',tbl_usuarios.apellido_materno) as recibe, dtl_solicitud_material.observaciones_neodata FROM tbl_solicitud_material LEFT JOIN dtl_solicitud_material ON tbl_solicitud_material.idtbl_solicitud_material = dtl_solicitud_material.tbl_solicitud_material_idtbl_solicitud_material LEFT JOIN tbl_users as user_co ON user_co.idtbl_users=tbl_solicitud_material.tbl_users_idtbl_users_co LEFT JOIN tbl_users as user_ag ON user_ag.idtbl_users=tbl_solicitud_material.tbl_users_idtbl_users_ag LEFT JOIN tbl_users as user_ac ON user_ac.idtbl_users=tbl_solicitud_material.tbl_users_idtbl_users_ac LEFT JOIN tbl_proyectos ON tbl_solicitud_material.tbl_proyectos_idtbl_proyectos=tbl_proyectos.idtbl_proyectos LEFT JOIN tbl_users as user_autor ON tbl_solicitud_material.tbl_users_idtbl_users_autor=user_autor.idtbl_users LEFT JOIN tbl_users as user_aprobacion ON tbl_solicitud_material.tbl_users_idtbl_users_aprobacion=user_aprobacion.idtbl_users LEFT JOIN tbl_usuarios ON tbl_solicitud_material.tbl_usuarios_idtbl_usuarios=tbl_usuarios.idtbl_usuarios WHERE tbl_solicitud_material.tipo_producto LIKE 'Almacen General' $string AND (tbl_solicitud_material.tbl_users_idtbl_users_ag = 18 OR tbl_solicitud_material.tbl_users_idtbl_users_ag = 93 OR tbl_solicitud_material.tbl_users_idtbl_users_ag = 211 OR tbl_solicitud_material.tbl_users_idtbl_users_ag = 238 OR tbl_solicitud_material.tbl_users_idtbl_users_ag = 250) AND (tbl_solicitud_material.uid LIKE '%$buscar%' OR tbl_proyectos.numero_proyecto LIKE '%$buscar%' OR user_autor.nombre LIKE '%$buscar%' OR user_aprobacion.nombre LIKE '%$buscar%' OR user_co.nombre LIKE '%$buscar%' OR user_ag.nombre LIKE '%$buscar%' OR user_ac.nombre LIKE '%$buscar%' OR CONCAT(tbl_usuarios.nombres,' ',tbl_usuarios.apellido_paterno,' ',tbl_usuarios.apellido_materno) LIKE '%$buscar%') GROUP BY tbl_solicitud_material.idtbl_solicitud_material ORDER BY tbl_solicitud_material.fecha_creacion DESC " . $limit);
		}
		elseif($this->session->userdata('tipo')==10) {
			$limit = '';
			if ($inicio !== false && $cantidadRegistro !== false) {
				$limit = 'LIMIT ' . $inicio . "," . $cantidadRegistro;
			}
			if ($buscar2 == '') {
				$string = "AND (tbl_solicitud_material.estatus_solicitud='SH' OR tbl_solicitud_material.estatus_solicitud='CO SH' OR tbl_solicitud_material.estatus_solicitud='AG' OR tbl_solicitud_material.estatus_solicitud='cancelada SH' OR tbl_solicitud_material.estatus_solicitud='SU' OR tbl_solicitud_material.estatus_solicitud='S')";
			}
			if ($buscar2 != '') {
				$string = "AND (tbl_solicitud_material.estatus_solicitud = '$buscar2')";
			}
			$query = $this->db->query("SELECT tbl_proyectos.nombre_proyecto, tbl_proyectos.numero_proyecto, tbl_solicitud_material.*, user_autor.nombre as user_autor, user_aprobacion.nombre as user_aprobacion, user_co.nombre as user_control_obra, user_ag.nombre as user_almacen_general, user_ac.nombre as user_alto_costo, CONCAT(tbl_usuarios.nombres,' ',tbl_usuarios.apellido_paterno,' ',tbl_usuarios.apellido_materno) as recibe FROM tbl_solicitud_material LEFT JOIN tbl_users as user_co ON user_co.idtbl_users=tbl_solicitud_material.tbl_users_idtbl_users_co LEFT JOIN tbl_users as user_ag ON user_ag.idtbl_users=tbl_solicitud_material.tbl_users_idtbl_users_ag LEFT JOIN tbl_users as user_ac ON user_ac.idtbl_users=tbl_solicitud_material.tbl_users_idtbl_users_ac LEFT JOIN tbl_proyectos ON tbl_solicitud_material.tbl_proyectos_idtbl_proyectos=tbl_proyectos.idtbl_proyectos LEFT JOIN tbl_users as user_autor ON tbl_solicitud_material.tbl_users_idtbl_users_autor=user_autor.idtbl_users LEFT JOIN tbl_users as user_aprobacion ON tbl_solicitud_material.tbl_users_idtbl_users_aprobacion=user_aprobacion.idtbl_users LEFT JOIN tbl_usuarios ON tbl_solicitud_material.tbl_usuarios_idtbl_usuarios=tbl_usuarios.idtbl_usuarios WHERE tbl_solicitud_material.tipo_producto = 'Seguridad e Higiene' $string AND (tbl_solicitud_material.uid LIKE '%$buscar%' OR tbl_proyectos.numero_proyecto LIKE '%$buscar%' OR user_autor.nombre LIKE '%$buscar%' OR user_aprobacion.nombre LIKE '%$buscar%' OR user_co.nombre LIKE '%$buscar%' OR user_ag.nombre LIKE '%$buscar%' OR user_ac.nombre LIKE '%$buscar%' OR CONCAT(tbl_usuarios.nombres,' ',tbl_usuarios.apellido_paterno,' ',tbl_usuarios.apellido_materno) LIKE '%$buscar%') ORDER BY tbl_solicitud_material.fecha_creacion DESC " . $limit);
		}
		elseif($this->session->userdata('encargado_almacen') != null && $this->session->userdata('encargado_almacen') != '') {
			$id_almacenes = '';
			$usuario = $this->session->userdata('id');
			$almacenes_encargados = $this->db->query("SELECT tbl_almacenes.tbl_proyectos_idtbl_proyectos FROM tbl_encargado_almacen JOIN tbl_almacenes ON tbl_almacenes.idtbl_almacenes = tbl_encargado_almacen.tbl_almacenes_idtbl_almacenes WHERE tbl_encargado_almacen.tbl_users_idtbl_users = $usuario GROUP BY tbl_almacenes.tbl_proyectos_idtbl_proyectos");
			foreach($almacenes_encargados->result() AS $key => $value){
                if (isset($almacenes_encargados->result()[$key+1]->tbl_proyectos_idtbl_proyectos)) {
                    	$id_almacenes .= $value->tbl_proyectos_idtbl_proyectos.', ';
                }else{
					$id_almacenes .= $value->tbl_proyectos_idtbl_proyectos;
				}
			}
			if($id_almacenes != ''){
				$in = "IN ($id_almacenes)";
			}else{
				$in = '';
			}
			$limit = '';
			if ($inicio !== false && $cantidadRegistro !== false) {
				$limit = 'LIMIT ' . $inicio . "," . $cantidadRegistro;
			}
			if ($buscar2 == '') {
				$string = "AND (tbl_solicitud_material.estatus_solicitud='AG' OR tbl_solicitud_material.estatus_solicitud='SU' OR tbl_solicitud_material.estatus_solicitud='S' OR tbl_solicitud_material.estatus_solicitud='cancelada AG')";
			}
			if ($buscar2 != '') {
				$string = "AND (tbl_solicitud_material.estatus_solicitud = '$buscar2')";
			}
			
			$query = $this->db->query("SELECT tbl_proyectos.nombre_proyecto, tbl_proyectos.numero_proyecto, tbl_solicitud_material.*, user_autor.nombre as user_autor, user_aprobacion.nombre as user_aprobacion, user_co.nombre as user_control_obra, user_ag.nombre as user_almacen_general, user_ac.nombre as user_alto_costo, CONCAT(tbl_usuarios.nombres,' ',tbl_usuarios.apellido_paterno,' ',tbl_usuarios.apellido_materno) as recibe FROM tbl_solicitud_material LEFT JOIN tbl_users as user_co ON user_co.idtbl_users=tbl_solicitud_material.tbl_users_idtbl_users_co LEFT JOIN tbl_users as user_ag ON user_ag.idtbl_users=tbl_solicitud_material.tbl_users_idtbl_users_ag LEFT JOIN tbl_users as user_ac ON user_ac.idtbl_users=tbl_solicitud_material.tbl_users_idtbl_users_ac LEFT JOIN tbl_proyectos ON tbl_solicitud_material.tbl_proyectos_idtbl_proyectos=tbl_proyectos.idtbl_proyectos LEFT JOIN tbl_users as user_autor ON tbl_solicitud_material.tbl_users_idtbl_users_autor=user_autor.idtbl_users LEFT JOIN tbl_users as user_aprobacion ON tbl_solicitud_material.tbl_users_idtbl_users_aprobacion=user_aprobacion.idtbl_users LEFT JOIN tbl_usuarios ON tbl_solicitud_material.tbl_usuarios_idtbl_usuarios=tbl_usuarios.idtbl_usuarios WHERE tbl_solicitud_material.tbl_proyectos_idtbl_proyectos $in AND tbl_solicitud_material.tipo_producto NOT LIKE 'Alto costo' $string AND (tbl_solicitud_material.uid LIKE '%$buscar%' OR tbl_proyectos.numero_proyecto LIKE '%$buscar%' OR user_autor.nombre LIKE '%$buscar%' OR user_aprobacion.nombre LIKE '%$buscar%' OR user_co.nombre LIKE '%$buscar%' OR user_ag.nombre LIKE '%$buscar%' OR user_ac.nombre LIKE '%$buscar%' OR CONCAT(tbl_usuarios.nombres,' ',tbl_usuarios.apellido_paterno,' ',tbl_usuarios.apellido_materno) LIKE '%$buscar%') ORDER BY tbl_solicitud_material.fecha_creacion DESC " . $limit);
		}

		if($this->session->userdata('tipo')==11) {
			$estatus = $this->input->post('estatus');
			
			$limit = '';
			if ($inicio !== false && $cantidadRegistro !== false) {
				$limit = 'LIMIT ' . $inicio . "," . $cantidadRegistro;
			}
			if ($buscar2 == '') {
				if($estatus == 'CO PM'){
					$string = "AND (tbl_solicitud_material.estatus_solicitud='$estatus' OR tbl_solicitud_material.estatus_solicitud='CO SH')";
				}else{
					$string = "AND (tbl_solicitud_material.estatus_solicitud='$estatus')";
				}
			}
			if ($buscar2 != '') {
				if($buscar2 == 'neodata'){
					$string = "AND (dtl_solicitud_material.observaciones_neodata IS NULL AND tbl_solicitud_material.estatus_solicitud = 'S')";
				}elseif($buscar2 == 'neodata_salida'){
                    $string = "AND (tbl_solicitud_material.neodata_salida IS NULL AND tbl_solicitud_material.estatus_solicitud = 'S')";
                }else{
                    $string = "AND (tbl_solicitud_material.estatus_solicitud = '$buscar2')";
                }
			}
			$query = $this->db->query("SELECT tbl_proyectos.nombre_proyecto, tbl_proyectos.numero_proyecto, tbl_solicitud_material.*, user_autor.nombre as user_autor, user_aprobacion.nombre as user_aprobacion, user_co.nombre as user_control_obra, user_ag.nombre as user_almacen_general, user_ac.nombre as user_alto_costo, CONCAT(tbl_usuarios.nombres,' ',tbl_usuarios.apellido_paterno,' ',tbl_usuarios.apellido_materno) as recibe, dtl_solicitud_material.observaciones_neodata, usuario_asignacion.nombre AS nombre_asignacion FROM tbl_solicitud_material LEFT JOIN dtl_solicitud_material ON tbl_solicitud_material.idtbl_solicitud_material = dtl_solicitud_material.tbl_solicitud_material_idtbl_solicitud_material LEFT JOIN tbl_users as user_co ON user_co.idtbl_users=tbl_solicitud_material.tbl_users_idtbl_users_co LEFT JOIN tbl_users as user_ag ON user_ag.idtbl_users=tbl_solicitud_material.tbl_users_idtbl_users_ag LEFT JOIN tbl_users as user_ac ON user_ac.idtbl_users=tbl_solicitud_material.tbl_users_idtbl_users_ac LEFT JOIN tbl_proyectos ON tbl_solicitud_material.tbl_proyectos_idtbl_proyectos=tbl_proyectos.idtbl_proyectos LEFT JOIN tbl_users as user_autor ON tbl_solicitud_material.tbl_users_idtbl_users_autor=user_autor.idtbl_users LEFT JOIN tbl_users as user_aprobacion ON tbl_solicitud_material.tbl_users_idtbl_users_aprobacion=user_aprobacion.idtbl_users LEFT JOIN tbl_users usuario_asignacion ON usuario_asignacion.idtbl_users = tbl_solicitud_material.tbl_users_idtbl_users_asignacion LEFT JOIN tbl_usuarios ON tbl_solicitud_material.tbl_usuarios_idtbl_usuarios=tbl_usuarios.idtbl_usuarios WHERE (tbl_solicitud_material.tipo_producto LIKE 'Almacen General' OR tbl_solicitud_material.tipo_producto LIKE 'Seguridad e Higiene') $string AND (tbl_solicitud_material.uid LIKE '%$buscar%' OR tbl_proyectos.numero_proyecto LIKE '%$buscar%' OR user_autor.nombre LIKE '%$buscar%' OR user_aprobacion.nombre LIKE '%$buscar%' OR user_co.nombre LIKE '%$buscar%' OR user_ag.nombre LIKE '%$buscar%' OR user_ac.nombre LIKE '%$buscar%' OR CONCAT(tbl_usuarios.nombres,' ',tbl_usuarios.apellido_paterno,' ',tbl_usuarios.apellido_materno) LIKE '%$buscar%') GROUP BY tbl_solicitud_material.idtbl_solicitud_material ORDER BY tbl_solicitud_material.fecha_creacion DESC " . $limit);
		}
		return $query->result();
	}

	public function solicitudesAlmacenes($buscar = '', $buscar2 = '', $inicio = false, $cantidadRegistro = false) {
		$segmento = $this->input->post('segmento');
		$limit = '';
		if ($inicio !== false && $cantidadRegistro !== false) {
			$limit = 'LIMIT ' . $inicio . "," . $cantidadRegistro;
		}
		if ($buscar2 == '') {
			$string = "AND (tbl_solicitud_material.estatus_solicitud='AG' OR tbl_solicitud_material.estatus_solicitud='SU' OR tbl_solicitud_material.estatus_solicitud='SU A' OR tbl_solicitud_material.estatus_solicitud='S' OR tbl_solicitud_material.estatus_solicitud='cancelada AG')";
		}
		if ($buscar2 != '') {
			$string = "AND (tbl_solicitud_material.estatus_solicitud = '$buscar2')";
		}
		$query = $this->db->query("SELECT tbl_proyectos.nombre_proyecto, tbl_proyectos.numero_proyecto, tbl_solicitud_material.*, user_autor.nombre as user_autor, user_aprobacion.nombre as user_aprobacion, user_co.nombre as user_control_obra, user_ag.nombre as user_aprobacion_ag, user_ac.nombre as user_alto_costo, CONCAT(tbl_usuarios.nombres,' ',tbl_usuarios.apellido_paterno,' ',tbl_usuarios.apellido_materno) as recibe, dtl_solicitud_material.observaciones_neodata FROM tbl_solicitud_material LEFT JOIN tbl_users as user_co ON user_co.idtbl_users=tbl_solicitud_material.tbl_users_idtbl_users_co LEFT JOIN dtl_solicitud_material ON tbl_solicitud_material.idtbl_solicitud_material = dtl_solicitud_material.tbl_solicitud_material_idtbl_solicitud_material LEFT JOIN tbl_users as user_ag ON user_ag.idtbl_users=tbl_solicitud_material.tbl_users_idtbl_users_ag LEFT JOIN tbl_users as user_ac ON user_ac.idtbl_users=tbl_solicitud_material.tbl_users_idtbl_users_ac LEFT JOIN tbl_proyectos ON tbl_solicitud_material.tbl_proyectos_idtbl_proyectos=tbl_proyectos.idtbl_proyectos LEFT JOIN tbl_users as user_autor ON tbl_solicitud_material.tbl_users_idtbl_users_autor=user_autor.idtbl_users LEFT JOIN tbl_users as user_aprobacion ON tbl_solicitud_material.tbl_users_idtbl_users_aprobacion=user_aprobacion.idtbl_users LEFT JOIN tbl_usuarios ON tbl_solicitud_material.tbl_usuarios_idtbl_usuarios=tbl_usuarios.idtbl_usuarios WHERE tbl_solicitud_material.tbl_segmentos_proyecto_idtbl_segmentos_proyecto = $segmento AND tbl_proyectos.estatus = 1 AND tbl_solicitud_material.estatus_solicitud != 'modificada AG' AND tbl_solicitud_material.tipo_producto NOT LIKE 'Alto Costo' AND (tbl_solicitud_material.uid LIKE '%$buscar%' OR user_autor.nombre LIKE '%$buscar%' OR user_aprobacion.nombre LIKE '%$buscar%' OR user_co.nombre LIKE '%$buscar%' OR user_ag.nombre LIKE '%$buscar%' OR user_ac.nombre LIKE '%$buscar%' OR CONCAT(tbl_usuarios.nombres,' ',tbl_usuarios.apellido_paterno,' ',tbl_usuarios.apellido_materno) LIKE '%$buscar%') $string GROUP BY tbl_solicitud_material.idtbl_solicitud_material ORDER BY tbl_solicitud_material.fecha_creacion DESC " . $limit);
		return $query->result();
	}

	public function solicitudesReynosa($buscar = '', $buscar2 = '', $inicio = false, $cantidadRegistro = false) {
		$limit = '';
		if ($inicio !== false && $cantidadRegistro !== false) {
			$limit = 'LIMIT ' . $inicio . "," . $cantidadRegistro;
		}
		if ($buscar2 == '') {
			$string = "AND (tbl_solicitud_material.estatus_solicitud='AG' OR tbl_solicitud_material.estatus_solicitud='SU' OR tbl_solicitud_material.estatus_solicitud='SU A' OR tbl_solicitud_material.estatus_solicitud='S' OR tbl_solicitud_material.estatus_solicitud='cancelada AG')";
		}
		if ($buscar2 != '') {
			$string = "AND (tbl_solicitud_material.estatus_solicitud = '$buscar2')";
		}
		$query = $this->db->query("SELECT tbl_proyectos.nombre_proyecto, tbl_proyectos.numero_proyecto, tbl_solicitud_material.*, user_autor.nombre as user_autor, user_aprobacion.nombre as user_aprobacion, user_co.nombre as user_control_obra, user_ag.nombre as user_aprobacion_ag, user_ac.nombre as user_alto_costo, CONCAT(tbl_usuarios.nombres,' ',tbl_usuarios.apellido_paterno,' ',tbl_usuarios.apellido_materno) as recibe FROM tbl_solicitud_material LEFT JOIN tbl_users as user_co ON user_co.idtbl_users=tbl_solicitud_material.tbl_users_idtbl_users_co LEFT JOIN tbl_users as user_ag ON user_ag.idtbl_users=tbl_solicitud_material.tbl_users_idtbl_users_ag LEFT JOIN tbl_users as user_ac ON user_ac.idtbl_users=tbl_solicitud_material.tbl_users_idtbl_users_ac LEFT JOIN tbl_proyectos ON tbl_solicitud_material.tbl_proyectos_idtbl_proyectos=tbl_proyectos.idtbl_proyectos LEFT JOIN tbl_users as user_autor ON tbl_solicitud_material.tbl_users_idtbl_users_autor=user_autor.idtbl_users LEFT JOIN tbl_users as user_aprobacion ON tbl_solicitud_material.tbl_users_idtbl_users_aprobacion=user_aprobacion.idtbl_users LEFT JOIN tbl_usuarios ON tbl_solicitud_material.tbl_usuarios_idtbl_usuarios=tbl_usuarios.idtbl_usuarios WHERE tbl_proyectos.direccion LIKE '%reynosa%' AND tbl_proyectos.estatus = 1 AND tbl_solicitud_material.estatus_solicitud != 'modificada AG' AND tbl_solicitud_material.tipo_producto NOT LIKE 'Alto Costo' AND (tbl_solicitud_material.uid LIKE '%$buscar%' OR user_autor.nombre LIKE '%$buscar%' OR user_aprobacion.nombre LIKE '%$buscar%' OR user_co.nombre LIKE '%$buscar%' OR user_ag.nombre LIKE '%$buscar%' OR user_ac.nombre LIKE '%$buscar%' OR CONCAT(tbl_usuarios.nombres,' ',tbl_usuarios.apellido_paterno,' ',tbl_usuarios.apellido_materno) LIKE '%$buscar%') $string ORDER BY tbl_solicitud_material.fecha_creacion DESC " . $limit);
		return $query->result();
	}

	public function solicitudesTabasco($buscar = '', $buscar2 = '', $inicio = false, $cantidadRegistro = false) {
		$limit = '';
		if ($inicio !== false && $cantidadRegistro !== false) {
			$limit = 'LIMIT ' . $inicio . "," . $cantidadRegistro;
		}
		if ($buscar2 == '') {
			$string = "AND (tbl_solicitud_material.estatus_solicitud='AG' OR tbl_solicitud_material.estatus_solicitud='SU' OR tbl_solicitud_material.estatus_solicitud='SU A' OR tbl_solicitud_material.estatus_solicitud='S' OR tbl_solicitud_material.estatus_solicitud='cancelada AG')";
		}
		if ($buscar2 != '') {
			$string = "AND (tbl_solicitud_material.estatus_solicitud = '$buscar2')";
		}
		$query = $this->db->query("SELECT tbl_proyectos.nombre_proyecto, tbl_proyectos.numero_proyecto, tbl_solicitud_material.*, user_autor.nombre as user_autor, user_aprobacion.nombre as user_aprobacion, user_co.nombre as user_control_obra, user_ag.nombre as user_aprobacion_ag, user_ac.nombre as user_alto_costo, CONCAT(tbl_usuarios.nombres,' ',tbl_usuarios.apellido_paterno,' ',tbl_usuarios.apellido_materno) as recibe FROM tbl_solicitud_material LEFT JOIN tbl_users as user_co ON user_co.idtbl_users=tbl_solicitud_material.tbl_users_idtbl_users_co LEFT JOIN tbl_users as user_ag ON user_ag.idtbl_users=tbl_solicitud_material.tbl_users_idtbl_users_ag LEFT JOIN tbl_users as user_ac ON user_ac.idtbl_users=tbl_solicitud_material.tbl_users_idtbl_users_ac LEFT JOIN tbl_proyectos ON tbl_solicitud_material.tbl_proyectos_idtbl_proyectos=tbl_proyectos.idtbl_proyectos LEFT JOIN tbl_users as user_autor ON tbl_solicitud_material.tbl_users_idtbl_users_autor=user_autor.idtbl_users LEFT JOIN tbl_users as user_aprobacion ON tbl_solicitud_material.tbl_users_idtbl_users_aprobacion=user_aprobacion.idtbl_users LEFT JOIN tbl_usuarios ON tbl_solicitud_material.tbl_usuarios_idtbl_usuarios=tbl_usuarios.idtbl_usuarios WHERE tbl_proyectos.direccion LIKE '%tabasco%' AND tbl_proyectos.estatus = 1 AND tbl_solicitud_material.estatus_solicitud != 'modificada AG' AND tbl_solicitud_material.tipo_producto NOT LIKE 'Alto Costo' AND (tbl_solicitud_material.uid LIKE '%$buscar%' OR user_autor.nombre LIKE '%$buscar%' OR user_aprobacion.nombre LIKE '%$buscar%' OR user_co.nombre LIKE '%$buscar%' OR user_ag.nombre LIKE '%$buscar%' OR user_ac.nombre LIKE '%$buscar%' OR CONCAT(tbl_usuarios.nombres,' ',tbl_usuarios.apellido_paterno,' ',tbl_usuarios.apellido_materno) LIKE '%$buscar%') $string ORDER BY tbl_solicitud_material.fecha_creacion DESC " . $limit);
		return $query->result();
	}

	public function solicitudesTecate($buscar = '', $buscar2 = '', $inicio = false, $cantidadRegistro = false) {
		$limit = '';
		if ($inicio !== false && $cantidadRegistro !== false) {
			$limit = 'LIMIT ' . $inicio . "," . $cantidadRegistro;
		}
		if ($buscar2 == '') {
			$string = "AND (tbl_solicitud_material.estatus_solicitud='AG' OR tbl_solicitud_material.estatus_solicitud='SU' OR tbl_solicitud_material.estatus_solicitud='SU A' OR tbl_solicitud_material.estatus_solicitud='S' OR tbl_solicitud_material.estatus_solicitud='cancelada AG')";
		}
		if ($buscar2 != '') {
			$string = "AND (tbl_solicitud_material.estatus_solicitud = '$buscar2')";
		}
		$query = $this->db->query("SELECT tbl_proyectos.nombre_proyecto, tbl_proyectos.numero_proyecto, tbl_solicitud_material.*, user_autor.nombre as user_autor, user_aprobacion.nombre as user_aprobacion, user_co.nombre as user_control_obra, user_ag.nombre as user_aprobacion_ag, user_ac.nombre as user_alto_costo, CONCAT(tbl_usuarios.nombres,' ',tbl_usuarios.apellido_paterno,' ',tbl_usuarios.apellido_materno) as recibe FROM tbl_solicitud_material LEFT JOIN tbl_users as user_co ON user_co.idtbl_users=tbl_solicitud_material.tbl_users_idtbl_users_co LEFT JOIN tbl_users as user_ag ON user_ag.idtbl_users=tbl_solicitud_material.tbl_users_idtbl_users_ag LEFT JOIN tbl_users as user_ac ON user_ac.idtbl_users=tbl_solicitud_material.tbl_users_idtbl_users_ac LEFT JOIN tbl_proyectos ON tbl_solicitud_material.tbl_proyectos_idtbl_proyectos=tbl_proyectos.idtbl_proyectos LEFT JOIN tbl_users as user_autor ON tbl_solicitud_material.tbl_users_idtbl_users_autor=user_autor.idtbl_users LEFT JOIN tbl_users as user_aprobacion ON tbl_solicitud_material.tbl_users_idtbl_users_aprobacion=user_aprobacion.idtbl_users LEFT JOIN tbl_usuarios ON tbl_solicitud_material.tbl_usuarios_idtbl_usuarios=tbl_usuarios.idtbl_usuarios WHERE tbl_solicitud_material.tbl_segmentos_proyecto_idtbl_segmentos_proyecto = 316 AND tbl_proyectos.estatus = 1 AND tbl_solicitud_material.estatus_solicitud != 'modificada AG' AND tbl_solicitud_material.tipo_producto NOT LIKE 'Alto Costo' AND (tbl_solicitud_material.uid LIKE '%$buscar%' OR user_autor.nombre LIKE '%$buscar%' OR user_aprobacion.nombre LIKE '%$buscar%' OR user_co.nombre LIKE '%$buscar%' OR user_ag.nombre LIKE '%$buscar%' OR user_ac.nombre LIKE '%$buscar%' OR CONCAT(tbl_usuarios.nombres,' ',tbl_usuarios.apellido_paterno,' ',tbl_usuarios.apellido_materno) LIKE '%$buscar%') $string ORDER BY tbl_solicitud_material.fecha_creacion DESC " . $limit);
		return $query->result();
	}

	public function solicitudesNatura($buscar = '', $buscar2 = '', $inicio = false, $cantidadRegistro = false) {
		$limit = '';
		if ($inicio !== false && $cantidadRegistro !== false) {
			$limit = 'LIMIT ' . $inicio . "," . $cantidadRegistro;
		}
		if ($buscar2 == '') {
			$string = "AND (tbl_solicitud_material.estatus_solicitud='AG' OR tbl_solicitud_material.estatus_solicitud='SU' OR tbl_solicitud_material.estatus_solicitud='SU A' OR tbl_solicitud_material.estatus_solicitud='S' OR tbl_solicitud_material.estatus_solicitud='cancelada AG')";
		}
		if ($buscar2 != '') {
			$string = "AND (tbl_solicitud_material.estatus_solicitud = '$buscar2')";
		}
		$query = $this->db->query("SELECT tbl_proyectos.nombre_proyecto, tbl_proyectos.numero_proyecto, tbl_solicitud_material.*, user_autor.nombre as user_autor, user_aprobacion.nombre as user_aprobacion, user_co.nombre as user_control_obra, user_ag.nombre as user_aprobacion_ag, user_ac.nombre as user_alto_costo, CONCAT(tbl_usuarios.nombres,' ',tbl_usuarios.apellido_paterno,' ',tbl_usuarios.apellido_materno) as recibe FROM tbl_solicitud_material LEFT JOIN tbl_users as user_co ON user_co.idtbl_users=tbl_solicitud_material.tbl_users_idtbl_users_co LEFT JOIN tbl_users as user_ag ON user_ag.idtbl_users=tbl_solicitud_material.tbl_users_idtbl_users_ag LEFT JOIN tbl_users as user_ac ON user_ac.idtbl_users=tbl_solicitud_material.tbl_users_idtbl_users_ac LEFT JOIN tbl_proyectos ON tbl_solicitud_material.tbl_proyectos_idtbl_proyectos=tbl_proyectos.idtbl_proyectos LEFT JOIN tbl_users as user_autor ON tbl_solicitud_material.tbl_users_idtbl_users_autor=user_autor.idtbl_users LEFT JOIN tbl_users as user_aprobacion ON tbl_solicitud_material.tbl_users_idtbl_users_aprobacion=user_aprobacion.idtbl_users LEFT JOIN tbl_usuarios ON tbl_solicitud_material.tbl_usuarios_idtbl_usuarios=tbl_usuarios.idtbl_usuarios WHERE tbl_solicitud_material.tbl_segmentos_proyecto_idtbl_segmentos_proyecto = 315 AND tbl_proyectos.estatus = 1 AND tbl_solicitud_material.estatus_solicitud != 'modificada AG' AND tbl_solicitud_material.tipo_producto NOT LIKE 'Alto Costo' AND (tbl_solicitud_material.uid LIKE '%$buscar%' OR user_autor.nombre LIKE '%$buscar%' OR user_aprobacion.nombre LIKE '%$buscar%' OR user_co.nombre LIKE '%$buscar%' OR user_ag.nombre LIKE '%$buscar%' OR user_ac.nombre LIKE '%$buscar%' OR CONCAT(tbl_usuarios.nombres,' ',tbl_usuarios.apellido_paterno,' ',tbl_usuarios.apellido_materno) LIKE '%$buscar%') $string ORDER BY tbl_solicitud_material.fecha_creacion DESC " . $limit);
		return $query->result();
	}

	public function solicitudesB2($buscar = '', $buscar2 = '', $inicio = false, $cantidadRegistro = false) {
		$limit = '';
		if ($inicio !== false && $cantidadRegistro !== false) {
			$limit = 'LIMIT ' . $inicio . "," . $cantidadRegistro;
		}
		if ($buscar2 == '') {
			$string = "AND (tbl_solicitud_material.estatus_solicitud='AG' OR tbl_solicitud_material.estatus_solicitud='SU' OR tbl_solicitud_material.estatus_solicitud='SU A' OR tbl_solicitud_material.estatus_solicitud='S' OR tbl_solicitud_material.estatus_solicitud='cancelada AG')";
		}
		if ($buscar2 != '') {
			$string = "AND (tbl_solicitud_material.estatus_solicitud = '$buscar2')";
		}
		$query = $this->db->query("SELECT tbl_proyectos.nombre_proyecto, tbl_proyectos.numero_proyecto, tbl_solicitud_material.*, user_autor.nombre as user_autor, user_aprobacion.nombre as user_aprobacion, user_co.nombre as user_control_obra, user_ag.nombre as user_aprobacion_ag, user_ac.nombre as user_alto_costo, CONCAT(tbl_usuarios.nombres,' ',tbl_usuarios.apellido_paterno,' ',tbl_usuarios.apellido_materno) as recibe FROM tbl_solicitud_material LEFT JOIN tbl_users as user_co ON user_co.idtbl_users=tbl_solicitud_material.tbl_users_idtbl_users_co LEFT JOIN tbl_users as user_ag ON user_ag.idtbl_users=tbl_solicitud_material.tbl_users_idtbl_users_ag LEFT JOIN tbl_users as user_ac ON user_ac.idtbl_users=tbl_solicitud_material.tbl_users_idtbl_users_ac LEFT JOIN tbl_proyectos ON tbl_solicitud_material.tbl_proyectos_idtbl_proyectos=tbl_proyectos.idtbl_proyectos LEFT JOIN tbl_users as user_autor ON tbl_solicitud_material.tbl_users_idtbl_users_autor=user_autor.idtbl_users LEFT JOIN tbl_users as user_aprobacion ON tbl_solicitud_material.tbl_users_idtbl_users_aprobacion=user_aprobacion.idtbl_users LEFT JOIN tbl_usuarios ON tbl_solicitud_material.tbl_usuarios_idtbl_usuarios=tbl_usuarios.idtbl_usuarios WHERE tbl_solicitud_material.tbl_segmentos_proyecto_idtbl_segmentos_proyecto = 318 AND tbl_proyectos.estatus = 1 AND tbl_solicitud_material.estatus_solicitud != 'modificada AG' AND tbl_solicitud_material.tipo_producto NOT LIKE 'Alto Costo' AND (tbl_solicitud_material.uid LIKE '%$buscar%' OR user_autor.nombre LIKE '%$buscar%' OR user_aprobacion.nombre LIKE '%$buscar%' OR user_co.nombre LIKE '%$buscar%' OR user_ag.nombre LIKE '%$buscar%' OR user_ac.nombre LIKE '%$buscar%' OR CONCAT(tbl_usuarios.nombres,' ',tbl_usuarios.apellido_paterno,' ',tbl_usuarios.apellido_materno) LIKE '%$buscar%') $string ORDER BY tbl_solicitud_material.fecha_creacion DESC " . $limit);
		return $query->result();
	}

	public function solicitudesMagistral($buscar = '', $buscar2 = '', $inicio = false, $cantidadRegistro = false) {
		$limit = '';
		if ($inicio !== false && $cantidadRegistro !== false) {
			$limit = 'LIMIT ' . $inicio . "," . $cantidadRegistro;
		}
		if ($buscar2 == '') {
			$string = "AND (tbl_solicitud_material.estatus_solicitud='AG' OR tbl_solicitud_material.estatus_solicitud='SU' OR tbl_solicitud_material.estatus_solicitud='SU A' OR tbl_solicitud_material.estatus_solicitud='S' OR tbl_solicitud_material.estatus_solicitud='cancelada AG')";
		}
		if ($buscar2 != '') {
			$string = "AND (tbl_solicitud_material.estatus_solicitud = '$buscar2')";
		}
		$query = $this->db->query("SELECT tbl_proyectos.nombre_proyecto, tbl_proyectos.numero_proyecto, tbl_solicitud_material.*, user_autor.nombre as user_autor, user_aprobacion.nombre as user_aprobacion, user_co.nombre as user_control_obra, user_ag.nombre as user_aprobacion_ag, user_ac.nombre as user_alto_costo, CONCAT(tbl_usuarios.nombres,' ',tbl_usuarios.apellido_paterno,' ',tbl_usuarios.apellido_materno) as recibe FROM tbl_solicitud_material LEFT JOIN tbl_users as user_co ON user_co.idtbl_users=tbl_solicitud_material.tbl_users_idtbl_users_co LEFT JOIN tbl_users as user_ag ON user_ag.idtbl_users=tbl_solicitud_material.tbl_users_idtbl_users_ag LEFT JOIN tbl_users as user_ac ON user_ac.idtbl_users=tbl_solicitud_material.tbl_users_idtbl_users_ac LEFT JOIN tbl_proyectos ON tbl_solicitud_material.tbl_proyectos_idtbl_proyectos=tbl_proyectos.idtbl_proyectos LEFT JOIN tbl_users as user_autor ON tbl_solicitud_material.tbl_users_idtbl_users_autor=user_autor.idtbl_users LEFT JOIN tbl_users as user_aprobacion ON tbl_solicitud_material.tbl_users_idtbl_users_aprobacion=user_aprobacion.idtbl_users LEFT JOIN tbl_usuarios ON tbl_solicitud_material.tbl_usuarios_idtbl_usuarios=tbl_usuarios.idtbl_usuarios WHERE tbl_solicitud_material.tbl_segmentos_proyecto_idtbl_segmentos_proyecto = 321 AND tbl_proyectos.estatus = 1 AND tbl_solicitud_material.estatus_solicitud != 'modificada AG' AND tbl_solicitud_material.tipo_producto NOT LIKE 'Alto Costo' AND (tbl_solicitud_material.uid LIKE '%$buscar%' OR user_autor.nombre LIKE '%$buscar%' OR user_aprobacion.nombre LIKE '%$buscar%' OR user_co.nombre LIKE '%$buscar%' OR user_ag.nombre LIKE '%$buscar%' OR user_ac.nombre LIKE '%$buscar%' OR CONCAT(tbl_usuarios.nombres,' ',tbl_usuarios.apellido_paterno,' ',tbl_usuarios.apellido_materno) LIKE '%$buscar%') $string ORDER BY tbl_solicitud_material.fecha_creacion DESC " . $limit);
		return $query->result();
	}

	public function solicitudesColinas($buscar = '', $buscar2 = '', $inicio = false, $cantidadRegistro = false) {
		$limit = '';
		if ($inicio !== false && $cantidadRegistro !== false) {
			$limit = 'LIMIT ' . $inicio . "," . $cantidadRegistro;
		}
		if ($buscar2 == '') {
			$string = "AND (tbl_solicitud_material.estatus_solicitud='AG' OR tbl_solicitud_material.estatus_solicitud='SU' OR tbl_solicitud_material.estatus_solicitud='SU A' OR tbl_solicitud_material.estatus_solicitud='S' OR tbl_solicitud_material.estatus_solicitud='cancelada AG')";
		}
		if ($buscar2 != '') {
			$string = "AND (tbl_solicitud_material.estatus_solicitud = '$buscar2')";
		}
		$query = $this->db->query("SELECT tbl_proyectos.nombre_proyecto, tbl_proyectos.numero_proyecto, tbl_solicitud_material.*, user_autor.nombre as user_autor, user_aprobacion.nombre as user_aprobacion, user_co.nombre as user_control_obra, user_ag.nombre as user_aprobacion_ag, user_ac.nombre as user_alto_costo, CONCAT(tbl_usuarios.nombres,' ',tbl_usuarios.apellido_paterno,' ',tbl_usuarios.apellido_materno) as recibe FROM tbl_solicitud_material LEFT JOIN tbl_users as user_co ON user_co.idtbl_users=tbl_solicitud_material.tbl_users_idtbl_users_co LEFT JOIN tbl_users as user_ag ON user_ag.idtbl_users=tbl_solicitud_material.tbl_users_idtbl_users_ag LEFT JOIN tbl_users as user_ac ON user_ac.idtbl_users=tbl_solicitud_material.tbl_users_idtbl_users_ac LEFT JOIN tbl_proyectos ON tbl_solicitud_material.tbl_proyectos_idtbl_proyectos=tbl_proyectos.idtbl_proyectos LEFT JOIN tbl_users as user_autor ON tbl_solicitud_material.tbl_users_idtbl_users_autor=user_autor.idtbl_users LEFT JOIN tbl_users as user_aprobacion ON tbl_solicitud_material.tbl_users_idtbl_users_aprobacion=user_aprobacion.idtbl_users LEFT JOIN tbl_usuarios ON tbl_solicitud_material.tbl_usuarios_idtbl_usuarios=tbl_usuarios.idtbl_usuarios WHERE tbl_solicitud_material.tbl_segmentos_proyecto_idtbl_segmentos_proyecto = 317 AND tbl_proyectos.estatus = 1 AND tbl_solicitud_material.estatus_solicitud != 'modificada AG' AND tbl_solicitud_material.tipo_producto NOT LIKE 'Alto Costo' AND (tbl_solicitud_material.uid LIKE '%$buscar%' OR user_autor.nombre LIKE '%$buscar%' OR user_aprobacion.nombre LIKE '%$buscar%' OR user_co.nombre LIKE '%$buscar%' OR user_ag.nombre LIKE '%$buscar%' OR user_ac.nombre LIKE '%$buscar%' OR CONCAT(tbl_usuarios.nombres,' ',tbl_usuarios.apellido_paterno,' ',tbl_usuarios.apellido_materno) LIKE '%$buscar%') $string ORDER BY tbl_solicitud_material.fecha_creacion DESC " . $limit);
		return $query->result();
	}

	public function solicitudesCentro($buscar = '', $buscar2 = '', $inicio = false, $cantidadRegistro = false) {
		$limit = '';
		if ($inicio !== false && $cantidadRegistro !== false) {
			$limit = 'LIMIT ' . $inicio . "," . $cantidadRegistro;
		}
		if ($buscar2 == '') {
			$string = "AND (tbl_solicitud_material.estatus_solicitud='AG' OR tbl_solicitud_material.estatus_solicitud='SU' OR tbl_solicitud_material.estatus_solicitud='SU A' OR tbl_solicitud_material.estatus_solicitud='S' OR tbl_solicitud_material.estatus_solicitud='cancelada AG')";
		}
		if ($buscar2 != '') {
			$string = "AND (tbl_solicitud_material.estatus_solicitud = '$buscar2')";
		}
		$query = $this->db->query("SELECT tbl_proyectos.nombre_proyecto, tbl_proyectos.numero_proyecto, tbl_solicitud_material.*, user_autor.nombre as user_autor, user_aprobacion.nombre as user_aprobacion, user_co.nombre as user_control_obra, user_ag.nombre as user_aprobacion_ag, user_ac.nombre as user_alto_costo, CONCAT(tbl_usuarios.nombres,' ',tbl_usuarios.apellido_paterno,' ',tbl_usuarios.apellido_materno) as recibe FROM tbl_solicitud_material LEFT JOIN tbl_users as user_co ON user_co.idtbl_users=tbl_solicitud_material.tbl_users_idtbl_users_co LEFT JOIN tbl_users as user_ag ON user_ag.idtbl_users=tbl_solicitud_material.tbl_users_idtbl_users_ag LEFT JOIN tbl_users as user_ac ON user_ac.idtbl_users=tbl_solicitud_material.tbl_users_idtbl_users_ac LEFT JOIN tbl_proyectos ON tbl_solicitud_material.tbl_proyectos_idtbl_proyectos=tbl_proyectos.idtbl_proyectos LEFT JOIN tbl_users as user_autor ON tbl_solicitud_material.tbl_users_idtbl_users_autor=user_autor.idtbl_users LEFT JOIN tbl_users as user_aprobacion ON tbl_solicitud_material.tbl_users_idtbl_users_aprobacion=user_aprobacion.idtbl_users LEFT JOIN tbl_usuarios ON tbl_solicitud_material.tbl_usuarios_idtbl_usuarios=tbl_usuarios.idtbl_usuarios WHERE tbl_solicitud_material.tbl_segmentos_proyecto_idtbl_segmentos_proyecto = 313 AND tbl_proyectos.estatus = 1 AND tbl_solicitud_material.estatus_solicitud != 'modificada AG' AND tbl_solicitud_material.tipo_producto NOT LIKE 'Alto Costo' AND (tbl_solicitud_material.uid LIKE '%$buscar%' OR user_autor.nombre LIKE '%$buscar%' OR user_aprobacion.nombre LIKE '%$buscar%' OR user_co.nombre LIKE '%$buscar%' OR user_ag.nombre LIKE '%$buscar%' OR user_ac.nombre LIKE '%$buscar%' OR CONCAT(tbl_usuarios.nombres,' ',tbl_usuarios.apellido_paterno,' ',tbl_usuarios.apellido_materno) LIKE '%$buscar%') $string ORDER BY tbl_solicitud_material.fecha_creacion DESC " . $limit);
		return $query->result();
	}

	public function solicitudesIlustres($buscar = '', $buscar2 = '', $inicio = false, $cantidadRegistro = false) {
		$limit = '';
		if ($inicio !== false && $cantidadRegistro !== false) {
			$limit = 'LIMIT ' . $inicio . "," . $cantidadRegistro;
		}
		if ($buscar2 == '') {
			$string = "AND (tbl_solicitud_material.estatus_solicitud='AG' OR tbl_solicitud_material.estatus_solicitud='SU' OR tbl_solicitud_material.estatus_solicitud='SU A' OR tbl_solicitud_material.estatus_solicitud='S' OR tbl_solicitud_material.estatus_solicitud='cancelada AG')";
		}
		if ($buscar2 != '') {
			$string = "AND (tbl_solicitud_material.estatus_solicitud = '$buscar2')";
		}
		$query = $this->db->query("SELECT tbl_proyectos.nombre_proyecto, tbl_proyectos.numero_proyecto, tbl_solicitud_material.*, user_autor.nombre as user_autor, user_aprobacion.nombre as user_aprobacion, user_co.nombre as user_control_obra, user_ag.nombre as user_aprobacion_ag, user_ac.nombre as user_alto_costo, CONCAT(tbl_usuarios.nombres,' ',tbl_usuarios.apellido_paterno,' ',tbl_usuarios.apellido_materno) as recibe FROM tbl_solicitud_material LEFT JOIN tbl_users as user_co ON user_co.idtbl_users=tbl_solicitud_material.tbl_users_idtbl_users_co LEFT JOIN tbl_users as user_ag ON user_ag.idtbl_users=tbl_solicitud_material.tbl_users_idtbl_users_ag LEFT JOIN tbl_users as user_ac ON user_ac.idtbl_users=tbl_solicitud_material.tbl_users_idtbl_users_ac LEFT JOIN tbl_proyectos ON tbl_solicitud_material.tbl_proyectos_idtbl_proyectos=tbl_proyectos.idtbl_proyectos LEFT JOIN tbl_users as user_autor ON tbl_solicitud_material.tbl_users_idtbl_users_autor=user_autor.idtbl_users LEFT JOIN tbl_users as user_aprobacion ON tbl_solicitud_material.tbl_users_idtbl_users_aprobacion=user_aprobacion.idtbl_users LEFT JOIN tbl_usuarios ON tbl_solicitud_material.tbl_usuarios_idtbl_usuarios=tbl_usuarios.idtbl_usuarios WHERE tbl_solicitud_material.tbl_segmentos_proyecto_idtbl_segmentos_proyecto = 314 AND tbl_proyectos.estatus = 1 AND tbl_solicitud_material.estatus_solicitud != 'modificada AG' AND tbl_solicitud_material.tipo_producto NOT LIKE 'Alto Costo' AND (tbl_solicitud_material.uid LIKE '%$buscar%' OR user_autor.nombre LIKE '%$buscar%' OR user_aprobacion.nombre LIKE '%$buscar%' OR user_co.nombre LIKE '%$buscar%' OR user_ag.nombre LIKE '%$buscar%' OR user_ac.nombre LIKE '%$buscar%' OR CONCAT(tbl_usuarios.nombres,' ',tbl_usuarios.apellido_paterno,' ',tbl_usuarios.apellido_materno) LIKE '%$buscar%') $string ORDER BY tbl_solicitud_material.fecha_creacion DESC " . $limit);
		return $query->result();
	}


	public function solicitudesFiber($buscar = '', $buscar2 = '', $inicio = false, $cantidadRegistro = false) {
		$limit = '';
		if ($inicio !== false && $cantidadRegistro !== false) {
			$limit = 'LIMIT ' . $inicio . "," . $cantidadRegistro;
		}
		if ($buscar2 == '') {
			$string = "AND (tbl_solicitud_material.estatus_solicitud='AG' OR tbl_solicitud_material.estatus_solicitud='SU' OR tbl_solicitud_material.estatus_solicitud='SU A' OR tbl_solicitud_material.estatus_solicitud='S' OR tbl_solicitud_material.estatus_solicitud='cancelada AG')";
		}
		if ($buscar2 != '') {
			$string = "AND (tbl_solicitud_material.estatus_solicitud = '$buscar2')";
		}
		$query = $this->db->query("SELECT tbl_proyectos.nombre_proyecto, tbl_proyectos.numero_proyecto, tbl_solicitud_material.*, user_autor.nombre as user_autor, user_aprobacion.nombre as user_aprobacion, user_co.nombre as user_control_obra, user_ag.nombre as user_aprobacion_ag, user_ac.nombre as user_alto_costo, CONCAT(tbl_usuarios.nombres,' ',tbl_usuarios.apellido_paterno,' ',tbl_usuarios.apellido_materno) as recibe FROM tbl_solicitud_material LEFT JOIN tbl_users as user_co ON user_co.idtbl_users=tbl_solicitud_material.tbl_users_idtbl_users_co LEFT JOIN tbl_users as user_ag ON user_ag.idtbl_users=tbl_solicitud_material.tbl_users_idtbl_users_ag LEFT JOIN tbl_users as user_ac ON user_ac.idtbl_users=tbl_solicitud_material.tbl_users_idtbl_users_ac LEFT JOIN tbl_proyectos ON tbl_solicitud_material.tbl_proyectos_idtbl_proyectos=tbl_proyectos.idtbl_proyectos LEFT JOIN tbl_users as user_autor ON tbl_solicitud_material.tbl_users_idtbl_users_autor=user_autor.idtbl_users LEFT JOIN tbl_users as user_aprobacion ON tbl_solicitud_material.tbl_users_idtbl_users_aprobacion=user_aprobacion.idtbl_users LEFT JOIN tbl_usuarios ON tbl_solicitud_material.tbl_usuarios_idtbl_usuarios=tbl_usuarios.idtbl_usuarios WHERE tbl_solicitud_material.tbl_proyectos_idtbl_proyectos = 254 AND tbl_proyectos.estatus = 1 AND tbl_solicitud_material.estatus_solicitud != 'modificada AG' AND tbl_solicitud_material.tipo_producto NOT LIKE 'Alto Costo' AND (tbl_solicitud_material.uid LIKE '%$buscar%' OR user_autor.nombre LIKE '%$buscar%' OR user_aprobacion.nombre LIKE '%$buscar%' OR user_co.nombre LIKE '%$buscar%' OR user_ag.nombre LIKE '%$buscar%' OR user_ac.nombre LIKE '%$buscar%' OR CONCAT(tbl_usuarios.nombres,' ',tbl_usuarios.apellido_paterno,' ',tbl_usuarios.apellido_materno) LIKE '%$buscar%') $string ORDER BY tbl_solicitud_material.fecha_creacion DESC " . $limit);
		return $query->result();
	}

	public function solicitudesBravo($buscar = '', $buscar2 = '', $inicio = false, $cantidadRegistro = false) {
		$limit = '';
		if ($inicio !== false && $cantidadRegistro !== false) {
			$limit = 'LIMIT ' . $inicio . "," . $cantidadRegistro;
		}
		if ($buscar2 == '') {
			$string = "AND (tbl_solicitud_material.estatus_solicitud='AG' OR tbl_solicitud_material.estatus_solicitud='SU' OR tbl_solicitud_material.estatus_solicitud='SU A' OR tbl_solicitud_material.estatus_solicitud='S' OR tbl_solicitud_material.estatus_solicitud='cancelada AG')";
		}
		if ($buscar2 != '') {
			$string = "AND (tbl_solicitud_material.estatus_solicitud = '$buscar2')";
		}
		$query = $this->db->query("SELECT tbl_proyectos.nombre_proyecto, tbl_proyectos.numero_proyecto, tbl_solicitud_material.*, user_autor.nombre as user_autor, user_aprobacion.nombre as user_aprobacion, user_co.nombre as user_control_obra, user_ag.nombre as user_aprobacion_ag, user_ac.nombre as user_alto_costo, CONCAT(tbl_usuarios.nombres,' ',tbl_usuarios.apellido_paterno,' ',tbl_usuarios.apellido_materno) as recibe FROM tbl_solicitud_material LEFT JOIN tbl_users as user_co ON user_co.idtbl_users=tbl_solicitud_material.tbl_users_idtbl_users_co LEFT JOIN tbl_users as user_ag ON user_ag.idtbl_users=tbl_solicitud_material.tbl_users_idtbl_users_ag LEFT JOIN tbl_users as user_ac ON user_ac.idtbl_users=tbl_solicitud_material.tbl_users_idtbl_users_ac LEFT JOIN tbl_proyectos ON tbl_solicitud_material.tbl_proyectos_idtbl_proyectos=tbl_proyectos.idtbl_proyectos LEFT JOIN tbl_users as user_autor ON tbl_solicitud_material.tbl_users_idtbl_users_autor=user_autor.idtbl_users LEFT JOIN tbl_users as user_aprobacion ON tbl_solicitud_material.tbl_users_idtbl_users_aprobacion=user_aprobacion.idtbl_users LEFT JOIN tbl_usuarios ON tbl_solicitud_material.tbl_usuarios_idtbl_usuarios=tbl_usuarios.idtbl_usuarios WHERE tbl_solicitud_material.tbl_segmentos_proyecto_idtbl_segmentos_proyecto = 312 AND tbl_proyectos.estatus = 1 AND tbl_solicitud_material.estatus_solicitud != 'modificada AG' AND tbl_solicitud_material.tipo_producto NOT LIKE 'Alto Costo' AND (tbl_solicitud_material.uid LIKE '%$buscar%' OR user_autor.nombre LIKE '%$buscar%' OR user_aprobacion.nombre LIKE '%$buscar%' OR user_co.nombre LIKE '%$buscar%' OR user_ag.nombre LIKE '%$buscar%' OR user_ac.nombre LIKE '%$buscar%' OR CONCAT(tbl_usuarios.nombres,' ',tbl_usuarios.apellido_paterno,' ',tbl_usuarios.apellido_materno) LIKE '%$buscar%') $string ORDER BY tbl_solicitud_material.fecha_creacion DESC " . $limit);
		return $query->result();
	}

	public function solicitudesAcereros($buscar = '', $buscar2 = '', $inicio = false, $cantidadRegistro = false) {
		$limit = '';
		if ($inicio !== false && $cantidadRegistro !== false) {
			$limit = 'LIMIT ' . $inicio . "," . $cantidadRegistro;
		}
		if ($buscar2 == '') {
			$string = "AND (tbl_solicitud_material.estatus_solicitud='AG' OR tbl_solicitud_material.estatus_solicitud='SU' OR tbl_solicitud_material.estatus_solicitud='SU A' OR tbl_solicitud_material.estatus_solicitud='S' OR tbl_solicitud_material.estatus_solicitud='cancelada AG')";
		}
		if ($buscar2 != '') {
			$string = "AND (tbl_solicitud_material.estatus_solicitud = '$buscar2')";
		}
		$query = $this->db->query("SELECT tbl_proyectos.nombre_proyecto, tbl_proyectos.numero_proyecto, tbl_solicitud_material.*, user_autor.nombre as user_autor, user_aprobacion.nombre as user_aprobacion, user_co.nombre as user_control_obra, user_ag.nombre as user_aprobacion_ag, user_ac.nombre as user_alto_costo, CONCAT(tbl_usuarios.nombres,' ',tbl_usuarios.apellido_paterno,' ',tbl_usuarios.apellido_materno) as recibe FROM tbl_solicitud_material LEFT JOIN tbl_users as user_co ON user_co.idtbl_users=tbl_solicitud_material.tbl_users_idtbl_users_co LEFT JOIN tbl_users as user_ag ON user_ag.idtbl_users=tbl_solicitud_material.tbl_users_idtbl_users_ag LEFT JOIN tbl_users as user_ac ON user_ac.idtbl_users=tbl_solicitud_material.tbl_users_idtbl_users_ac LEFT JOIN tbl_proyectos ON tbl_solicitud_material.tbl_proyectos_idtbl_proyectos=tbl_proyectos.idtbl_proyectos LEFT JOIN tbl_users as user_autor ON tbl_solicitud_material.tbl_users_idtbl_users_autor=user_autor.idtbl_users LEFT JOIN tbl_users as user_aprobacion ON tbl_solicitud_material.tbl_users_idtbl_users_aprobacion=user_aprobacion.idtbl_users LEFT JOIN tbl_usuarios ON tbl_solicitud_material.tbl_usuarios_idtbl_usuarios=tbl_usuarios.idtbl_usuarios WHERE tbl_solicitud_material.tbl_segmentos_proyecto_idtbl_segmentos_proyecto = 322 AND tbl_proyectos.estatus = 1 AND tbl_solicitud_material.estatus_solicitud != 'modificada AG' AND tbl_solicitud_material.tipo_producto NOT LIKE 'Alto Costo' AND (tbl_solicitud_material.uid LIKE '%$buscar%' OR user_autor.nombre LIKE '%$buscar%' OR user_aprobacion.nombre LIKE '%$buscar%' OR user_co.nombre LIKE '%$buscar%' OR user_ag.nombre LIKE '%$buscar%' OR user_ac.nombre LIKE '%$buscar%' OR CONCAT(tbl_usuarios.nombres,' ',tbl_usuarios.apellido_paterno,' ',tbl_usuarios.apellido_materno) LIKE '%$buscar%') $string ORDER BY tbl_solicitud_material.fecha_creacion DESC " . $limit);
		return $query->result();
	}

	public function solicitudesJalisco($buscar = '', $buscar2 = '', $inicio = false, $cantidadRegistro = false) {
		$limit = '';
		if ($inicio !== false && $cantidadRegistro !== false) {
			$limit = 'LIMIT ' . $inicio . "," . $cantidadRegistro;
		}
		if ($buscar2 == '') {
			$string = "AND (tbl_solicitud_material.estatus_solicitud='AG' OR tbl_solicitud_material.estatus_solicitud='SU' OR tbl_solicitud_material.estatus_solicitud='SU A' OR tbl_solicitud_material.estatus_solicitud='S' OR tbl_solicitud_material.estatus_solicitud='cancelada AG')";
		}
		if ($buscar2 != '') {
			$string = "AND (tbl_solicitud_material.estatus_solicitud = '$buscar2')";
		}
		$query = $this->db->query("SELECT tbl_proyectos.nombre_proyecto, tbl_proyectos.numero_proyecto, tbl_solicitud_material.*, user_autor.nombre as user_autor, user_aprobacion.nombre as user_aprobacion, user_co.nombre as user_control_obra, user_ag.nombre as user_aprobacion_ag, user_ac.nombre as user_alto_costo, CONCAT(tbl_usuarios.nombres,' ',tbl_usuarios.apellido_paterno,' ',tbl_usuarios.apellido_materno) as recibe FROM tbl_solicitud_material LEFT JOIN tbl_users as user_co ON user_co.idtbl_users=tbl_solicitud_material.tbl_users_idtbl_users_co LEFT JOIN tbl_users as user_ag ON user_ag.idtbl_users=tbl_solicitud_material.tbl_users_idtbl_users_ag LEFT JOIN tbl_users as user_ac ON user_ac.idtbl_users=tbl_solicitud_material.tbl_users_idtbl_users_ac LEFT JOIN tbl_proyectos ON tbl_solicitud_material.tbl_proyectos_idtbl_proyectos=tbl_proyectos.idtbl_proyectos LEFT JOIN tbl_users as user_autor ON tbl_solicitud_material.tbl_users_idtbl_users_autor=user_autor.idtbl_users LEFT JOIN tbl_users as user_aprobacion ON tbl_solicitud_material.tbl_users_idtbl_users_aprobacion=user_aprobacion.idtbl_users LEFT JOIN tbl_usuarios ON tbl_solicitud_material.tbl_usuarios_idtbl_usuarios=tbl_usuarios.idtbl_usuarios WHERE tbl_solicitud_material.tbl_proyectos_idtbl_proyectos = 289 AND tbl_proyectos.estatus = 1 AND tbl_solicitud_material.estatus_solicitud != 'modificada AG' AND tbl_solicitud_material.tipo_producto NOT LIKE 'Alto Costo' AND (tbl_solicitud_material.uid LIKE '%$buscar%' OR user_autor.nombre LIKE '%$buscar%' OR user_aprobacion.nombre LIKE '%$buscar%' OR user_co.nombre LIKE '%$buscar%' OR user_ag.nombre LIKE '%$buscar%' OR user_ac.nombre LIKE '%$buscar%' OR CONCAT(tbl_usuarios.nombres,' ',tbl_usuarios.apellido_paterno,' ',tbl_usuarios.apellido_materno) LIKE '%$buscar%') $string ORDER BY tbl_solicitud_material.fecha_creacion DESC " . $limit);
		return $query->result();
	}

	public function solicitudesAsignadas($buscar = '', $buscar2 = '', $inicio = false, $cantidadRegistro = false) {
		$limit = '';
		$user = $this->session->userdata('id');
		if ($inicio !== false && $cantidadRegistro !== false) {
			$limit = 'LIMIT ' . $inicio . "," . $cantidadRegistro;
		}
		if ($buscar2 == '') {
			$string = "AND (tbl_solicitud_material.estatus_solicitud='SU' OR tbl_solicitud_material.estatus_solicitud='SRCV' OR tbl_solicitud_material.estatus_solicitud='SU RCV A' OR tbl_solicitud_material.estatus_solicitud='SU A' OR tbl_solicitud_material.estatus_solicitud='SU RCV' OR tbl_solicitud_material.estatus_solicitud='S')";
		}
		if ($buscar2 != '') {
			$string = "AND (tbl_solicitud_material.estatus_solicitud = '$buscar2')";
		}
		$query = $this->db->query("SELECT tbl_proyectos.nombre_proyecto, tbl_proyectos.numero_proyecto, tbl_proyectos.uid AS uid_proyecto, tbl_solicitud_material.*, user_autor.nombre as user_autor, user_aprobacion.nombre as user_aprobacion, user_co.nombre as user_control_obra, user_ag.nombre as user_aprobacion_ag, user_ac.nombre as user_alto_costo, CONCAT(tbl_usuarios.nombres,' ',tbl_usuarios.apellido_paterno,' ',tbl_usuarios.apellido_materno) as recibe FROM tbl_solicitud_material LEFT JOIN tbl_users as user_co ON user_co.idtbl_users=tbl_solicitud_material.tbl_users_idtbl_users_co LEFT JOIN tbl_users as user_ag ON user_ag.idtbl_users=tbl_solicitud_material.tbl_users_idtbl_users_ag LEFT JOIN tbl_users as user_ac ON user_ac.idtbl_users=tbl_solicitud_material.tbl_users_idtbl_users_ac LEFT JOIN tbl_proyectos ON tbl_solicitud_material.tbl_proyectos_idtbl_proyectos=tbl_proyectos.idtbl_proyectos LEFT JOIN tbl_users as user_autor ON tbl_solicitud_material.tbl_users_idtbl_users_autor=user_autor.idtbl_users LEFT JOIN tbl_users as user_aprobacion ON tbl_solicitud_material.tbl_users_idtbl_users_aprobacion=user_aprobacion.idtbl_users LEFT JOIN tbl_usuarios ON tbl_solicitud_material.tbl_usuarios_idtbl_usuarios=tbl_usuarios.idtbl_usuarios WHERE tbl_solicitud_material.tbl_users_idtbl_users_asignacion = $user AND tbl_proyectos.estatus = 1 AND tbl_solicitud_material.estatus_solicitud != 'modificada AG' AND tbl_solicitud_material.tipo_producto NOT LIKE 'Alto Costo' AND (tbl_solicitud_material.uid LIKE '%$buscar%' OR user_autor.nombre LIKE '%$buscar%' OR user_aprobacion.nombre LIKE '%$buscar%' OR user_co.nombre LIKE '%$buscar%' OR user_ag.nombre LIKE '%$buscar%' OR user_ac.nombre LIKE '%$buscar%' OR CONCAT(tbl_usuarios.nombres,' ',tbl_usuarios.apellido_paterno,' ',tbl_usuarios.apellido_materno) LIKE '%$buscar%') $string ORDER BY tbl_solicitud_material.fecha_creacion DESC " . $limit);
		return $query->result();
	}

	public function solicitudesTijuana($buscar = '', $buscar2 = '', $inicio = false, $cantidadRegistro = false) {
		$limit = '';
		if ($inicio !== false && $cantidadRegistro !== false) {
			$limit = 'LIMIT ' . $inicio . "," . $cantidadRegistro;
		}
		if ($buscar2 == '') {
			$string = "AND (tbl_solicitud_material.estatus_solicitud='AG' OR tbl_solicitud_material.estatus_solicitud='SU' OR tbl_solicitud_material.estatus_solicitud='SU A' OR tbl_solicitud_material.estatus_solicitud='S' OR tbl_solicitud_material.estatus_solicitud='cancelada AG')";
		}
		if ($buscar2 != '') {
			$string = "AND (tbl_solicitud_material.estatus_solicitud = '$buscar2')";
		}
		$query = $this->db->query("SELECT tbl_proyectos.nombre_proyecto, tbl_proyectos.numero_proyecto, tbl_solicitud_material.*, user_autor.nombre as user_autor, user_aprobacion.nombre as user_aprobacion, user_co.nombre as user_control_obra, user_ag.nombre as user_aprobacion_ag, user_ac.nombre as user_alto_costo, CONCAT(tbl_usuarios.nombres,' ',tbl_usuarios.apellido_paterno,' ',tbl_usuarios.apellido_materno) as recibe FROM tbl_solicitud_material LEFT JOIN tbl_users as user_co ON user_co.idtbl_users=tbl_solicitud_material.tbl_users_idtbl_users_co LEFT JOIN tbl_users as user_ag ON user_ag.idtbl_users=tbl_solicitud_material.tbl_users_idtbl_users_ag LEFT JOIN tbl_users as user_ac ON user_ac.idtbl_users=tbl_solicitud_material.tbl_users_idtbl_users_ac LEFT JOIN tbl_proyectos ON tbl_solicitud_material.tbl_proyectos_idtbl_proyectos=tbl_proyectos.idtbl_proyectos LEFT JOIN tbl_users as user_autor ON tbl_solicitud_material.tbl_users_idtbl_users_autor=user_autor.idtbl_users LEFT JOIN tbl_users as user_aprobacion ON tbl_solicitud_material.tbl_users_idtbl_users_aprobacion=user_aprobacion.idtbl_users LEFT JOIN tbl_usuarios ON tbl_solicitud_material.tbl_usuarios_idtbl_usuarios=tbl_usuarios.idtbl_usuarios WHERE tbl_proyectos.direccion LIKE '%tijuana%' AND tbl_proyectos.estatus = 1 AND tbl_solicitud_material.estatus_solicitud != 'modificada AG' AND tbl_solicitud_material.tipo_producto NOT LIKE 'Alto Costo' AND (tbl_solicitud_material.uid LIKE '%$buscar%' OR user_autor.nombre LIKE '%$buscar%' OR user_aprobacion.nombre LIKE '%$buscar%' OR user_co.nombre LIKE '%$buscar%' OR user_ag.nombre LIKE '%$buscar%' OR user_ac.nombre LIKE '%$buscar%' OR CONCAT(tbl_usuarios.nombres,' ',tbl_usuarios.apellido_paterno,' ',tbl_usuarios.apellido_materno) LIKE '%$buscar%') $string ORDER BY tbl_solicitud_material.fecha_creacion DESC " . $limit);
		return $query->result();
	}

	public function solicitudesTuxpan($buscar = '', $buscar2 = '', $inicio = false, $cantidadRegistro = false) {
		$limit = '';
		if ($inicio !== false && $cantidadRegistro !== false) {
			$limit = 'LIMIT ' . $inicio . "," . $cantidadRegistro;
		}
		if ($buscar2 == '') {
			$string = "AND (tbl_solicitud_material.estatus_solicitud='AG' OR tbl_solicitud_material.estatus_solicitud='SU' OR tbl_solicitud_material.estatus_solicitud='SU A' OR tbl_solicitud_material.estatus_solicitud='S' OR tbl_solicitud_material.estatus_solicitud='cancelada AG')";
		}
		if ($buscar2 != '') {
			$string = "AND (tbl_solicitud_material.estatus_solicitud = '$buscar2')";
		}
		$query = $this->db->query("SELECT tbl_proyectos.nombre_proyecto, tbl_proyectos.numero_proyecto, tbl_solicitud_material.*, user_autor.nombre as user_autor, user_aprobacion.nombre as user_aprobacion, user_co.nombre as user_control_obra, user_ag.nombre as user_aprobacion_ag, user_ac.nombre as user_alto_costo, CONCAT(tbl_usuarios.nombres,' ',tbl_usuarios.apellido_paterno,' ',tbl_usuarios.apellido_materno) as recibe FROM tbl_solicitud_material LEFT JOIN tbl_users as user_co ON user_co.idtbl_users=tbl_solicitud_material.tbl_users_idtbl_users_co LEFT JOIN tbl_users as user_ag ON user_ag.idtbl_users=tbl_solicitud_material.tbl_users_idtbl_users_ag LEFT JOIN tbl_users as user_ac ON user_ac.idtbl_users=tbl_solicitud_material.tbl_users_idtbl_users_ac LEFT JOIN tbl_proyectos ON tbl_solicitud_material.tbl_proyectos_idtbl_proyectos=tbl_proyectos.idtbl_proyectos LEFT JOIN tbl_users as user_autor ON tbl_solicitud_material.tbl_users_idtbl_users_autor=user_autor.idtbl_users LEFT JOIN tbl_users as user_aprobacion ON tbl_solicitud_material.tbl_users_idtbl_users_aprobacion=user_aprobacion.idtbl_users LEFT JOIN tbl_usuarios ON tbl_solicitud_material.tbl_usuarios_idtbl_usuarios=tbl_usuarios.idtbl_usuarios WHERE tbl_proyectos.direccion LIKE '%tuxpan%' AND tbl_proyectos.estatus = 1 AND tbl_solicitud_material.estatus_solicitud != 'modificada AG' AND tbl_solicitud_material.tipo_producto NOT LIKE 'Alto Costo' AND (tbl_solicitud_material.uid LIKE '%$buscar%' OR user_autor.nombre LIKE '%$buscar%' OR user_aprobacion.nombre LIKE '%$buscar%' OR user_co.nombre LIKE '%$buscar%' OR user_ag.nombre LIKE '%$buscar%' OR user_ac.nombre LIKE '%$buscar%' OR CONCAT(tbl_usuarios.nombres,' ',tbl_usuarios.apellido_paterno,' ',tbl_usuarios.apellido_materno) LIKE '%$buscar%') $string ORDER BY tbl_solicitud_material.fecha_creacion DESC " . $limit);
		return $query->result();
	}

	public function solicitudesMonclova($buscar = '', $buscar2 = '', $inicio = false, $cantidadRegistro = false) {
		$limit = '';
		if ($inicio !== false && $cantidadRegistro !== false) {
			$limit = 'LIMIT ' . $inicio . "," . $cantidadRegistro;
		}
		if ($buscar2 == '') {
			$string = "AND (tbl_solicitud_material.estatus_solicitud='AG' OR tbl_solicitud_material.estatus_solicitud='SU' OR tbl_solicitud_material.estatus_solicitud='SU A' OR tbl_solicitud_material.estatus_solicitud='S' OR tbl_solicitud_material.estatus_solicitud='cancelada AG')";
		}
		if ($buscar2 != '') {
			$string = "AND (tbl_solicitud_material.estatus_solicitud = '$buscar2')";
		}
		$query = $this->db->query("SELECT tbl_proyectos.nombre_proyecto, tbl_proyectos.numero_proyecto, tbl_solicitud_material.*, user_autor.nombre as user_autor, user_aprobacion.nombre as user_aprobacion, user_co.nombre as user_control_obra, user_ag.nombre as user_aprobacion_ag, user_ac.nombre as user_alto_costo, CONCAT(tbl_usuarios.nombres,' ',tbl_usuarios.apellido_paterno,' ',tbl_usuarios.apellido_materno) as recibe FROM tbl_solicitud_material LEFT JOIN tbl_users as user_co ON user_co.idtbl_users=tbl_solicitud_material.tbl_users_idtbl_users_co LEFT JOIN tbl_users as user_ag ON user_ag.idtbl_users=tbl_solicitud_material.tbl_users_idtbl_users_ag LEFT JOIN tbl_users as user_ac ON user_ac.idtbl_users=tbl_solicitud_material.tbl_users_idtbl_users_ac LEFT JOIN tbl_proyectos ON tbl_solicitud_material.tbl_proyectos_idtbl_proyectos=tbl_proyectos.idtbl_proyectos LEFT JOIN tbl_users as user_autor ON tbl_solicitud_material.tbl_users_idtbl_users_autor=user_autor.idtbl_users LEFT JOIN tbl_users as user_aprobacion ON tbl_solicitud_material.tbl_users_idtbl_users_aprobacion=user_aprobacion.idtbl_users LEFT JOIN tbl_usuarios ON tbl_solicitud_material.tbl_usuarios_idtbl_usuarios=tbl_usuarios.idtbl_usuarios WHERE tbl_proyectos.direccion LIKE '%monclova%' AND tbl_proyectos.estatus = 1 AND tbl_solicitud_material.estatus_solicitud != 'modificada AG' AND tbl_solicitud_material.tipo_producto NOT LIKE 'Alto Costo' AND (tbl_solicitud_material.uid LIKE '%$buscar%' OR user_autor.nombre LIKE '%$buscar%' OR user_aprobacion.nombre LIKE '%$buscar%' OR user_co.nombre LIKE '%$buscar%' OR user_ag.nombre LIKE '%$buscar%' OR user_ac.nombre LIKE '%$buscar%' OR CONCAT(tbl_usuarios.nombres,' ',tbl_usuarios.apellido_paterno,' ',tbl_usuarios.apellido_materno) LIKE '%$buscar%') $string ORDER BY tbl_solicitud_material.fecha_creacion DESC " . $limit);
		return $query->result();
	}

	public function solicitudesHigiene($buscar = '', $buscar2 = '', $inicio = false, $cantidadRegistro = false) {
		$limit = '';
		if ($inicio !== false && $cantidadRegistro !== false) {
			$limit = 'LIMIT ' . $inicio . "," . $cantidadRegistro;
		}
		if ($buscar2 == '') {
            if ($this->session->userdata('tipo') == 6) {
				$string = "AND dtl_solicitud_material.observaciones_neodata IS NULL AND fecha_aprobacion_ag > '2022-01-14' AND (tbl_solicitud_material.estatus_solicitud='S')";
            }else{
                $string = "AND (tbl_solicitud_material.estatus_solicitud='AG' OR tbl_solicitud_material.estatus_solicitud='SU' OR tbl_solicitud_material.estatus_solicitud='SU A' OR tbl_solicitud_material.estatus_solicitud='S' OR tbl_solicitud_material.estatus_solicitud='cancelada AG')";
            }
		}
		if ($buscar2 != '') {
			if($buscar2 == 'neodata'){
				if($this->session->userdata('tipo') == 6){
					$string = "AND dtl_solicitud_material.observaciones_neodata IS NULL AND fecha_aprobacion_ag > '2022-01-14' AND (dtl_solicitud_material.observaciones_neodata IS NULL AND tbl_solicitud_material.estatus_solicitud = 'S')";
				}else{
					$string = "AND (dtl_solicitud_material.observaciones_neodata IS NULL AND tbl_solicitud_material.estatus_solicitud = 'S')";
				}
			}elseif($buscar2 == 'neodata_salida'){
				$string = "AND (tbl_solicitud_material.neodata_salida IS NULL AND tbl_solicitud_material.estatus_solicitud = 'S')";
			}else{
				$string = "AND (tbl_solicitud_material.estatus_solicitud = '$buscar2')";
			}
		}
		$query = $this->db->query("SELECT tbl_proyectos.nombre_proyecto, tbl_proyectos.numero_proyecto, tbl_solicitud_material.*, user_autor.nombre as user_autor, user_aprobacion.nombre as user_aprobacion, user_co.nombre as user_control_obra, user_ag.nombre as user_aprobacion_ag, user_ac.nombre as user_alto_costo, CONCAT(tbl_usuarios.nombres,' ',tbl_usuarios.apellido_paterno,' ',tbl_usuarios.apellido_materno) as recibe, dtl_solicitud_material.observaciones_neodata FROM tbl_solicitud_material LEFT JOIN dtl_solicitud_material ON tbl_solicitud_material.idtbl_solicitud_material = dtl_solicitud_material.tbl_solicitud_material_idtbl_solicitud_material LEFT JOIN tbl_users as user_co ON user_co.idtbl_users=tbl_solicitud_material.tbl_users_idtbl_users_co LEFT JOIN tbl_users as user_ag ON user_ag.idtbl_users=tbl_solicitud_material.tbl_users_idtbl_users_ag LEFT JOIN tbl_users as user_ac ON user_ac.idtbl_users=tbl_solicitud_material.tbl_users_idtbl_users_ac LEFT JOIN tbl_proyectos ON tbl_solicitud_material.tbl_proyectos_idtbl_proyectos=tbl_proyectos.idtbl_proyectos LEFT JOIN tbl_users as user_autor ON tbl_solicitud_material.tbl_users_idtbl_users_autor=user_autor.idtbl_users LEFT JOIN tbl_users as user_aprobacion ON tbl_solicitud_material.tbl_users_idtbl_users_aprobacion=user_aprobacion.idtbl_users LEFT JOIN tbl_usuarios ON tbl_solicitud_material.tbl_usuarios_idtbl_usuarios=tbl_usuarios.idtbl_usuarios WHERE tbl_solicitud_material.estatus_solicitud != 'modificada AG' AND tbl_solicitud_material.tipo_producto LIKE 'Seguridad e Higiene' AND (tbl_solicitud_material.uid LIKE '%$buscar%' OR user_autor.nombre LIKE '%$buscar%' OR user_aprobacion.nombre LIKE '%$buscar%' OR user_co.nombre LIKE '%$buscar%' OR user_ag.nombre LIKE '%$buscar%' OR user_ac.nombre LIKE '%$buscar%' OR CONCAT(tbl_usuarios.nombres,' ',tbl_usuarios.apellido_paterno,' ',tbl_usuarios.apellido_materno) LIKE '%$buscar%') $string GROUP BY tbl_solicitud_material.idtbl_solicitud_material ORDER BY tbl_solicitud_material.fecha_creacion DESC " . $limit);
		return $query->result();
	}

	public function solicitudesTarjetas($buscar = '', $buscar2 = '', $inicio = false, $cantidadRegistro = false) {
		$limit = '';
		if ($inicio !== false && $cantidadRegistro !== false) {
			$limit = 'LIMIT ' . $inicio . "," . $cantidadRegistro;
		}
		if ($buscar2 == '') {
            if ($this->session->userdata('tipo') == 6) {
				$string = "AND (tbl_solicitud_material.estatus_solicitud='S')";
            }else{
                $string = "AND (tbl_solicitud_material.estatus_solicitud='RCV' OR tbl_solicitud_material.estatus_solicitud='SU RCV' OR tbl_solicitud_material.estatus_solicitud='SRCV' OR tbl_solicitud_material.estatus_solicitud='S' OR tbl_solicitud_material.estatus_solicitud='cancelada CV')";
            }
		}
		if ($buscar2 != '') {
			if($buscar2 == 'neodata'){
				$string = "AND (dtl_solicitud_material.observaciones_neodata IS NULL AND tbl_solicitud_material.estatus_solicitud = 'S')";
			}else{
				$string = "AND (tbl_solicitud_material.estatus_solicitud = '$buscar2')";
			}
		}
		$query = $this->db->query("SELECT tbl_proyectos.nombre_proyecto, tbl_proyectos.numero_proyecto, tbl_solicitud_material.*, user_autor.nombre as user_autor, user_aprobacion.nombre as user_aprobacion, user_co.nombre as user_control_obra, user_ag.nombre as user_aprobacion_ag, user_ac.nombre as user_alto_costo, CONCAT(tbl_usuarios.nombres,' ',tbl_usuarios.apellido_paterno,' ',tbl_usuarios.apellido_materno) as recibe, dtl_solicitud_material.observaciones_neodata FROM tbl_solicitud_material LEFT JOIN dtl_solicitud_material ON tbl_solicitud_material.idtbl_solicitud_material = dtl_solicitud_material.tbl_solicitud_material_idtbl_solicitud_material LEFT JOIN tbl_users as user_co ON user_co.idtbl_users=tbl_solicitud_material.tbl_users_idtbl_users_co LEFT JOIN tbl_users as user_ag ON user_ag.idtbl_users=tbl_solicitud_material.tbl_users_idtbl_users_cv LEFT JOIN tbl_users as user_ac ON user_ac.idtbl_users=tbl_solicitud_material.tbl_users_idtbl_users_ac LEFT JOIN tbl_proyectos ON tbl_solicitud_material.tbl_proyectos_idtbl_proyectos=tbl_proyectos.idtbl_proyectos LEFT JOIN tbl_users as user_autor ON tbl_solicitud_material.tbl_users_idtbl_users_autor=user_autor.idtbl_users LEFT JOIN tbl_users as user_aprobacion ON tbl_solicitud_material.tbl_users_idtbl_users_aprobacion=user_aprobacion.idtbl_users LEFT JOIN tbl_usuarios ON tbl_solicitud_material.tbl_usuarios_idtbl_usuarios=tbl_usuarios.idtbl_usuarios WHERE tbl_solicitud_material.estatus_solicitud != 'modificada CV' AND tbl_solicitud_material.tipo_producto LIKE 'tarjetas' AND (tbl_solicitud_material.uid LIKE '%$buscar%' OR user_autor.nombre LIKE '%$buscar%' OR user_aprobacion.nombre LIKE '%$buscar%' OR user_co.nombre LIKE '%$buscar%' OR user_ag.nombre LIKE '%$buscar%' OR user_ac.nombre LIKE '%$buscar%' OR CONCAT(tbl_usuarios.nombres,' ',tbl_usuarios.apellido_paterno,' ',tbl_usuarios.apellido_materno) LIKE '%$buscar%') $string GROUP BY tbl_solicitud_material.idtbl_solicitud_material ORDER BY tbl_solicitud_material.fecha_creacion DESC " . $limit);
		return $query->result();
	}

	/*public function solicitudesTarjetas($buscar = '', $buscar2 = '', $inicio = false, $cantidadRegistro = false) {
		$limit = '';
		if ($inicio !== false && $cantidadRegistro !== false) {
			$limit = 'LIMIT ' . $inicio . "," . $cantidadRegistro;
		}
		if ($buscar2 == '') {
            if ($this->session->userdata('tipo') == 6) {
				$string = "AND (tbl_solicitud_material.estatus_solicitud='S')";
            }else{
                $string = "AND (tbl_solicitud_material.estatus_solicitud='RCV' OR tbl_solicitud_material.estatus_solicitud='SU RCV' OR tbl_solicitud_material.estatus_solicitud='SRCV' OR tbl_solicitud_material.estatus_solicitud='S' OR tbl_solicitud_material.estatus_solicitud='cancelada CV')";
            }
		}
		if ($buscar2 != '') {
			if($buscar2 == 'neodata'){
				$string = "AND (dtl_solicitud_material.observaciones_neodata IS NULL AND tbl_solicitud_material.estatus_solicitud = 'S')";
			}else{
				$string = "AND (tbl_solicitud_material.estatus_solicitud = '$buscar2')";
			}
		}
		$query = $this->db->query("SELECT tbl_proyectos.nombre_proyecto, tbl_proyectos.numero_proyecto, tbl_solicitud_material.*, user_autor.nombre as user_autor, user_aprobacion.nombre as user_aprobacion, user_co.nombre as user_control_obra, user_ag.nombre as user_aprobacion_ag, user_ac.nombre as user_alto_costo, CONCAT(tbl_usuarios.nombres,' ',tbl_usuarios.apellido_paterno,' ',tbl_usuarios.apellido_materno) as recibe, dtl_solicitud_material.observaciones_neodata FROM tbl_solicitud_material LEFT JOIN dtl_solicitud_material ON tbl_solicitud_material.idtbl_solicitud_material = dtl_solicitud_material.tbl_solicitud_material_idtbl_solicitud_material LEFT JOIN tbl_users as user_co ON user_co.idtbl_users=tbl_solicitud_material.tbl_users_idtbl_users_co LEFT JOIN tbl_users as user_ag ON user_ag.idtbl_users=tbl_solicitud_material.tbl_users_idtbl_users_cv LEFT JOIN tbl_users as user_ac ON user_ac.idtbl_users=tbl_solicitud_material.tbl_users_idtbl_users_ac LEFT JOIN tbl_proyectos ON tbl_solicitud_material.tbl_proyectos_idtbl_proyectos=tbl_proyectos.idtbl_proyectos LEFT JOIN tbl_users as user_autor ON tbl_solicitud_material.tbl_users_idtbl_users_autor=user_autor.idtbl_users LEFT JOIN tbl_users as user_aprobacion ON tbl_solicitud_material.tbl_users_idtbl_users_aprobacion=user_aprobacion.idtbl_users LEFT JOIN tbl_usuarios ON tbl_solicitud_material.tbl_usuarios_idtbl_usuarios=tbl_usuarios.idtbl_usuarios WHERE tbl_solicitud_material.estatus_solicitud != 'modificada CV' AND tbl_solicitud_material.tipo_producto LIKE 'tarjetas' AND (tbl_solicitud_material.uid LIKE '%$buscar%' OR user_autor.nombre LIKE '%$buscar%' OR user_aprobacion.nombre LIKE '%$buscar%' OR user_co.nombre LIKE '%$buscar%' OR user_ag.nombre LIKE '%$buscar%' OR user_ac.nombre LIKE '%$buscar%' OR CONCAT(tbl_usuarios.nombres,' ',tbl_usuarios.apellido_paterno,' ',tbl_usuarios.apellido_materno) LIKE '%$buscar%') $string GROUP BY tbl_solicitud_material.idtbl_solicitud_material ORDER BY tbl_solicitud_material.fecha_creacion DESC " . $limit);
		return $query->result();
	}*/

	public function solicitudesReynosas($buscar = '', $buscar2 = '', $inicio = false, $cantidadRegistro = false) {
		$limit = '';
		if ($inicio !== false && $cantidadRegistro !== false) {
			$limit = 'LIMIT ' . $inicio . "," . $cantidadRegistro;
		}
		if ($buscar2 == '') {
            if ($this->session->userdata('tipo') == 6) {
				$string = "AND (tbl_solicitud_material.estatus_solicitud='S')";
            }else{
                $string = "AND (tbl_solicitud_material.estatus_solicitud='AG' OR tbl_solicitud_material.estatus_solicitud='SU' OR tbl_solicitud_material.estatus_solicitud='SU A' OR tbl_solicitud_material.estatus_solicitud='S' OR tbl_solicitud_material.estatus_solicitud='cancelada AG')";
            }
		}
		if ($buscar2 != '') {
			if($buscar2 == 'neodata'){
				$string = "AND (dtl_solicitud_material.observaciones_neodata IS NULL AND tbl_solicitud_material.estatus_solicitud = 'S')";
			}else{
				$string = "AND (tbl_solicitud_material.estatus_solicitud = '$buscar2')";
			}
		}
		$query = $this->db->query("SELECT tbl_proyectos.nombre_proyecto, tbl_proyectos.numero_proyecto, tbl_solicitud_material.*, user_autor.nombre as user_autor, user_aprobacion.nombre as user_aprobacion, user_co.nombre as user_control_obra, user_ag.nombre as user_aprobacion_ag, user_ac.nombre as user_alto_costo, CONCAT(tbl_usuarios.nombres,' ',tbl_usuarios.apellido_paterno,' ',tbl_usuarios.apellido_materno) as recibe, dtl_solicitud_material.observaciones_neodata FROM tbl_solicitud_material LEFT JOIN dtl_solicitud_material ON tbl_solicitud_material.idtbl_solicitud_material = dtl_solicitud_material.tbl_solicitud_material_idtbl_solicitud_material LEFT JOIN tbl_users as user_co ON user_co.idtbl_users=tbl_solicitud_material.tbl_users_idtbl_users_co LEFT JOIN tbl_users as user_ag ON user_ag.idtbl_users=tbl_solicitud_material.tbl_users_idtbl_users_ag LEFT JOIN tbl_users as user_ac ON user_ac.idtbl_users=tbl_solicitud_material.tbl_users_idtbl_users_ac LEFT JOIN tbl_proyectos ON tbl_solicitud_material.tbl_proyectos_idtbl_proyectos=tbl_proyectos.idtbl_proyectos LEFT JOIN tbl_users as user_autor ON tbl_solicitud_material.tbl_users_idtbl_users_autor=user_autor.idtbl_users LEFT JOIN tbl_users as user_aprobacion ON tbl_solicitud_material.tbl_users_idtbl_users_aprobacion=user_aprobacion.idtbl_users LEFT JOIN tbl_usuarios ON tbl_solicitud_material.tbl_usuarios_idtbl_usuarios=tbl_usuarios.idtbl_usuarios WHERE tbl_solicitud_material.estatus_solicitud != 'modificada AG' AND tbl_solicitud_material.tipo_producto LIKE 'Almacen General' AND tbl_solicitud_material.tbl_proyectos_idtbl_proyectos = 254 AND (tbl_solicitud_material.uid LIKE '%$buscar%' OR user_autor.nombre LIKE '%$buscar%' OR user_aprobacion.nombre LIKE '%$buscar%' OR user_co.nombre LIKE '%$buscar%' OR user_ag.nombre LIKE '%$buscar%' OR user_ac.nombre LIKE '%$buscar%' OR CONCAT(tbl_usuarios.nombres,' ',tbl_usuarios.apellido_paterno,' ',tbl_usuarios.apellido_materno) LIKE '%$buscar%') $string GROUP BY tbl_solicitud_material.idtbl_solicitud_material ORDER BY tbl_solicitud_material.fecha_creacion DESC " . $limit);
		return $query->result();
	}

	public function solicitudesVilla($buscar = '', $buscar2 = '', $inicio = false, $cantidadRegistro = false) {
		$limit = '';
		if ($inicio !== false && $cantidadRegistro !== false) {
			$limit = 'LIMIT ' . $inicio . "," . $cantidadRegistro;
		}
		if ($buscar2 == '') {
            if ($this->session->userdata('tipo') == 6) {
				$string = "AND (tbl_solicitud_material.estatus_solicitud='S')";
            }else{
                $string = "AND (tbl_solicitud_material.estatus_solicitud='AG' OR tbl_solicitud_material.estatus_solicitud='SU' OR tbl_solicitud_material.estatus_solicitud='SU A' OR tbl_solicitud_material.estatus_solicitud='S' OR tbl_solicitud_material.estatus_solicitud='cancelada AG')";
            }
		}
		if ($buscar2 != '') {
			if($buscar2 == 'neodata'){
				$string = "AND (dtl_solicitud_material.observaciones_neodata IS NULL AND tbl_solicitud_material.estatus_solicitud = 'S')";
			}else{
				$string = "AND (tbl_solicitud_material.estatus_solicitud = '$buscar2')";
			}
		}
		$query = $this->db->query("SELECT tbl_proyectos.nombre_proyecto, tbl_proyectos.numero_proyecto, tbl_solicitud_material.*, user_autor.nombre as user_autor, user_aprobacion.nombre as user_aprobacion, user_co.nombre as user_control_obra, user_ag.nombre as user_aprobacion_ag, user_ac.nombre as user_alto_costo, CONCAT(tbl_usuarios.nombres,' ',tbl_usuarios.apellido_paterno,' ',tbl_usuarios.apellido_materno) as recibe, dtl_solicitud_material.observaciones_neodata FROM tbl_solicitud_material LEFT JOIN dtl_solicitud_material ON tbl_solicitud_material.idtbl_solicitud_material = dtl_solicitud_material.tbl_solicitud_material_idtbl_solicitud_material LEFT JOIN tbl_users as user_co ON user_co.idtbl_users=tbl_solicitud_material.tbl_users_idtbl_users_co LEFT JOIN tbl_users as user_ag ON user_ag.idtbl_users=tbl_solicitud_material.tbl_users_idtbl_users_ag LEFT JOIN tbl_users as user_ac ON user_ac.idtbl_users=tbl_solicitud_material.tbl_users_idtbl_users_ac LEFT JOIN tbl_proyectos ON tbl_solicitud_material.tbl_proyectos_idtbl_proyectos=tbl_proyectos.idtbl_proyectos LEFT JOIN tbl_users as user_autor ON tbl_solicitud_material.tbl_users_idtbl_users_autor=user_autor.idtbl_users LEFT JOIN tbl_users as user_aprobacion ON tbl_solicitud_material.tbl_users_idtbl_users_aprobacion=user_aprobacion.idtbl_users LEFT JOIN tbl_usuarios ON tbl_solicitud_material.tbl_usuarios_idtbl_usuarios=tbl_usuarios.idtbl_usuarios WHERE tbl_solicitud_material.estatus_solicitud != 'modificada AG' AND tbl_solicitud_material.tipo_producto LIKE 'Almacen General' AND tbl_solicitud_material.tbl_proyectos_idtbl_proyectos = 278 AND (tbl_solicitud_material.uid LIKE '%$buscar%' OR user_autor.nombre LIKE '%$buscar%' OR user_aprobacion.nombre LIKE '%$buscar%' OR user_co.nombre LIKE '%$buscar%' OR user_ag.nombre LIKE '%$buscar%' OR user_ac.nombre LIKE '%$buscar%' OR CONCAT(tbl_usuarios.nombres,' ',tbl_usuarios.apellido_paterno,' ',tbl_usuarios.apellido_materno) LIKE '%$buscar%') $string GROUP BY tbl_solicitud_material.idtbl_solicitud_material ORDER BY tbl_solicitud_material.fecha_creacion DESC " . $limit);
		return $query->result();
	}

	public function solicitudes86($buscar = '', $buscar2 = '', $inicio = false, $cantidadRegistro = false) {
		$limit = '';
		if ($inicio !== false && $cantidadRegistro !== false) {
			$limit = 'LIMIT ' . $inicio . "," . $cantidadRegistro;
		}
		if ($buscar2 == '') {
            if ($this->session->userdata('tipo') == 6) {
				$string = "AND (tbl_solicitud_material.estatus_solicitud='S')";
            }else{
                $string = "AND (tbl_solicitud_material.estatus_solicitud='AG' OR tbl_solicitud_material.estatus_solicitud='SU' OR tbl_solicitud_material.estatus_solicitud='SU A' OR tbl_solicitud_material.estatus_solicitud='S' OR tbl_solicitud_material.estatus_solicitud='cancelada AG')";
            }
		}
		if ($buscar2 != '') {
			if($buscar2 == 'neodata'){
				$string = "AND (dtl_solicitud_material.observaciones_neodata IS NULL AND tbl_solicitud_material.estatus_solicitud = 'S')";
			}else{
				$string = "AND (tbl_solicitud_material.estatus_solicitud = '$buscar2')";
			}
		}
		$query = $this->db->query("SELECT tbl_proyectos.nombre_proyecto, tbl_proyectos.numero_proyecto, tbl_solicitud_material.*, user_autor.nombre as user_autor, user_aprobacion.nombre as user_aprobacion, user_co.nombre as user_control_obra, user_ag.nombre as user_aprobacion_ag, user_ac.nombre as user_alto_costo, CONCAT(tbl_usuarios.nombres,' ',tbl_usuarios.apellido_paterno,' ',tbl_usuarios.apellido_materno) as recibe, dtl_solicitud_material.observaciones_neodata FROM tbl_solicitud_material LEFT JOIN dtl_solicitud_material ON tbl_solicitud_material.idtbl_solicitud_material = dtl_solicitud_material.tbl_solicitud_material_idtbl_solicitud_material LEFT JOIN tbl_users as user_co ON user_co.idtbl_users=tbl_solicitud_material.tbl_users_idtbl_users_co LEFT JOIN tbl_users as user_ag ON user_ag.idtbl_users=tbl_solicitud_material.tbl_users_idtbl_users_ag LEFT JOIN tbl_users as user_ac ON user_ac.idtbl_users=tbl_solicitud_material.tbl_users_idtbl_users_ac LEFT JOIN tbl_proyectos ON tbl_solicitud_material.tbl_proyectos_idtbl_proyectos=tbl_proyectos.idtbl_proyectos LEFT JOIN tbl_users as user_autor ON tbl_solicitud_material.tbl_users_idtbl_users_autor=user_autor.idtbl_users LEFT JOIN tbl_users as user_aprobacion ON tbl_solicitud_material.tbl_users_idtbl_users_aprobacion=user_aprobacion.idtbl_users LEFT JOIN tbl_usuarios ON tbl_solicitud_material.tbl_usuarios_idtbl_usuarios=tbl_usuarios.idtbl_usuarios WHERE tbl_solicitud_material.estatus_solicitud != 'modificada AG' AND tbl_solicitud_material.tipo_producto LIKE 'Almacen General' AND tbl_solicitud_material.tbl_proyectos_idtbl_proyectos = 289 AND (tbl_solicitud_material.uid LIKE '%$buscar%' OR user_autor.nombre LIKE '%$buscar%' OR user_aprobacion.nombre LIKE '%$buscar%' OR user_co.nombre LIKE '%$buscar%' OR user_ag.nombre LIKE '%$buscar%' OR user_ac.nombre LIKE '%$buscar%' OR CONCAT(tbl_usuarios.nombres,' ',tbl_usuarios.apellido_paterno,' ',tbl_usuarios.apellido_materno) LIKE '%$buscar%') $string GROUP BY tbl_solicitud_material.idtbl_solicitud_material ORDER BY tbl_solicitud_material.fecha_creacion DESC " . $limit);
		return $query->result();
	}

	public function solicitudes87($buscar = '', $buscar2 = '', $inicio = false, $cantidadRegistro = false) {
		$limit = '';
		if ($inicio !== false && $cantidadRegistro !== false) {
			$limit = 'LIMIT ' . $inicio . "," . $cantidadRegistro;
		}
		if ($buscar2 == '') {
            if ($this->session->userdata('tipo') == 6) {
				$string = "AND (tbl_solicitud_material.estatus_solicitud='S')";
            }else{
                $string = "AND (tbl_solicitud_material.estatus_solicitud='AG' OR tbl_solicitud_material.estatus_solicitud='SU' OR tbl_solicitud_material.estatus_solicitud='SU A' OR tbl_solicitud_material.estatus_solicitud='S' OR tbl_solicitud_material.estatus_solicitud='cancelada AG')";
            }
		}
		if ($buscar2 != '') {
			if($buscar2 == 'neodata'){
				$string = "AND (dtl_solicitud_material.observaciones_neodata IS NULL AND tbl_solicitud_material.estatus_solicitud = 'S')";
			}else{
				$string = "AND (tbl_solicitud_material.estatus_solicitud = '$buscar2')";
			}
		}
		$query = $this->db->query("SELECT tbl_proyectos.nombre_proyecto, tbl_proyectos.numero_proyecto, tbl_solicitud_material.*, user_autor.nombre as user_autor, user_aprobacion.nombre as user_aprobacion, user_co.nombre as user_control_obra, user_ag.nombre as user_aprobacion_ag, user_ac.nombre as user_alto_costo, CONCAT(tbl_usuarios.nombres,' ',tbl_usuarios.apellido_paterno,' ',tbl_usuarios.apellido_materno) as recibe, dtl_solicitud_material.observaciones_neodata FROM tbl_solicitud_material LEFT JOIN dtl_solicitud_material ON tbl_solicitud_material.idtbl_solicitud_material = dtl_solicitud_material.tbl_solicitud_material_idtbl_solicitud_material LEFT JOIN tbl_users as user_co ON user_co.idtbl_users=tbl_solicitud_material.tbl_users_idtbl_users_co LEFT JOIN tbl_users as user_ag ON user_ag.idtbl_users=tbl_solicitud_material.tbl_users_idtbl_users_ag LEFT JOIN tbl_users as user_ac ON user_ac.idtbl_users=tbl_solicitud_material.tbl_users_idtbl_users_ac LEFT JOIN tbl_proyectos ON tbl_solicitud_material.tbl_proyectos_idtbl_proyectos=tbl_proyectos.idtbl_proyectos LEFT JOIN tbl_users as user_autor ON tbl_solicitud_material.tbl_users_idtbl_users_autor=user_autor.idtbl_users LEFT JOIN tbl_users as user_aprobacion ON tbl_solicitud_material.tbl_users_idtbl_users_aprobacion=user_aprobacion.idtbl_users LEFT JOIN tbl_usuarios ON tbl_solicitud_material.tbl_usuarios_idtbl_usuarios=tbl_usuarios.idtbl_usuarios WHERE tbl_solicitud_material.estatus_solicitud != 'modificada AG' AND tbl_solicitud_material.tipo_producto LIKE 'Almacen General' AND tbl_solicitud_material.tbl_proyectos_idtbl_proyectos = 299 AND (tbl_solicitud_material.uid LIKE '%$buscar%' OR user_autor.nombre LIKE '%$buscar%' OR user_aprobacion.nombre LIKE '%$buscar%' OR user_co.nombre LIKE '%$buscar%' OR user_ag.nombre LIKE '%$buscar%' OR user_ac.nombre LIKE '%$buscar%' OR CONCAT(tbl_usuarios.nombres,' ',tbl_usuarios.apellido_paterno,' ',tbl_usuarios.apellido_materno) LIKE '%$buscar%') $string GROUP BY tbl_solicitud_material.idtbl_solicitud_material ORDER BY tbl_solicitud_material.fecha_creacion DESC " . $limit);
		return $query->result();
	}

	public function solicitudesAC($buscar = '', $buscar2 = '', $inicio = false, $cantidadRegistro = false) {
		$limit = '';
		if ($inicio !== false && $cantidadRegistro !== false) {
			$limit = 'LIMIT ' . $inicio . "," . $cantidadRegistro;
		}
		if ($buscar2 == '') {
			$string = "AND (tbl_solicitud_material.estatus_solicitud='AC' OR tbl_solicitud_material.estatus_solicitud='SU AC' OR tbl_solicitud_material.estatus_solicitud='SAC' OR tbl_solicitud_material.estatus_solicitud='cancelada AC')";
		}
		if ($buscar2 != '') {
			$string = "AND (tbl_solicitud_material.estatus_solicitud = '$buscar2')";
		}
		$query = $this->db->query("SELECT tbl_proyectos.nombre_proyecto, tbl_proyectos.numero_proyecto, tbl_solicitud_material.*, user_autor.nombre as user_autor, user_aprobacion.nombre as user_aprobacion, user_co.nombre as user_control_obra, user_ag.nombre as user_almacen_general, user_ac.nombre as user_alto_costo, CONCAT(tbl_usuarios.nombres,' ',tbl_usuarios.apellido_paterno,' ',tbl_usuarios.apellido_materno) as recibe FROM tbl_solicitud_material LEFT JOIN tbl_users as user_co ON user_co.idtbl_users=tbl_solicitud_material.tbl_users_idtbl_users_co LEFT JOIN tbl_users as user_ag ON user_ag.idtbl_users=tbl_solicitud_material.tbl_users_idtbl_users_ag LEFT JOIN tbl_users as user_ac ON user_ac.idtbl_users=tbl_solicitud_material.tbl_users_idtbl_users_ac LEFT JOIN tbl_proyectos ON tbl_solicitud_material.tbl_proyectos_idtbl_proyectos=tbl_proyectos.idtbl_proyectos LEFT JOIN tbl_users as user_autor ON tbl_solicitud_material.tbl_users_idtbl_users_autor=user_autor.idtbl_users LEFT JOIN tbl_users as user_aprobacion ON tbl_solicitud_material.tbl_users_idtbl_users_aprobacion=user_aprobacion.idtbl_users LEFT JOIN tbl_usuarios ON tbl_solicitud_material.tbl_usuarios_idtbl_usuarios=tbl_usuarios.idtbl_usuarios WHERE tbl_solicitud_material.tipo_producto NOT LIKE 'Almacen General' $string  AND (tbl_solicitud_material.uid LIKE '%$buscar%' OR tbl_proyectos.numero_proyecto LIKE '%$buscar%' OR user_autor.nombre LIKE '%$buscar%' OR user_aprobacion.nombre LIKE '%$buscar%' OR user_co.nombre LIKE '%$buscar%' OR user_ag.nombre LIKE '%$buscar%' OR user_ac.nombre LIKE '%$buscar%' OR CONCAT(tbl_usuarios.nombres,' ',tbl_usuarios.apellido_paterno,' ',tbl_usuarios.apellido_materno) LIKE '%$buscar%') ORDER BY tbl_solicitud_material.fecha_creacion DESC " . $limit);
		return $query->result();
	}

	public function justificaciones($buscar = '', $inicio = false, $cantidadRegistro = false) {
		$limit = '';
		if ($inicio !== false && $cantidadRegistro !== false) {
			$limit = ' LIMIT ' . $inicio . "," . $cantidadRegistro;
		}
		if($this->session->userdata('tipo') == 18) {
			$query = $this->db->query("SELECT *, tbl_justificacion_material.estatus AS estatus_justificacion, tbl_justificacion_material.uid AS uid_justificacion, usuario_autor.nombre AS nombre_autor, usuario_supervisor.nombre AS nombre_supervisor, tbl_justificacion_material.fecha_creacion AS fecha_creacion FROM tbl_justificacion_material INNER JOIN tbl_users AS usuario_autor ON usuario_autor.idtbl_users = tbl_justificacion_material.tbl_users_idtbl_users_autor INNER JOIN tbl_users AS usuario_supervisor ON usuario_supervisor.idtbl_users = tbl_justificacion_material.tbl_users_idtbl_users_supervisor INNER JOIN tbl_proyectos ON tbl_proyectos.idtbl_proyectos = tbl_justificacion_material.tbl_proyectos_idtbl_proyectos WHERE tbl_justificacion_material.tbl_users_idtbl_users_autor = " . $this->session->userdata('id') . $limit);
		} else {
			$query = $this->db->query("SELECT *, tbl_justificacion_material.estatus AS estatus_justificacion, tbl_justificacion_material.uid AS uid_justificacion, usuario_autor.nombre AS nombre_autor, usuario_supervisor.nombre AS nombre_supervisor, tbl_justificacion_material.fecha_creacion AS fecha_creacion FROM tbl_justificacion_material INNER JOIN tbl_users AS usuario_autor ON usuario_autor.idtbl_users = tbl_justificacion_material.tbl_users_idtbl_users_autor INNER JOIN tbl_users AS usuario_supervisor ON usuario_supervisor.idtbl_users = tbl_justificacion_material.tbl_users_idtbl_users_supervisor INNER JOIN tbl_proyectos ON tbl_proyectos.idtbl_proyectos = tbl_justificacion_material.tbl_proyectos_idtbl_proyectos WHERE tbl_justificacion_material.tbl_users_idtbl_users_supervisor = " . $this->session->userdata('id') . $limit);
		}
		return $query->result();
	}

	public function solicitudesKuali($buscar = '', $buscar2 = '', $inicio = false, $cantidadRegistro = false) {
		$limit = '';
		if ($inicio !== false && $cantidadRegistro !== false) {
			$limit = 'LIMIT ' . $inicio . "," . $cantidadRegistro;
		}
		if ($buscar2 == '') {
			$string = "AND (tbl_solicitud_material.estatus_solicitud='K' OR tbl_solicitud_material.estatus_solicitud='SU K' OR tbl_solicitud_material.estatus_solicitud='SK' OR tbl_solicitud_material.estatus_solicitud='cancelada K')";
		}
		if ($buscar2 != '') {
			$string = "AND (tbl_solicitud_material.estatus_solicitud = '$buscar2')";
		}
		$query = $this->db->query("SELECT tbl_proyectos.nombre_proyecto, tbl_proyectos.numero_proyecto, tbl_solicitud_material.*, user_autor.nombre as user_autor, user_aprobacion.nombre as user_aprobacion, user_co.nombre as user_control_obra, user_ag.nombre as user_almacen_general, CONCAT(tbl_usuarios.nombres,' ',tbl_usuarios.apellido_paterno,' ',tbl_usuarios.apellido_materno) as recibe FROM tbl_solicitud_material LEFT JOIN tbl_users as user_ag ON user_ag.idtbl_users = tbl_solicitud_material.tbl_users_idtbl_users_ag LEFT JOIN tbl_proyectos ON tbl_solicitud_material.tbl_proyectos_idtbl_proyectos=tbl_proyectos.idtbl_proyectos LEFT JOIN tbl_users as user_autor ON tbl_solicitud_material.tbl_users_idtbl_users_autor=user_autor.idtbl_users LEFT JOIN tbl_users as user_co ON user_co.idtbl_users = tbl_solicitud_material.tbl_users_idtbl_users_co LEFT JOIN tbl_users as user_aprobacion ON tbl_solicitud_material.tbl_users_idtbl_users_aprobacion=user_aprobacion.idtbl_users LEFT JOIN tbl_usuarios ON tbl_solicitud_material.tbl_usuarios_idtbl_usuarios=tbl_usuarios.idtbl_usuarios WHERE tbl_solicitud_material.tipo_producto = 'Kuali' $string AND (tbl_solicitud_material.uid LIKE '%$buscar%' OR tbl_proyectos.numero_proyecto LIKE '%$buscar%' OR user_autor.nombre LIKE '%$buscar%' OR user_aprobacion.nombre LIKE '%$buscar%' OR user_ag.nombre LIKE '%$buscar%' OR CONCAT(tbl_usuarios.nombres,' ',tbl_usuarios.apellido_paterno,' ',tbl_usuarios.apellido_materno) LIKE '%$buscar%') ORDER BY tbl_solicitud_material.fecha_creacion DESC " . $limit);
		return $query->result();
	}

	public function solicitudesKualiMI($buscar = '', $buscar2 = '', $inicio = false, $cantidadRegistro = false) {
		$limit = '';
		if ($inicio !== false && $cantidadRegistro !== false) {
			$limit = 'LIMIT ' . $inicio . "," . $cantidadRegistro;
		}
		if ($buscar2 == '') {
			$string = "AND (tbl_solicitud_material.estatus_solicitud='K' OR tbl_solicitud_material.estatus_solicitud='SU K' OR tbl_solicitud_material.estatus_solicitud='SK' OR tbl_solicitud_material.estatus_solicitud='cancelada K' OR tbl_solicitud_material.estatus_solicitud='PM K')";
		}
		if ($buscar2 != '') {
			$string = "AND (tbl_solicitud_material.estatus_solicitud = '$buscar2')";
		}
		$query = $this->db->query("SELECT tbl_proyectos.nombre_proyecto, tbl_proyectos.numero_proyecto, tbl_solicitud_material.*, user_autor.nombre as user_autor, user_aprobacion.nombre as user_aprobacion, user_ag.nombre as user_almacen_general, CONCAT(tbl_usuarios.nombres,' ',tbl_usuarios.apellido_paterno,' ',tbl_usuarios.apellido_materno) as recibe FROM tbl_solicitud_material LEFT JOIN tbl_users as user_ag ON user_ag.idtbl_users = tbl_solicitud_material.tbl_users_idtbl_users_ag LEFT JOIN tbl_proyectos ON tbl_solicitud_material.tbl_proyectos_idtbl_proyectos=tbl_proyectos.idtbl_proyectos LEFT JOIN tbl_users as user_autor ON tbl_solicitud_material.tbl_users_idtbl_users_autor=user_autor.idtbl_users LEFT JOIN tbl_users as user_aprobacion ON tbl_solicitud_material.tbl_users_idtbl_users_aprobacion=user_aprobacion.idtbl_users LEFT JOIN tbl_usuarios ON tbl_solicitud_material.tbl_usuarios_idtbl_usuarios=tbl_usuarios.idtbl_usuarios WHERE tbl_solicitud_material.tipo_producto = 'Material Instalacion Kuali' $string AND (tbl_solicitud_material.uid LIKE '%$buscar%' OR tbl_proyectos.numero_proyecto LIKE '%$buscar%' OR user_autor.nombre LIKE '%$buscar%' OR user_aprobacion.nombre LIKE '%$buscar%' OR user_ag.nombre LIKE '%$buscar%' OR CONCAT(tbl_usuarios.nombres,' ',tbl_usuarios.apellido_paterno,' ',tbl_usuarios.apellido_materno) LIKE '%$buscar%') ORDER BY tbl_solicitud_material.fecha_creacion DESC " . $limit);
		return $query->result();
	}

	public function solicitudesCV($buscar = '', $buscar2 = '', $inicio = false, $cantidadRegistro = false) {
		$limit = '';
		if ($inicio !== false && $cantidadRegistro !== false) {
			$limit = 'LIMIT ' . $inicio . "," . $cantidadRegistro;
		}
		if ($buscar2 == '') {
			$string = "AND (tbl_solicitud_material.estatus_solicitud='CV' OR tbl_solicitud_material.estatus_solicitud='SU CV' OR tbl_solicitud_material.estatus_solicitud='SCV' OR tbl_solicitud_material.estatus_solicitud='cancelada CV')";
		}
		if ($buscar2 != '') {
			$string = "AND (tbl_solicitud_material.estatus_solicitud = '$buscar2')";
		}
		$query = $this->db->query("SELECT tbl_proyectos.nombre_proyecto, tbl_proyectos.numero_proyecto, tbl_solicitud_material.*, user_autor.nombre as user_autor, user_aprobacion.nombre as user_aprobacion, user_co.nombre as user_control_obra, user_cv.nombre as user_control_vehicular, CONCAT(tbl_usuarios.nombres,' ',tbl_usuarios.apellido_paterno,' ',tbl_usuarios.apellido_materno) as recibe FROM tbl_solicitud_material LEFT JOIN tbl_users as user_co ON user_co.idtbl_users=tbl_solicitud_material.tbl_users_idtbl_users_co LEFT JOIN tbl_users as user_cv ON user_cv.idtbl_users = tbl_solicitud_material.tbl_users_idtbl_users_cv LEFT JOIN tbl_proyectos ON tbl_solicitud_material.tbl_proyectos_idtbl_proyectos=tbl_proyectos.idtbl_proyectos LEFT JOIN tbl_users as user_autor ON tbl_solicitud_material.tbl_users_idtbl_users_autor=user_autor.idtbl_users LEFT JOIN tbl_users as user_aprobacion ON tbl_solicitud_material.tbl_users_idtbl_users_aprobacion=user_aprobacion.idtbl_users LEFT JOIN tbl_usuarios ON tbl_solicitud_material.tbl_usuarios_idtbl_usuarios=tbl_usuarios.idtbl_usuarios WHERE tbl_solicitud_material.tipo_producto = 'Control Vehicular' $string AND (tbl_solicitud_material.uid LIKE '%$buscar%' OR tbl_proyectos.numero_proyecto LIKE '%$buscar%' OR user_autor.nombre LIKE '%$buscar%' OR user_aprobacion.nombre LIKE '%$buscar%' OR user_co.nombre LIKE '%$buscar%' OR user_cv.nombre LIKE '%$buscar%' OR CONCAT(tbl_usuarios.nombres,' ',tbl_usuarios.apellido_paterno,' ',tbl_usuarios.apellido_materno) LIKE '%$buscar%') ORDER BY tbl_solicitud_material.fecha_creacion DESC " . $limit);
		return $query->result();
	}

	public function solicitudesSistemas($buscar = '', $buscar2 = '', $inicio = false, $cantidadRegistro = false) {
		$limit = '';
		if ($inicio !== false && $cantidadRegistro !== false) {
			$limit = 'LIMIT ' . $inicio . "," . $cantidadRegistro;
		}
		if ($buscar2 == '') {
			$string = "AND (tbl_solicitud_material.estatus_solicitud='Sis' OR tbl_solicitud_material.estatus_solicitud='SU Sis' OR tbl_solicitud_material.estatus_solicitud='SSis' OR tbl_solicitud_material.estatus_solicitud='cancelada Sis')";
		}
		if ($buscar2 != '') {
			$string = "AND (tbl_solicitud_material.estatus_solicitud = '$buscar2')";
		}
		$query = $this->db->query("SELECT tbl_proyectos.nombre_proyecto, tbl_proyectos.numero_proyecto, tbl_solicitud_material.*, user_autor.nombre as user_autor, user_aprobacion.nombre as user_aprobacion, user_co.nombre as user_control_obra, user_sis.nombre as user_sistemas, CONCAT(tbl_usuarios.nombres,' ',tbl_usuarios.apellido_paterno,' ',tbl_usuarios.apellido_materno) as recibe FROM tbl_solicitud_material LEFT JOIN tbl_users as user_co ON user_co.idtbl_users=tbl_solicitud_material.tbl_users_idtbl_users_co LEFT JOIN tbl_users as user_sis ON user_sis.idtbl_users = tbl_solicitud_material.tbl_users_idtbl_users_sis LEFT JOIN tbl_proyectos ON tbl_solicitud_material.tbl_proyectos_idtbl_proyectos=tbl_proyectos.idtbl_proyectos LEFT JOIN tbl_users as user_autor ON tbl_solicitud_material.tbl_users_idtbl_users_autor=user_autor.idtbl_users LEFT JOIN tbl_users as user_aprobacion ON tbl_solicitud_material.tbl_users_idtbl_users_aprobacion=user_aprobacion.idtbl_users LEFT JOIN tbl_usuarios ON tbl_solicitud_material.tbl_usuarios_idtbl_usuarios=tbl_usuarios.idtbl_usuarios WHERE tbl_solicitud_material.tipo_producto = 'Sistemas' $string AND (tbl_solicitud_material.uid LIKE '%$buscar%' OR tbl_proyectos.numero_proyecto LIKE '%$buscar%' OR user_autor.nombre LIKE '%$buscar%' OR user_aprobacion.nombre LIKE '%$buscar%' OR user_co.nombre LIKE '%$buscar%' OR user_sis.nombre LIKE '%$buscar%' OR CONCAT(tbl_usuarios.nombres,' ',tbl_usuarios.apellido_paterno,' ',tbl_usuarios.apellido_materno) LIKE '%$buscar%') ORDER BY tbl_solicitud_material.fecha_creacion DESC " . $limit);
		return $query->result();
	}

	public function solicitudesAreaMedica($buscar = '', $buscar2 = '', $inicio = false, $cantidadRegistro = false) {
		$limit = '';
		if ($inicio !== false && $cantidadRegistro !== false) {
			$limit = 'LIMIT ' . $inicio . "," . $cantidadRegistro;
		}
		if ($buscar2 == '') {
			$string = "AND (tbl_solicitud_material.estatus_solicitud='AM' OR tbl_solicitud_material.estatus_solicitud='SU AM' OR tbl_solicitud_material.estatus_solicitud='SAM' OR tbl_solicitud_material.estatus_solicitud='cancelada AM')";
		}
		if ($buscar2 != '') {
			$string = "AND (tbl_solicitud_material.estatus_solicitud = '$buscar2')";
		}
		$query = $this->db->query("SELECT tbl_proyectos.nombre_proyecto, tbl_proyectos.numero_proyecto, tbl_solicitud_material.*, user_autor.nombre as user_autor, user_aprobacion.nombre as user_aprobacion, user_ag.nombre as user_almacen_general, CONCAT(tbl_usuarios.nombres,' ',tbl_usuarios.apellido_paterno,' ',tbl_usuarios.apellido_materno) as recibe FROM tbl_solicitud_material LEFT JOIN tbl_users as user_ag ON user_ag.idtbl_users = tbl_solicitud_material.tbl_users_idtbl_users_ag LEFT JOIN tbl_proyectos ON tbl_solicitud_material.tbl_proyectos_idtbl_proyectos=tbl_proyectos.idtbl_proyectos LEFT JOIN tbl_users as user_autor ON tbl_solicitud_material.tbl_users_idtbl_users_autor=user_autor.idtbl_users LEFT JOIN tbl_users as user_aprobacion ON tbl_solicitud_material.tbl_users_idtbl_users_aprobacion=user_aprobacion.idtbl_users LEFT JOIN tbl_usuarios ON tbl_solicitud_material.tbl_usuarios_idtbl_usuarios=tbl_usuarios.idtbl_usuarios WHERE tbl_solicitud_material.tipo_producto = 'Medica' $string AND (tbl_solicitud_material.uid LIKE '%$buscar%' OR tbl_proyectos.numero_proyecto LIKE '%$buscar%' OR user_autor.nombre LIKE '%$buscar%' OR user_aprobacion.nombre LIKE '%$buscar%' OR user_ag.nombre LIKE '%$buscar%' OR CONCAT(tbl_usuarios.nombres,' ',tbl_usuarios.apellido_paterno,' ',tbl_usuarios.apellido_materno) LIKE '%$buscar%') ORDER BY tbl_solicitud_material.fecha_creacion DESC " . $limit);
		return $query->result();
	}

	public function solicitudesRCV($buscar = '', $buscar2 = '', $inicio = false, $cantidadRegistro = false) {
		$limit = '';
		if ($inicio !== false && $cantidadRegistro !== false) {
			$limit = 'LIMIT ' . $inicio . "," . $cantidadRegistro;
		}
		if ($buscar2 == '') {
			if($this->session->userdata('tipo') == 6){
				$string = "AND dtl_solicitud_material.observaciones_neodata IS NULL AND fecha_aprobacion_ag > '2022-01-14' AND (tbl_solicitud_material.estatus_solicitud='SRCV')";
			}else{
                $string = "AND (tbl_solicitud_material.estatus_solicitud='RCV' OR tbl_solicitud_material.estatus_solicitud='SU RCV' OR tbl_solicitud_material.estatus_solicitud='SU RCV A' OR tbl_solicitud_material.estatus_solicitud='SRCV' OR tbl_solicitud_material.estatus_solicitud='cancelada RCV' OR tbl_solicitud_material.estatus_solicitud='AG' OR tbl_solicitud_material.estatus_solicitud='cancelada AG')";
            }
		}
		if ($buscar2 != '') {
			if($buscar2 == 'neodata'){
				if($this->session->userdata('tipo') == 6){
					$string = "AND dtl_solicitud_material.observaciones_neodata IS NULL AND fecha_aprobacion_ag > '2022-01-14' AND (dtl_solicitud_material.observaciones_neodata IS NULL AND tbl_solicitud_material.estatus_solicitud = 'SRCV')";
				}else{
					$string = "AND (dtl_solicitud_material.observaciones_neodata IS NULL AND tbl_solicitud_material.estatus_solicitud = 'SRCV')";
				}
			}elseif($buscar2 == 'neodata_salida'){
				$string = "AND (tbl_solicitud_material.neodata_salida IS NULL AND tbl_solicitud_material.estatus_solicitud = 'SRCV')";
			}else{
				$string = "AND (tbl_solicitud_material.estatus_solicitud = '$buscar2')";
			}
		}
		$query = $this->db->query("SELECT tbl_proyectos.nombre_proyecto, tbl_proyectos.numero_proyecto, tbl_solicitud_material.*, user_autor.nombre as user_autor, user_aprobacion.nombre as user_aprobacion, user_aprobacion_ag.nombre as user_aprobacion_ag, user_ag.nombre as user_almacen_general, CONCAT(tbl_usuarios.nombres,' ',tbl_usuarios.apellido_paterno,' ',tbl_usuarios.apellido_materno) as recibe, dtl_solicitud_material.observaciones_neodata FROM tbl_solicitud_material LEFT JOIN dtl_solicitud_material ON tbl_solicitud_material.idtbl_solicitud_material = dtl_solicitud_material.tbl_solicitud_material_idtbl_solicitud_material LEFT JOIN tbl_users as user_ag ON user_ag.idtbl_users = tbl_solicitud_material.tbl_users_idtbl_users_ag LEFT JOIN tbl_proyectos ON tbl_solicitud_material.tbl_proyectos_idtbl_proyectos=tbl_proyectos.idtbl_proyectos LEFT JOIN tbl_users as user_autor ON tbl_solicitud_material.tbl_users_idtbl_users_autor=user_autor.idtbl_users LEFT JOIN tbl_users as user_aprobacion ON tbl_solicitud_material.tbl_users_idtbl_users_aprobacion=user_aprobacion.idtbl_users LEFT JOIN tbl_usuarios ON tbl_solicitud_material.tbl_usuarios_idtbl_usuarios=tbl_usuarios.idtbl_usuarios LEFT JOIN tbl_users as user_aprobacion_ag ON tbl_solicitud_material.tbl_users_idtbl_users_ag = user_aprobacion_ag.idtbl_users WHERE tbl_solicitud_material.tipo_producto = 'Refacciones Control Vehicular' $string AND (tbl_solicitud_material.uid LIKE '%$buscar%' OR tbl_proyectos.numero_proyecto LIKE '%$buscar%' OR user_autor.nombre LIKE '%$buscar%' OR user_aprobacion.nombre LIKE '%$buscar%' OR user_ag.nombre LIKE '%$buscar%' OR CONCAT(tbl_usuarios.nombres,' ',tbl_usuarios.apellido_paterno,' ',tbl_usuarios.apellido_materno) LIKE '%$buscar%') GROUP BY tbl_solicitud_material.idtbl_solicitud_material ORDER BY tbl_solicitud_material.fecha_creacion DESC " . $limit);
		return $query->result();
	}

	public function solicitudesRCV_reporte() {
		
		if($this->input->post('almacen_reporte') == 29){
			$tipo_solicitud = 'Refacciones Control Vehicular';
			$estatus = 'SRCV';
		}elseif($this->input->post('almacen_reporte') == 1){
			$tipo_solicitud = 'Almacen General';
			$estatus = 'S';
		}elseif($this->input->post('almacen_reporte') == 0){
			$tipo_solicitud = 'Seguridad e Higiene';
			$estatus = 'S';
		}
		
			//if($this->session->userdata('tipo') == 6){
			//	$string = "AND dtl_solicitud_material.observaciones_neodata IS NULL AND fecha_aprobacion_ag > '2022-01-14' AND (dtl_solicitud_material.observaciones_neodata IS NULL AND tbl_solicitud_material.estatus_solicitud = 'SRCV')";
			//}else{
				$string = "AND (tbl_solicitud_material.neodata_salida IS NULL AND dtl_solicitud_material.observaciones_neodata IS NOT NULL AND tbl_solicitud_material.estatus_solicitud = '$estatus')";
			//}
		
		
		$query = $this->db->query("SELECT tbl_proyectos.nombre_proyecto, tbl_proyectos.numero_proyecto, tbl_solicitud_material.*, user_autor.nombre as user_autor, user_aprobacion.nombre as user_aprobacion, user_aprobacion_ag.nombre as user_aprobacion_ag, user_ag.nombre as user_almacen_general, CONCAT(tbl_usuarios.nombres,' ',tbl_usuarios.apellido_paterno,' ',tbl_usuarios.apellido_materno) as recibe, dtl_solicitud_material.*, tbl_catalogo.neodata, tbl_catalogo.descripcion, tbl_contratistas.razon_social FROM tbl_solicitud_material LEFT JOIN dtl_solicitud_material ON tbl_solicitud_material.idtbl_solicitud_material = dtl_solicitud_material.tbl_solicitud_material_idtbl_solicitud_material LEFT JOIN tbl_catalogo ON tbl_catalogo.idtbl_catalogo = dtl_solicitud_material.tbl_catalogo_idtbl_catalogo LEFT JOIN tbl_users as user_ag ON user_ag.idtbl_users = tbl_solicitud_material.tbl_users_idtbl_users_ag LEFT JOIN tbl_proyectos ON tbl_solicitud_material.tbl_proyectos_idtbl_proyectos=tbl_proyectos.idtbl_proyectos LEFT JOIN tbl_contratistas ON tbl_contratistas.idtbl_contratistas = tbl_solicitud_material.tbl_contratistas_idtbl_contratistas LEFT JOIN tbl_users as user_autor ON tbl_solicitud_material.tbl_users_idtbl_users_autor=user_autor.idtbl_users LEFT JOIN tbl_users as user_aprobacion ON tbl_solicitud_material.tbl_users_idtbl_users_aprobacion=user_aprobacion.idtbl_users LEFT JOIN tbl_usuarios ON tbl_solicitud_material.tbl_usuarios_idtbl_usuarios=tbl_usuarios.idtbl_usuarios LEFT JOIN tbl_users as user_aprobacion_ag ON tbl_solicitud_material.tbl_users_idtbl_users_ag = user_aprobacion_ag.idtbl_users WHERE tbl_solicitud_material.tipo_producto = '$tipo_solicitud' $string ORDER BY tbl_solicitud_material.fecha_creacion DESC ");
		return $query->result_array();
	}


	public function devolucionesNeodata(){
		if($this->input->post('almacen_reporte') == 1){
			$tipo_solicitud = 'Almacen General';
			$estatus = 'entregado';
		}elseif($this->input->post('almacen_reporte') == 0){
			$tipo_solicitud = 'Seguridad e Higiene';
			$estatus = 'entregado';
		}elseif($this->input->post('almacen_reporte') == 29){
			$tipo_solicitud = 'Refacciones Control Vehicular';
			$estatus = 'entregado';
		}
		$string = "AND(dtl_solicitud_devolucion.observaciones_neodata IS NULL AND tbl_solicitud_devolucion.estatus_solicitud = '$estatus' AND tbl_solicitud_devolucion.fecha_creacion > '2023-01-01')";
		$query = $this->db->query("SELECT tbl_proyectos.nombre_proyecto, tbl_proyectos.numero_proyecto, tbl_solicitud_devolucion.*, user_autor.nombre as user_autor, user_aprobacion.nombre as user_aprobacion, user_aprobacion_ag.nombre as user_aprobacion_ag, user_ag.nombre as user_almacen_general, CONCAT(tbl_usuarios.nombres,' ',tbl_usuarios.apellido_paterno,' ',tbl_usuarios.apellido_materno) as recibe, dtl_solicitud_devolucion.*, tbl_catalogo.neodata, tbl_catalogo.descripcion, tbl_contratistas.razon_social FROM tbl_solicitud_devolucion LEFT JOIN dtl_solicitud_devolucion ON tbl_solicitud_devolucion.idtbl_solicitud_devolucion = dtl_solicitud_devolucion.tbl_solicitud_devolucion_idtbl_solicitud_devolucion LEFT JOIN tbl_catalogo ON tbl_catalogo.idtbl_catalogo = dtl_solicitud_devolucion.tbl_catalogo_idtbl_catalogo LEFT JOIN tbl_users as user_ag ON user_ag.idtbl_users = tbl_solicitud_devolucion.tbl_users_idtbl_users_ag LEFT JOIN tbl_proyectos ON tbl_solicitud_devolucion.tbl_proyectos_idtbl_proyectos = tbl_proyectos.idtbl_proyectos LEFT JOIN tbl_contratistas ON tbl_contratistas.idtbl_contratistas = tbl_solicitud_devolucion.tbl_contratistas_idtbl_contratistas LEFT JOIN tbl_users as user_autor ON tbl_solicitud_devolucion.tbl_users_idtbl_users_autor = user_autor.idtbl_users LEFT JOIN tbl_users as user_aprobacion ON tbl_solicitud_devolucion.tbl_users_idtbl_users_aprobacion = user_aprobacion.idtbl_users LEFT JOIN tbl_usuarios ON tbl_solicitud_devolucion.tbl_usuarios_idtbl_usuarios = tbl_usuarios.idtbl_usuarios LEFT JOIN tbl_users as user_aprobacion_ag ON tbl_solicitud_devolucion.tbl_users_idtbl_users_ag = user_aprobacion_ag.idtbl_users WHERE tbl_solicitud_devolucion.tipo_devolucion = '$tipo_solicitud' $string ORDER BY tbl_solicitud_devolucion.fecha_creacion DESC");
		return $query->result_array();
	}

	public function reporte_asignaciones(){
		
		$string = '';
		$almacen = $this->input->post('almacen_reporte');

		if($this->input->post('almacen_reporte') != 'todos'){
			$string .= " AND tbl_almacen_movimientos.tbl_almacenes_idtbl_almacenes = $almacen ";
		}


		
		$this->db->select("dtl_asignacion.*, tbl_almacenes.almacen, tbl_catalogo.*, tbl_usuarios.nombres, tbl_usuarios.apellido_paterno, tbl_usuarios.apellido_materno, tbl_almacen_movimientos.folio");
		$this->db->from("tbl_almacen_movimientos");
		$this->db->join("dtl_asignacion", "dtl_asignacion.tbl_almacen_movimientos_idtbl_almacen_movimientos = tbl_almacen_movimientos.idtbl_almacen_movimientos");
		$this->db->join("dtl_almacen", "dtl_almacen.iddtl_almacen = dtl_asignacion.dtl_almacen_iddtl_almacen");
		$this->db->join("tbl_catalogo", "tbl_catalogo.idtbl_catalogo = dtl_almacen.tbl_catalogo_idtbl_catalogo");
		$this->db->join("tbl_almacenes", "tbl_almacenes.idtbl_almacenes = tbl_almacen_movimientos.tbl_almacenes_idtbl_almacenes");
		$this->db->join("tbl_usuarios", "tbl_usuarios.idtbl_usuarios = dtl_asignacion.tbl_usuarios_idtbl_usuarios");
		$this->db->where("dtl_asignacion.estatus_asignacion", "activa");
		$this->db->where("dtl_asignacion.fecha_finalizacion IS NULL");
		if($string != '' && $string != NULL){
			$this->db->where("tbl_almacen_movimientos.tbl_almacenes_idtbl_almacenes", $almacen);
		}
		
		$this->db->group_start();
			foreach($this->input->post('anio') AS $key => $value){
				$this->db->or_where('YEAR(dtl_asignacion.fecha_asignacion)', $value);
			}	
		$this->db->group_end();
		$this->db->order_by("dtl_asignacion.fecha_asignacion DESC");

		$query = $this->db->get();
		return $query->result_array();
	}

	public function inventario_almacenes(){
		
		$string = '';
		$almacen = $this->input->post('almacen_reporte');

		if($this->input->post('almacen_reporte') != 'todos'){
			$string .= " AND dtl_almacen.tbl_almacenes_idtbl_almacenes = $almacen ";
		}


		$this->db->select("dtl_almacen.*, tbl_catalogo.*, ctl_categorias.categoria, ctl_unidades_medida.unidad_medida");
		$this->db->from("dtl_almacen");
		$this->db->join("tbl_catalogo", "tbl_catalogo.idtbl_catalogo = dtl_almacen.tbl_catalogo_idtbl_catalogo");
		$this->db->join("ctl_categorias", "ctl_categorias.idctl_categorias = tbl_catalogo.ctl_categorias_idctl_categorias");
		$this->db->join("ctl_unidades_medida", "ctl_unidades_medida.idctl_unidades_medida = tbl_catalogo.ctl_unidades_medida_idctl_unidades_medida");
		if($almacen == 1){
			$this->db->where('tbl_catalogo.tipo', 3);
		}elseif($almacen == 0){
			$this->db->where('tbl_catalogo.tipo', 1);
		}
		if($string != '' && $string != NULL && $almacen != 0){
			$this->db->where("dtl_almacen.tbl_almacenes_idtbl_almacenes", $almacen);
		}elseif($almacen == 0){
			$this->db->where("dtl_almacen.tbl_almacenes_idtbl_almacenes", 1);
		}
		$this->db->where('dtl_almacen.estatus', 'almacen');
		
		
		$this->db->order_by("dtl_almacen.existencias DESC");

		$query = $this->db->get();
		return $query->result_array();
	}

	/**
	 * Nos trae la informacion de la solicitud de almacen,
	 * autor de la solicitud, aprobador, quien recibe, proyecto,
	 * @param uid clave unica de la solicitud
	 **/
	public function detalle_solicitud($uid) {
		$this->db->select('tbl_proyectos.uid as uid_proyecto');
		$this->db->select('tbl_proyectos.idtbl_proyectos');
		$this->db->select('tbl_proyectos.nombre_proyecto');
		$this->db->select('tbl_proyectos.numero_proyecto');
		$this->db->select('tbl_proyectos.direccion as direccion_proyecto');
		$this->db->select('tbl_segmentos_proyecto.idtbl_segmentos_proyecto');
		$this->db->select('tbl_segmentos_proyecto.segmento');
		$this->db->select('responsable_proyecto.nombre as responsable');
		$this->db->select('coordinador_proyecto.nombre as coordinador');
		$this->db->select('tbl_contratistas.nombre_comercial AS contratista');
		$this->db->select('CONCAT(supervisor.nombres," ",supervisor.apellido_paterno," ",supervisor.apellido_materno) as supervisor');
		$this->db->select('tbl_solicitud_material.*');
		$this->db->select('user_autor.nombre as user_autor');
		$this->db->select('responsable_proyecto.idtbl_users as user_aprobacion_id');
		$this->db->select('CONCAT(tbl_usuarios.nombres," ",tbl_usuarios.apellido_paterno," ",tbl_usuarios.apellido_materno) as recibe');
		$this->db->select('tbl_usuarios.uid as uid_recibe');
		$this->db->select('aprobacionCO.nombre as nombreCO');
		$this->db->select('aprobacionAC.nombre as nombreAC');
		$this->db->select('aprobacionAG.nombre as nombreAG');
		$this->db->select('dtl_almacen.numero_interno');
		$this->db->select('tbl_almacenes.idtbl_almacenes');
		$this->db->select('tbl_almacenes.almacen');
		$this->db->select('dtl_almacen.rack');		
		$this->db->select('dtl_almacen.nivel');
		$this->db->from('tbl_solicitud_material');
		$this->db->join('tbl_almacenes', 'tbl_almacenes.uid = tbl_solicitud_material.uid_almacen_seleccionado', 'left');
		$this->db->join('tbl_proyectos', 'tbl_solicitud_material.tbl_proyectos_idtbl_proyectos=tbl_proyectos.idtbl_proyectos', 'left');
		$this->db->join('tbl_segmentos_proyecto', 'tbl_segmentos_proyecto.idtbl_segmentos_proyecto=tbl_solicitud_material.tbl_segmentos_proyecto_idtbl_segmentos_proyecto', 'left');
		$this->db->join('tbl_users AS responsable_proyecto', 'responsable_proyecto.idtbl_users=tbl_solicitud_material.tbl_users_idtbl_users_aprobacion', 'left');
		$this->db->join('tbl_users AS coordinador_proyecto', 'coordinador_proyecto.idtbl_users=tbl_solicitud_material.tbl_users_idtbl_users_autor', 'left');
		$this->db->join('tbl_users as user_autor', 'tbl_solicitud_material.tbl_users_idtbl_users_autor=user_autor.idtbl_users', 'left');
		$this->db->join('tbl_users as aprobacionCO', 'aprobacionCO.idtbl_users=tbl_solicitud_material.tbl_users_idtbl_users_co', 'left');
		$this->db->join('tbl_usuarios', 'tbl_solicitud_material.tbl_usuarios_idtbl_usuarios=tbl_usuarios.idtbl_usuarios', 'left');
		$this->db->join('tbl_contratistas', 'tbl_contratistas.idtbl_contratistas=tbl_solicitud_material.tbl_contratistas_idtbl_contratistas', 'left');
		$this->db->join('tbl_usuarios AS supervisor', 'supervisor.idtbl_usuarios=tbl_solicitud_material.tbl_usuarios_idtbl_usuarios_supervisor', 'left');
		$this->db->join('tbl_users AS aprobacionAC', 'aprobacionAC.idtbl_users=tbl_solicitud_material.tbl_users_idtbl_users_ac', 'left');
		$this->db->join('tbl_users AS aprobacionAG', 'aprobacionAG.idtbl_users=tbl_solicitud_material.tbl_users_idtbl_users_ag', 'left');
		$this->db->join('dtl_almacen', 'dtl_almacen.iddtl_almacen=tbl_solicitud_material.dtl_almacen_iddtl_almacen', 'left');
		$this->db->where('tbl_solicitud_material.uid', $uid);
		$query = $this->db->get();
		$resultado = $query->result();
		if (count($resultado) > 0) {
			return $query->result()[0];
		} else {
			return false;
		}
	}

	/**
	 * Nos trae la informacion de la solicitud de almacen,
	 * autor de la solicitud, aprobador, quien recibe, proyecto,
	 * @param uid clave unica de la solicitud
	 **/
	public function productosByService($id, $cliente) {
		$this->db->select('tbl_catalogo.*');
		$this->db->select('dtl_catalogo_servicio.*');
		$this->db->select('ctl_unidades_medida.unidad_medida_abr');
		$this->db->from('dtl_catalogo_servicio');
		$this->db->join('tbl_catalogo', 'tbl_catalogo.idtbl_catalogo = dtl_catalogo_servicio.tbl_catalogo_idtbl_catalogo', 'left');
		$this->db->join('ctl_unidades_medida', 'ctl_unidades_medida.idctl_unidades_medida = tbl_catalogo.ctl_unidades_medida_idctl_unidades_medida');
		$this->db->where('dtl_catalogo_servicio.tbl_tipo_red_idtbl_tipo_red', $id);
		$this->db->where('dtl_catalogo_servicio.tbl_clientes_idtbl_clientes', $cliente);
		$query = $this->db->get();
		$resultado = $query->result();
		if (count($resultado) > 0) {
			return $query->result();
		} else {
			return false;
		}
	}

	public function detalle_solicitud_catalogo($id_solicitud,$tipo = '',$uid_almacen = NULL) {
		/*if($tipo == 'Control Vehicular') {
			$query = $this->db->query("SELECT * FROM dtl_solicitud_material WHERE tbl_solicitud_material_idtbl_solicitud_material = $id_solicitud AND dtl_almacen_iddtl_almacen IS NOT NULL");
			$datos = $query->result_array(); 
			if(sizeof($datos) == 0) {
				//echo "entra aquí";
				$this->db->select('dtl_solicitud_material.*');
				$this->db->select('tbl_catalogo.*');
				$this->db->select('ctl_unidades_medida.unidad_medida_abr');
				$this->db->select('dtl_almacen.*');
				$this->db->select('tbl_solicitud_material.tipo_producto as tipo_producto');
				$this->db->from('dtl_solicitud_material');

				$this->db->join('tbl_catalogo', 'tbl_catalogo.idtbl_catalogo=dtl_solicitud_material.tbl_catalogo_idtbl_catalogo', 'left');
				$this->db->join('ctl_unidades_medida', 'tbl_catalogo.ctl_unidades_medida_idctl_unidades_medida=ctl_unidades_medida.idctl_unidades_medida', 'left');
				$this->db->join('dtl_almacen', 'dtl_almacen.tbl_catalogo_idtbl_catalogo=tbl_catalogo.idtbl_catalogo');
				$this->db->join('tbl_solicitud_material', 'tbl_solicitud_material.idtbl_solicitud_material = dtl_solicitud_material.tbl_solicitud_material_idtbl_solicitud_material');
				$this->db->where('dtl_solicitud_material.tbl_solicitud_material_idtbl_solicitud_material', $id_solicitud);
				$this->db->group_by('dtl_solicitud_material.iddtl_solicitud_material');
				$query = $this->db->get();
			} else {
				//echo "entro aquí 2";
				$query = $this->db->query('SELECT DSM.*, TC.*, DSM.dtl_almacen_iddtl_almacen as iddtl_almacen_relacion, CUM.unidad_medida_abr, DA.*, TSM.tipo_producto FROM dtl_solicitud_material DSM INNER JOIN dtl_almacen DA ON DA.iddtl_almacen = DSM.dtl_almacen_iddtl_almacen INNER JOIN tbl_catalogo TC ON TC.idtbl_catalogo = DA.tbl_catalogo_idtbl_catalogo INNER JOIN ctl_unidades_medida CUM ON CUM.idctl_unidades_medida = TC.ctl_unidades_medida_idctl_unidades_medida INNER JOIN tbl_solicitud_material TSM ON TSM.idtbl_solicitud_material = DSM.tbl_solicitud_material_idtbl_solicitud_material WHERE DSM.tbl_solicitud_material_idtbl_solicitud_material = ' . $id_solicitud);
			}
		} else {
			//echo "entro aquí 3";*/
			if($uid_almacen != NULL && $tipo != 'Control Vehicular'){
				$this->db->select('dtl_solicitud_material.*');
				$this->db->select('tbl_catalogo.*');
				$this->db->select('ctl_unidades_medida.unidad_medida_abr');
				$this->db->select('dtl_almacen.iddtl_almacen, dtl_almacen.tbl_almacenes_idtbl_almacenes, dtl_almacen.existencias, dtl_almacen.estatus, dtl_almacen.nota, dtl_almacen.rack, dtl_almacen.nivel, dtl_almacen.placas, dtl_almacen.no_motor, dtl_almacen.poliza, dtl_almacen.seguro, dtl_almacen.vigencia, dtl_almacen.tipo_vehiculo, dtl_almacen.estado, dtl_almacen.propietario, dtl_almacen.km_actual, dtl_almacen.km_servicio, dtl_almacen.anio, dtl_almacen.archivo, dtl_almacen.ubicacion');
				$this->db->select('almacen.numero_serie, almacen.numero_interno');
				$this->db->from('dtl_solicitud_material');

				$this->db->join('tbl_catalogo', 'tbl_catalogo.idtbl_catalogo=dtl_solicitud_material.tbl_catalogo_idtbl_catalogo', 'left');
				$this->db->join('ctl_unidades_medida', 'tbl_catalogo.ctl_unidades_medida_idctl_unidades_medida=ctl_unidades_medida.idctl_unidades_medida', 'left');
				$this->db->join('dtl_almacen', 'dtl_almacen.tbl_catalogo_idtbl_catalogo=tbl_catalogo.idtbl_catalogo', 'left');
				$this->db->join('tbl_almacenes', 'tbl_almacenes.idtbl_almacenes = dtl_almacen.tbl_almacenes_idtbl_almacenes', 'left');
				$this->db->join('dtl_almacen AS almacen', 'almacen.iddtl_almacen=dtl_solicitud_material.dtl_almacen_iddtl_almacen', 'left');
				$this->db->where('dtl_solicitud_material.tbl_solicitud_material_idtbl_solicitud_material', $id_solicitud);
				$this->db->group_start();
				$this->db->where('dtl_almacen.estatus', 'almacen');
				$this->db->or_where('dtl_almacen.estatus', 'asignado');
				$this->db->group_end();
				$this->db->where('tbl_almacenes.uid', $uid_almacen);
				//$this->db->where('dtl_almacen.estatus', 'almacen');
				$this->db->group_by('dtl_solicitud_material.iddtl_solicitud_material');
			}elseif($tipo == 'Control Vehicular'){
				$this->db->select('dtl_solicitud_material.*');
				$this->db->select('tbl_catalogo.*');
				$this->db->select('ctl_unidades_medida.unidad_medida_abr');
				//$this->db->select('dtl_almacen.iddtl_almacen, dtl_almacen.tbl_almacenes_idtbl_almacenes, dtl_almacen.existencias, dtl_almacen.estatus, dtl_almacen.nota, dtl_almacen.rack, dtl_almacen.nivel, dtl_almacen.placas, dtl_almacen.no_motor, dtl_almacen.poliza, dtl_almacen.seguro, dtl_almacen.vigencia, dtl_almacen.tipo_vehiculo, dtl_almacen.estado, dtl_almacen.propietario, dtl_almacen.km_actual, dtl_almacen.km_servicio, dtl_almacen.anio, dtl_almacen.archivo, dtl_almacen.ubicacion');
				//$this->db->select('almacen.numero_serie, almacen.numero_interno');
				$this->db->from('dtl_solicitud_material');

				$this->db->join('tbl_catalogo', 'tbl_catalogo.idtbl_catalogo=dtl_solicitud_material.tbl_catalogo_idtbl_catalogo', 'left');
				$this->db->join('ctl_unidades_medida', 'tbl_catalogo.ctl_unidades_medida_idctl_unidades_medida=ctl_unidades_medida.idctl_unidades_medida', 'left');
				//$this->db->join('dtl_almacen', 'dtl_almacen.tbl_catalogo_idtbl_catalogo=tbl_catalogo.idtbl_catalogo', 'left');
				//$this->db->join('tbl_almacenes', 'tbl_almacenes.idtbl_almacenes = dtl_almacen.tbl_almacenes_idtbl_almacenes', 'left');
				//$this->db->join('dtl_almacen AS almacen', 'almacen.iddtl_almacen=dtl_solicitud_material.dtl_almacen_iddtl_almacen', 'left');
				$this->db->where('dtl_solicitud_material.tbl_solicitud_material_idtbl_solicitud_material', $id_solicitud);
				//$this->db->where('tbl_almacenes.uid', $uid_almacen);
				//$this->db->where('dtl_almacen.estatu', 'almacen');
				$this->db->group_by('dtl_solicitud_material.iddtl_solicitud_material');
			}else{
				$this->db->select('dtl_solicitud_material.*');
				$this->db->select('tbl_catalogo.*');
				$this->db->select('ctl_unidades_medida.unidad_medida_abr');
				$this->db->select('dtl_almacen.iddtl_almacen, dtl_almacen.tbl_almacenes_idtbl_almacenes, dtl_almacen.existencias, dtl_almacen.estatus, dtl_almacen.nota, dtl_almacen.rack, dtl_almacen.nivel, dtl_almacen.placas, dtl_almacen.no_motor, dtl_almacen.poliza, dtl_almacen.seguro, dtl_almacen.vigencia, dtl_almacen.tipo_vehiculo, dtl_almacen.estado, dtl_almacen.propietario, dtl_almacen.km_actual, dtl_almacen.km_servicio, dtl_almacen.anio, dtl_almacen.archivo, dtl_almacen.ubicacion');
				$this->db->select('almacen.numero_serie, almacen.numero_interno');
				$this->db->from('dtl_solicitud_material');

				$this->db->join('tbl_catalogo', 'tbl_catalogo.idtbl_catalogo=dtl_solicitud_material.tbl_catalogo_idtbl_catalogo', 'left');
				$this->db->join('ctl_unidades_medida', 'tbl_catalogo.ctl_unidades_medida_idctl_unidades_medida=ctl_unidades_medida.idctl_unidades_medida', 'left');
				$this->db->join('dtl_almacen', 'dtl_almacen.tbl_catalogo_idtbl_catalogo=tbl_catalogo.idtbl_catalogo', 'left');
				$this->db->join('dtl_almacen AS almacen', 'almacen.iddtl_almacen=dtl_solicitud_material.dtl_almacen_iddtl_almacen', 'left');
				$this->db->where('dtl_solicitud_material.tbl_solicitud_material_idtbl_solicitud_material', $id_solicitud);
				$this->db->group_by('dtl_solicitud_material.iddtl_solicitud_material');
			}
			$query = $this->db->get();
		/*}*/
		//var_dump($query->result());
		return $query->result();
	}

	public function dtl_recurso($id_solicitud,$tipo) {
		
			if($tipo == 'viaticos'){
				$this->db->select('dtl_solicitud_recursos.*');
				$this->db->select('tbl_usuarios.*');
				$this->db->select('tbl_perfiles.perfil');
				$this->db->select('tbl_cuadrillas.nombre_cuadrilla');
			
				$this->db->from('dtl_solicitud_recursos');

				$this->db->join('tbl_usuarios', 'tbl_usuarios.idtbl_usuarios=dtl_solicitud_recursos.tbl_usuarios_idtbl_usuarios', 'left');

				$this->db->join('tbl_perfiles', 'tbl_perfiles.idtbl_perfiles=tbl_usuarios.tbl_perfiles_idtbl_perfiles', 'left');

				$this->db->join('tbl_usuarios_cuadrillas', 'tbl_usuarios_cuadrillas.tbl_usuarios_idtbl_usuarios=tbl_usuarios.idtbl_usuarios', 'left');

				$this->db->join('tbl_cuadrillas', 'tbl_cuadrillas.idtbl_cuadrillas=tbl_usuarios_cuadrillas.tbl_cuadrillas_idtbl_cuadrillas', 'left');
				
				$this->db->where('dtl_solicitud_recursos.tbl_solicitud_recursos_idtbl_solicitud_recursos', $id_solicitud);
				//$this->db->where('tbl_almacenes.uid', $uid_almacen);
				//$this->db->where('dtl_almacen.estatu', 'almacen');
				//$this->db->group_by('dtl_solicitud_material.iddtl_solicitud_material');
			}else{
				$this->db->select('dtl_solicitud_material.*');
				$this->db->select('tbl_catalogo.*');
				$this->db->select('ctl_unidades_medida.unidad_medida_abr');
				$this->db->select('dtl_almacen.iddtl_almacen, dtl_almacen.tbl_almacenes_idtbl_almacenes, dtl_almacen.existencias, dtl_almacen.estatus, dtl_almacen.nota, dtl_almacen.rack, dtl_almacen.nivel, dtl_almacen.placas, dtl_almacen.no_motor, dtl_almacen.poliza, dtl_almacen.seguro, dtl_almacen.vigencia, dtl_almacen.tipo_vehiculo, dtl_almacen.estado, dtl_almacen.propietario, dtl_almacen.km_actual, dtl_almacen.km_servicio, dtl_almacen.anio, dtl_almacen.archivo, dtl_almacen.ubicacion');
				$this->db->select('almacen.numero_serie, almacen.numero_interno');
				$this->db->from('dtl_solicitud_material');

				$this->db->join('tbl_catalogo', 'tbl_catalogo.idtbl_catalogo=dtl_solicitud_material.tbl_catalogo_idtbl_catalogo', 'left');
				$this->db->join('ctl_unidades_medida', 'tbl_catalogo.ctl_unidades_medida_idctl_unidades_medida=ctl_unidades_medida.idctl_unidades_medida', 'left');
				$this->db->join('dtl_almacen', 'dtl_almacen.tbl_catalogo_idtbl_catalogo=tbl_catalogo.idtbl_catalogo', 'left');
				$this->db->join('dtl_almacen AS almacen', 'almacen.iddtl_almacen=dtl_solicitud_material.dtl_almacen_iddtl_almacen', 'left');
				$this->db->where('dtl_solicitud_material.tbl_solicitud_material_idtbl_solicitud_material', $id_solicitud);
				$this->db->group_by('dtl_solicitud_material.iddtl_solicitud_material');
			}
			$query = $this->db->get();
		/*}*/
		//var_dump($query->result());
		return $query->result();
	}

	public function detalle_existencias_catalogo($id_solicitud) {
		$this->db->select('dtl_solicitud_material.*');
		$this->db->select('tbl_catalogo.*');
		$this->db->select('dtl_almacen.existencias');
		$this->db->from('dtl_solicitud_material');

		$this->db->join('tbl_solicitud_material', 'tbl_solicitud_material.idtbl_solicitud_material = dtl_solicitud_material.tbl_solicitud_material_idtbl_solicitud_material', 'left');
		$this->db->join('tbl_almacenes', 'tbl_almacenes.uid = tbl_solicitud_material.uid_almacen_seleccionado', 'left');
		$this->db->join('tbl_catalogo', 'tbl_catalogo.idtbl_catalogo=dtl_solicitud_material.tbl_catalogo_idtbl_catalogo', 'left');
		$this->db->join('dtl_almacen', 'dtl_almacen.tbl_almacenes_idtbl_almacenes=tbl_almacenes.idtbl_almacenes');
		$this->db->where('dtl_solicitud_material.tbl_solicitud_material_idtbl_solicitud_material', $id_solicitud);
		$this->db->where('dtl_almacen.estatus', 'almacen');
		$this->db->where('dtl_almacen.tbl_catalogo_idtbl_catalogo', 'dtl_solicitud_material.tbl_catalogo_idtbl_catalogo');
		$this->db->group_by('dtl_solicitud_material.iddtl_solicitud_material');
		$query = $this->db->get();

		return $query->result();
	}

	public function detalle_solicitud_catalogo_existencias($id_solicitud, $tipo, $id_almacen) {
		if($tipo == 'Kuali'){
			$this->db->select('dtl_solicitud_material.*');
			$this->db->select('tbl_catalogo.*');
			$this->db->select('ctl_unidades_medida.unidad_medida_abr');
			$this->db->select('dtl_almacen.existencias');
			$this->db->select('dtl_almacen.iddtl_almacen');
			$this->db->select('dtl_almacen.rack');
			$this->db->select('dtl_almacen.nivel');
			$this->db->from('dtl_solicitud_material');
			$this->db->join('tbl_catalogo', 'tbl_catalogo.idtbl_catalogo=dtl_solicitud_material.tbl_catalogo_idtbl_catalogo', 'left');
			$this->db->join('ctl_unidades_medida', 'tbl_catalogo.ctl_unidades_medida_idctl_unidades_medida=ctl_unidades_medida.idctl_unidades_medida', 'left');
			$this->db->join('tbl_solicitud_material', 'dtl_solicitud_material.tbl_solicitud_material_idtbl_solicitud_material=tbl_solicitud_material.idtbl_solicitud_material', 'left');
			// $this->db->join('tbl_proyectos','tbl_proyectos.idtbl_proyectos=tbl_solicitud_material.tbl_proyectos_idtbl_proyectos','left');
			// $this->db->join('tbl_almacenes','tbl_almacenes.idtbl_almacenes=tbl_proyectos.tbl_almacenes_idtbl_almacenes','left');
			// $this->db->join('dtl_almacen','dtl_solicitud_material.tbl_catalogo_idtbl_catalogo=dtl_almacen.tbl_catalogo_idtbl_catalogo AND tbl_almacenes.idtbl_almacenes=dtl_almacen.tbl_almacenes_idtbl_almacenes','left');
			$this->db->join('dtl_almacen', 'dtl_almacen.tbl_catalogo_idtbl_catalogo = tbl_catalogo.idtbl_catalogo', 'left');
			$this->db->where('dtl_solicitud_material.tbl_solicitud_material_idtbl_solicitud_material', $id_solicitud);
			$this->db->group_start();
			$this->db->where('dtl_almacen.estatus', 'almacen');
			$this->db->or_where('dtl_almacen.estatus', 'asignado');
			$this->db->group_end();
			$this->db->where('dtl_almacen.tbl_almacenes_idtbl_almacenes=', $id_almacen);
			$this->db->group_by('dtl_solicitud_material.iddtl_solicitud_material');
			$query = $this->db->get();
		} elseif($tipo == 'Refacciones Control Vehicular'){
			$this->db->select('dtl_solicitud_material.*');
			$this->db->select('tbl_catalogo.*');
			$this->db->select('ctl_unidades_medida.unidad_medida_abr');
			$this->db->select('dtl_almacen.existencias');
			$this->db->select('dtl_almacen.iddtl_almacen');
			$this->db->from('dtl_solicitud_material');
			$this->db->join('tbl_catalogo', 'tbl_catalogo.idtbl_catalogo=dtl_solicitud_material.tbl_catalogo_idtbl_catalogo', 'left');
			$this->db->join('ctl_unidades_medida', 'tbl_catalogo.ctl_unidades_medida_idctl_unidades_medida=ctl_unidades_medida.idctl_unidades_medida', 'left');
			$this->db->join('tbl_solicitud_material', 'dtl_solicitud_material.tbl_solicitud_material_idtbl_solicitud_material=tbl_solicitud_material.idtbl_solicitud_material', 'left');
			// $this->db->join('tbl_proyectos','tbl_proyectos.idtbl_proyectos=tbl_solicitud_material.tbl_proyectos_idtbl_proyectos','left');
			// $this->db->join('tbl_almacenes','tbl_almacenes.idtbl_almacenes=tbl_proyectos.tbl_almacenes_idtbl_almacenes','left');
			// $this->db->join('dtl_almacen','dtl_solicitud_material.tbl_catalogo_idtbl_catalogo=dtl_almacen.tbl_catalogo_idtbl_catalogo AND tbl_almacenes.idtbl_almacenes=dtl_almacen.tbl_almacenes_idtbl_almacenes','left');
			$this->db->join('dtl_almacen', 'dtl_almacen.tbl_catalogo_idtbl_catalogo = tbl_catalogo.idtbl_catalogo', 'left');
			$this->db->where('dtl_solicitud_material.tbl_solicitud_material_idtbl_solicitud_material', $id_solicitud);
			$this->db->where('dtl_almacen.estatus', 'almacen');
			$this->db->where('dtl_almacen.tbl_almacenes_idtbl_almacenes=', 29);
			$this->db->group_by('dtl_solicitud_material.iddtl_solicitud_material');
			$query = $this->db->get();
		}else {
			$this->db->select('dtl_solicitud_material.*');
			$this->db->select('tbl_catalogo.*');
			$this->db->select('ctl_unidades_medida.unidad_medida_abr');
			$this->db->select('dtl_almacen.existencias');
			$this->db->select('dtl_almacen.iddtl_almacen');
			$this->db->select('dtl_almacen.rack');
			$this->db->select('dtl_almacen.nivel');
			$this->db->from('dtl_solicitud_material');
			$this->db->join('tbl_catalogo', 'tbl_catalogo.idtbl_catalogo=dtl_solicitud_material.tbl_catalogo_idtbl_catalogo', 'left');
			$this->db->join('ctl_unidades_medida', 'tbl_catalogo.ctl_unidades_medida_idctl_unidades_medida=ctl_unidades_medida.idctl_unidades_medida', 'left');
			$this->db->join('tbl_solicitud_material', 'dtl_solicitud_material.tbl_solicitud_material_idtbl_solicitud_material=tbl_solicitud_material.idtbl_solicitud_material', 'left');
			// $this->db->join('tbl_proyectos','tbl_proyectos.idtbl_proyectos=tbl_solicitud_material.tbl_proyectos_idtbl_proyectos','left');
			// $this->db->join('tbl_almacenes','tbl_almacenes.idtbl_almacenes=tbl_proyectos.tbl_almacenes_idtbl_almacenes','left');
			// $this->db->join('dtl_almacen','dtl_solicitud_material.tbl_catalogo_idtbl_catalogo=dtl_almacen.tbl_catalogo_idtbl_catalogo AND tbl_almacenes.idtbl_almacenes=dtl_almacen.tbl_almacenes_idtbl_almacenes','left');
			$this->db->join('dtl_almacen', 'dtl_almacen.tbl_catalogo_idtbl_catalogo = tbl_catalogo.idtbl_catalogo', 'left');
			$this->db->where('dtl_solicitud_material.tbl_solicitud_material_idtbl_solicitud_material', $id_solicitud);
			$this->db->group_start();
			$this->db->where('dtl_almacen.estatus', 'almacen');
			$this->db->or_where('dtl_almacen.estatus', 'asignado');
			$this->db->group_end();
			$this->db->where('dtl_almacen.tbl_almacenes_idtbl_almacenes', $id_almacen);
			$this->db->group_by('dtl_solicitud_material.iddtl_solicitud_material');
			$query = $this->db->get();
		}
		return $query->result();
	}

	private function id_almacen($uid) {
		$query = $this->db->query("SELECT idtbl_almacenes FROM tbl_almacenes WHERE tbl_almacenes.uid='$uid'");
		return $query->result()[0]->idtbl_almacenes;
	}

	private function id_almacen_movimientos($uid) {
		$query = $this->db->query("SELECT idtbl_almacen_movimientos FROM tbl_almacen_movimientos WHERE tbl_almacen_movimientos.uid='$uid'");
		return $query->result()[0]->idtbl_almacen_movimientos;
	}

	private function id_usuario($uid) {
		$query = $this->db->query("
			SELECT idtbl_usuarios
			FROM tbl_usuarios 
			WHERE tbl_usuarios.uid='$uid'");
		return $query->result()[0]->idtbl_usuarios;
	}

	public function log($log, $link = null) {
		if ($this->session->userdata('id'))
			$id = $this->session->userdata('id');
		else
			$id = 1;
		if ($this->session->userdata('tipo') == '1')
			$departamento = 7;
		if ($this->session->userdata('tipo') == '3')
			$departamento = 5;
		else
			$departamento = 6;
		$data = array(
			'log' => $log,
			'tbl_users_idtbl_users' => $id,
			'link' => $link,
			'departamento' => $departamento
		);		
		$this->db->insert('tbl_log', $data);
	}

	public function getAllSegmentos($id) {
		$query = $this->db->query("SELECT * FROM tbl_segmentos_proyecto WHERE tbl_proyectos_idtbl_proyectos = $id");
		return $query->result();
	}

	public function getHojaAsignacion() {
		$usuario = $this->input->post('user');
		$proyecto = $this->input->post('proyecto');
		if($this->input->post('tipo') == 'interno'){
			$query = $this->db->query("SELECT * FROM tbl_hoja_asignacion JOIN dtl_hoja_asignacion ON tbl_hoja_asignacion.idtbl_hoja_asignacion = dtl_hoja_asignacion.tbl_hoja_asignacion_idtbl_hoja_asignacion JOIN tbl_catalogo ON tbl_catalogo.idtbl_catalogo = dtl_hoja_asignacion.tbl_catalogo_idtbl_catalogo JOIN ctl_unidades_medida ON ctl_unidades_medida.idctl_unidades_medida = tbl_catalogo.ctl_unidades_medida_idctl_unidades_medida WHERE tbl_hoja_asignacion.tbl_usuarios_idtbl_usuarios = $usuario AND tbl_hoja_asignacion.tbl_proyectos_idtbl_proyectos = $proyecto AND tbl_hoja_asignacion.estatus='aprobada'");
		}else{
			$contratista = $this->input->post('contratista');
			$query = $this->db->query("SELECT * FROM tbl_hoja_asignacion JOIN dtl_hoja_asignacion ON tbl_hoja_asignacion.idtbl_hoja_asignacion = dtl_hoja_asignacion.tbl_hoja_asignacion_idtbl_hoja_asignacion JOIN tbl_catalogo ON tbl_catalogo.idtbl_catalogo = dtl_hoja_asignacion.tbl_catalogo_idtbl_catalogo JOIN ctl_unidades_medida ON ctl_unidades_medida.idctl_unidades_medida = tbl_catalogo.ctl_unidades_medida_idctl_unidades_medida WHERE tbl_hoja_asignacion.tbl_contratistas_idtbl_contratistas = $contratista AND tbl_hoja_asignacion.tbl_proyectos_idtbl_proyectos = $proyecto AND tbl_hoja_asignacion.estatus='aprobada'");
		}
		return $query->result();
	}

	public function hojas_asignacion_usuario($uid) {
		$usuario = $this->id_usuario($uid);
		$query = $this->db->query("SELECT tbl_hoja_asignacion.*, tbl_proyectos.numero_proyecto, tbl_users.nombre FROM tbl_hoja_asignacion JOIN tbl_proyectos ON tbl_proyectos.idtbl_proyectos = tbl_hoja_asignacion.tbl_proyectos_idtbl_proyectos JOIN tbl_users ON tbl_users.idtbl_users = tbl_hoja_asignacion.tbl_users_idtbl_users_autor WHERE tbl_hoja_asignacion.tbl_usuarios_idtbl_usuarios = $usuario");
		return $query->result();
	}

	public function hojas_asignacion_contratistas($uid) {
		//$usuario = $this->id_usuario($uid);
		$query = $this->db->query("SELECT tbl_hoja_asignacion.*, tbl_proyectos.numero_proyecto, tbl_users.nombre FROM tbl_hoja_asignacion JOIN tbl_proyectos ON tbl_proyectos.idtbl_proyectos = tbl_hoja_asignacion.tbl_proyectos_idtbl_proyectos JOIN tbl_users ON tbl_users.idtbl_users = tbl_hoja_asignacion.tbl_users_idtbl_users_autor WHERE tbl_hoja_asignacion.tbl_contratistas_idtbl_contratistas = $uid");
		return $query->result();
	}

	public function solicitudesHojaAsignacion($buscar = '', $inicio = false, $cantidadRegistro = false)
    {
        $limit = '';
        if ($inicio !== false && $cantidadRegistro !== false) {
            $limit = ' LIMIT ' . $inicio . "," . $cantidadRegistro;
        }
        $query = $this->db->query("SELECT tbl_solicitud_material.*, tbl_users.nombre, tbl_usuarios.nombres, tbl_usuarios.apellido_paterno, tbl_usuarios.apellido_materno FROM tbl_solicitud_material JOIN tbl_users ON tbl_users.idtbl_users = tbl_solicitud_material.tbl_users_idtbl_users_autor JOIN tbl_usuarios ON tbl_usuarios.idtbl_usuarios = tbl_solicitud_material.tbl_usuarios_idtbl_usuarios WHERE tbl_solicitud_material.tbl_hoja_asignacion_idtbl_hoja_asignacion = " . $this->input->post('idtbl_hoja_asignacion') . $limit);
        return $query->result();
    }

	public function getAlmacenesByProject($id) {
		$query = $this->db->query("SELECT tsub.* FROM `tbl_proyectos` JOIN tbl_almacenes ON tbl_almacenes.tbl_proyectos_idtbl_proyectos = tbl_proyectos.idtbl_proyectos JOIN tbl_proyectos tsubpro ON tsubpro.tbl_proyectos_idtbl_proyectos = tbl_proyectos.tbl_proyectos_idtbl_proyectos JOIN tbl_almacenes tsub ON tsub.tbl_proyectos_idtbl_proyectos = tsubpro.idtbl_proyectos WHERE tbl_proyectos.idtbl_proyectos = $id AND (tbl_almacenes.tbl_almacenes_idtbl_almacenes IS NOT NULL OR tsub.tbl_almacenes_idtbl_almacenes IS NOT NULL) GROUP BY tsub.idtbl_almacenes");
		return $query->result();
	}

	public function getMaterialesClientes() {
		$cliente = $this->input->post('cliente');
		$categoria = $this->input->post('categoria');
		if($categoria == 100){
			$query = $this->db->query("SELECT *, ctl_unidades_medida.unidad_medida_abr FROM tbl_catalogo JOIN dtl_catalogo_clientes ON dtl_catalogo_clientes.tbl_catalogo_idtbl_catalogo = tbl_catalogo.idtbl_catalogo JOIN ctl_unidades_medida ON ctl_unidades_medida.idctl_unidades_medida = tbl_catalogo.ctl_unidades_medida_idctl_unidades_medida WHERE dtl_catalogo_clientes.tbl_clientes_idtbl_clientes = $cliente AND (tbl_catalogo.ctl_categorias_idctl_categorias = 13 OR tbl_catalogo.ctl_categorias_idctl_categorias = 4)");
		}else{
			$query = $this->db->query("SELECT *, ctl_unidades_medida.unidad_medida_abr FROM tbl_catalogo JOIN dtl_catalogo_clientes ON dtl_catalogo_clientes.tbl_catalogo_idtbl_catalogo = tbl_catalogo.idtbl_catalogo JOIN ctl_unidades_medida ON ctl_unidades_medida.idctl_unidades_medida = tbl_catalogo.ctl_unidades_medida_idctl_unidades_medida WHERE dtl_catalogo_clientes.tbl_clientes_idtbl_clientes = $cliente AND dtl_catalogo_clientes.tipo = '$categoria'");
		}
		return $query->result();
	}

	public function getGeoreferencias($id) {
		$query = $this->db->query("SELECT tbl_tramo_fibra_optica.* FROM tbl_mantenimientos LEFT JOIN tbl_tramo_fibra_optica ON tbl_tramo_fibra_optica.idtbl_tramo_fibra_optica = tbl_mantenimientos.tbl_tramo_fibra_optica_idtbl_tramo_fibra_optica WHERE tbl_mantenimientos.idtbl_mantenimientos = $id");
		return $query->result();
	}

	public function getGeoreferenciasJustificadas($id) {
		$query = $this->db->query("SELECT tbl_justificacion_generador.* FROM tbl_justificacion_generador WHERE tbl_justificacion_generador.tbl_mantenimientos_idtbl_mantenimientos = $id");
		return $query->result();
	}

	public function getSitiosByProducto($id) {
		//$query = $this->db->query("SELECT * FROM `dtl_almacen_movimiento` INNER JOIN tbl_almacen_movimientos WHERE dtl_almacen_movimientos.tbl_catalogo_idtbl_catalogo = $id AND tbl_almacen_movimientos.sitio IS NOT NULL GROUP BY tbl_almacen_movimientos.idtbl_almacen_movimientos");
		//$query = $this->db->query("SELECT *, (SELECT DISTINCT sitio FROM dtl_solicitud_material JOIN tbl_solicitud_material ON dtl_solicitud_material.tbl_solicitud_material_idtbl_solicitud_material = tbl_solicitud_material.idtbl_solicitud_material WHERE dtl_solicitud_material.tbl_catalogo_idtbl_catalogo = $id AND dtl_solicitud_material.sitio = tbl_almacen_movimientos.sitio AND tbl_solicitud_material.estatus_solicitud != 'cancelada AG') AS sitio_solicitud FROM `dtl_almacen_movimientos` INNER JOIN tbl_almacen_movimientos ON dtl_almacen_movimientos.tbl_almacen_movimientos_idtbl_almacen_movimientos = tbl_almacen_movimientos.idtbl_almacen_movimientos WHERE dtl_almacen_movimientos.tbl_catalogo_idtbl_catalogo = $id AND tbl_almacen_movimientos.sitio IS NOT NULL");
		//$query = $this->db->query("SELECT *, (SELECT DISTINCT sitio FROM dtl_solicitud_material JOIN tbl_solicitud_material ON dtl_solicitud_material.tbl_solicitud_material_idtbl_solicitud_material = tbl_solicitud_material.idtbl_solicitud_material WHERE dtl_solicitud_material.tbl_catalogo_idtbl_catalogo = $id AND dtl_solicitud_material.sitio = tbl_almacen_movimientos.sitio AND tbl_solicitud_material.estatus_solicitud != 'cancelada AG') AS sitio_solicitud FROM `dtl_almacen_movimientos` INNER JOIN tbl_almacen_movimientos ON dtl_almacen_movimientos.tbl_almacen_movimientos_idtbl_almacen_movimientos = tbl_almacen_movimientos.idtbl_almacen_movimientos WHERE dtl_almacen_movimientos.tbl_catalogo_idtbl_catalogo = $id AND tbl_almacen_movimientos.sitio IS NOT NULL GROUP BY tbl_almacen_movimientos.idtbl_almacen_movimientos");
		$proyecto = $_POST['proyecto'];
		$segmento = $_POST['segmento'];
		if($segmento != ""){
			//AND tbl_almacen_movimientos.tbl_segmentos_proyecto_idtbl_segmentos_proyecto = $segmento
			$query = $this->db->query("SELECT *, (SELECT DISTINCT sitio FROM dtl_solicitud_material JOIN tbl_solicitud_material ON dtl_solicitud_material.tbl_solicitud_material_idtbl_solicitud_material = tbl_solicitud_material.idtbl_solicitud_material WHERE dtl_solicitud_material.tbl_catalogo_idtbl_catalogo = $id AND dtl_solicitud_material.sitio = tbl_almacen_movimientos.sitio AND tbl_solicitud_material.estatus_solicitud != 'cancelada AG' AND tbl_solicitud_material.tbl_proyectos_idtbl_proyectos = $proyecto AND tbl_solicitud_material.tbl_segmentos_proyecto_idtbl_segmentos_proyecto = $segmento ) AS sitio_solicitud FROM `dtl_almacen_movimientos` INNER JOIN tbl_almacen_movimientos ON dtl_almacen_movimientos.tbl_almacen_movimientos_idtbl_almacen_movimientos = tbl_almacen_movimientos.idtbl_almacen_movimientos INNER JOIN tbl_almacenes ON tbl_almacenes.idtbl_almacenes = tbl_almacen_movimientos.tbl_almacenes_idtbl_almacenes WHERE dtl_almacen_movimientos.tbl_catalogo_idtbl_catalogo = $id AND tbl_almacen_movimientos.sitio IS NOT NULL AND tbl_almacenes.tbl_proyectos_idtbl_proyectos = $proyecto  GROUP BY tbl_almacen_movimientos.idtbl_almacen_movimientos");
		}else{
			//AND tbl_almacen_movimientos.tbl_segmentos_proyecto_idtbl_segmentos_proyecto IS NULL
			$query = $this->db->query("SELECT *, (SELECT DISTINCT sitio FROM dtl_solicitud_material JOIN tbl_solicitud_material ON dtl_solicitud_material.tbl_solicitud_material_idtbl_solicitud_material = tbl_solicitud_material.idtbl_solicitud_material WHERE dtl_solicitud_material.tbl_catalogo_idtbl_catalogo = $id AND dtl_solicitud_material.sitio = tbl_almacen_movimientos.sitio AND tbl_solicitud_material.estatus_solicitud != 'cancelada AG' AND tbl_solicitud_material.tbl_proyectos_idtbl_proyectos = $proyecto AND tbl_solicitud_material.tbl_segmentos_proyecto_idtbl_segmentos_proyecto IS NULL ) AS sitio_solicitud FROM `dtl_almacen_movimientos` INNER JOIN tbl_almacen_movimientos ON dtl_almacen_movimientos.tbl_almacen_movimientos_idtbl_almacen_movimientos = tbl_almacen_movimientos.idtbl_almacen_movimientos INNER JOIN tbl_almacenes ON tbl_almacenes.idtbl_almacenes = tbl_almacen_movimientos.tbl_almacenes_idtbl_almacenes WHERE dtl_almacen_movimientos.tbl_catalogo_idtbl_catalogo = $id AND tbl_almacen_movimientos.sitio IS NOT NULL AND tbl_almacenes.tbl_proyectos_idtbl_proyectos = $proyecto  GROUP BY tbl_almacen_movimientos.idtbl_almacen_movimientos");
		}
		return $query->result();
	}

	//obtiene todos los ecos de un id de catalogo
	public function getAllEcos($id) {
		$query = $this->db->query("SELECT * FROM dtl_almacen WHERE tbl_catalogo_idtbl_catalogo = $id");
		return $query->result();
	}

	public function getIdAlmacen($uid) {
		$query = $this->db->query("SELECT idtbl_almacenes FROM tbl_almacenes WHERE uid = '$uid'");
		return $query->result_array();
	}
	//muestra los detalles de una entrada,salida,devolución,traspaso, esta información se muestra al seleccionar un tab al hacer click a un almacen de cliente
	public function reporteAlmacenes($id, $tipo = '', $buscar = '', $inicio = false, $cantidadRegistro = false) {
		
		$string2 = '';
		if($this->session->userdata('tipo') == 16) {
			$string2 = " AND tam.estatus_contabilidad IS NOT NULL";
		}

		if($tipo != '') {
			$string = " AND tam.tipo IN ($tipo) ";
		} else {
			$string='';
		}
		$limit = '';
		if ($inicio !== false && $cantidadRegistro !== false) {
			$limit = 'LIMIT ' . $inicio . "," . $cantidadRegistro;
		}
		if($tipo == "'entrada','entrada-almacen'"){
			$query =  $this->db->query("SELECT tsp.segmento, tam.sitio, tusuarios.nombres as recibe, tusuarios.apellido_paterno as paternorecibe, tusuarios.apellido_materno as maternorecibe, cae.nombre as entrega, tam.idtbl_almacen_movimientos, tam.tipo_movimiento, tam.fecha, tam.modificado, ta.almacen, tam.uid, tam.tipo, tam.movimiento_virtual, tu.nombre, tp.nombre_proyecto, tp.numero_proyecto, ctd.tipo_documento, tam.numero_documento, tam.folio, tam.estatus, tpr.nombre_proyecto as nombre_proyecto_destino, tpr.numero_proyecto AS numero_proyecto_destino, tad.almacen AS almacen_destino, tu_aprobar.nombre AS nombre_aprobacion, tam.estatus_contabilidad, SUM(dam.cantidad) AS cantidad, SUM(dam.cantidad_anterior) AS cantidad_anterior FROM tbl_almacen_movimientos tam LEFT JOIN dtl_almacen_movimientos dam ON dam.tbl_almacen_movimientos_idtbl_almacen_movimientos = tam.idtbl_almacen_movimientos LEFT JOIN tbl_almacenes ta ON ta.idtbl_almacenes = tam.tbl_almacenes_idtbl_almacenes LEFT JOIN tbl_users tu ON tu.idtbl_users = tam.tbl_users_idtbl_users LEFT JOIN tbl_users tu_aprobar ON tu_aprobar.idtbl_users = tam.tbl_users_idtbl_users_ag LEFT JOIN tbl_proyectos tp ON tp.idtbl_proyectos = tam.tbl_proyectos_idtbl_proyectos LEFT JOIN ctl_tipo_documento ctd ON ctd.idctl_tipo_documento = tam.ctl_tipo_documento_idctl_tipo_documento LEFT JOIN tbl_proyectos tpr ON tpr.idtbl_proyectos = tam.tbl_proyectos_idtbl_proyectos_destino LEFT JOIN tbl_almacenes tad ON tad.idtbl_almacenes = tam.tbl_almacenes_idtbl_almacenes_destino LEFT JOIN ctl_autorizados_entrega cae ON cae.idctl_autorizados_entrega=tam.ctl_autorizados_entrega_idctl_autorizados_entrega LEFT JOIN tbl_usuarios tusuarios ON tusuarios.idtbl_usuarios = tam.tbl_usuarios_idtbl_usuarios LEFT JOIN tbl_segmentos_proyecto tsp ON tsp.idtbl_segmentos_proyecto = tam.tbl_segmentos_proyecto_idtbl_segmentos_proyecto WHERE (tam.uid LIKE '%$buscar%') AND (tam.tbl_almacenes_idtbl_almacenes_origen IS NULL OR tam.movimiento_virtual = 3) AND tam.tbl_almacenes_idtbl_almacenes = $id $string $string2 GROUP BY dam.tbl_almacen_movimientos_idtbl_almacen_movimientos ORDER BY tam.idtbl_almacen_movimientos DESC " . $limit);
		}elseif($tipo == "'salida-almacen'"){
			$query =  $this->db->query("SELECT tsp.segmento, tusuarios.nombres as recibe, tusuarios.apellido_paterno as paternorecibe, tusuarios.apellido_materno as maternorecibe, cae.nombre as entrega, tam.idtbl_almacen_movimientos, tam.tipo_movimiento, tam.fecha, tam.modificado, ta.almacen, tam.uid, tam.tipo, tam.movimiento_virtual, tu.nombre, tp.nombre_proyecto, tp.numero_proyecto, ctd.tipo_documento, tam.numero_documento, tam.folio, tam.estatus, tpr.nombre_proyecto as nombre_proyecto_destino, tpr.numero_proyecto AS numero_proyecto_destino, tad.almacen AS almacen_destino, tam.estatus_contabilidad, tam.verificacion_archivo, dsm.sitio FROM tbl_almacen_movimientos tam LEFT JOIN tbl_solicitud_material tsm ON tsm.idtbl_solicitud_material = tam.parent LEFT JOIN dtl_solicitud_material dsm ON dsm.tbl_solicitud_material_idtbl_solicitud_material = tsm.idtbl_solicitud_material LEFT JOIN tbl_almacenes ta ON ta.idtbl_almacenes = tam.tbl_almacenes_idtbl_almacenes LEFT JOIN tbl_users tu ON tu.idtbl_users = tam.tbl_users_idtbl_users LEFT JOIN tbl_proyectos tp ON tp.idtbl_proyectos = tam.tbl_proyectos_idtbl_proyectos LEFT JOIN ctl_tipo_documento ctd ON ctd.idctl_tipo_documento = tam.ctl_tipo_documento_idctl_tipo_documento LEFT JOIN tbl_proyectos tpr ON tpr.idtbl_proyectos = tam.tbl_proyectos_idtbl_proyectos_destino LEFT JOIN tbl_almacenes tad ON tad.idtbl_almacenes = tam.tbl_almacenes_idtbl_almacenes_destino LEFT JOIN ctl_autorizados_entrega cae ON cae.idctl_autorizados_entrega=tam.ctl_autorizados_entrega_idctl_autorizados_entrega LEFT JOIN tbl_usuarios tusuarios ON tusuarios.idtbl_usuarios = tam.tbl_usuarios_idtbl_usuarios LEFT JOIN tbl_segmentos_proyecto tsp ON tsp.idtbl_segmentos_proyecto = tam.tbl_segmentos_proyecto_idtbl_segmentos_proyecto WHERE (tam.uid LIKE '%$buscar%' OR tam.folio LIKE '%$buscar%') AND tam.movimiento_virtual = 0 AND tam.estatus = 1 AND tam.parent IS NOT NULL AND tam.tbl_almacenes_idtbl_almacenes = $id $string $string2 GROUP BY tam.idtbl_almacen_movimientos ORDER BY tam.idtbl_almacen_movimientos DESC " . $limit);
		}elseif($tipo == "'traspaso-almacen'"){
			$query =  $this->db->query("SELECT tsp.segmento, tam.sitio, tusuarios.nombres as recibe, tusuarios.apellido_paterno as paternorecibe, tusuarios.apellido_materno as maternorecibe, cae.nombre as entrega, tam.idtbl_almacen_movimientos, tam.tipo_movimiento, tam.fecha, tam.modificado, ta.almacen, tam.uid, tam.tipo, tam.movimiento_virtual, tu.nombre, tp.nombre_proyecto, tp.numero_proyecto, ctd.tipo_documento, tam.numero_documento, tam.folio, tam.estatus, tpr.nombre_proyecto as nombre_proyecto_destino, tpr.numero_proyecto AS numero_proyecto_destino, tad.almacen AS almacen_destino, tam.estatus_contabilidad, tam.verificacion_archivo FROM tbl_almacen_movimientos tam LEFT JOIN tbl_almacenes ta ON ta.idtbl_almacenes = tam.tbl_almacenes_idtbl_almacenes LEFT JOIN tbl_users tu ON tu.idtbl_users = tam.tbl_users_idtbl_users LEFT JOIN tbl_proyectos tp ON tp.idtbl_proyectos = tam.tbl_proyectos_idtbl_proyectos LEFT JOIN ctl_tipo_documento ctd ON ctd.idctl_tipo_documento = tam.ctl_tipo_documento_idctl_tipo_documento LEFT JOIN tbl_proyectos tpr ON tpr.idtbl_proyectos = tam.tbl_proyectos_idtbl_proyectos_destino LEFT JOIN tbl_almacenes tad ON tad.idtbl_almacenes = tam.tbl_almacenes_idtbl_almacenes_destino LEFT JOIN ctl_autorizados_entrega cae ON cae.idctl_autorizados_entrega=tam.ctl_autorizados_entrega_idctl_autorizados_entrega LEFT JOIN tbl_usuarios tusuarios ON tusuarios.idtbl_usuarios = tam.tbl_usuarios_idtbl_usuarios LEFT JOIN tbl_segmentos_proyecto tsp ON tsp.idtbl_segmentos_proyecto = tam.tbl_segmentos_proyecto_idtbl_segmentos_proyecto WHERE (tam.uid LIKE '%$buscar%') AND tam.estatus = 1 AND tam.tbl_almacenes_idtbl_almacenes = $id $string $string2 ORDER BY tam.idtbl_almacen_movimientos DESC " . $limit);
		}else{
			$query =  $this->db->query("SELECT tsp.segmento, tam.sitio, tusuarios.nombres as recibe, tusuarios.apellido_paterno as paternorecibe, tusuarios.apellido_materno as maternorecibe, cae.nombre as entrega, tam.idtbl_almacen_movimientos, tam.tipo_movimiento, tam.fecha, tam.modificado, ta.almacen, tam.uid, tam.tipo, tam.movimiento_virtual, tu.nombre, tp.nombre_proyecto, tp.numero_proyecto, ctd.tipo_documento, tam.numero_documento, tam.folio, tam.estatus, tpr.nombre_proyecto as nombre_proyecto_destino, tpr.numero_proyecto AS numero_proyecto_destino, tad.almacen AS almacen_destino, tam.estatus_contabilidad, tam.verificacion_archivo FROM tbl_almacen_movimientos tam LEFT JOIN tbl_almacenes ta ON ta.idtbl_almacenes = tam.tbl_almacenes_idtbl_almacenes LEFT JOIN tbl_users tu ON tu.idtbl_users = tam.tbl_users_idtbl_users LEFT JOIN tbl_proyectos tp ON tp.idtbl_proyectos = tam.tbl_proyectos_idtbl_proyectos LEFT JOIN ctl_tipo_documento ctd ON ctd.idctl_tipo_documento = tam.ctl_tipo_documento_idctl_tipo_documento LEFT JOIN tbl_proyectos tpr ON tpr.idtbl_proyectos = tam.tbl_proyectos_idtbl_proyectos_destino LEFT JOIN tbl_almacenes tad ON tad.idtbl_almacenes = tam.tbl_almacenes_idtbl_almacenes_destino LEFT JOIN ctl_autorizados_entrega cae ON cae.idctl_autorizados_entrega=tam.ctl_autorizados_entrega_idctl_autorizados_entrega LEFT JOIN tbl_usuarios tusuarios ON tusuarios.idtbl_usuarios = tam.tbl_usuarios_idtbl_usuarios LEFT JOIN tbl_segmentos_proyecto tsp ON tsp.idtbl_segmentos_proyecto = tam.tbl_segmentos_proyecto_idtbl_segmentos_proyecto WHERE (tam.uid LIKE '%$buscar%') AND tam.estatus = 1 AND tam.parent IS NOT NULL AND tam.tbl_almacenes_idtbl_almacenes = $id $string $string2 ORDER BY tam.idtbl_almacen_movimientos DESC " . $limit);
		}
		return $query->result_array();
	}

	public function reporteMovTraspasosAlmacenes($id, $tipo = '', $buscar = '', $inicio = false, $cantidadRegistro = false) {
		
		$string2 = '';
		if($this->session->userdata('tipo') == 16) {
			$string2 = " AND tam.estatus_contabilidad IS NOT NULL";
		}

		if($tipo != '') {
			$string = " AND tam.tipo IN ($tipo) ";
		} else {
			$string='';
		}
		$limit = '';
		if ($inicio !== false && $cantidadRegistro !== false) {
			$limit = 'LIMIT ' . $inicio . "," . $cantidadRegistro;
		}
		if($tipo == "'entrada','entrada-almacen'"){
			$query =  $this->db->query("SELECT tsp.segmento, tam.sitio, tusuarios.nombres as recibe, tusuarios.apellido_paterno as paternorecibe, tusuarios.apellido_materno as maternorecibe, cae.nombre as entrega, tam.idtbl_almacen_movimientos, tam.tipo_movimiento, tam.fecha, tam.modificado, ta.almacen, tam.uid, tam.tipo, tam.movimiento_virtual, tu.nombre, tp.nombre_proyecto, tp.numero_proyecto, ctd.tipo_documento, tam.numero_documento, tam.folio, tam.estatus, tpr.nombre_proyecto as nombre_proyecto_destino, tpr.numero_proyecto AS numero_proyecto_destino, tad.almacen AS almacen_destino, tao.almacen AS almacen_origen, tu_aprobar.nombre AS nombre_aprobacion, tam.estatus_contabilidad, SUM(dam.cantidad) AS cantidad, SUM(dam.cantidad_anterior) AS cantidad_anterior FROM tbl_almacen_movimientos tam LEFT JOIN dtl_almacen_movimientos dam ON dam.tbl_almacen_movimientos_idtbl_almacen_movimientos = tam.idtbl_almacen_movimientos LEFT JOIN tbl_almacenes ta ON ta.idtbl_almacenes = tam.tbl_almacenes_idtbl_almacenes LEFT JOIN tbl_users tu ON tu.idtbl_users = tam.tbl_users_idtbl_users LEFT JOIN tbl_users tu_aprobar ON tu_aprobar.idtbl_users = tam.tbl_users_idtbl_users_ag LEFT JOIN tbl_proyectos tp ON tp.idtbl_proyectos = tam.tbl_proyectos_idtbl_proyectos LEFT JOIN ctl_tipo_documento ctd ON ctd.idctl_tipo_documento = tam.ctl_tipo_documento_idctl_tipo_documento LEFT JOIN tbl_proyectos tpr ON tpr.idtbl_proyectos = tam.tbl_proyectos_idtbl_proyectos_destino LEFT JOIN tbl_almacenes tad ON tad.idtbl_almacenes = tam.tbl_almacenes_idtbl_almacenes_destino LEFT JOIN tbl_almacenes tao ON tao.idtbl_almacenes = tam.tbl_almacenes_idtbl_almacenes_origen LEFT JOIN ctl_autorizados_entrega cae ON cae.idctl_autorizados_entrega=tam.ctl_autorizados_entrega_idctl_autorizados_entrega LEFT JOIN tbl_usuarios tusuarios ON tusuarios.idtbl_usuarios = tam.tbl_usuarios_idtbl_usuarios LEFT JOIN tbl_segmentos_proyecto tsp ON tsp.idtbl_segmentos_proyecto = tam.tbl_segmentos_proyecto_idtbl_segmentos_proyecto WHERE (tam.uid LIKE '%$buscar%') AND (tam.tbl_almacenes_idtbl_almacenes_origen IS NOT NULL AND tam.movimiento_virtual != 3) AND tam.tbl_almacenes_idtbl_almacenes = $id $string $string2 GROUP BY dam.tbl_almacen_movimientos_idtbl_almacen_movimientos ORDER BY tam.idtbl_almacen_movimientos DESC " . $limit);
		}elseif($tipo == "'salida-almacen'"){
			$query =  $this->db->query("SELECT tsp.segmento, tusuarios.nombres as recibe, tusuarios.apellido_paterno as paternorecibe, tusuarios.apellido_materno as maternorecibe, cae.nombre as entrega, tam.idtbl_almacen_movimientos, tam.tipo_movimiento, tam.fecha, tam.modificado, ta.almacen, tam.uid, tam.tipo, tam.movimiento_virtual, tu.nombre, tp.nombre_proyecto, tp.numero_proyecto, ctd.tipo_documento, tam.numero_documento, tam.folio, tam.estatus, tpr.nombre_proyecto as nombre_proyecto_destino, tpr.numero_proyecto AS numero_proyecto_destino, tad.almacen AS almacen_destino, tam.estatus_contabilidad, tam.verificacion_archivo, dsm.sitio FROM tbl_almacen_movimientos tam LEFT JOIN tbl_solicitud_material tsm ON tsm.idtbl_solicitud_material = tam.parent LEFT JOIN dtl_solicitud_material dsm ON dsm.tbl_solicitud_material_idtbl_solicitud_material = tsm.idtbl_solicitud_material LEFT JOIN tbl_almacenes ta ON ta.idtbl_almacenes = tam.tbl_almacenes_idtbl_almacenes LEFT JOIN tbl_users tu ON tu.idtbl_users = tam.tbl_users_idtbl_users LEFT JOIN tbl_proyectos tp ON tp.idtbl_proyectos = tam.tbl_proyectos_idtbl_proyectos LEFT JOIN ctl_tipo_documento ctd ON ctd.idctl_tipo_documento = tam.ctl_tipo_documento_idctl_tipo_documento LEFT JOIN tbl_proyectos tpr ON tpr.idtbl_proyectos = tam.tbl_proyectos_idtbl_proyectos_destino LEFT JOIN tbl_almacenes tad ON tad.idtbl_almacenes = tam.tbl_almacenes_idtbl_almacenes_destino LEFT JOIN ctl_autorizados_entrega cae ON cae.idctl_autorizados_entrega=tam.ctl_autorizados_entrega_idctl_autorizados_entrega LEFT JOIN tbl_usuarios tusuarios ON tusuarios.idtbl_usuarios = tam.tbl_usuarios_idtbl_usuarios LEFT JOIN tbl_segmentos_proyecto tsp ON tsp.idtbl_segmentos_proyecto = tam.tbl_segmentos_proyecto_idtbl_segmentos_proyecto WHERE (tam.uid LIKE '%$buscar%') AND tam.estatus = 1 AND tam.parent IS NOT NULL AND tam.tbl_almacenes_idtbl_almacenes = $id $string $string2 GROUP BY tam.idtbl_almacen_movimientos ORDER BY tam.idtbl_almacen_movimientos DESC " . $limit);
		}elseif($tipo == "'traspaso-almacen'"){
			$query =  $this->db->query("SELECT tsp.segmento, tam.sitio, tusuarios.nombres as recibe, tusuarios.apellido_paterno as paternorecibe, tusuarios.apellido_materno as maternorecibe, cae.nombre as entrega, tam.idtbl_almacen_movimientos, tam.tipo_movimiento, tam.fecha, tam.modificado, ta.almacen, tam.uid, tam.tipo, tam.movimiento_virtual, tu.nombre, tp.nombre_proyecto, tp.numero_proyecto, ctd.tipo_documento, tam.numero_documento, tam.folio, tam.estatus, tpr.nombre_proyecto as nombre_proyecto_destino, tpr.numero_proyecto AS numero_proyecto_destino, tad.almacen AS almacen_destino, tam.estatus_contabilidad, tam.verificacion_archivo FROM tbl_almacen_movimientos tam LEFT JOIN tbl_almacenes ta ON ta.idtbl_almacenes = tam.tbl_almacenes_idtbl_almacenes LEFT JOIN tbl_users tu ON tu.idtbl_users = tam.tbl_users_idtbl_users LEFT JOIN tbl_proyectos tp ON tp.idtbl_proyectos = tam.tbl_proyectos_idtbl_proyectos LEFT JOIN ctl_tipo_documento ctd ON ctd.idctl_tipo_documento = tam.ctl_tipo_documento_idctl_tipo_documento LEFT JOIN tbl_proyectos tpr ON tpr.idtbl_proyectos = tam.tbl_proyectos_idtbl_proyectos_destino LEFT JOIN tbl_almacenes tad ON tad.idtbl_almacenes = tam.tbl_almacenes_idtbl_almacenes_destino LEFT JOIN ctl_autorizados_entrega cae ON cae.idctl_autorizados_entrega=tam.ctl_autorizados_entrega_idctl_autorizados_entrega LEFT JOIN tbl_usuarios tusuarios ON tusuarios.idtbl_usuarios = tam.tbl_usuarios_idtbl_usuarios LEFT JOIN tbl_segmentos_proyecto tsp ON tsp.idtbl_segmentos_proyecto = tam.tbl_segmentos_proyecto_idtbl_segmentos_proyecto WHERE (tam.uid LIKE '%$buscar%') AND tam.estatus = 1 AND tam.tbl_almacenes_idtbl_almacenes = $id $string $string2 ORDER BY tam.idtbl_almacen_movimientos DESC " . $limit);
		}else{
			$query =  $this->db->query("SELECT tsp.segmento, tam.sitio, tusuarios.nombres as recibe, tusuarios.apellido_paterno as paternorecibe, tusuarios.apellido_materno as maternorecibe, cae.nombre as entrega, tam.idtbl_almacen_movimientos, tam.tipo_movimiento, tam.fecha, tam.modificado, ta.almacen, tam.uid, tam.tipo, tam.movimiento_virtual, tu.nombre, tp.nombre_proyecto, tp.numero_proyecto, ctd.tipo_documento, tam.numero_documento, tam.folio, tam.estatus, tpr.nombre_proyecto as nombre_proyecto_destino, tpr.numero_proyecto AS numero_proyecto_destino, tad.almacen AS almacen_destino, tam.estatus_contabilidad, tam.verificacion_archivo FROM tbl_almacen_movimientos tam LEFT JOIN tbl_almacenes ta ON ta.idtbl_almacenes = tam.tbl_almacenes_idtbl_almacenes LEFT JOIN tbl_users tu ON tu.idtbl_users = tam.tbl_users_idtbl_users LEFT JOIN tbl_proyectos tp ON tp.idtbl_proyectos = tam.tbl_proyectos_idtbl_proyectos LEFT JOIN ctl_tipo_documento ctd ON ctd.idctl_tipo_documento = tam.ctl_tipo_documento_idctl_tipo_documento LEFT JOIN tbl_proyectos tpr ON tpr.idtbl_proyectos = tam.tbl_proyectos_idtbl_proyectos_destino LEFT JOIN tbl_almacenes tad ON tad.idtbl_almacenes = tam.tbl_almacenes_idtbl_almacenes_destino LEFT JOIN ctl_autorizados_entrega cae ON cae.idctl_autorizados_entrega=tam.ctl_autorizados_entrega_idctl_autorizados_entrega LEFT JOIN tbl_usuarios tusuarios ON tusuarios.idtbl_usuarios = tam.tbl_usuarios_idtbl_usuarios LEFT JOIN tbl_segmentos_proyecto tsp ON tsp.idtbl_segmentos_proyecto = tam.tbl_segmentos_proyecto_idtbl_segmentos_proyecto WHERE (tam.uid LIKE '%$buscar%') AND tam.estatus = 1 AND tam.parent IS NOT NULL AND tam.tbl_almacenes_idtbl_almacenes = $id $string $string2 ORDER BY tam.idtbl_almacen_movimientos DESC " . $limit);
		}
		return $query->result_array();
	}

	//muestra los detalles de una entrada,salida,devolución,traspaso, esta información se muestra al seleccionar un tab al hacer click a un almacen de cliente
	public function reporteExplosionInsumos($buscar = '', $inicio = false, $cantidadRegistro = false) {
		
		if($this->session->userdata('tipo') == 1){
			$string = ' AND tbl_almacenes_idtbl_almacenes_origen = 2';
		}elseif($this->session->userdata('id') == 50){
			$string = ' AND tbl_almacenes_idtbl_almacenes_origen = 16';
		}else{
			$string = ' AND tbl_almacenes_idtbl_almacenes_origen = 1';
		}
		$string2 = '';
		$limit = '';

		if ($inicio !== false && $cantidadRegistro !== false) {
			$limit = 'LIMIT ' . $inicio . "," . $cantidadRegistro;
		}
		
			$query =  $this->db->query("SELECT tsp.segmento ,tam.sitio, tusuarios.nombres as recibe, tusuarios.apellido_paterno as paternorecibe, tusuarios.apellido_materno as maternorecibe, cae.nombre as entrega, tam.idtbl_almacen_movimientos, tam.tipo_movimiento, tam.fecha, tam.modificado, ta.almacen, tam.uid, tam.tipo, tam.movimiento_virtual, tu.nombre, tp.nombre_proyecto, tp.numero_proyecto, ctd.tipo_documento, tam.numero_documento, tam.folio, tam.estatus, tpr.nombre_proyecto as nombre_proyecto_destino, tpr.numero_proyecto AS numero_proyecto_destino, tad.almacen AS almacen_destino, tam.estatus_contabilidad, SUM(dam.cantidad) AS cantidad, SUM(dam.cantidad_anterior) AS cantidad_anterior FROM tbl_almacen_movimientos tam LEFT JOIN dtl_almacen_movimientos dam ON dam.tbl_almacen_movimientos_idtbl_almacen_movimientos = tam.idtbl_almacen_movimientos LEFT JOIN tbl_almacenes ta ON ta.idtbl_almacenes = tam.tbl_almacenes_idtbl_almacenes LEFT JOIN tbl_users tu ON tu.idtbl_users = tam.tbl_users_idtbl_users LEFT JOIN tbl_proyectos tp ON tp.idtbl_proyectos = tam.tbl_proyectos_idtbl_proyectos LEFT JOIN ctl_tipo_documento ctd ON ctd.idctl_tipo_documento = tam.ctl_tipo_documento_idctl_tipo_documento LEFT JOIN tbl_proyectos tpr ON tpr.idtbl_proyectos = tam.tbl_proyectos_idtbl_proyectos_destino LEFT JOIN tbl_almacenes tad ON tad.idtbl_almacenes = tam.tbl_almacenes_idtbl_almacenes_destino LEFT JOIN ctl_autorizados_entrega cae ON cae.idctl_autorizados_entrega=tam.ctl_autorizados_entrega_idctl_autorizados_entrega LEFT JOIN tbl_usuarios tusuarios ON tusuarios.idtbl_usuarios = tam.tbl_usuarios_idtbl_usuarios LEFT JOIN tbl_segmentos_proyecto tsp ON tsp.idtbl_segmentos_proyecto = tam.tbl_segmentos_proyecto_idtbl_segmentos_proyecto WHERE (tam.uid LIKE '%$buscar%') AND tam.movimiento_virtual = 3 $string GROUP BY dam.tbl_almacen_movimientos_idtbl_almacen_movimientos ORDER BY tam.idtbl_almacen_movimientos DESC " . $limit);
		
		return $query->result_array();
	}

	public function reporteProyectos($uid, $tipo = '', $buscar = '', $inicio = false, $cantidadRegistro = false) {
		$string = '';
		if($tipo != '') {
			$string = " AND tam.tipo IN ($tipo) ";
		}
		$limit = '';
		if ($inicio !== false && $cantidadRegistro !== false) {
			$limit = 'LIMIT ' . $inicio . "," . $cantidadRegistro;
		}
		$query =  $this->db->query("SELECT cae.nombre as entrega, tus.nombres, tus.apellido_paterno, tus.apellido_materno, tam.idtbl_almacen_movimientos, tam.fecha, ta.almacen, tam.uid, tam.tipo, tu.nombre, tp.nombre_proyecto, tam.folio, tam.movimiento_virtual, tp.numero_proyecto FROM tbl_proyectos tp LEFT JOIN tbl_almacen_movimientos tam ON tam.tbl_proyectos_idtbl_proyectos = tp.idtbl_proyectos LEFT JOIN tbl_users tu ON tu.idtbl_users = tam.tbl_users_idtbl_users LEFT JOIN tbl_almacenes ta ON ta.idtbl_almacenes = tam.tbl_almacenes_idtbl_almacenes LEFT JOIN tbl_usuarios tus ON tus.idtbl_usuarios=tam.tbl_usuarios_idtbl_usuarios LEFT JOIN ctl_autorizados_entrega cae ON cae.idctl_autorizados_entrega = tam.ctl_autorizados_entrega_idctl_autorizados_entrega WHERE (tam.uid LIKE '%$buscar%') AND tp.uid = '$uid' $string " . $limit);
		return $query->result_array();
	}
	//al hacer click en el botón del icono del ojo se muestra los productos que entraron al almacen del cliente
	public function getProductosReporte($id_almacen_movimientos) {
		$query = $this->db->query("SELECT tam.uid as uid_movimiento, tam.idtbl_almacen_movimientos, tam.movimiento_virtual, tam.tbl_almacenes_idtbl_almacenes_destino, tam.modificado, cum.unidad_medida_abr, tam.folio, cc.idctl_categorias, tam.fecha, tam.estatus, tam.tipo_movimiento, tam.sitio, tam.tbl_almacenes_idtbl_almacenes_origen AS almacen_origen, tam.idtbl_almacen_movimientos_salida, tam.idtbl_almacen_movimientos_traspaso, tusers.nombre, tusers.idtbl_users AS id_autor, tusers1.nombre AS nombre1, tp.numero_proyecto, tp.direccion, tp.nombre_proyecto, ta.idtbl_almacenes, ta.almacen, ta.uid AS uid_almacen, ta.tipo AS tipo_almacen, dam.iddtl_almacen_entradas, dam.cantidad, dam.cantidad_anterior, dam.numero_serie, dam.numero_interno, dam.nota, dam.dtl_almacen_movimientos_iddtl_almacen_movimientos, tc.descripcion, tc.modelo, tc.idtbl_catalogo, tc.neodata, dam.precio, dam.tipo_moneda, dam.tbl_almacen_movimientos_idtbl_almacen_movimientos, tam.tbl_segmentos_proyecto_idtbl_segmentos_proyecto as segmento, tam.estatus_contabilidad, tamt.uid AS uid_entrada, tam.motivo_cancelacion, tsp.segmento AS nombre_segmento, torigen.almacen AS nombre_almacen_origen FROM dtl_almacen_movimientos dam LEFT JOIN tbl_catalogo tc ON tc.idtbl_catalogo = dam.tbl_catalogo_idtbl_catalogo LEFT JOIN ctl_categorias cc ON tc.ctl_categorias_idctl_categorias = cc.idctl_categorias LEFT JOIN tbl_almacen_movimientos tam ON dam.tbl_almacen_movimientos_idtbl_almacen_movimientos = tam.idtbl_almacen_movimientos LEFT JOIN tbl_almacen_movimientos tamt ON tam.idtbl_almacen_movimientos = tamt.idtbl_almacen_movimientos_traspaso LEFT JOIN tbl_users tusers ON tusers.idtbl_users = tam.tbl_users_idtbl_users LEFT JOIN tbl_users tusers1 ON tusers1.idtbl_users = tam.tbl_users_idtbl_users_ag LEFT JOIN tbl_proyectos tp ON tp.idtbl_proyectos = tam.tbl_proyectos_idtbl_proyectos LEFT JOIN tbl_almacenes ta ON ta.idtbl_almacenes = tam.tbl_almacenes_idtbl_almacenes LEFT JOIN tbl_almacenes torigen ON torigen.idtbl_almacenes = tam.tbl_almacenes_idtbl_almacenes_origen LEFT JOIN tbl_segmentos_proyecto tsp ON tam.tbl_segmentos_proyecto_idtbl_segmentos_proyecto = tsp.idtbl_segmentos_proyecto LEFT JOIN ctl_unidades_medida cum ON tc.ctl_unidades_medida_idctl_unidades_medida = cum.idctl_unidades_medida WHERE dam.tbl_almacen_movimientos_idtbl_almacen_movimientos = $id_almacen_movimientos");
		return $query->result();
	}

	//al hacer click en el botón del icono de la i se muestra los productos que tienen diferencias
	public function getProductosInfo($id_almacen_movimientos) {
		$query = $this->db->query("SELECT tam.uid as uid_movimiento, tam.idtbl_almacen_movimientos, tam.movimiento_virtual, tam.modificado, cum.unidad_medida_abr, tam.folio, cc.idctl_categorias, tam.fecha, tam.estatus, tam.tipo_movimiento, tam.sitio, tam.tbl_almacenes_idtbl_almacenes_origen AS almacen_origen, tam.idtbl_almacen_movimientos_salida, tam.idtbl_almacen_movimientos_traspaso, tusers.nombre, tusers.idtbl_users AS id_autor, tusers1.nombre AS nombre1, tp.numero_proyecto, tp.direccion, tp.nombre_proyecto, ta.idtbl_almacenes, ta.almacen, ta.uid AS uid_almacen, ta.tipo AS tipo_almacen, dam.iddtl_almacen_entradas, dam.cantidad, dam.cantidad_anterior, dam.numero_serie, dam.numero_interno, dam.nota, tc.descripcion, tc.modelo, tc.idtbl_catalogo, tc.neodata, dam.precio, dam.tipo_moneda, dam.tbl_almacen_movimientos_idtbl_almacen_movimientos, tam.tbl_segmentos_proyecto_idtbl_segmentos_proyecto as segmento, tam.estatus_contabilidad, tam.motivo_cancelacion, tsp.segmento AS nombre_segmento, torigen.almacen AS nombre_almacen_origen FROM dtl_almacen_movimientos dam LEFT JOIN tbl_catalogo tc ON tc.idtbl_catalogo = dam.tbl_catalogo_idtbl_catalogo LEFT JOIN ctl_categorias cc ON tc.ctl_categorias_idctl_categorias = cc.idctl_categorias LEFT JOIN tbl_almacen_movimientos tam ON dam.tbl_almacen_movimientos_idtbl_almacen_movimientos = tam.idtbl_almacen_movimientos LEFT JOIN tbl_users tusers ON tusers.idtbl_users = tam.tbl_users_idtbl_users LEFT JOIN tbl_users tusers1 ON tusers1.idtbl_users = tam.tbl_users_idtbl_users_ag LEFT JOIN tbl_proyectos tp ON tp.idtbl_proyectos = tam.tbl_proyectos_idtbl_proyectos LEFT JOIN tbl_almacenes ta ON ta.idtbl_almacenes = tam.tbl_almacenes_idtbl_almacenes LEFT JOIN tbl_almacenes torigen ON torigen.idtbl_almacenes = tam.tbl_almacenes_idtbl_almacenes_origen LEFT JOIN tbl_segmentos_proyecto tsp ON tam.tbl_segmentos_proyecto_idtbl_segmentos_proyecto = tsp.idtbl_segmentos_proyecto LEFT JOIN ctl_unidades_medida cum ON tc.ctl_unidades_medida_idctl_unidades_medida = cum.idctl_unidades_medida WHERE dam.tbl_almacen_movimientos_idtbl_almacen_movimientos = $id_almacen_movimientos AND (dam.cantidad != dam.cantidad_anterior) /*OR (dam.cantidad=NULL || dam.cantidad_anterior=NULL)*/");				
		return $query->result();
	}

	public function getProductosReporteSalidas($id_almacen_movimientos, $virtual) {
		if($virtual==2){
			$query = $this->db->query("SELECT tam.uid as uid_movimiento, tam.folio, cum.unidad_medida_abr, tc.neodata, tu.nombres as nombressu, tu.apellido_paterno as paternosu, tu.apellido_materno as maternosu, cae.nombre as nombre_entrega, tam.fecha, tp.numero_proyecto, tp.direccion, tp.nombre_proyecto, dsm.cantidad, tc.descripcion, tc.modelo, tu.nombres, tu.apellido_paterno, tu.uid as uid_user, tu.apellido_materno, tam1.folio, tam1.uid, tam.verificacion_archivo, tam.tbl_almacenes_idtbl_almacenes FROM tbl_almacen_movimientos tam JOIN dtl_almacen_movimientos dsm ON dsm.tbl_almacen_movimientos_idtbl_almacen_movimientos = tam.parent LEFT JOIN  tbl_almacen_movimientos tam1 ON tam1.idtbl_almacen_movimientos = tam.parent LEFT JOIN tbl_catalogo tc ON tc.idtbl_catalogo = dsm.tbl_catalogo_idtbl_catalogo LEFT JOIN tbl_usuarios tu ON tu.idtbl_usuarios = tam.tbl_usuarios_idtbl_usuarios LEFT JOIN tbl_proyectos tp ON tam.tbl_proyectos_idtbl_proyectos = tp.idtbl_proyectos LEFT JOIN ctl_autorizados_entrega cae ON cae.idctl_autorizados_entrega = tam.ctl_autorizados_entrega_idctl_autorizados_entrega LEFT JOIN ctl_unidades_medida cum ON tc.ctl_unidades_medida_idctl_unidades_medida = cum.idctl_unidades_medida WHERE tam.idtbl_almacen_movimientos = $id_almacen_movimientos");
		}else if($virtual==1){
			$query = $this->db->query("SELECT tam.uid as uid_movimiento, tam.folio, cum.unidad_medida_abr, tc.neodata, tu.nombres as nombressu, tu.apellido_paterno as paternosu, tu.apellido_materno as maternosu, cae.nombre as nombre_entrega, tam.fecha, tp.numero_proyecto, tp.direccion, tp.nombre_proyecto, dsm.cantidad, dsm.entregado, tc.descripcion, tc.modelo, tu.nombres, tu.apellido_paterno, tu.uid as uid_user, tu.apellido_materno, tam.verificacion_archivo, tam.tbl_almacenes_idtbl_almacenes FROM tbl_almacen_movimientos tam LEFT JOIN tbl_pedidos tsm ON tsm.idtbl_pedidos = tam.parent LEFT JOIN dtl_pedido_catalogo dsm ON dsm.tbl_pedidos_idtbl_pedidos = tsm.idtbl_pedidos LEFT JOIN tbl_catalogo tc ON tc.idtbl_catalogo = dsm.tbl_catalogo_idtbl_catalogo LEFT JOIN tbl_usuarios tu ON tu.idtbl_usuarios = tam.tbl_usuarios_idtbl_usuarios LEFT JOIN tbl_users tusone ON tusone.idtbl_users = tsm.tbl_users_idtbl_users LEFT JOIN tbl_users tustwo ON tustwo.idtbl_users = tsm.tbl_users_idtbl_users LEFT JOIN tbl_users tusthree ON tusthree.idtbl_users = tsm.tbl_users_idtbl_users LEFT JOIN tbl_users tusfour ON tusfour.idtbl_users = tsm.tbl_users_idtbl_users LEFT JOIN tbl_proyectos tp ON tam.tbl_proyectos_idtbl_proyectos = tp.idtbl_proyectos LEFT JOIN ctl_autorizados_entrega cae ON cae.idctl_autorizados_entrega = tam.ctl_autorizados_entrega_idctl_autorizados_entrega LEFT JOIN ctl_unidades_medida cum ON tc.ctl_unidades_medida_idctl_unidades_medida = cum.idctl_unidades_medida WHERE tam.idtbl_almacen_movimientos = $id_almacen_movimientos");
		} else if($virtual == 0 && $this->session->userdata('tipo') == 14){
			$query = $this->db->query("SELECT dtl_asignacion.*, dtl_almacen.*, tbl_catalogo.neodata, tbl_catalogo.descripcion, tbl_catalogo.uid as uid_producto, tbl_catalogo.marca, tbl_catalogo.modelo, ctl_unidades_medida.*, ctl_unidades_medida.*, ctl_categorias.*, tbl_almacen_movimientos.*, tbl_almacen_movimientos.uid as uid_movimiento, tbl_usuarios.*, tbl_usuarios.uid as uid_user, tbl_users.*, tbl_proyectos.*, tbl_almacenes.* FROM dtl_asignacion LEFT JOIN dtl_almacen ON dtl_asignacion.dtl_almacen_iddtl_almacen=dtl_almacen.iddtl_almacen LEFT JOIN tbl_catalogo ON tbl_catalogo.idtbl_catalogo=dtl_almacen.tbl_catalogo_idtbl_catalogo LEFT JOIN ctl_unidades_medida ON tbl_catalogo.ctl_unidades_medida_idctl_unidades_medida=ctl_unidades_medida.idctl_unidades_medida LEFT JOIN ctl_categorias ON tbl_catalogo.ctl_categorias_idctl_categorias=ctl_categorias.idctl_categorias LEFT JOIN tbl_almacen_movimientos ON tbl_almacen_movimientos.idtbl_almacen_movimientos=dtl_asignacion.tbl_almacen_movimientos_idtbl_almacen_movimientos LEFT JOIN tbl_usuarios ON tbl_almacen_movimientos.tbl_usuarios_idtbl_usuarios=tbl_usuarios.idtbl_usuarios LEFT JOIN tbl_users ON tbl_almacen_movimientos.tbl_users_idtbl_users=tbl_users.idtbl_users LEFT JOIN tbl_proyectos ON tbl_almacen_movimientos.tbl_proyectos_idtbl_proyectos=tbl_proyectos.idtbl_proyectos LEFT JOIN tbl_almacenes ON tbl_almacen_movimientos.tbl_almacenes_idtbl_almacenes=tbl_almacenes.idtbl_almacenes WHERE tbl_almacen_movimientos.idtbl_almacen_movimientos =  $id_almacen_movimientos");
		}else{
			$query = $this->db->query("SELECT tam.uid as uid_movimiento, tam.folio, tsm.activo_fijo, tsm.uid AS uid_solicitud, cum.unidad_medida_abr, tc.neodata, tu.nombres as nombressu, tu.apellido_paterno as paternosu, tu.apellido_materno as maternosu, tcc.nombre_comercial as nombrecon, cae.nombre as nombre_entrega, tam.fecha, tp.numero_proyecto, tp.direccion, tp.nombre_proyecto, tsp.segmento, tsp.direccion AS direccion_segmento, dsm.cantidad, dsm.entregado, tc.descripcion, tc.modelo, tu.nombres, tu.apellido_paterno, tu.uid as uid_user, tu.apellido_materno, tusone.nombre as nombre_autor, tustwo.nombre as nombre_autorizacion, tusthree.nombre as nombre_co, tusfour.nombre as nombre_ag, tam.verificacion_archivo, tam.tbl_almacenes_idtbl_almacenes FROM tbl_almacen_movimientos tam LEFT JOIN tbl_segmentos_proyecto tsp ON tsp.idtbl_segmentos_proyecto = tam.tbl_segmentos_proyecto_idtbl_segmentos_proyecto LEFT JOIN tbl_solicitud_material tsm ON tsm.idtbl_solicitud_material = tam.parent LEFT JOIN dtl_solicitud_material dsm ON dsm.tbl_solicitud_material_idtbl_solicitud_material = tsm.idtbl_solicitud_material LEFT JOIN tbl_catalogo tc ON tc.idtbl_catalogo = dsm.tbl_catalogo_idtbl_catalogo LEFT JOIN tbl_usuarios tu ON tu.idtbl_usuarios = tam.tbl_usuarios_idtbl_usuarios LEFT JOIN tbl_users tusone ON tusone.idtbl_users = tsm.tbl_users_idtbl_users_autor LEFT JOIN tbl_users tustwo ON tustwo.idtbl_users = tsm.tbl_users_idtbl_users_aprobacion LEFT JOIN tbl_users tusthree ON tusthree.idtbl_users = tsm.tbl_users_idtbl_users_co LEFT JOIN tbl_users tusfour ON tusfour.idtbl_users = tsm.tbl_users_idtbl_users_ag LEFT JOIN tbl_proyectos tp ON tam.tbl_proyectos_idtbl_proyectos = tp.idtbl_proyectos LEFT JOIN ctl_autorizados_entrega cae ON cae.idctl_autorizados_entrega = tam.ctl_autorizados_entrega_idctl_autorizados_entrega LEFT JOIN tbl_contratistas tcc ON tsm.tbl_contratistas_idtbl_contratistas = tcc.idtbl_contratistas LEFT JOIN ctl_unidades_medida cum ON tc.ctl_unidades_medida_idctl_unidades_medida = cum.idctl_unidades_medida WHERE tam.idtbl_almacen_movimientos = $id_almacen_movimientos");
		}		
		return $query->result();
	}

	public function getProductosReporteDevoluciones($id_almacen_movimientos) {
		$query = $this->db->query("SELECT urecibe.nombre as user_recibe, cum.unidad_medida_abr, tcc.nombre_comercial, tuse.nombre as nombre_aprobacion, tuses.nombres as nombre_supervisor, tuses.apellido_paterno as paternosu, tuses.apellido_materno as maternosu, tus.nombre as nombre_ag, cae.nombre as autorizado_nombre, tusers.nombre as nombre_autor, tp.numero_proyecto, tp.nombre_proyecto, tam.folio, tam.fecha, tam.uid as uid_movimiento, tu.nombres, tu.apellido_paterno, tu.apellido_materno, tu.uid as uidentrega, dsd.cantidad, dsd.entregado, dsd.estado, dsd.observaciones, tc.descripcion, tc.modelo, tc.neodata FROM tbl_almacen_movimientos tam LEFT JOIN tbl_solicitud_devolucion tsd ON tsd.idtbl_solicitud_devolucion = tam.parent LEFT JOIN dtl_solicitud_devolucion dsd ON dsd.tbl_solicitud_devolucion_idtbl_solicitud_devolucion = tsd.idtbl_solicitud_devolucion LEFT JOIN tbl_catalogo tc ON tc.idtbl_catalogo = dsd.tbl_catalogo_idtbl_catalogo LEFT JOIN tbl_usuarios tu ON tu.idtbl_usuarios = tam.tbl_usuarios_idtbl_usuarios LEFT JOIN tbl_proyectos tp ON tp.idtbl_proyectos = tam.tbl_proyectos_idtbl_proyectos LEFT JOIN tbl_users tusers ON tusers.idtbl_users = tsd.tbl_users_idtbl_users_autor LEFT JOIN ctl_autorizados_entrega cae ON cae.idctl_autorizados_entrega = tam.ctl_autorizados_entrega_idctl_autorizados_entrega LEFT JOIN tbl_users tus ON tus.idtbl_users = tsd.tbl_users_idtbl_users_ag LEFT JOIN tbl_users tuse ON tuse.idtbl_users = tsd.tbl_users_idtbl_users_aprobacion LEFT JOIN tbl_usuarios tuses ON tuses.idtbl_usuarios = tsd.tbl_usuarios_idtbl_usuarios_supervisor LEFT JOIN tbl_contratistas tcc ON tcc.idtbl_contratistas = tsd.tbl_contratistas_idtbl_contratistas LEFT JOIN ctl_unidades_medida cum ON tc.ctl_unidades_medida_idctl_unidades_medida = cum.idctl_unidades_medida LEFT JOIN tbl_users urecibe ON urecibe.idtbl_users = tam.tbl_users_idtbl_users WHERE tam.idtbl_almacen_movimientos = $id_almacen_movimientos");
		return $query->result();
	}

	public function getProductosReporteTraspaso($id_almacen_movimientos) {
		$query = $this->db->query("SELECT tam.idtbl_almacen_movimientos as id_movimiento, tam.tbl_almacenes_idtbl_almacenes, cum.unidad_medida_abr, tpp.numero_proyecto as numero_destino, tpp.nombre_proyecto as nombre_destino, tam.folio, tam.fecha, tusers.nombre, tp.numero_proyecto, tp.direccion, tp.nombre_proyecto, ta.almacen, dam.cantidad, tc.descripcion, dam.numero_serie, dam.numero_interno, tc.neodata, tc.modelo, dam.precio, dam.tipo_moneda, dam.tbl_almacen_movimientos_idtbl_almacen_movimientos, tam.tbl_segmentos_proyecto_idtbl_segmentos_proyecto as segmento, tad.almacen AS almacen_destino  FROM dtl_almacen_movimientos dam LEFT JOIN tbl_catalogo tc ON tc.idtbl_catalogo = dam.tbl_catalogo_idtbl_catalogo LEFT JOIN tbl_almacen_movimientos tam ON dam.tbl_almacen_movimientos_idtbl_almacen_movimientos = tam.idtbl_almacen_movimientos LEFT JOIN tbl_users tusers ON tusers.idtbl_users = tam.tbl_users_idtbl_users LEFT JOIN tbl_proyectos tp ON tp.idtbl_proyectos = tam.tbl_proyectos_idtbl_proyectos LEFT JOIN tbl_almacenes ta ON ta.idtbl_almacenes = tam.tbl_almacenes_idtbl_almacenes LEFT JOIN tbl_almacenes tad ON tad.idtbl_almacenes = tam.tbl_almacenes_idtbl_almacenes_destino LEFT JOIN tbl_proyectos tpp ON tam.tbl_proyectos_idtbl_proyectos_destino = tpp.idtbl_proyectos LEFT JOIN ctl_unidades_medida cum ON tc.ctl_unidades_medida_idctl_unidades_medida = cum.idctl_unidades_medida WHERE dam.tbl_almacen_movimientos_idtbl_almacen_movimientos = $id_almacen_movimientos");
		return $query->result();
	}

	//obtiene todas las entradas del almacen general
	public function entradasAlmacenGeneral($id_almacen_general, $buscar = '', $inicio = false, $cantidadRegistro = false) {
		$limit = '';
		if ($inicio !== false && $cantidadRegistro !== false) {
			$limit = 'LIMIT ' . $inicio . "," . $cantidadRegistro;
		}
		$query = $this->db->query("SELECT tam.idtbl_almacen_movimientos, tam.uid, tam.fecha, ctd.tipo_documento, tam.numero_documento, tu.nombre, tam.folio, tp.nombre_proyecto, tp.numero_proyecto, tped.neodata_pedido, tped.tbl_proveedores_idtbl_proveedores, tpro.nombre_fiscal, dam.cantidad, dam.precio, tc.descripcion FROM tbl_almacen_movimientos tam LEFT JOIN ctl_tipo_documento ctd ON ctd.idctl_tipo_documento = tam.ctl_tipo_documento_idctl_tipo_documento LEFT JOIN tbl_users tu ON tu.idtbl_users = tam.tbl_users_idtbl_users LEFT JOIN tbl_proyectos tp ON tp.idtbl_proyectos = tam.tbl_proyectos_idtbl_proyectos LEFT JOIN dtl_almacen_movimientos dam ON dam.tbl_almacen_movimientos_idtbl_almacen_movimientos = tam.idtbl_almacen_movimientos LEFT JOIN tbl_catalogo tc ON tc.idtbl_catalogo = dam.tbl_catalogo_idtbl_catalogo LEFT JOIN tbl_pedidos tped ON tped.idtbl_pedidos = tam.parent LEFT JOIN tbl_proveedores tpro ON tpro.idtbl_proveedores = tped.tbl_proveedores_idtbl_proveedores WHERE tam.tbl_almacenes_idtbl_almacenes = $id_almacen_general AND tam.tipo = 'entrada-almacen' AND (tam.uid LIKE '$buscar%' OR tam.folio LIKE '$buscar%' OR tam.fecha LIKE '$buscar%' OR tu.nombre LIKE '$buscar%' OR tped.neodata_pedido LIKE '%$buscar%' OR tpro.nombre_fiscal LIKE '%$buscar%' OR tp.nombre_proyecto LIKE '$buscar%' OR ctd.tipo_documento LIKE '$buscar%') GROUP BY tam.uid ORDER BY tam.folio DESC " . $limit);
		return $query->result();
	}

	//obtiene todas las salidas del almacen general
	public function salidasAlmacenGeneral($id_almacen_general, $buscar = '', $inicio = false, $cantidadRegistro = false) {
		$limit = '';
		if ($inicio !== false && $cantidadRegistro !== false) {
			$limit = 'LIMIT ' . $inicio . "," . $cantidadRegistro;
		}
		$query = $this->db->query("SELECT cae.nombre as entrega, tam.uid, tam.movimiento_virtual, tam.idtbl_almacen_movimientos, tam.fecha, tusers.nombre, tusuarios.nombres, tusuarios.apellido_paterno, tusuarios.apellido_materno, tam.folio, tp.nombre_proyecto, tp.numero_proyecto, dsm.cantidad, dsm.entregado, tc.descripcion, tam.verificacion_archivo FROM tbl_almacen_movimientos tam LEFT JOIN tbl_users tusers ON tusers.idtbl_users = tam.tbl_users_idtbl_users LEFT JOIN tbl_usuarios tusuarios ON tusuarios.idtbl_usuarios = tam.tbl_usuarios_idtbl_usuarios LEFT JOIN tbl_proyectos tp ON tp.idtbl_proyectos = tam.tbl_proyectos_idtbl_proyectos LEFT JOIN tbl_solicitud_material tsm ON tsm.idtbl_solicitud_material = tam.parent LEFT JOIN dtl_solicitud_material dsm ON dsm.tbl_solicitud_material_idtbl_solicitud_material = tsm.idtbl_solicitud_material LEFT JOIN tbl_catalogo tc ON tc.idtbl_catalogo = dsm.tbl_catalogo_idtbl_catalogo LEFT JOIN ctl_autorizados_entrega cae ON cae.idctl_autorizados_entrega=tam.ctl_autorizados_entrega_idctl_autorizados_entrega WHERE tam.tbl_almacenes_idtbl_almacenes = $id_almacen_general AND tam.tipo = 'salida-almacen' AND (tam.uid LIKE '$buscar%' OR tam.folio LIKE '$buscar%' OR tam.fecha LIKE '$buscar%' OR cae.nombre LIKE '$buscar%' OR tusuarios.nombres LIKE '$buscar%' OR tusuarios.apellido_paterno LIKE '$buscar%' OR tusuarios.apellido_materno LIKE '$buscar%' OR tp.nombre_proyecto LIKE '$buscar%') GROUP BY tam.uid ORDER BY tam.folio DESC " . $limit);
		return $query->result();
	}

	//obtiene todas las salidas de contratistas
	public function salidasContratistas($buscar = '', $inicio = false, $cantidadRegistro = false) {
		$limit = '';
		if ($inicio !== false && $cantidadRegistro !== false) {
			$limit = 'LIMIT ' . $inicio . "," . $cantidadRegistro;
		}
		$query = $this->db->query("SELECT cae.nombre as entrega, tam.uid, tam.movimiento_virtual, tam.idtbl_almacen_movimientos, tam.fecha, tusers.nombre, tusuarios.nombres, tusuarios.apellido_paterno, tusuarios.apellido_materno, tam.folio, tp.nombre_proyecto, tp.numero_proyecto, dsm.cantidad, dsm.entregado, tc.descripcion, tam.verificacion_archivo, tcs.nombre_comercial FROM tbl_almacen_movimientos tam LEFT JOIN tbl_users tusers ON tusers.idtbl_users = tam.tbl_users_idtbl_users LEFT JOIN tbl_usuarios tusuarios ON tusuarios.idtbl_usuarios = tam.tbl_usuarios_idtbl_usuarios LEFT JOIN tbl_proyectos tp ON tp.idtbl_proyectos = tam.tbl_proyectos_idtbl_proyectos LEFT JOIN tbl_solicitud_material tsm ON tsm.idtbl_solicitud_material = tam.parent LEFT JOIN dtl_solicitud_material dsm ON dsm.tbl_solicitud_material_idtbl_solicitud_material = tsm.idtbl_solicitud_material LEFT JOIN tbl_catalogo tc ON tc.idtbl_catalogo = dsm.tbl_catalogo_idtbl_catalogo LEFT JOIN tbl_contratistas tcs ON tcs.idtbl_contratistas = tsm.tbl_contratistas_idtbl_contratistas LEFT JOIN ctl_autorizados_entrega cae ON cae.idctl_autorizados_entrega=tam.ctl_autorizados_entrega_idctl_autorizados_entrega WHERE tsm.tbl_contratistas_idtbl_contratistas IS NOT NULL AND tam.tipo = 'salida-almacen' AND (tam.uid LIKE '$buscar%' OR tam.folio LIKE '$buscar%' OR tam.fecha LIKE '$buscar%' OR cae.nombre LIKE '$buscar%' OR tusuarios.nombres LIKE '$buscar%' OR tusuarios.apellido_paterno LIKE '$buscar%' OR tusuarios.apellido_materno LIKE '$buscar%' OR tp.nombre_proyecto LIKE '%$buscar%' OR tcs.nombre_comercial LIKE '%$buscar%') GROUP BY tam.uid ORDER BY tam.folio DESC " . $limit);
		return $query->result();
	}

	//obtiene todas las devoluciones de almacen de contratistas
	public function devolucionesContratistas($buscar = '', $inicio = false, $cantidadRegistro = false) {
		$limit = '';
		if ($inicio !== false && $cantidadRegistro !== false) {
			$limit = 'LIMIT ' . $inicio . "," . $cantidadRegistro;
		}
		$query = $this->db->query("SELECT cae.nombre as entrega, tam.uid, tam.movimiento_virtual, tam.idtbl_almacen_movimientos, tam.fecha, tusers.nombre, tusuarios.nombres, tusuarios.apellido_paterno, tusuarios.apellido_materno, tam.folio, tp.nombre_proyecto, tp.numero_proyecto, dsm.cantidad, dsm.entregado, tc.descripcion, tam.verificacion_archivo, tcs.nombre_comercial FROM tbl_almacen_movimientos tam LEFT JOIN tbl_users tusers ON tusers.idtbl_users = tam.tbl_users_idtbl_users LEFT JOIN tbl_usuarios tusuarios ON tusuarios.idtbl_usuarios = tam.tbl_usuarios_idtbl_usuarios LEFT JOIN tbl_proyectos tp ON tp.idtbl_proyectos = tam.tbl_proyectos_idtbl_proyectos LEFT JOIN tbl_solicitud_material tsm ON tsm.idtbl_solicitud_material = tam.parent LEFT JOIN dtl_solicitud_material dsm ON dsm.tbl_solicitud_material_idtbl_solicitud_material = tsm.idtbl_solicitud_material LEFT JOIN tbl_catalogo tc ON tc.idtbl_catalogo = dsm.tbl_catalogo_idtbl_catalogo LEFT JOIN tbl_contratistas tcs ON tcs.idtbl_contratistas = tsm.tbl_contratistas_idtbl_contratistas LEFT JOIN ctl_autorizados_entrega cae ON cae.idctl_autorizados_entrega=tam.ctl_autorizados_entrega_idctl_autorizados_entrega WHERE tsm.tbl_contratistas_idtbl_contratistas IS NOT NULL AND tam.tipo = 'devolucion-almacen' AND (tam.uid LIKE '$buscar%' OR tam.folio LIKE '$buscar%' OR tam.fecha LIKE '$buscar%' OR cae.nombre LIKE '$buscar%' OR tusuarios.nombres LIKE '$buscar%' OR tusuarios.apellido_paterno LIKE '$buscar%' OR tusuarios.apellido_materno LIKE '$buscar%' OR tp.nombre_proyecto LIKE '%$buscar%' OR tcs.nombre_comercial LIKE '%$buscar%') GROUP BY tam.uid ORDER BY tam.folio DESC " . $limit);
		return $query->result();
	}

	//obtiene todas las devoluciones del almacen general
	public function devolucionesAlmacenGeneral($id_almacen_general, $buscar = '', $inicio = false, $cantidadRegistro = false) {
		$limit = '';
		if ($inicio !== false && $cantidadRegistro !== false) {
			$limit = 'LIMIT ' . $inicio . "," . $cantidadRegistro;
		}
		$query = $this->db->query("SELECT cae.nombre as entrega, tam.uid, tam.idtbl_almacen_movimientos, tam.fecha, tusers.nombre, tusuarios.nombres, tusuarios.apellido_paterno, tusuarios.apellido_materno, tam.folio, tp.nombre_proyecto, tp.numero_proyecto, dsm.cantidad, dsm.entregado, tc.descripcion FROM tbl_almacen_movimientos tam LEFT JOIN tbl_users tusers ON tusers.idtbl_users = tam.tbl_users_idtbl_users LEFT JOIN tbl_usuarios tusuarios ON tusuarios.idtbl_usuarios = tam.tbl_usuarios_idtbl_usuarios LEFT JOIN tbl_proyectos tp ON tp.idtbl_proyectos = tam.tbl_proyectos_idtbl_proyectos JOIN tbl_solicitud_material tsm ON tsm.idtbl_solicitud_material = tam.parent LEFT JOIN dtl_solicitud_material dsm ON dsm.tbl_solicitud_material_idtbl_solicitud_material = tsm.idtbl_solicitud_material LEFT JOIN tbl_catalogo tc ON tc.idtbl_catalogo = dsm.tbl_catalogo_idtbl_catalogo LEFT JOIN ctl_autorizados_entrega cae ON cae.idctl_autorizados_entrega=tam.ctl_autorizados_entrega_idctl_autorizados_entrega WHERE tam.tbl_almacenes_idtbl_almacenes = $id_almacen_general AND tam.tipo = 'devolucion-almacen' AND (tam.uid LIKE '$buscar%' OR tam.folio LIKE '$buscar%' OR tam.fecha LIKE '$buscar%' OR cae.nombre LIKE '$buscar%' OR tusuarios.nombres LIKE '$buscar%' OR tusuarios.apellido_paterno LIKE '$buscar%' OR tusuarios.apellido_materno LIKE '$buscar%' OR tp.nombre_proyecto LIKE '$buscar%') GROUP BY tam.uid ORDER BY tam.folio DESC " . $limit);
		return $query->result();
	}


	public function devolucionesSeguridadHigiene($id_almacen_general, $buscar = '', $inicio = false, $cantidadRegistro = false) {
		$limit = '';
		if ($inicio !== false && $cantidadRegistro !== false) {
			$limit = 'LIMIT ' . $inicio . "," . $cantidadRegistro;
		}
		$query = $this->db->query("SELECT cae.nombre as entrega, tam.uid, tam.idtbl_almacen_movimientos, tam.fecha, tusers.nombre, tusuarios.nombres, tusuarios.apellido_paterno, tusuarios.apellido_materno, tam.folio, tp.nombre_proyecto, tp.numero_proyecto, dsm.cantidad, dsm.entregado, tc.descripcion FROM tbl_almacen_movimientos tam LEFT JOIN tbl_users tusers ON tusers.idtbl_users = tam.tbl_users_idtbl_users LEFT JOIN tbl_usuarios tusuarios ON tusuarios.idtbl_usuarios = tam.tbl_usuarios_idtbl_usuarios LEFT JOIN tbl_proyectos tp ON tp.idtbl_proyectos = tam.tbl_proyectos_idtbl_proyectos JOIN tbl_solicitud_material tsm ON tsm.idtbl_solicitud_material = tam.parent LEFT JOIN dtl_solicitud_material dsm ON dsm.tbl_solicitud_material_idtbl_solicitud_material = tsm.idtbl_solicitud_material LEFT JOIN tbl_catalogo tc ON tc.idtbl_catalogo = dsm.tbl_catalogo_idtbl_catalogo LEFT JOIN ctl_autorizados_entrega cae ON cae.idctl_autorizados_entrega=tam.ctl_autorizados_entrega_idctl_autorizados_entrega WHERE tam.tbl_almacenes_idtbl_almacenes = $id_almacen_general AND tam.tipo = 'devolucion-almacen' AND (tam.uid LIKE '$buscar%' OR tam.folio LIKE '$buscar%' OR tam.fecha LIKE '$buscar%' OR cae.nombre LIKE '$buscar%' OR tusuarios.nombres LIKE '$buscar%' OR tusuarios.apellido_paterno LIKE '$buscar%' OR tusuarios.apellido_materno LIKE '$buscar%' OR tp.nombre_proyecto LIKE '$buscar%') GROUP BY tam.uid ORDER BY tam.folio DESC " . $limit);
		return $query->result();
	}


	/**
	 * Devoluciones
	 **/
	public function solicitudes_devoluciones($buscar = '', $buscar2 = '', $inicio = false, $cantidadRegistro = false) {
		$autor = $this->session->userdata('id');
		$limit = '';
		if ($inicio !== false && $cantidadRegistro !== false) {
			$limit = 'LIMIT ' . $inicio . "," . $cantidadRegistro;
		}		
		if ($buscar2 == '') {
			$status = "";
		}
		if ($buscar2 != '') {
			$status = "AND (tbl_solicitud_devolucion.estatus_solicitud = '$buscar2')";
		}
		$string = "";
		if ($this->session->userdata('id') == 50) {
			$string = "user_autor.idtbl_users = " . $this->session->userdata('id') . " AND ";
			$query = $this->db->query("SELECT tbl_proyectos.nombre_proyecto, tbl_proyectos.numero_proyecto, tbl_solicitud_devolucion.*, user_autor.nombre as user_autor, user_aprobacion.nombre as user_aprobacion, user_ag.nombre as user_almacen_general, CONCAT(tbl_usuarios.nombres,' ',tbl_usuarios.apellido_paterno,' ',tbl_usuarios.apellido_materno) as recibe FROM tbl_solicitud_devolucion LEFT JOIN tbl_users as user_ag ON user_ag.idtbl_users = tbl_solicitud_devolucion.tbl_users_idtbl_users_aprobar_ag LEFT JOIN tbl_proyectos ON tbl_solicitud_devolucion.tbl_proyectos_idtbl_proyectos=tbl_proyectos.idtbl_proyectos LEFT JOIN tbl_users as user_autor ON tbl_solicitud_devolucion.tbl_users_idtbl_users_autor=user_autor.idtbl_users LEFT JOIN tbl_users as user_aprobacion ON tbl_solicitud_devolucion.tbl_users_idtbl_users_aprobacion=user_aprobacion.idtbl_users LEFT JOIN tbl_usuarios ON tbl_solicitud_devolucion.tbl_usuarios_idtbl_usuarios=tbl_usuarios.idtbl_usuarios WHERE (tbl_solicitud_devolucion.uid LIKE '%$buscar%' OR tbl_solicitud_devolucion.fecha_creacion LIKE '%$buscar%' OR tbl_proyectos.numero_proyecto LIKE '%$buscar%' OR user_autor.nombre LIKE '%$buscar%' OR user_aprobacion.nombre LIKE '%$buscar%' OR user_ag.nombre LIKE '%$buscar%' OR CONCAT(tbl_usuarios.nombres,' ',tbl_usuarios.apellido_paterno,' ',tbl_usuarios.apellido_materno) LIKE '%$buscar%') AND " . $string . "tbl_solicitud_devolucion.tipo_devolucion = 'Almacen General' ". $status ." ORDER BY tbl_solicitud_devolucion.idtbl_solicitud_devolucion DESC " . $limit);
		}
		elseif (($this->session->userdata('tipo') == 4 || $this->session->userdata('tipo') == 6) && !isset($_SESSION['tipo_anterior'])) {
			$id_almacenes = '';
			$almacenes_encargados = $this->db->query("SELECT tbl_almacenes.tbl_proyectos_idtbl_proyectos FROM tbl_encargado_almacen JOIN tbl_almacenes ON tbl_almacenes.idtbl_almacenes = tbl_encargado_almacen.tbl_almacenes_idtbl_almacenes GROUP BY tbl_almacenes.tbl_proyectos_idtbl_proyectos");
			foreach($almacenes_encargados->result() AS $key => $value){
                if (isset($almacenes_encargados->result()[$key+1]->tbl_proyectos_idtbl_proyectos)) {
                    $id_almacenes .= $value->tbl_proyectos_idtbl_proyectos.', ';
                }else{
					$id_almacenes .= $value->tbl_proyectos_idtbl_proyectos;
				}
			}
			if($id_almacenes != ''){
				$not_in = "NOT IN ($id_almacenes)";
			}else{
				$not_in = '';
			}
			$string = "";
			$query = $this->db->query("SELECT tbl_proyectos.nombre_proyecto, tbl_proyectos.numero_proyecto, tbl_solicitud_devolucion.*, user_autor.nombre as user_autor, user_aprobacion.nombre as user_aprobacion, user_ag.nombre as user_almacen_general, CONCAT(tbl_usuarios.nombres,' ',tbl_usuarios.apellido_paterno,' ',tbl_usuarios.apellido_materno) as recibe FROM tbl_solicitud_devolucion LEFT JOIN tbl_users as user_ag ON user_ag.idtbl_users = tbl_solicitud_devolucion.tbl_users_idtbl_users_aprobar_ag LEFT JOIN tbl_proyectos ON tbl_solicitud_devolucion.tbl_proyectos_idtbl_proyectos=tbl_proyectos.idtbl_proyectos LEFT JOIN tbl_users as user_autor ON tbl_solicitud_devolucion.tbl_users_idtbl_users_autor=user_autor.idtbl_users LEFT JOIN tbl_users as user_aprobacion ON tbl_solicitud_devolucion.tbl_users_idtbl_users_aprobacion=user_aprobacion.idtbl_users LEFT JOIN tbl_usuarios ON tbl_solicitud_devolucion.tbl_usuarios_idtbl_usuarios=tbl_usuarios.idtbl_usuarios WHERE (tbl_solicitud_devolucion.uid LIKE '%$buscar%' OR tbl_solicitud_devolucion.fecha_creacion LIKE '%$buscar%' OR tbl_proyectos.numero_proyecto LIKE '%$buscar%' OR user_autor.nombre LIKE '%$buscar%' OR user_aprobacion.nombre LIKE '%$buscar%' OR user_ag.nombre LIKE '%$buscar%' OR CONCAT(tbl_usuarios.nombres,' ',tbl_usuarios.apellido_paterno,' ',tbl_usuarios.apellido_materno) LIKE '%$buscar%') AND (tbl_solicitud_devolucion.tbl_proyectos_idtbl_proyectos $not_in OR tbl_solicitud_devolucion.tipo_almacen = 'AG') AND " . $string . "tbl_solicitud_devolucion.tipo_devolucion = 'Almacen General' ". $status ." ORDER BY tbl_solicitud_devolucion.idtbl_solicitud_devolucion DESC " . $limit);
		}
		elseif ($this->session->userdata('tipo') == 5 || $this->session->userdata('tipo') == 10) {
			$string = "user_autor.idtbl_users = " . $this->session->userdata('id') . " AND ";
			$query = $this->db->query("SELECT tbl_proyectos.nombre_proyecto, tbl_proyectos.numero_proyecto, tbl_solicitud_devolucion.*, user_autor.nombre as user_autor, user_aprobacion.nombre as user_aprobacion, user_ag.nombre as user_almacen_general, CONCAT(tbl_usuarios.nombres,' ',tbl_usuarios.apellido_paterno,' ',tbl_usuarios.apellido_materno) as recibe FROM tbl_solicitud_devolucion LEFT JOIN tbl_users as user_ag ON user_ag.idtbl_users = tbl_solicitud_devolucion.tbl_users_idtbl_users_aprobar_ag LEFT JOIN tbl_proyectos ON tbl_solicitud_devolucion.tbl_proyectos_idtbl_proyectos=tbl_proyectos.idtbl_proyectos LEFT JOIN tbl_users as user_autor ON tbl_solicitud_devolucion.tbl_users_idtbl_users_autor=user_autor.idtbl_users LEFT JOIN tbl_users as user_aprobacion ON tbl_solicitud_devolucion.tbl_users_idtbl_users_aprobacion=user_aprobacion.idtbl_users LEFT JOIN tbl_usuarios ON tbl_solicitud_devolucion.tbl_usuarios_idtbl_usuarios=tbl_usuarios.idtbl_usuarios WHERE (tbl_solicitud_devolucion.uid LIKE '%$buscar%' OR tbl_solicitud_devolucion.fecha_creacion LIKE '%$buscar%' OR tbl_proyectos.numero_proyecto LIKE '%$buscar%' OR user_autor.nombre LIKE '%$buscar%' OR user_aprobacion.nombre LIKE '%$buscar%' OR user_ag.nombre LIKE '%$buscar%' OR CONCAT(tbl_usuarios.nombres,' ',tbl_usuarios.apellido_paterno,' ',tbl_usuarios.apellido_materno) LIKE '%$buscar%') AND " . $string . "tbl_solicitud_devolucion.tipo_devolucion = 'Almacen General' ". $status ." ORDER BY tbl_solicitud_devolucion.idtbl_solicitud_devolucion DESC " . $limit);
		}
		elseif($this->session->userdata('encargado_almacen') != null && $this->session->userdata('encargado_almacen') != '') {
			$id_almacenes = '';
			$string = "user_autor.idtbl_users = " . $this->session->userdata('id');
			$usuario = $this->session->userdata('id');
			$almacenes_encargados = $this->db->query("SELECT tbl_almacenes.tbl_proyectos_idtbl_proyectos FROM tbl_encargado_almacen JOIN tbl_almacenes ON tbl_almacenes.idtbl_almacenes = tbl_encargado_almacen.tbl_almacenes_idtbl_almacenes WHERE tbl_encargado_almacen.tbl_users_idtbl_users = $usuario GROUP BY tbl_almacenes.tbl_proyectos_idtbl_proyectos");
			foreach($almacenes_encargados->result() AS $key => $value){
                if (isset($almacenes_encargados->result()[$key+1]->tbl_proyectos_idtbl_proyectos)) {
                    $id_almacenes .= $value->tbl_proyectos_idtbl_proyectos.', ';
                }else{
					$id_almacenes .= $value->tbl_proyectos_idtbl_proyectos;
				}
			}

			if($id_almacenes != ''){
				$in = "IN ($id_almacenes)";
			}else{
				$in = '';
			}			
			// AND tbl_solicitud_devolucion.tipo_almacen = 'Cliente'
			$query = $this->db->query("SELECT tbl_proyectos.nombre_proyecto, tbl_proyectos.numero_proyecto, tbl_solicitud_devolucion.*, user_autor.nombre as user_autor, user_aprobacion.nombre as user_aprobacion, user_ag.nombre as user_almacen_general, CONCAT(tbl_usuarios.nombres,' ',tbl_usuarios.apellido_paterno,' ',tbl_usuarios.apellido_materno) as recibe FROM tbl_solicitud_devolucion LEFT JOIN tbl_users as user_ag ON user_ag.idtbl_users = tbl_solicitud_devolucion.tbl_users_idtbl_users_aprobar_ag LEFT JOIN tbl_proyectos ON tbl_solicitud_devolucion.tbl_proyectos_idtbl_proyectos=tbl_proyectos.idtbl_proyectos LEFT JOIN tbl_users as user_autor ON tbl_solicitud_devolucion.tbl_users_idtbl_users_autor=user_autor.idtbl_users LEFT JOIN tbl_users as user_aprobacion ON tbl_solicitud_devolucion.tbl_users_idtbl_users_aprobacion=user_aprobacion.idtbl_users LEFT JOIN tbl_usuarios ON tbl_solicitud_devolucion.tbl_usuarios_idtbl_usuarios=tbl_usuarios.idtbl_usuarios WHERE (tbl_solicitud_devolucion.uid LIKE '%$buscar%' OR tbl_solicitud_devolucion.fecha_creacion LIKE '%$buscar%' OR tbl_proyectos.numero_proyecto LIKE '%$buscar%' OR user_autor.nombre LIKE '%$buscar%' OR user_aprobacion.nombre LIKE '%$buscar%' OR user_ag.nombre LIKE '%$buscar%' OR CONCAT(tbl_usuarios.nombres,' ',tbl_usuarios.apellido_paterno,' ',tbl_usuarios.apellido_materno) LIKE '%$buscar%') AND ((tbl_solicitud_devolucion.tbl_proyectos_idtbl_proyectos $in) OR " . $string . ") AND tbl_solicitud_devolucion.tipo_devolucion = 'Almacen General' ". $status ." ORDER BY tbl_solicitud_devolucion.idtbl_solicitud_devolucion DESC " . $limit);
		}elseif($this->session->userdata('tipo') == 11){
			$query = $this->db->query("SELECT tbl_proyectos.nombre_proyecto, tbl_proyectos.numero_proyecto, tbl_solicitud_devolucion.*, user_autor.nombre as user_autor, user_aprobacion.nombre as user_aprobacion, user_ag.nombre as user_almacen_general, CONCAT(tbl_usuarios.nombres,' ',tbl_usuarios.apellido_paterno,' ',tbl_usuarios.apellido_materno) as recibe FROM tbl_solicitud_devolucion LEFT JOIN tbl_users as user_ag ON user_ag.idtbl_users = tbl_solicitud_devolucion.tbl_users_idtbl_users_aprobar_ag LEFT JOIN tbl_proyectos ON tbl_solicitud_devolucion.tbl_proyectos_idtbl_proyectos=tbl_proyectos.idtbl_proyectos LEFT JOIN tbl_users as user_autor ON tbl_solicitud_devolucion.tbl_users_idtbl_users_autor=user_autor.idtbl_users LEFT JOIN tbl_users as user_aprobacion ON tbl_solicitud_devolucion.tbl_users_idtbl_users_aprobacion=user_aprobacion.idtbl_users LEFT JOIN tbl_usuarios ON tbl_solicitud_devolucion.tbl_usuarios_idtbl_usuarios=tbl_usuarios.idtbl_usuarios WHERE (tbl_solicitud_devolucion.uid LIKE '%$buscar%' OR tbl_solicitud_devolucion.fecha_creacion LIKE '%$buscar%' OR tbl_proyectos.numero_proyecto LIKE '%$buscar%' OR user_autor.nombre LIKE '%$buscar%' OR user_aprobacion.nombre LIKE '%$buscar%' OR user_ag.nombre LIKE '%$buscar%' OR CONCAT(tbl_usuarios.nombres,' ',tbl_usuarios.apellido_paterno,' ',tbl_usuarios.apellido_materno) LIKE '%$buscar%') AND tbl_solicitud_devolucion.tbl_contratistas_idtbl_contratistas IS NOT NULL AND " . "tbl_solicitud_devolucion.tipo_devolucion = 'Almacen General' ". $status ." ORDER BY tbl_solicitud_devolucion.idtbl_solicitud_devolucion DESC " . $limit);
		}else{
			
			$query = $this->db->query("SELECT tbl_proyectos.nombre_proyecto, tbl_proyectos.numero_proyecto, tbl_solicitud_devolucion.*, user_autor.nombre as user_autor, user_aprobacion.nombre as user_aprobacion, user_ag.nombre as user_almacen_general, CONCAT(tbl_usuarios.nombres,' ',tbl_usuarios.apellido_paterno,' ',tbl_usuarios.apellido_materno) as recibe FROM tbl_solicitud_devolucion LEFT JOIN tbl_users as user_ag ON user_ag.idtbl_users = tbl_solicitud_devolucion.tbl_users_idtbl_users_aprobar_ag LEFT JOIN tbl_proyectos ON tbl_solicitud_devolucion.tbl_proyectos_idtbl_proyectos=tbl_proyectos.idtbl_proyectos LEFT JOIN tbl_users as user_autor ON tbl_solicitud_devolucion.tbl_users_idtbl_users_autor=user_autor.idtbl_users LEFT JOIN tbl_users as user_aprobacion ON tbl_solicitud_devolucion.tbl_users_idtbl_users_aprobacion=user_aprobacion.idtbl_users LEFT JOIN tbl_usuarios ON tbl_solicitud_devolucion.tbl_usuarios_idtbl_usuarios=tbl_usuarios.idtbl_usuarios WHERE (tbl_solicitud_devolucion.uid LIKE '%$buscar%' OR tbl_solicitud_devolucion.fecha_creacion LIKE '%$buscar%' OR tbl_proyectos.numero_proyecto LIKE '%$buscar%' OR user_autor.nombre LIKE '%$buscar%' OR user_aprobacion.nombre LIKE '%$buscar%' OR user_ag.nombre LIKE '%$buscar%' OR CONCAT(tbl_usuarios.nombres,' ',tbl_usuarios.apellido_paterno,' ',tbl_usuarios.apellido_materno) LIKE '%$buscar%') AND tbl_users_idtbl_users_autor = $autor AND " . "tbl_solicitud_devolucion.tipo_devolucion = 'Almacen General' ". $status ." ORDER BY tbl_solicitud_devolucion.idtbl_solicitud_devolucion DESC " . $limit);
		}
		
		return $query->result_array();
	}

	public function solicitudes_devoluciones_tarjetas($buscar = '', $buscar2 = '', $inicio = false, $cantidadRegistro = false) {
		$autor = $this->session->userdata('id');
		$limit = '';
		if ($inicio !== false && $cantidadRegistro !== false) {
			$limit = 'LIMIT ' . $inicio . "," . $cantidadRegistro;
		}		
		if ($buscar2 == '') {
			$status = "";
		}
		if ($buscar2 != '') {
			$status = "AND (tbl_solicitud_devolucion.estatus_solicitud = '$buscar2')";
		}
		$string = "";
		if ($this->session->userdata('tipo') == 3) {
			$string = "tbl_solicitud_devolucion.tbl_users_idtbl_users_aprobacion IS NOT NULL AND ";
			$query = $this->db->query("SELECT tbl_proyectos.nombre_proyecto, tbl_proyectos.numero_proyecto, tbl_solicitud_devolucion.*, user_autor.nombre as user_autor, user_aprobacion.nombre as user_aprobacion, user_ag.nombre as user_almacen_general, CONCAT(tbl_usuarios.nombres,' ',tbl_usuarios.apellido_paterno,' ',tbl_usuarios.apellido_materno) as recibe FROM tbl_solicitud_devolucion LEFT JOIN tbl_users as user_ag ON user_ag.idtbl_users = tbl_solicitud_devolucion.tbl_users_idtbl_users_aprobar_ag LEFT JOIN tbl_proyectos ON tbl_solicitud_devolucion.tbl_proyectos_idtbl_proyectos=tbl_proyectos.idtbl_proyectos LEFT JOIN tbl_users as user_autor ON tbl_solicitud_devolucion.tbl_users_idtbl_users_autor=user_autor.idtbl_users LEFT JOIN tbl_users as user_aprobacion ON tbl_solicitud_devolucion.tbl_users_idtbl_users_aprobacion=user_aprobacion.idtbl_users LEFT JOIN tbl_usuarios ON tbl_solicitud_devolucion.tbl_usuarios_idtbl_usuarios=tbl_usuarios.idtbl_usuarios WHERE (tbl_solicitud_devolucion.uid LIKE '%$buscar%' OR tbl_solicitud_devolucion.fecha_creacion LIKE '%$buscar%' OR tbl_proyectos.numero_proyecto LIKE '%$buscar%' OR user_autor.nombre LIKE '%$buscar%' OR user_aprobacion.nombre LIKE '%$buscar%' OR user_ag.nombre LIKE '%$buscar%' OR CONCAT(tbl_usuarios.nombres,' ',tbl_usuarios.apellido_paterno,' ',tbl_usuarios.apellido_materno) LIKE '%$buscar%') AND tbl_solicitud_devolucion.tipo_devolucion = 'Tarjetas' ". $status ." ORDER BY tbl_solicitud_devolucion.idtbl_solicitud_devolucion DESC " . $limit);
		}else{
			$query = $this->db->query("SELECT tbl_proyectos.nombre_proyecto, tbl_proyectos.numero_proyecto, tbl_solicitud_devolucion.*, user_autor.nombre as user_autor, user_aprobacion.nombre as user_aprobacion, user_ag.nombre as user_almacen_general, CONCAT(tbl_usuarios.nombres,' ',tbl_usuarios.apellido_paterno,' ',tbl_usuarios.apellido_materno) as recibe FROM tbl_solicitud_devolucion LEFT JOIN tbl_users as user_ag ON user_ag.idtbl_users = tbl_solicitud_devolucion.tbl_users_idtbl_users_aprobar_ag LEFT JOIN tbl_proyectos ON tbl_solicitud_devolucion.tbl_proyectos_idtbl_proyectos=tbl_proyectos.idtbl_proyectos LEFT JOIN tbl_users as user_autor ON tbl_solicitud_devolucion.tbl_users_idtbl_users_autor=user_autor.idtbl_users LEFT JOIN tbl_users as user_aprobacion ON tbl_solicitud_devolucion.tbl_users_idtbl_users_aprobacion=user_aprobacion.idtbl_users LEFT JOIN tbl_usuarios ON tbl_solicitud_devolucion.tbl_usuarios_idtbl_usuarios=tbl_usuarios.idtbl_usuarios WHERE (tbl_solicitud_devolucion.uid LIKE '%$buscar%' OR tbl_solicitud_devolucion.fecha_creacion LIKE '%$buscar%' OR tbl_proyectos.numero_proyecto LIKE '%$buscar%' OR user_autor.nombre LIKE '%$buscar%' OR user_aprobacion.nombre LIKE '%$buscar%' OR user_ag.nombre LIKE '%$buscar%' OR CONCAT(tbl_usuarios.nombres,' ',tbl_usuarios.apellido_paterno,' ',tbl_usuarios.apellido_materno) LIKE '%$buscar%') AND tbl_users_idtbl_users_autor = $autor AND " . "tbl_solicitud_devolucion.tipo_devolucion = 'Tarjetas' ". $status ." ORDER BY tbl_solicitud_devolucion.idtbl_solicitud_devolucion DESC " . $limit);
		}
		
		return $query->result_array();
	}

	public function solicitudes_devolucionesTecate($buscar = '', $buscar2 = '', $inicio = false, $cantidadRegistro = false) {
		$limit = '';
		if ($inicio !== false && $cantidadRegistro !== false) {
			$limit = 'LIMIT ' . $inicio . "," . $cantidadRegistro;
		}		
		if ($buscar2 == '') {
			$status = "";
		}
		if ($buscar2 != '') {
			$status = "AND (tbl_solicitud_devolucion.estatus_solicitud = '$buscar2')";
		}
		$string = "";
		if ($this->session->userdata('tipo') == 4) {
			$string = "tbl_solicitud_devolucion.tbl_users_idtbl_users_aprobacion IS NOT NULL AND ";
			$query = $this->db->query("SELECT tbl_proyectos.nombre_proyecto, tbl_proyectos.numero_proyecto, tbl_solicitud_devolucion.*, user_autor.nombre as user_autor, user_aprobacion.nombre as user_aprobacion, user_ag.nombre as user_almacen_general, CONCAT(tbl_usuarios.nombres,' ',tbl_usuarios.apellido_paterno,' ',tbl_usuarios.apellido_materno) as recibe FROM tbl_solicitud_devolucion LEFT JOIN tbl_users as user_ag ON user_ag.idtbl_users = tbl_solicitud_devolucion.tbl_users_idtbl_users_aprobar_ag LEFT JOIN tbl_proyectos ON tbl_solicitud_devolucion.tbl_proyectos_idtbl_proyectos=tbl_proyectos.idtbl_proyectos LEFT JOIN tbl_users as user_autor ON tbl_solicitud_devolucion.tbl_users_idtbl_users_autor=user_autor.idtbl_users LEFT JOIN tbl_users as user_aprobacion ON tbl_solicitud_devolucion.tbl_users_idtbl_users_aprobacion=user_aprobacion.idtbl_users LEFT JOIN tbl_usuarios ON tbl_solicitud_devolucion.tbl_usuarios_idtbl_usuarios=tbl_usuarios.idtbl_usuarios WHERE (tbl_solicitud_devolucion.uid LIKE '%$buscar%' OR tbl_solicitud_devolucion.fecha_creacion LIKE '%$buscar%' OR tbl_proyectos.numero_proyecto LIKE '%$buscar%' OR user_autor.nombre LIKE '%$buscar%' OR user_aprobacion.nombre LIKE '%$buscar%' OR user_ag.nombre LIKE '%$buscar%' OR CONCAT(tbl_usuarios.nombres,' ',tbl_usuarios.apellido_paterno,' ',tbl_usuarios.apellido_materno) LIKE '%$buscar%') AND " . $string . "tbl_solicitud_devolucion.tipo_devolucion = 'Almacen General' ". $status ." ORDER BY tbl_solicitud_devolucion.idtbl_solicitud_devolucion DESC " . $limit);
		}
		if ($this->session->userdata('tipo') == 5 || $this->session->userdata('tipo') == 9 || $this->session->userdata('tipo') == 10) {
			$string = "user_autor.idtbl_users = " . $this->session->userdata('id') . " AND ";
			$query = $this->db->query("SELECT tbl_proyectos.nombre_proyecto, tbl_proyectos.numero_proyecto, tbl_solicitud_devolucion.*, user_autor.nombre as user_autor, user_aprobacion.nombre as user_aprobacion, user_ag.nombre as user_almacen_general, CONCAT(tbl_usuarios.nombres,' ',tbl_usuarios.apellido_paterno,' ',tbl_usuarios.apellido_materno) as recibe FROM tbl_solicitud_devolucion LEFT JOIN tbl_users as user_ag ON user_ag.idtbl_users = tbl_solicitud_devolucion.tbl_users_idtbl_users_aprobar_ag LEFT JOIN tbl_proyectos ON tbl_solicitud_devolucion.tbl_proyectos_idtbl_proyectos=tbl_proyectos.idtbl_proyectos LEFT JOIN tbl_users as user_autor ON tbl_solicitud_devolucion.tbl_users_idtbl_users_autor=user_autor.idtbl_users LEFT JOIN tbl_users as user_aprobacion ON tbl_solicitud_devolucion.tbl_users_idtbl_users_aprobacion=user_aprobacion.idtbl_users LEFT JOIN tbl_usuarios ON tbl_solicitud_devolucion.tbl_usuarios_idtbl_usuarios=tbl_usuarios.idtbl_usuarios WHERE (tbl_solicitud_devolucion.uid LIKE '%$buscar%' OR tbl_solicitud_devolucion.fecha_creacion LIKE '%$buscar%' OR tbl_proyectos.numero_proyecto LIKE '%$buscar%' OR user_autor.nombre LIKE '%$buscar%' OR user_aprobacion.nombre LIKE '%$buscar%' OR user_ag.nombre LIKE '%$buscar%' OR CONCAT(tbl_usuarios.nombres,' ',tbl_usuarios.apellido_paterno,' ',tbl_usuarios.apellido_materno) LIKE '%$buscar%') AND " . $string . "tbl_solicitud_devolucion.tipo_devolucion = 'Almacen General' ". $status ." ORDER BY tbl_solicitud_devolucion.idtbl_solicitud_devolucion DESC " . $limit);
		}
		if($this->session->userdata('encargado_almacen') != null && $this->session->userdata('encargado_almacen') != '') {
			$id_almacenes = '';
			$string = "user_autor.idtbl_users = " . $this->session->userdata('id');
			$usuario = $this->session->userdata('id');
			$almacenes_encargados = $this->db->query("SELECT tbl_almacenes.tbl_proyectos_idtbl_proyectos FROM tbl_encargado_almacen JOIN tbl_almacenes ON tbl_almacenes.idtbl_almacenes = tbl_encargado_almacen.tbl_almacenes_idtbl_almacenes WHERE tbl_encargado_almacen.tbl_users_idtbl_users = $usuario GROUP BY tbl_almacenes.tbl_proyectos_idtbl_proyectos");
			foreach($almacenes_encargados->result() AS $key => $value){
                if (isset($almacenes_encargados->result()[$key+1]->tbl_proyectos_idtbl_proyectos)) {
                    	$id_almacenes .= $value->tbl_proyectos_idtbl_proyectos.', ';
                }else{
					$id_almacenes .= $value->tbl_proyectos_idtbl_proyectos;
				}
			}

			if($id_almacenes != ''){
				$in = "IN ($id_almacenes)";
			}else{
				$in = '';
			}			
			
			$query = $this->db->query("SELECT tbl_proyectos.nombre_proyecto, tbl_proyectos.numero_proyecto, tbl_solicitud_devolucion.*, user_autor.nombre as user_autor, user_aprobacion.nombre as user_aprobacion, user_ag.nombre as user_almacen_general, CONCAT(tbl_usuarios.nombres,' ',tbl_usuarios.apellido_paterno,' ',tbl_usuarios.apellido_materno) as recibe FROM tbl_solicitud_devolucion LEFT JOIN tbl_users as user_ag ON user_ag.idtbl_users = tbl_solicitud_devolucion.tbl_users_idtbl_users_aprobar_ag LEFT JOIN tbl_proyectos ON tbl_solicitud_devolucion.tbl_proyectos_idtbl_proyectos=tbl_proyectos.idtbl_proyectos LEFT JOIN tbl_users as user_autor ON tbl_solicitud_devolucion.tbl_users_idtbl_users_autor=user_autor.idtbl_users LEFT JOIN tbl_users as user_aprobacion ON tbl_solicitud_devolucion.tbl_users_idtbl_users_aprobacion=user_aprobacion.idtbl_users LEFT JOIN tbl_usuarios ON tbl_solicitud_devolucion.tbl_usuarios_idtbl_usuarios=tbl_usuarios.idtbl_usuarios WHERE (tbl_solicitud_devolucion.uid LIKE '%$buscar%' OR tbl_solicitud_devolucion.fecha_creacion LIKE '%$buscar%' OR tbl_proyectos.numero_proyecto LIKE '%$buscar%' OR user_autor.nombre LIKE '%$buscar%' OR user_aprobacion.nombre LIKE '%$buscar%' OR user_ag.nombre LIKE '%$buscar%' OR CONCAT(tbl_usuarios.nombres,' ',tbl_usuarios.apellido_paterno,' ',tbl_usuarios.apellido_materno) LIKE '%$buscar%') AND (tbl_solicitud_devolucion.tbl_segmentos_proyecto_idtbl_segmentos_proyecto = 316 AND tbl_solicitud_devolucion.tbl_proyectos_idtbl_proyectos $in OR " . $string . ") AND tbl_solicitud_devolucion.tbl_users_idtbl_users_aprobacion IS NOT NULL AND tbl_solicitud_devolucion.tipo_devolucion = 'Almacen General' ". $status ." ORDER BY tbl_solicitud_devolucion.idtbl_solicitud_devolucion DESC " . $limit);
		}else{
			
			$query = $this->db->query("SELECT tbl_proyectos.nombre_proyecto, tbl_proyectos.numero_proyecto, tbl_solicitud_devolucion.*, user_autor.nombre as user_autor, user_aprobacion.nombre as user_aprobacion, user_ag.nombre as user_almacen_general, CONCAT(tbl_usuarios.nombres,' ',tbl_usuarios.apellido_paterno,' ',tbl_usuarios.apellido_materno) as recibe FROM tbl_solicitud_devolucion LEFT JOIN tbl_users as user_ag ON user_ag.idtbl_users = tbl_solicitud_devolucion.tbl_users_idtbl_users_aprobar_ag LEFT JOIN tbl_proyectos ON tbl_solicitud_devolucion.tbl_proyectos_idtbl_proyectos=tbl_proyectos.idtbl_proyectos LEFT JOIN tbl_users as user_autor ON tbl_solicitud_devolucion.tbl_users_idtbl_users_autor=user_autor.idtbl_users LEFT JOIN tbl_users as user_aprobacion ON tbl_solicitud_devolucion.tbl_users_idtbl_users_aprobacion=user_aprobacion.idtbl_users LEFT JOIN tbl_usuarios ON tbl_solicitud_devolucion.tbl_usuarios_idtbl_usuarios=tbl_usuarios.idtbl_usuarios WHERE (tbl_solicitud_devolucion.uid LIKE '%$buscar%' OR tbl_solicitud_devolucion.fecha_creacion LIKE '%$buscar%' OR tbl_proyectos.numero_proyecto LIKE '%$buscar%' OR user_autor.nombre LIKE '%$buscar%' OR user_aprobacion.nombre LIKE '%$buscar%' OR user_ag.nombre LIKE '%$buscar%' OR CONCAT(tbl_usuarios.nombres,' ',tbl_usuarios.apellido_paterno,' ',tbl_usuarios.apellido_materno) LIKE '%$buscar%') AND " . "tbl_solicitud_devolucion.tipo_devolucion = 'Almacen General' ". $status ." ORDER BY tbl_solicitud_devolucion.idtbl_solicitud_devolucion DESC " . $limit);
		}
		
		return $query->result_array();
	}

	public function solicitudes_devolucionesNatura($buscar = '', $buscar2 = '', $inicio = false, $cantidadRegistro = false) {
		$limit = '';
		if ($inicio !== false && $cantidadRegistro !== false) {
			$limit = 'LIMIT ' . $inicio . "," . $cantidadRegistro;
		}		
		if ($buscar2 == '') {
			$status = "";
		}
		if ($buscar2 != '') {
			$status = "AND (tbl_solicitud_devolucion.estatus_solicitud = '$buscar2')";
		}
		$string = "";
		if ($this->session->userdata('tipo') == 4) {
			$string = "tbl_solicitud_devolucion.tbl_users_idtbl_users_aprobacion IS NOT NULL AND ";
			$query = $this->db->query("SELECT tbl_proyectos.nombre_proyecto, tbl_proyectos.numero_proyecto, tbl_solicitud_devolucion.*, user_autor.nombre as user_autor, user_aprobacion.nombre as user_aprobacion, user_ag.nombre as user_almacen_general, CONCAT(tbl_usuarios.nombres,' ',tbl_usuarios.apellido_paterno,' ',tbl_usuarios.apellido_materno) as recibe FROM tbl_solicitud_devolucion LEFT JOIN tbl_users as user_ag ON user_ag.idtbl_users = tbl_solicitud_devolucion.tbl_users_idtbl_users_aprobar_ag LEFT JOIN tbl_proyectos ON tbl_solicitud_devolucion.tbl_proyectos_idtbl_proyectos=tbl_proyectos.idtbl_proyectos LEFT JOIN tbl_users as user_autor ON tbl_solicitud_devolucion.tbl_users_idtbl_users_autor=user_autor.idtbl_users LEFT JOIN tbl_users as user_aprobacion ON tbl_solicitud_devolucion.tbl_users_idtbl_users_aprobacion=user_aprobacion.idtbl_users LEFT JOIN tbl_usuarios ON tbl_solicitud_devolucion.tbl_usuarios_idtbl_usuarios=tbl_usuarios.idtbl_usuarios WHERE (tbl_solicitud_devolucion.uid LIKE '%$buscar%' OR tbl_solicitud_devolucion.fecha_creacion LIKE '%$buscar%' OR tbl_proyectos.numero_proyecto LIKE '%$buscar%' OR user_autor.nombre LIKE '%$buscar%' OR user_aprobacion.nombre LIKE '%$buscar%' OR user_ag.nombre LIKE '%$buscar%' OR CONCAT(tbl_usuarios.nombres,' ',tbl_usuarios.apellido_paterno,' ',tbl_usuarios.apellido_materno) LIKE '%$buscar%') AND " . $string . "tbl_solicitud_devolucion.tipo_devolucion = 'Almacen General' ". $status ." ORDER BY tbl_solicitud_devolucion.idtbl_solicitud_devolucion DESC " . $limit);
		}
		if ($this->session->userdata('tipo') == 5 || $this->session->userdata('tipo') == 9 || $this->session->userdata('tipo') == 10) {
			$string = "user_autor.idtbl_users = " . $this->session->userdata('id') . " AND ";
			$query = $this->db->query("SELECT tbl_proyectos.nombre_proyecto, tbl_proyectos.numero_proyecto, tbl_solicitud_devolucion.*, user_autor.nombre as user_autor, user_aprobacion.nombre as user_aprobacion, user_ag.nombre as user_almacen_general, CONCAT(tbl_usuarios.nombres,' ',tbl_usuarios.apellido_paterno,' ',tbl_usuarios.apellido_materno) as recibe FROM tbl_solicitud_devolucion LEFT JOIN tbl_users as user_ag ON user_ag.idtbl_users = tbl_solicitud_devolucion.tbl_users_idtbl_users_aprobar_ag LEFT JOIN tbl_proyectos ON tbl_solicitud_devolucion.tbl_proyectos_idtbl_proyectos=tbl_proyectos.idtbl_proyectos LEFT JOIN tbl_users as user_autor ON tbl_solicitud_devolucion.tbl_users_idtbl_users_autor=user_autor.idtbl_users LEFT JOIN tbl_users as user_aprobacion ON tbl_solicitud_devolucion.tbl_users_idtbl_users_aprobacion=user_aprobacion.idtbl_users LEFT JOIN tbl_usuarios ON tbl_solicitud_devolucion.tbl_usuarios_idtbl_usuarios=tbl_usuarios.idtbl_usuarios WHERE (tbl_solicitud_devolucion.uid LIKE '%$buscar%' OR tbl_solicitud_devolucion.fecha_creacion LIKE '%$buscar%' OR tbl_proyectos.numero_proyecto LIKE '%$buscar%' OR user_autor.nombre LIKE '%$buscar%' OR user_aprobacion.nombre LIKE '%$buscar%' OR user_ag.nombre LIKE '%$buscar%' OR CONCAT(tbl_usuarios.nombres,' ',tbl_usuarios.apellido_paterno,' ',tbl_usuarios.apellido_materno) LIKE '%$buscar%') AND " . $string . "tbl_solicitud_devolucion.tipo_devolucion = 'Almacen General' ". $status ." ORDER BY tbl_solicitud_devolucion.idtbl_solicitud_devolucion DESC " . $limit);
		}
		if($this->session->userdata('encargado_almacen') != null && $this->session->userdata('encargado_almacen') != '') {
			$id_almacenes = '';
			$string = "user_autor.idtbl_users = " . $this->session->userdata('id');
			$usuario = $this->session->userdata('id');
			$almacenes_encargados = $this->db->query("SELECT tbl_almacenes.tbl_proyectos_idtbl_proyectos FROM tbl_encargado_almacen JOIN tbl_almacenes ON tbl_almacenes.idtbl_almacenes = tbl_encargado_almacen.tbl_almacenes_idtbl_almacenes WHERE tbl_encargado_almacen.tbl_users_idtbl_users = $usuario GROUP BY tbl_almacenes.tbl_proyectos_idtbl_proyectos");
			foreach($almacenes_encargados->result() AS $key => $value){
                if (isset($almacenes_encargados->result()[$key+1]->tbl_proyectos_idtbl_proyectos)) {
                    	$id_almacenes .= $value->tbl_proyectos_idtbl_proyectos.', ';
                }else{
					$id_almacenes .= $value->tbl_proyectos_idtbl_proyectos;
				}
			}

			if($id_almacenes != ''){
				$in = "IN ($id_almacenes)";
			}else{
				$in = '';
			}			
			
			$query = $this->db->query("SELECT tbl_proyectos.nombre_proyecto, tbl_proyectos.numero_proyecto, tbl_solicitud_devolucion.*, user_autor.nombre as user_autor, user_aprobacion.nombre as user_aprobacion, user_ag.nombre as user_almacen_general, CONCAT(tbl_usuarios.nombres,' ',tbl_usuarios.apellido_paterno,' ',tbl_usuarios.apellido_materno) as recibe FROM tbl_solicitud_devolucion LEFT JOIN tbl_users as user_ag ON user_ag.idtbl_users = tbl_solicitud_devolucion.tbl_users_idtbl_users_aprobar_ag LEFT JOIN tbl_proyectos ON tbl_solicitud_devolucion.tbl_proyectos_idtbl_proyectos=tbl_proyectos.idtbl_proyectos LEFT JOIN tbl_users as user_autor ON tbl_solicitud_devolucion.tbl_users_idtbl_users_autor=user_autor.idtbl_users LEFT JOIN tbl_users as user_aprobacion ON tbl_solicitud_devolucion.tbl_users_idtbl_users_aprobacion=user_aprobacion.idtbl_users LEFT JOIN tbl_usuarios ON tbl_solicitud_devolucion.tbl_usuarios_idtbl_usuarios=tbl_usuarios.idtbl_usuarios WHERE (tbl_solicitud_devolucion.uid LIKE '%$buscar%' OR tbl_solicitud_devolucion.fecha_creacion LIKE '%$buscar%' OR tbl_proyectos.numero_proyecto LIKE '%$buscar%' OR user_autor.nombre LIKE '%$buscar%' OR user_aprobacion.nombre LIKE '%$buscar%' OR user_ag.nombre LIKE '%$buscar%' OR CONCAT(tbl_usuarios.nombres,' ',tbl_usuarios.apellido_paterno,' ',tbl_usuarios.apellido_materno) LIKE '%$buscar%') AND (tbl_solicitud_devolucion.tbl_segmentos_proyecto_idtbl_segmentos_proyecto = 315 AND tbl_solicitud_devolucion.tbl_proyectos_idtbl_proyectos $in OR " . $string . ") AND tbl_solicitud_devolucion.tbl_users_idtbl_users_aprobacion IS NOT NULL AND tbl_solicitud_devolucion.tipo_devolucion = 'Almacen General' ". $status ." ORDER BY tbl_solicitud_devolucion.idtbl_solicitud_devolucion DESC " . $limit);
		}else{
			
			$query = $this->db->query("SELECT tbl_proyectos.nombre_proyecto, tbl_proyectos.numero_proyecto, tbl_solicitud_devolucion.*, user_autor.nombre as user_autor, user_aprobacion.nombre as user_aprobacion, user_ag.nombre as user_almacen_general, CONCAT(tbl_usuarios.nombres,' ',tbl_usuarios.apellido_paterno,' ',tbl_usuarios.apellido_materno) as recibe FROM tbl_solicitud_devolucion LEFT JOIN tbl_users as user_ag ON user_ag.idtbl_users = tbl_solicitud_devolucion.tbl_users_idtbl_users_aprobar_ag LEFT JOIN tbl_proyectos ON tbl_solicitud_devolucion.tbl_proyectos_idtbl_proyectos=tbl_proyectos.idtbl_proyectos LEFT JOIN tbl_users as user_autor ON tbl_solicitud_devolucion.tbl_users_idtbl_users_autor=user_autor.idtbl_users LEFT JOIN tbl_users as user_aprobacion ON tbl_solicitud_devolucion.tbl_users_idtbl_users_aprobacion=user_aprobacion.idtbl_users LEFT JOIN tbl_usuarios ON tbl_solicitud_devolucion.tbl_usuarios_idtbl_usuarios=tbl_usuarios.idtbl_usuarios WHERE (tbl_solicitud_devolucion.uid LIKE '%$buscar%' OR tbl_solicitud_devolucion.fecha_creacion LIKE '%$buscar%' OR tbl_proyectos.numero_proyecto LIKE '%$buscar%' OR user_autor.nombre LIKE '%$buscar%' OR user_aprobacion.nombre LIKE '%$buscar%' OR user_ag.nombre LIKE '%$buscar%' OR CONCAT(tbl_usuarios.nombres,' ',tbl_usuarios.apellido_paterno,' ',tbl_usuarios.apellido_materno) LIKE '%$buscar%') AND " . "tbl_solicitud_devolucion.tipo_devolucion = 'Almacen General' ". $status ." ORDER BY tbl_solicitud_devolucion.idtbl_solicitud_devolucion DESC " . $limit);
		}
		
		return $query->result_array();
	}

	public function solicitudes_devolucionesB2($buscar = '', $buscar2 = '', $inicio = false, $cantidadRegistro = false) {
		$limit = '';
		if ($inicio !== false && $cantidadRegistro !== false) {
			$limit = 'LIMIT ' . $inicio . "," . $cantidadRegistro;
		}		
		if ($buscar2 == '') {
			$status = "";
		}
		if ($buscar2 != '') {
			$status = "AND (tbl_solicitud_devolucion.estatus_solicitud = '$buscar2')";
		}
		$string = "";
		if ($this->session->userdata('tipo') == 4) {
			$string = "tbl_solicitud_devolucion.tbl_users_idtbl_users_aprobacion IS NOT NULL AND ";
			$query = $this->db->query("SELECT tbl_proyectos.nombre_proyecto, tbl_proyectos.numero_proyecto, tbl_solicitud_devolucion.*, user_autor.nombre as user_autor, user_aprobacion.nombre as user_aprobacion, user_ag.nombre as user_almacen_general, CONCAT(tbl_usuarios.nombres,' ',tbl_usuarios.apellido_paterno,' ',tbl_usuarios.apellido_materno) as recibe FROM tbl_solicitud_devolucion LEFT JOIN tbl_users as user_ag ON user_ag.idtbl_users = tbl_solicitud_devolucion.tbl_users_idtbl_users_aprobar_ag LEFT JOIN tbl_proyectos ON tbl_solicitud_devolucion.tbl_proyectos_idtbl_proyectos=tbl_proyectos.idtbl_proyectos LEFT JOIN tbl_users as user_autor ON tbl_solicitud_devolucion.tbl_users_idtbl_users_autor=user_autor.idtbl_users LEFT JOIN tbl_users as user_aprobacion ON tbl_solicitud_devolucion.tbl_users_idtbl_users_aprobacion=user_aprobacion.idtbl_users LEFT JOIN tbl_usuarios ON tbl_solicitud_devolucion.tbl_usuarios_idtbl_usuarios=tbl_usuarios.idtbl_usuarios WHERE (tbl_solicitud_devolucion.uid LIKE '%$buscar%' OR tbl_solicitud_devolucion.fecha_creacion LIKE '%$buscar%' OR tbl_proyectos.numero_proyecto LIKE '%$buscar%' OR user_autor.nombre LIKE '%$buscar%' OR user_aprobacion.nombre LIKE '%$buscar%' OR user_ag.nombre LIKE '%$buscar%' OR CONCAT(tbl_usuarios.nombres,' ',tbl_usuarios.apellido_paterno,' ',tbl_usuarios.apellido_materno) LIKE '%$buscar%') AND " . $string . "tbl_solicitud_devolucion.tipo_devolucion = 'Almacen General' ". $status ." ORDER BY tbl_solicitud_devolucion.idtbl_solicitud_devolucion DESC " . $limit);
		}
		if ($this->session->userdata('tipo') == 5 || $this->session->userdata('tipo') == 9 || $this->session->userdata('tipo') == 10) {
			$string = "user_autor.idtbl_users = " . $this->session->userdata('id') . " AND ";
			$query = $this->db->query("SELECT tbl_proyectos.nombre_proyecto, tbl_proyectos.numero_proyecto, tbl_solicitud_devolucion.*, user_autor.nombre as user_autor, user_aprobacion.nombre as user_aprobacion, user_ag.nombre as user_almacen_general, CONCAT(tbl_usuarios.nombres,' ',tbl_usuarios.apellido_paterno,' ',tbl_usuarios.apellido_materno) as recibe FROM tbl_solicitud_devolucion LEFT JOIN tbl_users as user_ag ON user_ag.idtbl_users = tbl_solicitud_devolucion.tbl_users_idtbl_users_aprobar_ag LEFT JOIN tbl_proyectos ON tbl_solicitud_devolucion.tbl_proyectos_idtbl_proyectos=tbl_proyectos.idtbl_proyectos LEFT JOIN tbl_users as user_autor ON tbl_solicitud_devolucion.tbl_users_idtbl_users_autor=user_autor.idtbl_users LEFT JOIN tbl_users as user_aprobacion ON tbl_solicitud_devolucion.tbl_users_idtbl_users_aprobacion=user_aprobacion.idtbl_users LEFT JOIN tbl_usuarios ON tbl_solicitud_devolucion.tbl_usuarios_idtbl_usuarios=tbl_usuarios.idtbl_usuarios WHERE (tbl_solicitud_devolucion.uid LIKE '%$buscar%' OR tbl_solicitud_devolucion.fecha_creacion LIKE '%$buscar%' OR tbl_proyectos.numero_proyecto LIKE '%$buscar%' OR user_autor.nombre LIKE '%$buscar%' OR user_aprobacion.nombre LIKE '%$buscar%' OR user_ag.nombre LIKE '%$buscar%' OR CONCAT(tbl_usuarios.nombres,' ',tbl_usuarios.apellido_paterno,' ',tbl_usuarios.apellido_materno) LIKE '%$buscar%') AND " . $string . "tbl_solicitud_devolucion.tipo_devolucion = 'Almacen General' ". $status ." ORDER BY tbl_solicitud_devolucion.idtbl_solicitud_devolucion DESC " . $limit);
		}
		if($this->session->userdata('encargado_almacen') != null && $this->session->userdata('encargado_almacen') != '') {
			$id_almacenes = '';
			$string = "user_autor.idtbl_users = " . $this->session->userdata('id');
			$usuario = $this->session->userdata('id');
			$almacenes_encargados = $this->db->query("SELECT tbl_almacenes.tbl_proyectos_idtbl_proyectos FROM tbl_encargado_almacen JOIN tbl_almacenes ON tbl_almacenes.idtbl_almacenes = tbl_encargado_almacen.tbl_almacenes_idtbl_almacenes WHERE tbl_encargado_almacen.tbl_users_idtbl_users = $usuario GROUP BY tbl_almacenes.tbl_proyectos_idtbl_proyectos");
			foreach($almacenes_encargados->result() AS $key => $value){
                if (isset($almacenes_encargados->result()[$key+1]->tbl_proyectos_idtbl_proyectos)) {
                    	$id_almacenes .= $value->tbl_proyectos_idtbl_proyectos.', ';
                }else{
					$id_almacenes .= $value->tbl_proyectos_idtbl_proyectos;
				}
			}

			if($id_almacenes != ''){
				$in = "IN ($id_almacenes)";
			}else{
				$in = '';
			}			
			
			$query = $this->db->query("SELECT tbl_proyectos.nombre_proyecto, tbl_proyectos.numero_proyecto, tbl_solicitud_devolucion.*, user_autor.nombre as user_autor, user_aprobacion.nombre as user_aprobacion, user_ag.nombre as user_almacen_general, CONCAT(tbl_usuarios.nombres,' ',tbl_usuarios.apellido_paterno,' ',tbl_usuarios.apellido_materno) as recibe FROM tbl_solicitud_devolucion LEFT JOIN tbl_users as user_ag ON user_ag.idtbl_users = tbl_solicitud_devolucion.tbl_users_idtbl_users_aprobar_ag LEFT JOIN tbl_proyectos ON tbl_solicitud_devolucion.tbl_proyectos_idtbl_proyectos=tbl_proyectos.idtbl_proyectos LEFT JOIN tbl_users as user_autor ON tbl_solicitud_devolucion.tbl_users_idtbl_users_autor=user_autor.idtbl_users LEFT JOIN tbl_users as user_aprobacion ON tbl_solicitud_devolucion.tbl_users_idtbl_users_aprobacion=user_aprobacion.idtbl_users LEFT JOIN tbl_usuarios ON tbl_solicitud_devolucion.tbl_usuarios_idtbl_usuarios=tbl_usuarios.idtbl_usuarios WHERE (tbl_solicitud_devolucion.uid LIKE '%$buscar%' OR tbl_solicitud_devolucion.fecha_creacion LIKE '%$buscar%' OR tbl_proyectos.numero_proyecto LIKE '%$buscar%' OR user_autor.nombre LIKE '%$buscar%' OR user_aprobacion.nombre LIKE '%$buscar%' OR user_ag.nombre LIKE '%$buscar%' OR CONCAT(tbl_usuarios.nombres,' ',tbl_usuarios.apellido_paterno,' ',tbl_usuarios.apellido_materno) LIKE '%$buscar%') AND (tbl_solicitud_devolucion.tbl_segmentos_proyecto_idtbl_segmentos_proyecto = 318 AND tbl_solicitud_devolucion.tbl_proyectos_idtbl_proyectos $in OR " . $string . ") AND tbl_solicitud_devolucion.tbl_users_idtbl_users_aprobacion IS NOT NULL AND tbl_solicitud_devolucion.tipo_devolucion = 'Almacen General' ". $status ." ORDER BY tbl_solicitud_devolucion.idtbl_solicitud_devolucion DESC " . $limit);
		}else{
			
			$query = $this->db->query("SELECT tbl_proyectos.nombre_proyecto, tbl_proyectos.numero_proyecto, tbl_solicitud_devolucion.*, user_autor.nombre as user_autor, user_aprobacion.nombre as user_aprobacion, user_ag.nombre as user_almacen_general, CONCAT(tbl_usuarios.nombres,' ',tbl_usuarios.apellido_paterno,' ',tbl_usuarios.apellido_materno) as recibe FROM tbl_solicitud_devolucion LEFT JOIN tbl_users as user_ag ON user_ag.idtbl_users = tbl_solicitud_devolucion.tbl_users_idtbl_users_aprobar_ag LEFT JOIN tbl_proyectos ON tbl_solicitud_devolucion.tbl_proyectos_idtbl_proyectos=tbl_proyectos.idtbl_proyectos LEFT JOIN tbl_users as user_autor ON tbl_solicitud_devolucion.tbl_users_idtbl_users_autor=user_autor.idtbl_users LEFT JOIN tbl_users as user_aprobacion ON tbl_solicitud_devolucion.tbl_users_idtbl_users_aprobacion=user_aprobacion.idtbl_users LEFT JOIN tbl_usuarios ON tbl_solicitud_devolucion.tbl_usuarios_idtbl_usuarios=tbl_usuarios.idtbl_usuarios WHERE (tbl_solicitud_devolucion.uid LIKE '%$buscar%' OR tbl_solicitud_devolucion.fecha_creacion LIKE '%$buscar%' OR tbl_proyectos.numero_proyecto LIKE '%$buscar%' OR user_autor.nombre LIKE '%$buscar%' OR user_aprobacion.nombre LIKE '%$buscar%' OR user_ag.nombre LIKE '%$buscar%' OR CONCAT(tbl_usuarios.nombres,' ',tbl_usuarios.apellido_paterno,' ',tbl_usuarios.apellido_materno) LIKE '%$buscar%') AND " . "tbl_solicitud_devolucion.tipo_devolucion = 'Almacen General' ". $status ." ORDER BY tbl_solicitud_devolucion.idtbl_solicitud_devolucion DESC " . $limit);
		}
		
		return $query->result_array();
	}

	public function solicitudes_devolucionesMagistral($buscar = '', $buscar2 = '', $inicio = false, $cantidadRegistro = false) {
		$limit = '';
		if ($inicio !== false && $cantidadRegistro !== false) {
			$limit = 'LIMIT ' . $inicio . "," . $cantidadRegistro;
		}		
		if ($buscar2 == '') {
			$status = "";
		}
		if ($buscar2 != '') {
			$status = "AND (tbl_solicitud_devolucion.estatus_solicitud = '$buscar2')";
		}
		$string = "";
		if ($this->session->userdata('tipo') == 4) {
			$string = "tbl_solicitud_devolucion.tbl_users_idtbl_users_aprobacion IS NOT NULL AND ";
			$query = $this->db->query("SELECT tbl_proyectos.nombre_proyecto, tbl_proyectos.numero_proyecto, tbl_solicitud_devolucion.*, user_autor.nombre as user_autor, user_aprobacion.nombre as user_aprobacion, user_ag.nombre as user_almacen_general, CONCAT(tbl_usuarios.nombres,' ',tbl_usuarios.apellido_paterno,' ',tbl_usuarios.apellido_materno) as recibe FROM tbl_solicitud_devolucion LEFT JOIN tbl_users as user_ag ON user_ag.idtbl_users = tbl_solicitud_devolucion.tbl_users_idtbl_users_aprobar_ag LEFT JOIN tbl_proyectos ON tbl_solicitud_devolucion.tbl_proyectos_idtbl_proyectos=tbl_proyectos.idtbl_proyectos LEFT JOIN tbl_users as user_autor ON tbl_solicitud_devolucion.tbl_users_idtbl_users_autor=user_autor.idtbl_users LEFT JOIN tbl_users as user_aprobacion ON tbl_solicitud_devolucion.tbl_users_idtbl_users_aprobacion=user_aprobacion.idtbl_users LEFT JOIN tbl_usuarios ON tbl_solicitud_devolucion.tbl_usuarios_idtbl_usuarios=tbl_usuarios.idtbl_usuarios WHERE (tbl_solicitud_devolucion.uid LIKE '%$buscar%' OR tbl_solicitud_devolucion.fecha_creacion LIKE '%$buscar%' OR tbl_proyectos.numero_proyecto LIKE '%$buscar%' OR user_autor.nombre LIKE '%$buscar%' OR user_aprobacion.nombre LIKE '%$buscar%' OR user_ag.nombre LIKE '%$buscar%' OR CONCAT(tbl_usuarios.nombres,' ',tbl_usuarios.apellido_paterno,' ',tbl_usuarios.apellido_materno) LIKE '%$buscar%') AND " . $string . "tbl_solicitud_devolucion.tipo_devolucion = 'Almacen General' ". $status ." ORDER BY tbl_solicitud_devolucion.idtbl_solicitud_devolucion DESC " . $limit);
		}
		if ($this->session->userdata('tipo') == 5 || $this->session->userdata('tipo') == 9 || $this->session->userdata('tipo') == 10) {
			$string = "user_autor.idtbl_users = " . $this->session->userdata('id') . " AND ";
			$query = $this->db->query("SELECT tbl_proyectos.nombre_proyecto, tbl_proyectos.numero_proyecto, tbl_solicitud_devolucion.*, user_autor.nombre as user_autor, user_aprobacion.nombre as user_aprobacion, user_ag.nombre as user_almacen_general, CONCAT(tbl_usuarios.nombres,' ',tbl_usuarios.apellido_paterno,' ',tbl_usuarios.apellido_materno) as recibe FROM tbl_solicitud_devolucion LEFT JOIN tbl_users as user_ag ON user_ag.idtbl_users = tbl_solicitud_devolucion.tbl_users_idtbl_users_aprobar_ag LEFT JOIN tbl_proyectos ON tbl_solicitud_devolucion.tbl_proyectos_idtbl_proyectos=tbl_proyectos.idtbl_proyectos LEFT JOIN tbl_users as user_autor ON tbl_solicitud_devolucion.tbl_users_idtbl_users_autor=user_autor.idtbl_users LEFT JOIN tbl_users as user_aprobacion ON tbl_solicitud_devolucion.tbl_users_idtbl_users_aprobacion=user_aprobacion.idtbl_users LEFT JOIN tbl_usuarios ON tbl_solicitud_devolucion.tbl_usuarios_idtbl_usuarios=tbl_usuarios.idtbl_usuarios WHERE (tbl_solicitud_devolucion.uid LIKE '%$buscar%' OR tbl_solicitud_devolucion.fecha_creacion LIKE '%$buscar%' OR tbl_proyectos.numero_proyecto LIKE '%$buscar%' OR user_autor.nombre LIKE '%$buscar%' OR user_aprobacion.nombre LIKE '%$buscar%' OR user_ag.nombre LIKE '%$buscar%' OR CONCAT(tbl_usuarios.nombres,' ',tbl_usuarios.apellido_paterno,' ',tbl_usuarios.apellido_materno) LIKE '%$buscar%') AND " . $string . "tbl_solicitud_devolucion.tipo_devolucion = 'Almacen General' ". $status ." ORDER BY tbl_solicitud_devolucion.idtbl_solicitud_devolucion DESC " . $limit);
		}
		if($this->session->userdata('encargado_almacen') != null && $this->session->userdata('encargado_almacen') != '') {
			$id_almacenes = '';
			$string = "user_autor.idtbl_users = " . $this->session->userdata('id');
			$usuario = $this->session->userdata('id');
			$almacenes_encargados = $this->db->query("SELECT tbl_almacenes.tbl_proyectos_idtbl_proyectos FROM tbl_encargado_almacen JOIN tbl_almacenes ON tbl_almacenes.idtbl_almacenes = tbl_encargado_almacen.tbl_almacenes_idtbl_almacenes WHERE tbl_encargado_almacen.tbl_users_idtbl_users = $usuario GROUP BY tbl_almacenes.tbl_proyectos_idtbl_proyectos");
			foreach($almacenes_encargados->result() AS $key => $value){
                if (isset($almacenes_encargados->result()[$key+1]->tbl_proyectos_idtbl_proyectos)) {
                    	$id_almacenes .= $value->tbl_proyectos_idtbl_proyectos.', ';
                }else{
					$id_almacenes .= $value->tbl_proyectos_idtbl_proyectos;
				}
			}

			if($id_almacenes != ''){
				$in = "IN ($id_almacenes)";
			}else{
				$in = '';
			}			
			
			$query = $this->db->query("SELECT tbl_proyectos.nombre_proyecto, tbl_proyectos.numero_proyecto, tbl_solicitud_devolucion.*, user_autor.nombre as user_autor, user_aprobacion.nombre as user_aprobacion, user_ag.nombre as user_almacen_general, CONCAT(tbl_usuarios.nombres,' ',tbl_usuarios.apellido_paterno,' ',tbl_usuarios.apellido_materno) as recibe FROM tbl_solicitud_devolucion LEFT JOIN tbl_users as user_ag ON user_ag.idtbl_users = tbl_solicitud_devolucion.tbl_users_idtbl_users_aprobar_ag LEFT JOIN tbl_proyectos ON tbl_solicitud_devolucion.tbl_proyectos_idtbl_proyectos=tbl_proyectos.idtbl_proyectos LEFT JOIN tbl_users as user_autor ON tbl_solicitud_devolucion.tbl_users_idtbl_users_autor=user_autor.idtbl_users LEFT JOIN tbl_users as user_aprobacion ON tbl_solicitud_devolucion.tbl_users_idtbl_users_aprobacion=user_aprobacion.idtbl_users LEFT JOIN tbl_usuarios ON tbl_solicitud_devolucion.tbl_usuarios_idtbl_usuarios=tbl_usuarios.idtbl_usuarios WHERE (tbl_solicitud_devolucion.uid LIKE '%$buscar%' OR tbl_solicitud_devolucion.fecha_creacion LIKE '%$buscar%' OR tbl_proyectos.numero_proyecto LIKE '%$buscar%' OR user_autor.nombre LIKE '%$buscar%' OR user_aprobacion.nombre LIKE '%$buscar%' OR user_ag.nombre LIKE '%$buscar%' OR CONCAT(tbl_usuarios.nombres,' ',tbl_usuarios.apellido_paterno,' ',tbl_usuarios.apellido_materno) LIKE '%$buscar%') AND (tbl_solicitud_devolucion.tbl_segmentos_proyecto_idtbl_segmentos_proyecto = 321 AND tbl_solicitud_devolucion.tbl_proyectos_idtbl_proyectos $in OR " . $string . ") AND tbl_solicitud_devolucion.tbl_users_idtbl_users_aprobacion IS NOT NULL AND tbl_solicitud_devolucion.tipo_devolucion = 'Almacen General' ". $status ." ORDER BY tbl_solicitud_devolucion.idtbl_solicitud_devolucion DESC " . $limit);
		}else{
			
			$query = $this->db->query("SELECT tbl_proyectos.nombre_proyecto, tbl_proyectos.numero_proyecto, tbl_solicitud_devolucion.*, user_autor.nombre as user_autor, user_aprobacion.nombre as user_aprobacion, user_ag.nombre as user_almacen_general, CONCAT(tbl_usuarios.nombres,' ',tbl_usuarios.apellido_paterno,' ',tbl_usuarios.apellido_materno) as recibe FROM tbl_solicitud_devolucion LEFT JOIN tbl_users as user_ag ON user_ag.idtbl_users = tbl_solicitud_devolucion.tbl_users_idtbl_users_aprobar_ag LEFT JOIN tbl_proyectos ON tbl_solicitud_devolucion.tbl_proyectos_idtbl_proyectos=tbl_proyectos.idtbl_proyectos LEFT JOIN tbl_users as user_autor ON tbl_solicitud_devolucion.tbl_users_idtbl_users_autor=user_autor.idtbl_users LEFT JOIN tbl_users as user_aprobacion ON tbl_solicitud_devolucion.tbl_users_idtbl_users_aprobacion=user_aprobacion.idtbl_users LEFT JOIN tbl_usuarios ON tbl_solicitud_devolucion.tbl_usuarios_idtbl_usuarios=tbl_usuarios.idtbl_usuarios WHERE (tbl_solicitud_devolucion.uid LIKE '%$buscar%' OR tbl_solicitud_devolucion.fecha_creacion LIKE '%$buscar%' OR tbl_proyectos.numero_proyecto LIKE '%$buscar%' OR user_autor.nombre LIKE '%$buscar%' OR user_aprobacion.nombre LIKE '%$buscar%' OR user_ag.nombre LIKE '%$buscar%' OR CONCAT(tbl_usuarios.nombres,' ',tbl_usuarios.apellido_paterno,' ',tbl_usuarios.apellido_materno) LIKE '%$buscar%') AND " . "tbl_solicitud_devolucion.tipo_devolucion = 'Almacen General' ". $status ." ORDER BY tbl_solicitud_devolucion.idtbl_solicitud_devolucion DESC " . $limit);
		}
		
		return $query->result_array();
	}

	public function solicitudes_devolucionesCentro($buscar = '', $buscar2 = '', $inicio = false, $cantidadRegistro = false) {
		$limit = '';
		if ($inicio !== false && $cantidadRegistro !== false) {
			$limit = 'LIMIT ' . $inicio . "," . $cantidadRegistro;
		}		
		if ($buscar2 == '') {
			$status = "";
		}
		if ($buscar2 != '') {
			$status = "AND (tbl_solicitud_devolucion.estatus_solicitud = '$buscar2')";
		}
		$string = "";
		if ($this->session->userdata('tipo') == 4) {
			$string = "tbl_solicitud_devolucion.tbl_users_idtbl_users_aprobacion IS NOT NULL AND ";
			$query = $this->db->query("SELECT tbl_proyectos.nombre_proyecto, tbl_proyectos.numero_proyecto, tbl_solicitud_devolucion.*, user_autor.nombre as user_autor, user_aprobacion.nombre as user_aprobacion, user_ag.nombre as user_almacen_general, CONCAT(tbl_usuarios.nombres,' ',tbl_usuarios.apellido_paterno,' ',tbl_usuarios.apellido_materno) as recibe FROM tbl_solicitud_devolucion LEFT JOIN tbl_users as user_ag ON user_ag.idtbl_users = tbl_solicitud_devolucion.tbl_users_idtbl_users_aprobar_ag LEFT JOIN tbl_proyectos ON tbl_solicitud_devolucion.tbl_proyectos_idtbl_proyectos=tbl_proyectos.idtbl_proyectos LEFT JOIN tbl_users as user_autor ON tbl_solicitud_devolucion.tbl_users_idtbl_users_autor=user_autor.idtbl_users LEFT JOIN tbl_users as user_aprobacion ON tbl_solicitud_devolucion.tbl_users_idtbl_users_aprobacion=user_aprobacion.idtbl_users LEFT JOIN tbl_usuarios ON tbl_solicitud_devolucion.tbl_usuarios_idtbl_usuarios=tbl_usuarios.idtbl_usuarios WHERE (tbl_solicitud_devolucion.uid LIKE '%$buscar%' OR tbl_solicitud_devolucion.fecha_creacion LIKE '%$buscar%' OR tbl_proyectos.numero_proyecto LIKE '%$buscar%' OR user_autor.nombre LIKE '%$buscar%' OR user_aprobacion.nombre LIKE '%$buscar%' OR user_ag.nombre LIKE '%$buscar%' OR CONCAT(tbl_usuarios.nombres,' ',tbl_usuarios.apellido_paterno,' ',tbl_usuarios.apellido_materno) LIKE '%$buscar%') AND " . $string . "tbl_solicitud_devolucion.tipo_devolucion = 'Almacen General' ". $status ." ORDER BY tbl_solicitud_devolucion.idtbl_solicitud_devolucion DESC " . $limit);
		}
		if ($this->session->userdata('tipo') == 5 || $this->session->userdata('tipo') == 9 || $this->session->userdata('tipo') == 10) {
			$string = "user_autor.idtbl_users = " . $this->session->userdata('id') . " AND ";
			$query = $this->db->query("SELECT tbl_proyectos.nombre_proyecto, tbl_proyectos.numero_proyecto, tbl_solicitud_devolucion.*, user_autor.nombre as user_autor, user_aprobacion.nombre as user_aprobacion, user_ag.nombre as user_almacen_general, CONCAT(tbl_usuarios.nombres,' ',tbl_usuarios.apellido_paterno,' ',tbl_usuarios.apellido_materno) as recibe FROM tbl_solicitud_devolucion LEFT JOIN tbl_users as user_ag ON user_ag.idtbl_users = tbl_solicitud_devolucion.tbl_users_idtbl_users_aprobar_ag LEFT JOIN tbl_proyectos ON tbl_solicitud_devolucion.tbl_proyectos_idtbl_proyectos=tbl_proyectos.idtbl_proyectos LEFT JOIN tbl_users as user_autor ON tbl_solicitud_devolucion.tbl_users_idtbl_users_autor=user_autor.idtbl_users LEFT JOIN tbl_users as user_aprobacion ON tbl_solicitud_devolucion.tbl_users_idtbl_users_aprobacion=user_aprobacion.idtbl_users LEFT JOIN tbl_usuarios ON tbl_solicitud_devolucion.tbl_usuarios_idtbl_usuarios=tbl_usuarios.idtbl_usuarios WHERE (tbl_solicitud_devolucion.uid LIKE '%$buscar%' OR tbl_solicitud_devolucion.fecha_creacion LIKE '%$buscar%' OR tbl_proyectos.numero_proyecto LIKE '%$buscar%' OR user_autor.nombre LIKE '%$buscar%' OR user_aprobacion.nombre LIKE '%$buscar%' OR user_ag.nombre LIKE '%$buscar%' OR CONCAT(tbl_usuarios.nombres,' ',tbl_usuarios.apellido_paterno,' ',tbl_usuarios.apellido_materno) LIKE '%$buscar%') AND " . $string . "tbl_solicitud_devolucion.tipo_devolucion = 'Almacen General' ". $status ." ORDER BY tbl_solicitud_devolucion.idtbl_solicitud_devolucion DESC " . $limit);
		}
		if($this->session->userdata('encargado_almacen') != null && $this->session->userdata('encargado_almacen') != '') {
			$id_almacenes = '';
			$string = "user_autor.idtbl_users = " . $this->session->userdata('id');
			$usuario = $this->session->userdata('id');
			$almacenes_encargados = $this->db->query("SELECT tbl_almacenes.tbl_proyectos_idtbl_proyectos FROM tbl_encargado_almacen JOIN tbl_almacenes ON tbl_almacenes.idtbl_almacenes = tbl_encargado_almacen.tbl_almacenes_idtbl_almacenes WHERE tbl_encargado_almacen.tbl_users_idtbl_users = $usuario GROUP BY tbl_almacenes.tbl_proyectos_idtbl_proyectos");
			foreach($almacenes_encargados->result() AS $key => $value){
                if (isset($almacenes_encargados->result()[$key+1]->tbl_proyectos_idtbl_proyectos)) {
                    	$id_almacenes .= $value->tbl_proyectos_idtbl_proyectos.', ';
                }else{
					$id_almacenes .= $value->tbl_proyectos_idtbl_proyectos;
				}
			}

			if($id_almacenes != ''){
				$in = "IN ($id_almacenes)";
			}else{
				$in = '';
			}			
			
			$query = $this->db->query("SELECT tbl_proyectos.nombre_proyecto, tbl_proyectos.numero_proyecto, tbl_solicitud_devolucion.*, user_autor.nombre as user_autor, user_aprobacion.nombre as user_aprobacion, user_ag.nombre as user_almacen_general, CONCAT(tbl_usuarios.nombres,' ',tbl_usuarios.apellido_paterno,' ',tbl_usuarios.apellido_materno) as recibe FROM tbl_solicitud_devolucion LEFT JOIN tbl_users as user_ag ON user_ag.idtbl_users = tbl_solicitud_devolucion.tbl_users_idtbl_users_aprobar_ag LEFT JOIN tbl_proyectos ON tbl_solicitud_devolucion.tbl_proyectos_idtbl_proyectos=tbl_proyectos.idtbl_proyectos LEFT JOIN tbl_users as user_autor ON tbl_solicitud_devolucion.tbl_users_idtbl_users_autor=user_autor.idtbl_users LEFT JOIN tbl_users as user_aprobacion ON tbl_solicitud_devolucion.tbl_users_idtbl_users_aprobacion=user_aprobacion.idtbl_users LEFT JOIN tbl_usuarios ON tbl_solicitud_devolucion.tbl_usuarios_idtbl_usuarios=tbl_usuarios.idtbl_usuarios WHERE (tbl_solicitud_devolucion.uid LIKE '%$buscar%' OR tbl_solicitud_devolucion.fecha_creacion LIKE '%$buscar%' OR tbl_proyectos.numero_proyecto LIKE '%$buscar%' OR user_autor.nombre LIKE '%$buscar%' OR user_aprobacion.nombre LIKE '%$buscar%' OR user_ag.nombre LIKE '%$buscar%' OR CONCAT(tbl_usuarios.nombres,' ',tbl_usuarios.apellido_paterno,' ',tbl_usuarios.apellido_materno) LIKE '%$buscar%') AND (tbl_solicitud_devolucion.tbl_segmentos_proyecto_idtbl_segmentos_proyecto = 313 AND tbl_solicitud_devolucion.tbl_proyectos_idtbl_proyectos $in OR " . $string . ") AND tbl_solicitud_devolucion.tbl_users_idtbl_users_aprobacion IS NOT NULL AND tbl_solicitud_devolucion.tipo_devolucion = 'Almacen General' ". $status ." ORDER BY tbl_solicitud_devolucion.idtbl_solicitud_devolucion DESC " . $limit);
		}else{
			
			$query = $this->db->query("SELECT tbl_proyectos.nombre_proyecto, tbl_proyectos.numero_proyecto, tbl_solicitud_devolucion.*, user_autor.nombre as user_autor, user_aprobacion.nombre as user_aprobacion, user_ag.nombre as user_almacen_general, CONCAT(tbl_usuarios.nombres,' ',tbl_usuarios.apellido_paterno,' ',tbl_usuarios.apellido_materno) as recibe FROM tbl_solicitud_devolucion LEFT JOIN tbl_users as user_ag ON user_ag.idtbl_users = tbl_solicitud_devolucion.tbl_users_idtbl_users_aprobar_ag LEFT JOIN tbl_proyectos ON tbl_solicitud_devolucion.tbl_proyectos_idtbl_proyectos=tbl_proyectos.idtbl_proyectos LEFT JOIN tbl_users as user_autor ON tbl_solicitud_devolucion.tbl_users_idtbl_users_autor=user_autor.idtbl_users LEFT JOIN tbl_users as user_aprobacion ON tbl_solicitud_devolucion.tbl_users_idtbl_users_aprobacion=user_aprobacion.idtbl_users LEFT JOIN tbl_usuarios ON tbl_solicitud_devolucion.tbl_usuarios_idtbl_usuarios=tbl_usuarios.idtbl_usuarios WHERE (tbl_solicitud_devolucion.uid LIKE '%$buscar%' OR tbl_solicitud_devolucion.fecha_creacion LIKE '%$buscar%' OR tbl_proyectos.numero_proyecto LIKE '%$buscar%' OR user_autor.nombre LIKE '%$buscar%' OR user_aprobacion.nombre LIKE '%$buscar%' OR user_ag.nombre LIKE '%$buscar%' OR CONCAT(tbl_usuarios.nombres,' ',tbl_usuarios.apellido_paterno,' ',tbl_usuarios.apellido_materno) LIKE '%$buscar%') AND " . "tbl_solicitud_devolucion.tipo_devolucion = 'Almacen General' ". $status ." ORDER BY tbl_solicitud_devolucion.idtbl_solicitud_devolucion DESC " . $limit);
		}
		
		return $query->result_array();
	}

	public function solicitudes_devolucionesIlustres($buscar = '', $buscar2 = '', $inicio = false, $cantidadRegistro = false) {
		$limit = '';
		if ($inicio !== false && $cantidadRegistro !== false) {
			$limit = 'LIMIT ' . $inicio . "," . $cantidadRegistro;
		}		
		if ($buscar2 == '') {
			$status = "";
		}
		if ($buscar2 != '') {
			$status = "AND (tbl_solicitud_devolucion.estatus_solicitud = '$buscar2')";
		}
		$string = "";
		if ($this->session->userdata('tipo') == 4) {
			$string = "tbl_solicitud_devolucion.tbl_users_idtbl_users_aprobacion IS NOT NULL AND ";
			$query = $this->db->query("SELECT tbl_proyectos.nombre_proyecto, tbl_proyectos.numero_proyecto, tbl_solicitud_devolucion.*, user_autor.nombre as user_autor, user_aprobacion.nombre as user_aprobacion, user_ag.nombre as user_almacen_general, CONCAT(tbl_usuarios.nombres,' ',tbl_usuarios.apellido_paterno,' ',tbl_usuarios.apellido_materno) as recibe FROM tbl_solicitud_devolucion LEFT JOIN tbl_users as user_ag ON user_ag.idtbl_users = tbl_solicitud_devolucion.tbl_users_idtbl_users_aprobar_ag LEFT JOIN tbl_proyectos ON tbl_solicitud_devolucion.tbl_proyectos_idtbl_proyectos=tbl_proyectos.idtbl_proyectos LEFT JOIN tbl_users as user_autor ON tbl_solicitud_devolucion.tbl_users_idtbl_users_autor=user_autor.idtbl_users LEFT JOIN tbl_users as user_aprobacion ON tbl_solicitud_devolucion.tbl_users_idtbl_users_aprobacion=user_aprobacion.idtbl_users LEFT JOIN tbl_usuarios ON tbl_solicitud_devolucion.tbl_usuarios_idtbl_usuarios=tbl_usuarios.idtbl_usuarios WHERE (tbl_solicitud_devolucion.uid LIKE '%$buscar%' OR tbl_solicitud_devolucion.fecha_creacion LIKE '%$buscar%' OR tbl_proyectos.numero_proyecto LIKE '%$buscar%' OR user_autor.nombre LIKE '%$buscar%' OR user_aprobacion.nombre LIKE '%$buscar%' OR user_ag.nombre LIKE '%$buscar%' OR CONCAT(tbl_usuarios.nombres,' ',tbl_usuarios.apellido_paterno,' ',tbl_usuarios.apellido_materno) LIKE '%$buscar%') AND " . $string . "tbl_solicitud_devolucion.tipo_devolucion = 'Almacen General' ". $status ." ORDER BY tbl_solicitud_devolucion.idtbl_solicitud_devolucion DESC " . $limit);
		}
		if ($this->session->userdata('tipo') == 5 || $this->session->userdata('tipo') == 9 || $this->session->userdata('tipo') == 10) {
			$string = "user_autor.idtbl_users = " . $this->session->userdata('id') . " AND ";
			$query = $this->db->query("SELECT tbl_proyectos.nombre_proyecto, tbl_proyectos.numero_proyecto, tbl_solicitud_devolucion.*, user_autor.nombre as user_autor, user_aprobacion.nombre as user_aprobacion, user_ag.nombre as user_almacen_general, CONCAT(tbl_usuarios.nombres,' ',tbl_usuarios.apellido_paterno,' ',tbl_usuarios.apellido_materno) as recibe FROM tbl_solicitud_devolucion LEFT JOIN tbl_users as user_ag ON user_ag.idtbl_users = tbl_solicitud_devolucion.tbl_users_idtbl_users_aprobar_ag LEFT JOIN tbl_proyectos ON tbl_solicitud_devolucion.tbl_proyectos_idtbl_proyectos=tbl_proyectos.idtbl_proyectos LEFT JOIN tbl_users as user_autor ON tbl_solicitud_devolucion.tbl_users_idtbl_users_autor=user_autor.idtbl_users LEFT JOIN tbl_users as user_aprobacion ON tbl_solicitud_devolucion.tbl_users_idtbl_users_aprobacion=user_aprobacion.idtbl_users LEFT JOIN tbl_usuarios ON tbl_solicitud_devolucion.tbl_usuarios_idtbl_usuarios=tbl_usuarios.idtbl_usuarios WHERE (tbl_solicitud_devolucion.uid LIKE '%$buscar%' OR tbl_solicitud_devolucion.fecha_creacion LIKE '%$buscar%' OR tbl_proyectos.numero_proyecto LIKE '%$buscar%' OR user_autor.nombre LIKE '%$buscar%' OR user_aprobacion.nombre LIKE '%$buscar%' OR user_ag.nombre LIKE '%$buscar%' OR CONCAT(tbl_usuarios.nombres,' ',tbl_usuarios.apellido_paterno,' ',tbl_usuarios.apellido_materno) LIKE '%$buscar%') AND " . $string . "tbl_solicitud_devolucion.tipo_devolucion = 'Almacen General' ". $status ." ORDER BY tbl_solicitud_devolucion.idtbl_solicitud_devolucion DESC " . $limit);
		}
		if($this->session->userdata('encargado_almacen') != null && $this->session->userdata('encargado_almacen') != '') {
			$id_almacenes = '';
			$string = "user_autor.idtbl_users = " . $this->session->userdata('id');
			$usuario = $this->session->userdata('id');
			$almacenes_encargados = $this->db->query("SELECT tbl_almacenes.tbl_proyectos_idtbl_proyectos FROM tbl_encargado_almacen JOIN tbl_almacenes ON tbl_almacenes.idtbl_almacenes = tbl_encargado_almacen.tbl_almacenes_idtbl_almacenes WHERE tbl_encargado_almacen.tbl_users_idtbl_users = $usuario GROUP BY tbl_almacenes.tbl_proyectos_idtbl_proyectos");
			foreach($almacenes_encargados->result() AS $key => $value){
                if (isset($almacenes_encargados->result()[$key+1]->tbl_proyectos_idtbl_proyectos)) {
                    	$id_almacenes .= $value->tbl_proyectos_idtbl_proyectos.', ';
                }else{
					$id_almacenes .= $value->tbl_proyectos_idtbl_proyectos;
				}
			}

			if($id_almacenes != ''){
				$in = "IN ($id_almacenes)";
			}else{
				$in = '';
			}			
			
			$query = $this->db->query("SELECT tbl_proyectos.nombre_proyecto, tbl_proyectos.numero_proyecto, tbl_solicitud_devolucion.*, user_autor.nombre as user_autor, user_aprobacion.nombre as user_aprobacion, user_ag.nombre as user_almacen_general, CONCAT(tbl_usuarios.nombres,' ',tbl_usuarios.apellido_paterno,' ',tbl_usuarios.apellido_materno) as recibe FROM tbl_solicitud_devolucion LEFT JOIN tbl_users as user_ag ON user_ag.idtbl_users = tbl_solicitud_devolucion.tbl_users_idtbl_users_aprobar_ag LEFT JOIN tbl_proyectos ON tbl_solicitud_devolucion.tbl_proyectos_idtbl_proyectos=tbl_proyectos.idtbl_proyectos LEFT JOIN tbl_users as user_autor ON tbl_solicitud_devolucion.tbl_users_idtbl_users_autor=user_autor.idtbl_users LEFT JOIN tbl_users as user_aprobacion ON tbl_solicitud_devolucion.tbl_users_idtbl_users_aprobacion=user_aprobacion.idtbl_users LEFT JOIN tbl_usuarios ON tbl_solicitud_devolucion.tbl_usuarios_idtbl_usuarios=tbl_usuarios.idtbl_usuarios WHERE (tbl_solicitud_devolucion.uid LIKE '%$buscar%' OR tbl_solicitud_devolucion.fecha_creacion LIKE '%$buscar%' OR tbl_proyectos.numero_proyecto LIKE '%$buscar%' OR user_autor.nombre LIKE '%$buscar%' OR user_aprobacion.nombre LIKE '%$buscar%' OR user_ag.nombre LIKE '%$buscar%' OR CONCAT(tbl_usuarios.nombres,' ',tbl_usuarios.apellido_paterno,' ',tbl_usuarios.apellido_materno) LIKE '%$buscar%') AND (tbl_solicitud_devolucion.tbl_segmentos_proyecto_idtbl_segmentos_proyecto = 314 AND tbl_solicitud_devolucion.tbl_proyectos_idtbl_proyectos $in OR " . $string . ") AND tbl_solicitud_devolucion.tbl_users_idtbl_users_aprobacion IS NOT NULL AND tbl_solicitud_devolucion.tipo_devolucion = 'Almacen General' ". $status ." ORDER BY tbl_solicitud_devolucion.idtbl_solicitud_devolucion DESC " . $limit);
		}else{
			
			$query = $this->db->query("SELECT tbl_proyectos.nombre_proyecto, tbl_proyectos.numero_proyecto, tbl_solicitud_devolucion.*, user_autor.nombre as user_autor, user_aprobacion.nombre as user_aprobacion, user_ag.nombre as user_almacen_general, CONCAT(tbl_usuarios.nombres,' ',tbl_usuarios.apellido_paterno,' ',tbl_usuarios.apellido_materno) as recibe FROM tbl_solicitud_devolucion LEFT JOIN tbl_users as user_ag ON user_ag.idtbl_users = tbl_solicitud_devolucion.tbl_users_idtbl_users_aprobar_ag LEFT JOIN tbl_proyectos ON tbl_solicitud_devolucion.tbl_proyectos_idtbl_proyectos=tbl_proyectos.idtbl_proyectos LEFT JOIN tbl_users as user_autor ON tbl_solicitud_devolucion.tbl_users_idtbl_users_autor=user_autor.idtbl_users LEFT JOIN tbl_users as user_aprobacion ON tbl_solicitud_devolucion.tbl_users_idtbl_users_aprobacion=user_aprobacion.idtbl_users LEFT JOIN tbl_usuarios ON tbl_solicitud_devolucion.tbl_usuarios_idtbl_usuarios=tbl_usuarios.idtbl_usuarios WHERE (tbl_solicitud_devolucion.uid LIKE '%$buscar%' OR tbl_solicitud_devolucion.fecha_creacion LIKE '%$buscar%' OR tbl_proyectos.numero_proyecto LIKE '%$buscar%' OR user_autor.nombre LIKE '%$buscar%' OR user_aprobacion.nombre LIKE '%$buscar%' OR user_ag.nombre LIKE '%$buscar%' OR CONCAT(tbl_usuarios.nombres,' ',tbl_usuarios.apellido_paterno,' ',tbl_usuarios.apellido_materno) LIKE '%$buscar%') AND " . "tbl_solicitud_devolucion.tipo_devolucion = 'Almacen General' ". $status ." ORDER BY tbl_solicitud_devolucion.idtbl_solicitud_devolucion DESC " . $limit);
		}
		
		return $query->result_array();
	}

	public function solicitudes_devolucionesAcereros($buscar = '', $buscar2 = '', $inicio = false, $cantidadRegistro = false) {
		$limit = '';
		if ($inicio !== false && $cantidadRegistro !== false) {
			$limit = 'LIMIT ' . $inicio . "," . $cantidadRegistro;
		}		
		if ($buscar2 == '') {
			$status = "";
		}
		if ($buscar2 != '') {
			$status = "AND (tbl_solicitud_devolucion.estatus_solicitud = '$buscar2')";
		}
		$string = "";
		if ($this->session->userdata('tipo') == 4) {
			$string = "tbl_solicitud_devolucion.tbl_users_idtbl_users_aprobacion IS NOT NULL AND ";
			$query = $this->db->query("SELECT tbl_proyectos.nombre_proyecto, tbl_proyectos.numero_proyecto, tbl_solicitud_devolucion.*, user_autor.nombre as user_autor, user_aprobacion.nombre as user_aprobacion, user_ag.nombre as user_almacen_general, CONCAT(tbl_usuarios.nombres,' ',tbl_usuarios.apellido_paterno,' ',tbl_usuarios.apellido_materno) as recibe FROM tbl_solicitud_devolucion LEFT JOIN tbl_users as user_ag ON user_ag.idtbl_users = tbl_solicitud_devolucion.tbl_users_idtbl_users_aprobar_ag LEFT JOIN tbl_proyectos ON tbl_solicitud_devolucion.tbl_proyectos_idtbl_proyectos=tbl_proyectos.idtbl_proyectos LEFT JOIN tbl_users as user_autor ON tbl_solicitud_devolucion.tbl_users_idtbl_users_autor=user_autor.idtbl_users LEFT JOIN tbl_users as user_aprobacion ON tbl_solicitud_devolucion.tbl_users_idtbl_users_aprobacion=user_aprobacion.idtbl_users LEFT JOIN tbl_usuarios ON tbl_solicitud_devolucion.tbl_usuarios_idtbl_usuarios=tbl_usuarios.idtbl_usuarios WHERE (tbl_solicitud_devolucion.uid LIKE '%$buscar%' OR tbl_solicitud_devolucion.fecha_creacion LIKE '%$buscar%' OR tbl_proyectos.numero_proyecto LIKE '%$buscar%' OR user_autor.nombre LIKE '%$buscar%' OR user_aprobacion.nombre LIKE '%$buscar%' OR user_ag.nombre LIKE '%$buscar%' OR CONCAT(tbl_usuarios.nombres,' ',tbl_usuarios.apellido_paterno,' ',tbl_usuarios.apellido_materno) LIKE '%$buscar%') AND " . $string . "tbl_solicitud_devolucion.tipo_devolucion = 'Almacen General' ". $status ." ORDER BY tbl_solicitud_devolucion.idtbl_solicitud_devolucion DESC " . $limit);
		}
		if ($this->session->userdata('tipo') == 5 || $this->session->userdata('tipo') == 9 || $this->session->userdata('tipo') == 10) {
			$string = "user_autor.idtbl_users = " . $this->session->userdata('id') . " AND ";
			$query = $this->db->query("SELECT tbl_proyectos.nombre_proyecto, tbl_proyectos.numero_proyecto, tbl_solicitud_devolucion.*, user_autor.nombre as user_autor, user_aprobacion.nombre as user_aprobacion, user_ag.nombre as user_almacen_general, CONCAT(tbl_usuarios.nombres,' ',tbl_usuarios.apellido_paterno,' ',tbl_usuarios.apellido_materno) as recibe FROM tbl_solicitud_devolucion LEFT JOIN tbl_users as user_ag ON user_ag.idtbl_users = tbl_solicitud_devolucion.tbl_users_idtbl_users_aprobar_ag LEFT JOIN tbl_proyectos ON tbl_solicitud_devolucion.tbl_proyectos_idtbl_proyectos=tbl_proyectos.idtbl_proyectos LEFT JOIN tbl_users as user_autor ON tbl_solicitud_devolucion.tbl_users_idtbl_users_autor=user_autor.idtbl_users LEFT JOIN tbl_users as user_aprobacion ON tbl_solicitud_devolucion.tbl_users_idtbl_users_aprobacion=user_aprobacion.idtbl_users LEFT JOIN tbl_usuarios ON tbl_solicitud_devolucion.tbl_usuarios_idtbl_usuarios=tbl_usuarios.idtbl_usuarios WHERE (tbl_solicitud_devolucion.uid LIKE '%$buscar%' OR tbl_solicitud_devolucion.fecha_creacion LIKE '%$buscar%' OR tbl_proyectos.numero_proyecto LIKE '%$buscar%' OR user_autor.nombre LIKE '%$buscar%' OR user_aprobacion.nombre LIKE '%$buscar%' OR user_ag.nombre LIKE '%$buscar%' OR CONCAT(tbl_usuarios.nombres,' ',tbl_usuarios.apellido_paterno,' ',tbl_usuarios.apellido_materno) LIKE '%$buscar%') AND " . $string . "tbl_solicitud_devolucion.tipo_devolucion = 'Almacen General' ". $status ." ORDER BY tbl_solicitud_devolucion.idtbl_solicitud_devolucion DESC " . $limit);
		}
		if($this->session->userdata('encargado_almacen') != null && $this->session->userdata('encargado_almacen') != '') {
			$id_almacenes = '';
			$string = "user_autor.idtbl_users = " . $this->session->userdata('id');
			$usuario = $this->session->userdata('id');
			$almacenes_encargados = $this->db->query("SELECT tbl_almacenes.tbl_proyectos_idtbl_proyectos FROM tbl_encargado_almacen JOIN tbl_almacenes ON tbl_almacenes.idtbl_almacenes = tbl_encargado_almacen.tbl_almacenes_idtbl_almacenes WHERE tbl_encargado_almacen.tbl_users_idtbl_users = $usuario GROUP BY tbl_almacenes.tbl_proyectos_idtbl_proyectos");
			foreach($almacenes_encargados->result() AS $key => $value){
                if (isset($almacenes_encargados->result()[$key+1]->tbl_proyectos_idtbl_proyectos)) {
                    	$id_almacenes .= $value->tbl_proyectos_idtbl_proyectos.', ';
                }else{
					$id_almacenes .= $value->tbl_proyectos_idtbl_proyectos;
				}
			}

			if($id_almacenes != ''){
				$in = "IN ($id_almacenes)";
			}else{
				$in = '';
			}			
			
			$query = $this->db->query("SELECT tbl_proyectos.nombre_proyecto, tbl_proyectos.numero_proyecto, tbl_solicitud_devolucion.*, user_autor.nombre as user_autor, user_aprobacion.nombre as user_aprobacion, user_ag.nombre as user_almacen_general, CONCAT(tbl_usuarios.nombres,' ',tbl_usuarios.apellido_paterno,' ',tbl_usuarios.apellido_materno) as recibe FROM tbl_solicitud_devolucion LEFT JOIN tbl_users as user_ag ON user_ag.idtbl_users = tbl_solicitud_devolucion.tbl_users_idtbl_users_aprobar_ag LEFT JOIN tbl_proyectos ON tbl_solicitud_devolucion.tbl_proyectos_idtbl_proyectos=tbl_proyectos.idtbl_proyectos LEFT JOIN tbl_users as user_autor ON tbl_solicitud_devolucion.tbl_users_idtbl_users_autor=user_autor.idtbl_users LEFT JOIN tbl_users as user_aprobacion ON tbl_solicitud_devolucion.tbl_users_idtbl_users_aprobacion=user_aprobacion.idtbl_users LEFT JOIN tbl_usuarios ON tbl_solicitud_devolucion.tbl_usuarios_idtbl_usuarios=tbl_usuarios.idtbl_usuarios WHERE (tbl_solicitud_devolucion.uid LIKE '%$buscar%' OR tbl_solicitud_devolucion.fecha_creacion LIKE '%$buscar%' OR tbl_proyectos.numero_proyecto LIKE '%$buscar%' OR user_autor.nombre LIKE '%$buscar%' OR user_aprobacion.nombre LIKE '%$buscar%' OR user_ag.nombre LIKE '%$buscar%' OR CONCAT(tbl_usuarios.nombres,' ',tbl_usuarios.apellido_paterno,' ',tbl_usuarios.apellido_materno) LIKE '%$buscar%') AND (tbl_solicitud_devolucion.tbl_segmentos_proyecto_idtbl_segmentos_proyecto = 322 AND tbl_solicitud_devolucion.tbl_proyectos_idtbl_proyectos $in OR " . $string . ") AND tbl_solicitud_devolucion.tbl_users_idtbl_users_aprobacion IS NOT NULL AND tbl_solicitud_devolucion.tipo_devolucion = 'Almacen General' ". $status ." ORDER BY tbl_solicitud_devolucion.idtbl_solicitud_devolucion DESC " . $limit);
		}else{
			
			$query = $this->db->query("SELECT tbl_proyectos.nombre_proyecto, tbl_proyectos.numero_proyecto, tbl_solicitud_devolucion.*, user_autor.nombre as user_autor, user_aprobacion.nombre as user_aprobacion, user_ag.nombre as user_almacen_general, CONCAT(tbl_usuarios.nombres,' ',tbl_usuarios.apellido_paterno,' ',tbl_usuarios.apellido_materno) as recibe FROM tbl_solicitud_devolucion LEFT JOIN tbl_users as user_ag ON user_ag.idtbl_users = tbl_solicitud_devolucion.tbl_users_idtbl_users_aprobar_ag LEFT JOIN tbl_proyectos ON tbl_solicitud_devolucion.tbl_proyectos_idtbl_proyectos=tbl_proyectos.idtbl_proyectos LEFT JOIN tbl_users as user_autor ON tbl_solicitud_devolucion.tbl_users_idtbl_users_autor=user_autor.idtbl_users LEFT JOIN tbl_users as user_aprobacion ON tbl_solicitud_devolucion.tbl_users_idtbl_users_aprobacion=user_aprobacion.idtbl_users LEFT JOIN tbl_usuarios ON tbl_solicitud_devolucion.tbl_usuarios_idtbl_usuarios=tbl_usuarios.idtbl_usuarios WHERE (tbl_solicitud_devolucion.uid LIKE '%$buscar%' OR tbl_solicitud_devolucion.fecha_creacion LIKE '%$buscar%' OR tbl_proyectos.numero_proyecto LIKE '%$buscar%' OR user_autor.nombre LIKE '%$buscar%' OR user_aprobacion.nombre LIKE '%$buscar%' OR user_ag.nombre LIKE '%$buscar%' OR CONCAT(tbl_usuarios.nombres,' ',tbl_usuarios.apellido_paterno,' ',tbl_usuarios.apellido_materno) LIKE '%$buscar%') AND " . "tbl_solicitud_devolucion.tipo_devolucion = 'Almacen General' ". $status ." ORDER BY tbl_solicitud_devolucion.idtbl_solicitud_devolucion DESC " . $limit);
		}
		
		return $query->result_array();
	}

	public function solicitudes_devolucionesJalisco($buscar = '', $buscar2 = '', $inicio = false, $cantidadRegistro = false) {
		$limit = '';
		if ($inicio !== false && $cantidadRegistro !== false) {
			$limit = 'LIMIT ' . $inicio . "," . $cantidadRegistro;
		}		
		if ($buscar2 == '') {
			$status = "";
		}
		if ($buscar2 != '') {
			$status = "AND (tbl_solicitud_devolucion.estatus_solicitud = '$buscar2')";
		}
		$string = "";
		if ($this->session->userdata('tipo') == 4) {
			$string = "";
			$query = $this->db->query("SELECT tbl_proyectos.nombre_proyecto, tbl_proyectos.numero_proyecto, tbl_solicitud_devolucion.*, user_autor.nombre as user_autor, user_aprobacion.nombre as user_aprobacion, user_ag.nombre as user_almacen_general, CONCAT(tbl_usuarios.nombres,' ',tbl_usuarios.apellido_paterno,' ',tbl_usuarios.apellido_materno) as recibe FROM tbl_solicitud_devolucion LEFT JOIN tbl_users as user_ag ON user_ag.idtbl_users = tbl_solicitud_devolucion.tbl_users_idtbl_users_aprobar_ag LEFT JOIN tbl_proyectos ON tbl_solicitud_devolucion.tbl_proyectos_idtbl_proyectos=tbl_proyectos.idtbl_proyectos LEFT JOIN tbl_users as user_autor ON tbl_solicitud_devolucion.tbl_users_idtbl_users_autor=user_autor.idtbl_users LEFT JOIN tbl_users as user_aprobacion ON tbl_solicitud_devolucion.tbl_users_idtbl_users_aprobacion=user_aprobacion.idtbl_users LEFT JOIN tbl_usuarios ON tbl_solicitud_devolucion.tbl_usuarios_idtbl_usuarios=tbl_usuarios.idtbl_usuarios WHERE (tbl_solicitud_devolucion.uid LIKE '%$buscar%' OR tbl_solicitud_devolucion.fecha_creacion LIKE '%$buscar%' OR tbl_proyectos.numero_proyecto LIKE '%$buscar%' OR user_autor.nombre LIKE '%$buscar%' OR user_aprobacion.nombre LIKE '%$buscar%' OR user_ag.nombre LIKE '%$buscar%' OR CONCAT(tbl_usuarios.nombres,' ',tbl_usuarios.apellido_paterno,' ',tbl_usuarios.apellido_materno) LIKE '%$buscar%') AND (tbl_solicitud_devolucion.tbl_proyectos_idtbl_proyectos = 289) AND tbl_solicitud_devolucion.tipo_devolucion = 'Almacen General' ". $status ." ORDER BY tbl_solicitud_devolucion.idtbl_solicitud_devolucion DESC " . $limit);
		}
		if ($this->session->userdata('tipo') == 5 || $this->session->userdata('tipo') == 9 || $this->session->userdata('tipo') == 10) {
			$string = "user_autor.idtbl_users = " . $this->session->userdata('id') . " AND ";
			$query = $this->db->query("SELECT tbl_proyectos.nombre_proyecto, tbl_proyectos.numero_proyecto, tbl_solicitud_devolucion.*, user_autor.nombre as user_autor, user_aprobacion.nombre as user_aprobacion, user_ag.nombre as user_almacen_general, CONCAT(tbl_usuarios.nombres,' ',tbl_usuarios.apellido_paterno,' ',tbl_usuarios.apellido_materno) as recibe FROM tbl_solicitud_devolucion LEFT JOIN tbl_users as user_ag ON user_ag.idtbl_users = tbl_solicitud_devolucion.tbl_users_idtbl_users_aprobar_ag LEFT JOIN tbl_proyectos ON tbl_solicitud_devolucion.tbl_proyectos_idtbl_proyectos=tbl_proyectos.idtbl_proyectos LEFT JOIN tbl_users as user_autor ON tbl_solicitud_devolucion.tbl_users_idtbl_users_autor=user_autor.idtbl_users LEFT JOIN tbl_users as user_aprobacion ON tbl_solicitud_devolucion.tbl_users_idtbl_users_aprobacion=user_aprobacion.idtbl_users LEFT JOIN tbl_usuarios ON tbl_solicitud_devolucion.tbl_usuarios_idtbl_usuarios=tbl_usuarios.idtbl_usuarios WHERE (tbl_solicitud_devolucion.uid LIKE '%$buscar%' OR tbl_solicitud_devolucion.fecha_creacion LIKE '%$buscar%' OR tbl_proyectos.numero_proyecto LIKE '%$buscar%' OR user_autor.nombre LIKE '%$buscar%' OR user_aprobacion.nombre LIKE '%$buscar%' OR user_ag.nombre LIKE '%$buscar%' OR CONCAT(tbl_usuarios.nombres,' ',tbl_usuarios.apellido_paterno,' ',tbl_usuarios.apellido_materno) LIKE '%$buscar%') AND (tbl_solicitud_devolucion.tbl_proyectos_idtbl_proyectos = 289) AND tbl_solicitud_devolucion.tipo_devolucion = 'Almacen General' ". $status ." ORDER BY tbl_solicitud_devolucion.idtbl_solicitud_devolucion DESC " . $limit);

		}
		if($this->session->userdata('encargado_almacen') != null && $this->session->userdata('encargado_almacen') != '') {
			$id_almacenes = '';
			$string = "user_autor.idtbl_users = " . $this->session->userdata('id');
			$usuario = $this->session->userdata('id');
			$almacenes_encargados = $this->db->query("SELECT tbl_almacenes.tbl_proyectos_idtbl_proyectos FROM tbl_encargado_almacen JOIN tbl_almacenes ON tbl_almacenes.idtbl_almacenes = tbl_encargado_almacen.tbl_almacenes_idtbl_almacenes WHERE tbl_encargado_almacen.tbl_users_idtbl_users = $usuario GROUP BY tbl_almacenes.tbl_proyectos_idtbl_proyectos");
			foreach($almacenes_encargados->result() AS $key => $value){
                if (isset($almacenes_encargados->result()[$key+1]->tbl_proyectos_idtbl_proyectos)) {
                    	$id_almacenes .= $value->tbl_proyectos_idtbl_proyectos.', ';
                }else{
					$id_almacenes .= $value->tbl_proyectos_idtbl_proyectos;
				}
			}

			if($id_almacenes != ''){
				$in = "IN ($id_almacenes)";
			}else{
				$in = '';
			}			
			
			$query = $this->db->query("SELECT tbl_proyectos.nombre_proyecto, tbl_proyectos.numero_proyecto, tbl_solicitud_devolucion.*, user_autor.nombre as user_autor, user_aprobacion.nombre as user_aprobacion, user_ag.nombre as user_almacen_general, CONCAT(tbl_usuarios.nombres,' ',tbl_usuarios.apellido_paterno,' ',tbl_usuarios.apellido_materno) as recibe FROM tbl_solicitud_devolucion LEFT JOIN tbl_users as user_ag ON user_ag.idtbl_users = tbl_solicitud_devolucion.tbl_users_idtbl_users_aprobar_ag LEFT JOIN tbl_proyectos ON tbl_solicitud_devolucion.tbl_proyectos_idtbl_proyectos=tbl_proyectos.idtbl_proyectos LEFT JOIN tbl_users as user_autor ON tbl_solicitud_devolucion.tbl_users_idtbl_users_autor=user_autor.idtbl_users LEFT JOIN tbl_users as user_aprobacion ON tbl_solicitud_devolucion.tbl_users_idtbl_users_aprobacion=user_aprobacion.idtbl_users LEFT JOIN tbl_usuarios ON tbl_solicitud_devolucion.tbl_usuarios_idtbl_usuarios=tbl_usuarios.idtbl_usuarios WHERE (tbl_solicitud_devolucion.uid LIKE '%$buscar%' OR tbl_solicitud_devolucion.fecha_creacion LIKE '%$buscar%' OR tbl_proyectos.numero_proyecto LIKE '%$buscar%' OR user_autor.nombre LIKE '%$buscar%' OR user_aprobacion.nombre LIKE '%$buscar%' OR user_ag.nombre LIKE '%$buscar%' OR CONCAT(tbl_usuarios.nombres,' ',tbl_usuarios.apellido_paterno,' ',tbl_usuarios.apellido_materno) LIKE '%$buscar%') AND (tbl_solicitud_devolucion.tbl_proyectos_idtbl_proyectos = 289) AND (tbl_solicitud_devolucion.tipo_devolucion = 'Almacen General' OR tbl_solicitud_devolucion.tipo_devolucion = 'Seguridad e Higiene') ". $status ." ORDER BY tbl_solicitud_devolucion.idtbl_solicitud_devolucion DESC " . $limit);
		}else{
			
			$query = $this->db->query("SELECT tbl_proyectos.nombre_proyecto, tbl_proyectos.numero_proyecto, tbl_solicitud_devolucion.*, user_autor.nombre as user_autor, user_aprobacion.nombre as user_aprobacion, user_ag.nombre as user_almacen_general, CONCAT(tbl_usuarios.nombres,' ',tbl_usuarios.apellido_paterno,' ',tbl_usuarios.apellido_materno) as recibe FROM tbl_solicitud_devolucion LEFT JOIN tbl_users as user_ag ON user_ag.idtbl_users = tbl_solicitud_devolucion.tbl_users_idtbl_users_aprobar_ag LEFT JOIN tbl_proyectos ON tbl_solicitud_devolucion.tbl_proyectos_idtbl_proyectos=tbl_proyectos.idtbl_proyectos LEFT JOIN tbl_users as user_autor ON tbl_solicitud_devolucion.tbl_users_idtbl_users_autor=user_autor.idtbl_users LEFT JOIN tbl_users as user_aprobacion ON tbl_solicitud_devolucion.tbl_users_idtbl_users_aprobacion=user_aprobacion.idtbl_users LEFT JOIN tbl_usuarios ON tbl_solicitud_devolucion.tbl_usuarios_idtbl_usuarios=tbl_usuarios.idtbl_usuarios WHERE (tbl_solicitud_devolucion.uid LIKE '%$buscar%' OR tbl_solicitud_devolucion.fecha_creacion LIKE '%$buscar%' OR tbl_proyectos.numero_proyecto LIKE '%$buscar%' OR user_autor.nombre LIKE '%$buscar%' OR user_aprobacion.nombre LIKE '%$buscar%' OR user_ag.nombre LIKE '%$buscar%' OR CONCAT(tbl_usuarios.nombres,' ',tbl_usuarios.apellido_paterno,' ',tbl_usuarios.apellido_materno) LIKE '%$buscar%') AND (tbl_solicitud_devolucion.tbl_proyectos_idtbl_proyectos = 289) AND tbl_solicitud_devolucion.tipo_devolucion = 'Almacen General' ". $status ." ORDER BY tbl_solicitud_devolucion.idtbl_solicitud_devolucion DESC " . $limit);

		}
		
		return $query->result_array();
	}

	public function solicitudes_devolucionesAlmacenes($buscar = '', $buscar2 = '', $inicio = false, $cantidadRegistro = false) {
		$limit = '';
		$segmento = $this->input->post('segmento');
		if ($inicio !== false && $cantidadRegistro !== false) {
			$limit = 'LIMIT ' . $inicio . "," . $cantidadRegistro;
		}		
		if ($buscar2 == '') {
			$status = "";
		}
		if ($buscar2 != '') {
			$status = "AND (tbl_solicitud_devolucion.estatus_solicitud = '$buscar2')";
		}
		$string = "";
		if ($this->session->userdata('tipo') == 4) {
			$string = "tbl_solicitud_devolucion.tbl_users_idtbl_users_aprobacion IS NOT NULL AND ";
			$query = $this->db->query("SELECT tbl_proyectos.nombre_proyecto, tbl_proyectos.numero_proyecto, tbl_solicitud_devolucion.*, user_autor.nombre as user_autor, user_aprobacion.nombre as user_aprobacion, user_ag.nombre as user_almacen_general, CONCAT(tbl_usuarios.nombres,' ',tbl_usuarios.apellido_paterno,' ',tbl_usuarios.apellido_materno) as recibe FROM tbl_solicitud_devolucion LEFT JOIN tbl_users as user_ag ON user_ag.idtbl_users = tbl_solicitud_devolucion.tbl_users_idtbl_users_aprobar_ag LEFT JOIN tbl_proyectos ON tbl_solicitud_devolucion.tbl_proyectos_idtbl_proyectos=tbl_proyectos.idtbl_proyectos LEFT JOIN tbl_users as user_autor ON tbl_solicitud_devolucion.tbl_users_idtbl_users_autor=user_autor.idtbl_users LEFT JOIN tbl_users as user_aprobacion ON tbl_solicitud_devolucion.tbl_users_idtbl_users_aprobacion=user_aprobacion.idtbl_users LEFT JOIN tbl_usuarios ON tbl_solicitud_devolucion.tbl_usuarios_idtbl_usuarios=tbl_usuarios.idtbl_usuarios WHERE (tbl_solicitud_devolucion.uid LIKE '%$buscar%' OR tbl_solicitud_devolucion.fecha_creacion LIKE '%$buscar%' OR tbl_proyectos.numero_proyecto LIKE '%$buscar%' OR user_autor.nombre LIKE '%$buscar%' OR user_aprobacion.nombre LIKE '%$buscar%' OR user_ag.nombre LIKE '%$buscar%' OR CONCAT(tbl_usuarios.nombres,' ',tbl_usuarios.apellido_paterno,' ',tbl_usuarios.apellido_materno) LIKE '%$buscar%') AND " . $string . " AND (tbl_solicitud_devolucion.tbl_segmentos_proyecto_idtbl_segmentos_proyecto = $segmento OR " . $string . ") AND tbl_solicitud_devolucion.tipo_devolucion = 'Almacen General' ". $status ." ORDER BY tbl_solicitud_devolucion.idtbl_solicitud_devolucion DESC " . $limit);
		}
		if ($this->session->userdata('tipo') == 5 || $this->session->userdata('tipo') == 9 || $this->session->userdata('tipo') == 10) {
			$string = "user_autor.idtbl_users = " . $this->session->userdata('id');
			$query = $this->db->query("SELECT tbl_proyectos.nombre_proyecto, tbl_proyectos.numero_proyecto, tbl_solicitud_devolucion.*, user_autor.nombre as user_autor, user_aprobacion.nombre as user_aprobacion, user_ag.nombre as user_almacen_general, CONCAT(tbl_usuarios.nombres,' ',tbl_usuarios.apellido_paterno,' ',tbl_usuarios.apellido_materno) as recibe FROM tbl_solicitud_devolucion LEFT JOIN tbl_users as user_ag ON user_ag.idtbl_users = tbl_solicitud_devolucion.tbl_users_idtbl_users_aprobar_ag LEFT JOIN tbl_proyectos ON tbl_solicitud_devolucion.tbl_proyectos_idtbl_proyectos=tbl_proyectos.idtbl_proyectos LEFT JOIN tbl_users as user_autor ON tbl_solicitud_devolucion.tbl_users_idtbl_users_autor=user_autor.idtbl_users LEFT JOIN tbl_users as user_aprobacion ON tbl_solicitud_devolucion.tbl_users_idtbl_users_aprobacion=user_aprobacion.idtbl_users LEFT JOIN tbl_usuarios ON tbl_solicitud_devolucion.tbl_usuarios_idtbl_usuarios=tbl_usuarios.idtbl_usuarios WHERE (tbl_solicitud_devolucion.uid LIKE '%$buscar%' OR tbl_solicitud_devolucion.fecha_creacion LIKE '%$buscar%' OR tbl_proyectos.numero_proyecto LIKE '%$buscar%' OR user_autor.nombre LIKE '%$buscar%' OR user_aprobacion.nombre LIKE '%$buscar%' OR user_ag.nombre LIKE '%$buscar%' OR CONCAT(tbl_usuarios.nombres,' ',tbl_usuarios.apellido_paterno,' ',tbl_usuarios.apellido_materno) LIKE '%$buscar%') AND " . $string . " AND (tbl_solicitud_devolucion.tbl_segmentos_proyecto_idtbl_segmentos_proyecto = $segmento OR " . $string . ") AND tbl_solicitud_devolucion.tipo_devolucion = 'Almacen General' ". $status ." ORDER BY tbl_solicitud_devolucion.idtbl_solicitud_devolucion DESC " . $limit);
		}
		if($this->session->userdata('encargado_almacen') != null && $this->session->userdata('encargado_almacen') != '') {
			$id_almacenes = '';
			$string = "user_autor.idtbl_users = " . $this->session->userdata('id');
			$usuario = $this->session->userdata('id');
			$almacenes_encargados = $this->db->query("SELECT tbl_almacenes.tbl_proyectos_idtbl_proyectos FROM tbl_encargado_almacen JOIN tbl_almacenes ON tbl_almacenes.idtbl_almacenes = tbl_encargado_almacen.tbl_almacenes_idtbl_almacenes WHERE tbl_encargado_almacen.tbl_users_idtbl_users = $usuario GROUP BY tbl_almacenes.tbl_proyectos_idtbl_proyectos");
			foreach($almacenes_encargados->result() AS $key => $value){
                if (isset($almacenes_encargados->result()[$key+1]->tbl_proyectos_idtbl_proyectos)) {
                    	$id_almacenes .= $value->tbl_proyectos_idtbl_proyectos.', ';
                }else{
					$id_almacenes .= $value->tbl_proyectos_idtbl_proyectos;
				}
			}

			if($id_almacenes != ''){
				$in = "IN ($id_almacenes)";
			}else{
				$in = '';
			}			
			
			$query = $this->db->query("SELECT tbl_proyectos.nombre_proyecto, tbl_proyectos.numero_proyecto, tbl_solicitud_devolucion.*, user_autor.nombre as user_autor, user_aprobacion.nombre as user_aprobacion, user_ag.nombre as user_almacen_general, CONCAT(tbl_usuarios.nombres,' ',tbl_usuarios.apellido_paterno,' ',tbl_usuarios.apellido_materno) as recibe FROM tbl_solicitud_devolucion LEFT JOIN tbl_users as user_ag ON user_ag.idtbl_users = tbl_solicitud_devolucion.tbl_users_idtbl_users_aprobar_ag LEFT JOIN tbl_proyectos ON tbl_solicitud_devolucion.tbl_proyectos_idtbl_proyectos=tbl_proyectos.idtbl_proyectos LEFT JOIN tbl_users as user_autor ON tbl_solicitud_devolucion.tbl_users_idtbl_users_autor=user_autor.idtbl_users LEFT JOIN tbl_users as user_aprobacion ON tbl_solicitud_devolucion.tbl_users_idtbl_users_aprobacion=user_aprobacion.idtbl_users LEFT JOIN tbl_usuarios ON tbl_solicitud_devolucion.tbl_usuarios_idtbl_usuarios=tbl_usuarios.idtbl_usuarios WHERE (tbl_solicitud_devolucion.uid LIKE '%$buscar%' OR tbl_solicitud_devolucion.fecha_creacion LIKE '%$buscar%' OR tbl_proyectos.numero_proyecto LIKE '%$buscar%' OR user_autor.nombre LIKE '%$buscar%' OR user_aprobacion.nombre LIKE '%$buscar%' OR user_ag.nombre LIKE '%$buscar%' OR CONCAT(tbl_usuarios.nombres,' ',tbl_usuarios.apellido_paterno,' ',tbl_usuarios.apellido_materno) LIKE '%$buscar%') AND (tbl_solicitud_devolucion.tbl_segmentos_proyecto_idtbl_segmentos_proyecto = $segmento OR " . $string . ") AND (tbl_solicitud_devolucion.tipo_almacen = 'Cliente' OR tbl_solicitud_devolucion.tipo_almacen IS NULL) AND tbl_solicitud_devolucion.tipo_devolucion = 'Almacen General' ". $status ." ORDER BY tbl_solicitud_devolucion.idtbl_solicitud_devolucion DESC " . $limit);
		}else{
			
			$query = $this->db->query("SELECT tbl_proyectos.nombre_proyecto, tbl_proyectos.numero_proyecto, tbl_solicitud_devolucion.*, user_autor.nombre as user_autor, user_aprobacion.nombre as user_aprobacion, user_ag.nombre as user_almacen_general, CONCAT(tbl_usuarios.nombres,' ',tbl_usuarios.apellido_paterno,' ',tbl_usuarios.apellido_materno) as recibe FROM tbl_solicitud_devolucion LEFT JOIN tbl_users as user_ag ON user_ag.idtbl_users = tbl_solicitud_devolucion.tbl_users_idtbl_users_aprobar_ag LEFT JOIN tbl_proyectos ON tbl_solicitud_devolucion.tbl_proyectos_idtbl_proyectos=tbl_proyectos.idtbl_proyectos LEFT JOIN tbl_users as user_autor ON tbl_solicitud_devolucion.tbl_users_idtbl_users_autor=user_autor.idtbl_users LEFT JOIN tbl_users as user_aprobacion ON tbl_solicitud_devolucion.tbl_users_idtbl_users_aprobacion=user_aprobacion.idtbl_users LEFT JOIN tbl_usuarios ON tbl_solicitud_devolucion.tbl_usuarios_idtbl_usuarios=tbl_usuarios.idtbl_usuarios WHERE (tbl_solicitud_devolucion.uid LIKE '%$buscar%' OR tbl_solicitud_devolucion.fecha_creacion LIKE '%$buscar%' OR tbl_proyectos.numero_proyecto LIKE '%$buscar%' OR user_autor.nombre LIKE '%$buscar%' OR user_aprobacion.nombre LIKE '%$buscar%' OR user_ag.nombre LIKE '%$buscar%' OR CONCAT(tbl_usuarios.nombres,' ',tbl_usuarios.apellido_paterno,' ',tbl_usuarios.apellido_materno) LIKE '%$buscar%') AND (tbl_solicitud_devolucion.tbl_segmentos_proyecto_idtbl_segmentos_proyecto = $segmento OR " . $string . ") AND tbl_solicitud_devolucion.tipo_devolucion = 'Almacen General' ". $status ." ORDER BY tbl_solicitud_devolucion.idtbl_solicitud_devolucion DESC " . $limit);
		}
		
		return $query->result_array();
	}


	/**
	 * Devoluciones Seguridad e Higiene
	 **/
	public function solicitudes_devoluciones_seguridad($buscar = '', $buscar2 = '', $inicio = false, $cantidadRegistro = false) {
		$limit = '';
		if ($inicio !== false && $cantidadRegistro !== false) {
			$limit = 'LIMIT ' . $inicio . "," . $cantidadRegistro;
		}		
		if ($buscar2 == '') {
			$status = "";
		}
		if ($buscar2 != '') {
			$status = "AND (tbl_solicitud_devolucion.estatus_solicitud = '$buscar2')";
		}
		$string = "";
		if ($this->session->userdata('tipo') == 10) {
			$string = "";
			$query = $this->db->query("SELECT tbl_proyectos.nombre_proyecto, tbl_proyectos.numero_proyecto, tbl_solicitud_devolucion.*, user_autor.nombre as user_autor, user_aprobacion.nombre as user_aprobacion, user_ag.nombre as user_almacen_general, user_sh.nombre as user_sh, CONCAT(tbl_usuarios.nombres,' ',tbl_usuarios.apellido_paterno,' ',tbl_usuarios.apellido_materno) as recibe FROM tbl_solicitud_devolucion LEFT JOIN tbl_users as user_ag ON user_ag.idtbl_users = tbl_solicitud_devolucion.tbl_users_idtbl_users_aprobar_ag LEFT JOIN tbl_users as user_sh ON user_sh.idtbl_users = tbl_solicitud_devolucion.tbl_users_idtbl_user_aprobar_sh LEFT JOIN tbl_proyectos ON tbl_solicitud_devolucion.tbl_proyectos_idtbl_proyectos=tbl_proyectos.idtbl_proyectos LEFT JOIN tbl_users as user_autor ON tbl_solicitud_devolucion.tbl_users_idtbl_users_autor=user_autor.idtbl_users LEFT JOIN tbl_users as user_aprobacion ON tbl_solicitud_devolucion.tbl_users_idtbl_users_aprobacion=user_aprobacion.idtbl_users LEFT JOIN tbl_usuarios ON tbl_solicitud_devolucion.tbl_usuarios_idtbl_usuarios=tbl_usuarios.idtbl_usuarios WHERE (tbl_solicitud_devolucion.uid LIKE '%$buscar%' OR tbl_solicitud_devolucion.fecha_creacion LIKE '%$buscar%' OR tbl_proyectos.numero_proyecto LIKE '%$buscar%' OR user_autor.nombre LIKE '%$buscar%' OR user_aprobacion.nombre LIKE '%$buscar%' OR user_ag.nombre LIKE '%$buscar%' OR CONCAT(tbl_usuarios.nombres,' ',tbl_usuarios.apellido_paterno,' ',tbl_usuarios.apellido_materno) LIKE '%$buscar%') AND " . $string . "tbl_solicitud_devolucion.tipo_devolucion = 'Seguridad e Higiene' ". $status ." ORDER BY tbl_solicitud_devolucion.idtbl_solicitud_devolucion DESC " . $limit);
		}
		elseif($this->session->userdata('tipo') == 21 || $this->session->userdata('tipo') == 3 || $this->session->userdata('tipo') == 2 || $this->session->userdata('tipo') == 1 || $this->session->userdata('tipo') == 4){
			if($_SESSION['tipo_anterior']){
				$string = 'tbl_solicitud_devolucion.tbl_users_idtbl_user_aprobar_sh IS NOT NULL AND ';
			}else{
				$string = "tbl_solicitud_devolucion.tbl_users_idtbl_users_autor = " . $this->session->userdata('id') . " AND ";
			}
			$query = $this->db->query("SELECT tbl_proyectos.nombre_proyecto, tbl_proyectos.numero_proyecto, tbl_solicitud_devolucion.*, user_autor.nombre as user_autor, user_aprobacion.nombre as user_aprobacion, user_ag.nombre as user_almacen_general, user_sh.nombre as user_sh, CONCAT(tbl_usuarios.nombres,' ',tbl_usuarios.apellido_paterno,' ',tbl_usuarios.apellido_materno) as recibe FROM tbl_solicitud_devolucion LEFT JOIN tbl_users as user_ag ON user_ag.idtbl_users = tbl_solicitud_devolucion.tbl_users_idtbl_users_aprobar_ag LEFT JOIN tbl_users as user_sh ON user_sh.idtbl_users = tbl_solicitud_devolucion.tbl_users_idtbl_user_aprobar_sh LEFT JOIN tbl_proyectos ON tbl_solicitud_devolucion.tbl_proyectos_idtbl_proyectos=tbl_proyectos.idtbl_proyectos LEFT JOIN tbl_users as user_autor ON tbl_solicitud_devolucion.tbl_users_idtbl_users_autor=user_autor.idtbl_users LEFT JOIN tbl_users as user_aprobacion ON tbl_solicitud_devolucion.tbl_users_idtbl_users_aprobacion=user_aprobacion.idtbl_users LEFT JOIN tbl_usuarios ON tbl_solicitud_devolucion.tbl_usuarios_idtbl_usuarios=tbl_usuarios.idtbl_usuarios WHERE (tbl_solicitud_devolucion.uid LIKE '%$buscar%' OR tbl_solicitud_devolucion.fecha_creacion LIKE '%$buscar%' OR tbl_proyectos.numero_proyecto LIKE '%$buscar%' OR user_autor.nombre LIKE '%$buscar%' OR user_aprobacion.nombre LIKE '%$buscar%' OR user_ag.nombre LIKE '%$buscar%' OR CONCAT(tbl_usuarios.nombres,' ',tbl_usuarios.apellido_paterno,' ',tbl_usuarios.apellido_materno) LIKE '%$buscar%') AND " . $string . "tbl_solicitud_devolucion.tipo_devolucion = 'Seguridad e Higiene' ". $status ." ORDER BY tbl_solicitud_devolucion.idtbl_solicitud_devolucion DESC " . $limit);
		}
		elseif($this->session->userdata('tipo') == 19){
			$string = "tbl_solicitud_devolucion.tbl_users_idtbl_users_autor = " . $this->session->userdata('id') . " AND ";
			$query = $this->db->query("SELECT tbl_proyectos.nombre_proyecto, tbl_proyectos.numero_proyecto, tbl_solicitud_devolucion.*, user_autor.nombre as user_autor, user_aprobacion.nombre as user_aprobacion, user_ag.nombre as user_almacen_general, user_sh.nombre as user_sh, CONCAT(tbl_usuarios.nombres,' ',tbl_usuarios.apellido_paterno,' ',tbl_usuarios.apellido_materno) as recibe FROM tbl_solicitud_devolucion LEFT JOIN tbl_users as user_ag ON user_ag.idtbl_users = tbl_solicitud_devolucion.tbl_users_idtbl_users_aprobar_ag LEFT JOIN tbl_users as user_sh ON user_sh.idtbl_users = tbl_solicitud_devolucion.tbl_users_idtbl_user_aprobar_sh LEFT JOIN tbl_proyectos ON tbl_solicitud_devolucion.tbl_proyectos_idtbl_proyectos=tbl_proyectos.idtbl_proyectos LEFT JOIN tbl_users as user_autor ON tbl_solicitud_devolucion.tbl_users_idtbl_users_autor=user_autor.idtbl_users LEFT JOIN tbl_users as user_aprobacion ON tbl_solicitud_devolucion.tbl_users_idtbl_users_aprobacion=user_aprobacion.idtbl_users LEFT JOIN tbl_usuarios ON tbl_solicitud_devolucion.tbl_usuarios_idtbl_usuarios=tbl_usuarios.idtbl_usuarios WHERE (tbl_solicitud_devolucion.uid LIKE '%$buscar%' OR tbl_solicitud_devolucion.fecha_creacion LIKE '%$buscar%' OR tbl_proyectos.numero_proyecto LIKE '%$buscar%' OR user_autor.nombre LIKE '%$buscar%' OR user_aprobacion.nombre LIKE '%$buscar%' OR user_ag.nombre LIKE '%$buscar%' OR CONCAT(tbl_usuarios.nombres,' ',tbl_usuarios.apellido_paterno,' ',tbl_usuarios.apellido_materno) LIKE '%$buscar%') AND " . $string . "tbl_solicitud_devolucion.tipo_devolucion = 'Seguridad e Higiene' ". $status ." ORDER BY tbl_solicitud_devolucion.idtbl_solicitud_devolucion DESC " . $limit);
		}
		elseif ($this->session->userdata('tipo') == 5 || ($this->session->userdata('tipo') == 9 && ($this->session->userdata('encargado_almacen') == null && $this->session->userdata('encargado_almacen') == ''))) {
			$string = "tbl_solicitud_devolucion.tbl_users_idtbl_users_autor = " . $this->session->userdata('id') . " AND ";
			$query = $this->db->query("SELECT tbl_proyectos.nombre_proyecto, tbl_proyectos.numero_proyecto, tbl_solicitud_devolucion.*, user_autor.nombre as user_autor, user_aprobacion.nombre as user_aprobacion, user_ag.nombre as user_almacen_general, user_sh.nombre as user_sh, CONCAT(tbl_usuarios.nombres,' ',tbl_usuarios.apellido_paterno,' ',tbl_usuarios.apellido_materno) as recibe FROM tbl_solicitud_devolucion LEFT JOIN tbl_users as user_ag ON user_ag.idtbl_users = tbl_solicitud_devolucion.tbl_users_idtbl_users_aprobar_ag LEFT JOIN tbl_users as user_sh ON user_sh.idtbl_users = tbl_solicitud_devolucion.tbl_users_idtbl_user_aprobar_sh LEFT JOIN tbl_proyectos ON tbl_solicitud_devolucion.tbl_proyectos_idtbl_proyectos=tbl_proyectos.idtbl_proyectos LEFT JOIN tbl_users as user_autor ON tbl_solicitud_devolucion.tbl_users_idtbl_users_autor=user_autor.idtbl_users LEFT JOIN tbl_users as user_aprobacion ON tbl_solicitud_devolucion.tbl_users_idtbl_users_aprobacion=user_aprobacion.idtbl_users LEFT JOIN tbl_usuarios ON tbl_solicitud_devolucion.tbl_usuarios_idtbl_usuarios=tbl_usuarios.idtbl_usuarios WHERE (tbl_solicitud_devolucion.uid LIKE '%$buscar%' OR tbl_solicitud_devolucion.fecha_creacion LIKE '%$buscar%' OR tbl_proyectos.numero_proyecto LIKE '%$buscar%' OR user_autor.nombre LIKE '%$buscar%' OR user_aprobacion.nombre LIKE '%$buscar%' OR user_ag.nombre LIKE '%$buscar%' OR CONCAT(tbl_usuarios.nombres,' ',tbl_usuarios.apellido_paterno,' ',tbl_usuarios.apellido_materno) LIKE '%$buscar%') AND " . $string . "tbl_solicitud_devolucion.tipo_devolucion = 'Seguridad e Higiene' ". $status ." ORDER BY tbl_solicitud_devolucion.idtbl_solicitud_devolucion DESC " . $limit);
		}
		elseif($this->session->userdata('encargado_almacen') != null && $this->session->userdata('encargado_almacen') != '') {
			$id_almacenes = '';
			$string = "user_autor.idtbl_users = " . $this->session->userdata('id');
			$usuario = $this->session->userdata('id');
			$almacenes_encargados = $this->db->query("SELECT tbl_almacenes.tbl_proyectos_idtbl_proyectos FROM tbl_encargado_almacen JOIN tbl_almacenes ON tbl_almacenes.idtbl_almacenes = tbl_encargado_almacen.tbl_almacenes_idtbl_almacenes WHERE tbl_encargado_almacen.tbl_users_idtbl_users = $usuario GROUP BY tbl_almacenes.tbl_proyectos_idtbl_proyectos");
			foreach($almacenes_encargados->result() AS $key => $value){
                if (isset($almacenes_encargados->result()[$key+1]->tbl_proyectos_idtbl_proyectos)) {
                    $id_almacenes .= $value->tbl_proyectos_idtbl_proyectos.', ';
                }else{
					$id_almacenes .= $value->tbl_proyectos_idtbl_proyectos;
				}
			}

			if($id_almacenes != ''){
				$in = "IN ($id_almacenes)";
			}else{
				$in = '';
			}			
			
			$query = $this->db->query("SELECT tbl_proyectos.nombre_proyecto, tbl_proyectos.numero_proyecto, tbl_solicitud_devolucion.*, user_autor.nombre as user_autor, user_aprobacion.nombre as user_aprobacion, user_ag.nombre as user_almacen_general, user_sh.nombre as user_sh, CONCAT(tbl_usuarios.nombres,' ',tbl_usuarios.apellido_paterno,' ',tbl_usuarios.apellido_materno) as recibe FROM tbl_solicitud_devolucion LEFT JOIN tbl_users as user_ag ON user_ag.idtbl_users = tbl_solicitud_devolucion.tbl_users_idtbl_users_aprobar_ag LEFT JOIN tbl_users as user_sh ON user_sh.idtbl_users = tbl_solicitud_devolucion.tbl_users_idtbl_user_aprobar_sh LEFT JOIN tbl_proyectos ON tbl_solicitud_devolucion.tbl_proyectos_idtbl_proyectos=tbl_proyectos.idtbl_proyectos LEFT JOIN tbl_users as user_autor ON tbl_solicitud_devolucion.tbl_users_idtbl_users_autor=user_autor.idtbl_users LEFT JOIN tbl_users as user_aprobacion ON tbl_solicitud_devolucion.tbl_users_idtbl_users_aprobacion=user_aprobacion.idtbl_users LEFT JOIN tbl_usuarios ON tbl_solicitud_devolucion.tbl_usuarios_idtbl_usuarios=tbl_usuarios.idtbl_usuarios WHERE (tbl_solicitud_devolucion.uid LIKE '%$buscar%' OR tbl_solicitud_devolucion.fecha_creacion LIKE '%$buscar%' OR tbl_proyectos.numero_proyecto LIKE '%$buscar%' OR user_autor.nombre LIKE '%$buscar%' OR user_aprobacion.nombre LIKE '%$buscar%' OR user_ag.nombre LIKE '%$buscar%' OR CONCAT(tbl_usuarios.nombres,' ',tbl_usuarios.apellido_paterno,' ',tbl_usuarios.apellido_materno) LIKE '%$buscar%') AND (tbl_solicitud_devolucion.tbl_proyectos_idtbl_proyectos $in OR " . $string . ") AND tbl_solicitud_devolucion.tipo_devolucion = 'Seguridad e Higiene' ". $status ." ORDER BY tbl_solicitud_devolucion.idtbl_solicitud_devolucion DESC " . $limit);
		}else{
			
			$query = $this->db->query("SELECT tbl_proyectos.nombre_proyecto, tbl_proyectos.numero_proyecto, tbl_solicitud_devolucion.*, user_autor.nombre as user_autor, user_aprobacion.nombre as user_aprobacion, user_ag.nombre as user_almacen_general, user_sh.nombre as user_sh, CONCAT(tbl_usuarios.nombres,' ',tbl_usuarios.apellido_paterno,' ',tbl_usuarios.apellido_materno) as recibe FROM tbl_solicitud_devolucion LEFT JOIN tbl_users as user_ag ON user_ag.idtbl_users = tbl_solicitud_devolucion.tbl_users_idtbl_users_aprobar_ag LEFT JOIN tbl_users as user_sh ON user_sh.idtbl_users = tbl_solicitud_devolucion.tbl_users_idtbl_user_aprobar_sh LEFT JOIN tbl_proyectos ON tbl_solicitud_devolucion.tbl_proyectos_idtbl_proyectos=tbl_proyectos.idtbl_proyectos LEFT JOIN tbl_users as user_autor ON tbl_solicitud_devolucion.tbl_users_idtbl_users_autor=user_autor.idtbl_users LEFT JOIN tbl_users as user_aprobacion ON tbl_solicitud_devolucion.tbl_users_idtbl_users_aprobacion=user_aprobacion.idtbl_users LEFT JOIN tbl_usuarios ON tbl_solicitud_devolucion.tbl_usuarios_idtbl_usuarios=tbl_usuarios.idtbl_usuarios WHERE (tbl_solicitud_devolucion.uid LIKE '%$buscar%' OR tbl_solicitud_devolucion.fecha_creacion LIKE '%$buscar%' OR tbl_proyectos.numero_proyecto LIKE '%$buscar%' OR user_autor.nombre LIKE '%$buscar%' OR user_aprobacion.nombre LIKE '%$buscar%' OR user_ag.nombre LIKE '%$buscar%' OR CONCAT(tbl_usuarios.nombres,' ',tbl_usuarios.apellido_paterno,' ',tbl_usuarios.apellido_materno) LIKE '%$buscar%') AND " . "tbl_solicitud_devolucion.tipo_devolucion = 'Seguridad e Higiene' ". $status ." ORDER BY tbl_solicitud_devolucion.idtbl_solicitud_devolucion DESC " . $limit);
		}
		
		return $query->result_array();
	}

	/**
	 * Devoluciones Reynosa
	 **/
	public function solicitudes_devoluciones_reynosa($buscar = '', $buscar2 = '', $inicio = false, $cantidadRegistro = false) {
		$limit = '';
		if ($inicio !== false && $cantidadRegistro !== false) {
			$limit = 'LIMIT ' . $inicio . "," . $cantidadRegistro;
		}		
		if ($buscar2 == '') {
			$status = "";
		}
		if ($buscar2 != '') {
			$status = "AND (tbl_solicitud_devolucion.estatus_solicitud = '$buscar2')";
		}
		$string = "";
		if ($this->session->userdata('tipo') == 10 || $this->session->userdata('tipo') == 4) {
			//$string = "tbl_solicitud_devolucion.tbl_users_idtbl_users_aprobacion IS NOT NULL AND ";
			$query = $this->db->query("SELECT tbl_proyectos.nombre_proyecto, tbl_proyectos.numero_proyecto, tbl_solicitud_devolucion.*, user_autor.nombre as user_autor, user_aprobacion.nombre as user_aprobacion, user_ag.nombre as user_almacen_general, user_sh.nombre as user_sh, CONCAT(tbl_usuarios.nombres,' ',tbl_usuarios.apellido_paterno,' ',tbl_usuarios.apellido_materno) as recibe FROM tbl_solicitud_devolucion LEFT JOIN tbl_users as user_ag ON user_ag.idtbl_users = tbl_solicitud_devolucion.tbl_users_idtbl_users_aprobar_ag LEFT JOIN tbl_users as user_sh ON user_sh.idtbl_users = tbl_solicitud_devolucion.tbl_users_idtbl_user_aprobar_sh LEFT JOIN tbl_proyectos ON tbl_solicitud_devolucion.tbl_proyectos_idtbl_proyectos=tbl_proyectos.idtbl_proyectos LEFT JOIN tbl_users as user_autor ON tbl_solicitud_devolucion.tbl_users_idtbl_users_autor=user_autor.idtbl_users LEFT JOIN tbl_users as user_aprobacion ON tbl_solicitud_devolucion.tbl_users_idtbl_users_aprobacion=user_aprobacion.idtbl_users LEFT JOIN tbl_usuarios ON tbl_solicitud_devolucion.tbl_usuarios_idtbl_usuarios=tbl_usuarios.idtbl_usuarios WHERE (tbl_solicitud_devolucion.uid LIKE '%$buscar%' OR tbl_solicitud_devolucion.fecha_creacion LIKE '%$buscar%' OR tbl_proyectos.numero_proyecto LIKE '%$buscar%' OR user_autor.nombre LIKE '%$buscar%' OR user_aprobacion.nombre LIKE '%$buscar%' OR user_ag.nombre LIKE '%$buscar%' OR CONCAT(tbl_usuarios.nombres,' ',tbl_usuarios.apellido_paterno,' ',tbl_usuarios.apellido_materno) LIKE '%$buscar%') AND " . $string . "tbl_proyectos.direccion LIKE '%reynosa%' ". $status ." ORDER BY tbl_solicitud_devolucion.idtbl_solicitud_devolucion DESC " . $limit);
		}
		elseif ($this->session->userdata('tipo') == 5 || $this->session->userdata('tipo') == 9) {
			$string = "tbl_solicitud_devolucion.tbl_users_idtbl_users_autor = " . $this->session->userdata('id') . " AND ";
			$query = $this->db->query("SELECT tbl_proyectos.nombre_proyecto, tbl_proyectos.numero_proyecto, tbl_solicitud_devolucion.*, user_autor.nombre as user_autor, user_aprobacion.nombre as user_aprobacion, user_ag.nombre as user_almacen_general, user_sh.nombre as user_sh, CONCAT(tbl_usuarios.nombres,' ',tbl_usuarios.apellido_paterno,' ',tbl_usuarios.apellido_materno) as recibe FROM tbl_solicitud_devolucion LEFT JOIN tbl_users as user_ag ON user_ag.idtbl_users = tbl_solicitud_devolucion.tbl_users_idtbl_users_aprobar_ag LEFT JOIN tbl_users as user_sh ON user_sh.idtbl_users = tbl_solicitud_devolucion.tbl_users_idtbl_user_aprobar_sh LEFT JOIN tbl_proyectos ON tbl_solicitud_devolucion.tbl_proyectos_idtbl_proyectos=tbl_proyectos.idtbl_proyectos LEFT JOIN tbl_users as user_autor ON tbl_solicitud_devolucion.tbl_users_idtbl_users_autor=user_autor.idtbl_users LEFT JOIN tbl_users as user_aprobacion ON tbl_solicitud_devolucion.tbl_users_idtbl_users_aprobacion=user_aprobacion.idtbl_users LEFT JOIN tbl_usuarios ON tbl_solicitud_devolucion.tbl_usuarios_idtbl_usuarios=tbl_usuarios.idtbl_usuarios WHERE (tbl_solicitud_devolucion.uid LIKE '%$buscar%' OR tbl_solicitud_devolucion.fecha_creacion LIKE '%$buscar%' OR tbl_proyectos.numero_proyecto LIKE '%$buscar%' OR user_autor.nombre LIKE '%$buscar%' OR user_aprobacion.nombre LIKE '%$buscar%' OR user_ag.nombre LIKE '%$buscar%' OR CONCAT(tbl_usuarios.nombres,' ',tbl_usuarios.apellido_paterno,' ',tbl_usuarios.apellido_materno) LIKE '%$buscar%') AND " . $string . "tbl_solicitud_devolucion.tipo_devolucion = 'Seguridad e Higiene' ". $status ." ORDER BY tbl_solicitud_devolucion.idtbl_solicitud_devolucion DESC " . $limit);
		}
		elseif($this->session->userdata('encargado_almacen') != null && $this->session->userdata('encargado_almacen') != '') {
			$id_almacenes = '';
			$string = "user_autor.idtbl_users = " . $this->session->userdata('id');
			$usuario = $this->session->userdata('id');
			$almacenes_encargados = $this->db->query("SELECT tbl_almacenes.tbl_proyectos_idtbl_proyectos FROM tbl_encargado_almacen JOIN tbl_almacenes ON tbl_almacenes.idtbl_almacenes = tbl_encargado_almacen.tbl_almacenes_idtbl_almacenes WHERE tbl_encargado_almacen.tbl_users_idtbl_users = $usuario GROUP BY tbl_almacenes.tbl_proyectos_idtbl_proyectos");
			foreach($almacenes_encargados->result() AS $key => $value){
                if (isset($almacenes_encargados->result()[$key+1]->tbl_proyectos_idtbl_proyectos)) {
                    	$id_almacenes .= $value->tbl_proyectos_idtbl_proyectos.', ';
                }else{
					$id_almacenes .= $value->tbl_proyectos_idtbl_proyectos;
				}
			}

			if($id_almacenes != ''){
				$in = "IN ($id_almacenes)";
			}else{
				$in = '';
			}			
			
			$query = $this->db->query("SELECT tbl_proyectos.nombre_proyecto, tbl_proyectos.numero_proyecto, tbl_solicitud_devolucion.*, user_autor.nombre as user_autor, user_aprobacion.nombre as user_aprobacion, user_ag.nombre as user_almacen_general, user_sh.nombre as user_sh, CONCAT(tbl_usuarios.nombres,' ',tbl_usuarios.apellido_paterno,' ',tbl_usuarios.apellido_materno) as recibe FROM tbl_solicitud_devolucion LEFT JOIN tbl_users as user_ag ON user_ag.idtbl_users = tbl_solicitud_devolucion.tbl_users_idtbl_users_aprobar_ag LEFT JOIN tbl_users as user_sh ON user_sh.idtbl_users = tbl_solicitud_devolucion.tbl_users_idtbl_user_aprobar_sh LEFT JOIN tbl_proyectos ON tbl_solicitud_devolucion.tbl_proyectos_idtbl_proyectos=tbl_proyectos.idtbl_proyectos LEFT JOIN tbl_users as user_autor ON tbl_solicitud_devolucion.tbl_users_idtbl_users_autor=user_autor.idtbl_users LEFT JOIN tbl_users as user_aprobacion ON tbl_solicitud_devolucion.tbl_users_idtbl_users_aprobacion=user_aprobacion.idtbl_users LEFT JOIN tbl_usuarios ON tbl_solicitud_devolucion.tbl_usuarios_idtbl_usuarios=tbl_usuarios.idtbl_usuarios WHERE (tbl_solicitud_devolucion.uid LIKE '%$buscar%' OR tbl_solicitud_devolucion.fecha_creacion LIKE '%$buscar%' OR tbl_proyectos.numero_proyecto LIKE '%$buscar%' OR user_autor.nombre LIKE '%$buscar%' OR user_aprobacion.nombre LIKE '%$buscar%' OR user_ag.nombre LIKE '%$buscar%' OR CONCAT(tbl_usuarios.nombres,' ',tbl_usuarios.apellido_paterno,' ',tbl_usuarios.apellido_materno) LIKE '%$buscar%') AND (tbl_solicitud_devolucion.tbl_proyectos_idtbl_proyectos $in OR " . $string . ") AND tbl_solicitud_devolucion.tbl_users_idtbl_users_aprobacion IS NOT NULL AND tbl_solicitud_devolucion.tipo_devolucion = 'Seguridad e Higiene' ". $status ." ORDER BY tbl_solicitud_devolucion.idtbl_solicitud_devolucion DESC " . $limit);
		}else{
			
			$query = $this->db->query("SELECT tbl_proyectos.nombre_proyecto, tbl_proyectos.numero_proyecto, tbl_solicitud_devolucion.*, user_autor.nombre as user_autor, user_aprobacion.nombre as user_aprobacion, user_ag.nombre as user_almacen_general, user_sh.nombre as user_sh, CONCAT(tbl_usuarios.nombres,' ',tbl_usuarios.apellido_paterno,' ',tbl_usuarios.apellido_materno) as recibe FROM tbl_solicitud_devolucion LEFT JOIN tbl_users as user_ag ON user_ag.idtbl_users = tbl_solicitud_devolucion.tbl_users_idtbl_users_aprobar_ag LEFT JOIN tbl_users as user_sh ON user_sh.idtbl_users = tbl_solicitud_devolucion.tbl_users_idtbl_user_aprobar_sh LEFT JOIN tbl_proyectos ON tbl_solicitud_devolucion.tbl_proyectos_idtbl_proyectos=tbl_proyectos.idtbl_proyectos LEFT JOIN tbl_users as user_autor ON tbl_solicitud_devolucion.tbl_users_idtbl_users_autor=user_autor.idtbl_users LEFT JOIN tbl_users as user_aprobacion ON tbl_solicitud_devolucion.tbl_users_idtbl_users_aprobacion=user_aprobacion.idtbl_users LEFT JOIN tbl_usuarios ON tbl_solicitud_devolucion.tbl_usuarios_idtbl_usuarios=tbl_usuarios.idtbl_usuarios WHERE (tbl_solicitud_devolucion.uid LIKE '%$buscar%' OR tbl_solicitud_devolucion.fecha_creacion LIKE '%$buscar%' OR tbl_proyectos.numero_proyecto LIKE '%$buscar%' OR user_autor.nombre LIKE '%$buscar%' OR user_aprobacion.nombre LIKE '%$buscar%' OR user_ag.nombre LIKE '%$buscar%' OR CONCAT(tbl_usuarios.nombres,' ',tbl_usuarios.apellido_paterno,' ',tbl_usuarios.apellido_materno) LIKE '%$buscar%') AND " . "tbl_solicitud_devolucion.tipo_devolucion = 'Seguridad e Higiene' ". $status ." ORDER BY tbl_solicitud_devolucion.idtbl_solicitud_devolucion DESC " . $limit);
		}
		
		return $query->result_array();
	}

	/**
	 * Devoluciones Seguridad e Higiene
	 **/
	public function solicitudes_devoluciones_tabasco($buscar = '', $buscar2 = '', $inicio = false, $cantidadRegistro = false) {
		$limit = '';
		if ($inicio !== false && $cantidadRegistro !== false) {
			$limit = 'LIMIT ' . $inicio . "," . $cantidadRegistro;
		}		
		if ($buscar2 == '') {
			$status = "";
		}
		if ($buscar2 != '') {
			$status = "AND (tbl_solicitud_devolucion.estatus_solicitud = '$buscar2')";
		}
		$string = "";
		if ($this->session->userdata('tipo') == 10 || $this->session->userdata('tipo') == 4) {
			//$string = "tbl_solicitud_devolucion.tbl_users_idtbl_users_aprobacion IS NOT NULL AND ";
			$query = $this->db->query("SELECT tbl_proyectos.nombre_proyecto, tbl_proyectos.numero_proyecto, tbl_solicitud_devolucion.*, user_autor.nombre as user_autor, user_aprobacion.nombre as user_aprobacion, user_ag.nombre as user_almacen_general, user_sh.nombre as user_sh, CONCAT(tbl_usuarios.nombres,' ',tbl_usuarios.apellido_paterno,' ',tbl_usuarios.apellido_materno) as recibe FROM tbl_solicitud_devolucion LEFT JOIN tbl_users as user_ag ON user_ag.idtbl_users = tbl_solicitud_devolucion.tbl_users_idtbl_users_aprobar_ag LEFT JOIN tbl_users as user_sh ON user_sh.idtbl_users = tbl_solicitud_devolucion.tbl_users_idtbl_user_aprobar_sh LEFT JOIN tbl_proyectos ON tbl_solicitud_devolucion.tbl_proyectos_idtbl_proyectos=tbl_proyectos.idtbl_proyectos LEFT JOIN tbl_users as user_autor ON tbl_solicitud_devolucion.tbl_users_idtbl_users_autor=user_autor.idtbl_users LEFT JOIN tbl_users as user_aprobacion ON tbl_solicitud_devolucion.tbl_users_idtbl_users_aprobacion=user_aprobacion.idtbl_users LEFT JOIN tbl_usuarios ON tbl_solicitud_devolucion.tbl_usuarios_idtbl_usuarios=tbl_usuarios.idtbl_usuarios WHERE (tbl_solicitud_devolucion.uid LIKE '%$buscar%' OR tbl_solicitud_devolucion.fecha_creacion LIKE '%$buscar%' OR tbl_proyectos.numero_proyecto LIKE '%$buscar%' OR user_autor.nombre LIKE '%$buscar%' OR user_aprobacion.nombre LIKE '%$buscar%' OR user_ag.nombre LIKE '%$buscar%' OR CONCAT(tbl_usuarios.nombres,' ',tbl_usuarios.apellido_paterno,' ',tbl_usuarios.apellido_materno) LIKE '%$buscar%') AND " . $string . "tbl_proyectos.direccion LIKE '%tabasco%' ". $status ." ORDER BY tbl_solicitud_devolucion.idtbl_solicitud_devolucion DESC " . $limit);
		}
		elseif ($this->session->userdata('tipo') == 5 || $this->session->userdata('tipo') == 9) {
			$string = "tbl_solicitud_devolucion.tbl_users_idtbl_users_autor = " . $this->session->userdata('id') . " AND ";
			$query = $this->db->query("SELECT tbl_proyectos.nombre_proyecto, tbl_proyectos.numero_proyecto, tbl_solicitud_devolucion.*, user_autor.nombre as user_autor, user_aprobacion.nombre as user_aprobacion, user_ag.nombre as user_almacen_general, user_sh.nombre as user_sh, CONCAT(tbl_usuarios.nombres,' ',tbl_usuarios.apellido_paterno,' ',tbl_usuarios.apellido_materno) as recibe FROM tbl_solicitud_devolucion LEFT JOIN tbl_users as user_ag ON user_ag.idtbl_users = tbl_solicitud_devolucion.tbl_users_idtbl_users_aprobar_ag LEFT JOIN tbl_users as user_sh ON user_sh.idtbl_users = tbl_solicitud_devolucion.tbl_users_idtbl_user_aprobar_sh LEFT JOIN tbl_proyectos ON tbl_solicitud_devolucion.tbl_proyectos_idtbl_proyectos=tbl_proyectos.idtbl_proyectos LEFT JOIN tbl_users as user_autor ON tbl_solicitud_devolucion.tbl_users_idtbl_users_autor=user_autor.idtbl_users LEFT JOIN tbl_users as user_aprobacion ON tbl_solicitud_devolucion.tbl_users_idtbl_users_aprobacion=user_aprobacion.idtbl_users LEFT JOIN tbl_usuarios ON tbl_solicitud_devolucion.tbl_usuarios_idtbl_usuarios=tbl_usuarios.idtbl_usuarios WHERE (tbl_solicitud_devolucion.uid LIKE '%$buscar%' OR tbl_solicitud_devolucion.fecha_creacion LIKE '%$buscar%' OR tbl_proyectos.numero_proyecto LIKE '%$buscar%' OR user_autor.nombre LIKE '%$buscar%' OR user_aprobacion.nombre LIKE '%$buscar%' OR user_ag.nombre LIKE '%$buscar%' OR CONCAT(tbl_usuarios.nombres,' ',tbl_usuarios.apellido_paterno,' ',tbl_usuarios.apellido_materno) LIKE '%$buscar%') AND " . $string . "tbl_solicitud_devolucion.tipo_devolucion = 'Seguridad e Higiene' ". $status ." ORDER BY tbl_solicitud_devolucion.idtbl_solicitud_devolucion DESC " . $limit);
		}
		elseif($this->session->userdata('encargado_almacen') != null && $this->session->userdata('encargado_almacen') != '') {
			$id_almacenes = '';
			$string = "user_autor.idtbl_users = " . $this->session->userdata('id');
			$usuario = $this->session->userdata('id');
			$almacenes_encargados = $this->db->query("SELECT tbl_almacenes.tbl_proyectos_idtbl_proyectos FROM tbl_encargado_almacen JOIN tbl_almacenes ON tbl_almacenes.idtbl_almacenes = tbl_encargado_almacen.tbl_almacenes_idtbl_almacenes WHERE tbl_encargado_almacen.tbl_users_idtbl_users = $usuario GROUP BY tbl_almacenes.tbl_proyectos_idtbl_proyectos");
			foreach($almacenes_encargados->result() AS $key => $value){
                if (isset($almacenes_encargados->result()[$key+1]->tbl_proyectos_idtbl_proyectos)) {
                    	$id_almacenes .= $value->tbl_proyectos_idtbl_proyectos.', ';
                }else{
					$id_almacenes .= $value->tbl_proyectos_idtbl_proyectos;
				}
			}

			if($id_almacenes != ''){
				$in = "IN ($id_almacenes)";
			}else{
				$in = '';
			}			
			
			$query = $this->db->query("SELECT tbl_proyectos.nombre_proyecto, tbl_proyectos.numero_proyecto, tbl_solicitud_devolucion.*, user_autor.nombre as user_autor, user_aprobacion.nombre as user_aprobacion, user_ag.nombre as user_almacen_general, user_sh.nombre as user_sh, CONCAT(tbl_usuarios.nombres,' ',tbl_usuarios.apellido_paterno,' ',tbl_usuarios.apellido_materno) as recibe FROM tbl_solicitud_devolucion LEFT JOIN tbl_users as user_ag ON user_ag.idtbl_users = tbl_solicitud_devolucion.tbl_users_idtbl_users_aprobar_ag LEFT JOIN tbl_users as user_sh ON user_sh.idtbl_users = tbl_solicitud_devolucion.tbl_users_idtbl_user_aprobar_sh LEFT JOIN tbl_proyectos ON tbl_solicitud_devolucion.tbl_proyectos_idtbl_proyectos=tbl_proyectos.idtbl_proyectos LEFT JOIN tbl_users as user_autor ON tbl_solicitud_devolucion.tbl_users_idtbl_users_autor=user_autor.idtbl_users LEFT JOIN tbl_users as user_aprobacion ON tbl_solicitud_devolucion.tbl_users_idtbl_users_aprobacion=user_aprobacion.idtbl_users LEFT JOIN tbl_usuarios ON tbl_solicitud_devolucion.tbl_usuarios_idtbl_usuarios=tbl_usuarios.idtbl_usuarios WHERE (tbl_solicitud_devolucion.uid LIKE '%$buscar%' OR tbl_solicitud_devolucion.fecha_creacion LIKE '%$buscar%' OR tbl_proyectos.numero_proyecto LIKE '%$buscar%' OR user_autor.nombre LIKE '%$buscar%' OR user_aprobacion.nombre LIKE '%$buscar%' OR user_ag.nombre LIKE '%$buscar%' OR CONCAT(tbl_usuarios.nombres,' ',tbl_usuarios.apellido_paterno,' ',tbl_usuarios.apellido_materno) LIKE '%$buscar%') AND (tbl_solicitud_devolucion.tbl_proyectos_idtbl_proyectos $in OR " . $string . ") AND tbl_solicitud_devolucion.tbl_users_idtbl_users_aprobacion IS NOT NULL AND tbl_solicitud_devolucion.tipo_devolucion = 'Seguridad e Higiene' ". $status ." ORDER BY tbl_solicitud_devolucion.idtbl_solicitud_devolucion DESC " . $limit);
		}else{
			
			$query = $this->db->query("SELECT tbl_proyectos.nombre_proyecto, tbl_proyectos.numero_proyecto, tbl_solicitud_devolucion.*, user_autor.nombre as user_autor, user_aprobacion.nombre as user_aprobacion, user_ag.nombre as user_almacen_general, user_sh.nombre as user_sh, CONCAT(tbl_usuarios.nombres,' ',tbl_usuarios.apellido_paterno,' ',tbl_usuarios.apellido_materno) as recibe FROM tbl_solicitud_devolucion LEFT JOIN tbl_users as user_ag ON user_ag.idtbl_users = tbl_solicitud_devolucion.tbl_users_idtbl_users_aprobar_ag LEFT JOIN tbl_users as user_sh ON user_sh.idtbl_users = tbl_solicitud_devolucion.tbl_users_idtbl_user_aprobar_sh LEFT JOIN tbl_proyectos ON tbl_solicitud_devolucion.tbl_proyectos_idtbl_proyectos=tbl_proyectos.idtbl_proyectos LEFT JOIN tbl_users as user_autor ON tbl_solicitud_devolucion.tbl_users_idtbl_users_autor=user_autor.idtbl_users LEFT JOIN tbl_users as user_aprobacion ON tbl_solicitud_devolucion.tbl_users_idtbl_users_aprobacion=user_aprobacion.idtbl_users LEFT JOIN tbl_usuarios ON tbl_solicitud_devolucion.tbl_usuarios_idtbl_usuarios=tbl_usuarios.idtbl_usuarios WHERE (tbl_solicitud_devolucion.uid LIKE '%$buscar%' OR tbl_solicitud_devolucion.fecha_creacion LIKE '%$buscar%' OR tbl_proyectos.numero_proyecto LIKE '%$buscar%' OR user_autor.nombre LIKE '%$buscar%' OR user_aprobacion.nombre LIKE '%$buscar%' OR user_ag.nombre LIKE '%$buscar%' OR CONCAT(tbl_usuarios.nombres,' ',tbl_usuarios.apellido_paterno,' ',tbl_usuarios.apellido_materno) LIKE '%$buscar%') AND " . "tbl_solicitud_devolucion.tipo_devolucion = 'Seguridad e Higiene' ". $status ." ORDER BY tbl_solicitud_devolucion.idtbl_solicitud_devolucion DESC " . $limit);
		}
		
		return $query->result_array();
	}

	/**
	 * Devoluciones Seguridad e Higiene
	 **/
	public function solicitudes_devoluciones_tijuana($buscar = '', $buscar2 = '', $inicio = false, $cantidadRegistro = false) {
		$limit = '';
		if ($inicio !== false && $cantidadRegistro !== false) {
			$limit = 'LIMIT ' . $inicio . "," . $cantidadRegistro;
		}		
		if ($buscar2 == '') {
			$status = "";
		}
		if ($buscar2 != '') {
			$status = "AND (tbl_solicitud_devolucion.estatus_solicitud = '$buscar2')";
		}
		$string = "";
		if ($this->session->userdata('tipo') == 10 || $this->session->userdata('tipo') == 4) {
			//$string = "tbl_solicitud_devolucion.tbl_users_idtbl_users_aprobacion IS NOT NULL AND ";
			$query = $this->db->query("SELECT tbl_proyectos.nombre_proyecto, tbl_proyectos.numero_proyecto, tbl_solicitud_devolucion.*, user_autor.nombre as user_autor, user_aprobacion.nombre as user_aprobacion, user_ag.nombre as user_almacen_general, user_sh.nombre as user_sh, CONCAT(tbl_usuarios.nombres,' ',tbl_usuarios.apellido_paterno,' ',tbl_usuarios.apellido_materno) as recibe FROM tbl_solicitud_devolucion LEFT JOIN tbl_users as user_ag ON user_ag.idtbl_users = tbl_solicitud_devolucion.tbl_users_idtbl_users_aprobar_ag LEFT JOIN tbl_users as user_sh ON user_sh.idtbl_users = tbl_solicitud_devolucion.tbl_users_idtbl_user_aprobar_sh LEFT JOIN tbl_proyectos ON tbl_solicitud_devolucion.tbl_proyectos_idtbl_proyectos=tbl_proyectos.idtbl_proyectos LEFT JOIN tbl_users as user_autor ON tbl_solicitud_devolucion.tbl_users_idtbl_users_autor=user_autor.idtbl_users LEFT JOIN tbl_users as user_aprobacion ON tbl_solicitud_devolucion.tbl_users_idtbl_users_aprobacion=user_aprobacion.idtbl_users LEFT JOIN tbl_usuarios ON tbl_solicitud_devolucion.tbl_usuarios_idtbl_usuarios=tbl_usuarios.idtbl_usuarios WHERE (tbl_solicitud_devolucion.uid LIKE '%$buscar%' OR tbl_solicitud_devolucion.fecha_creacion LIKE '%$buscar%' OR tbl_proyectos.numero_proyecto LIKE '%$buscar%' OR user_autor.nombre LIKE '%$buscar%' OR user_aprobacion.nombre LIKE '%$buscar%' OR user_ag.nombre LIKE '%$buscar%' OR CONCAT(tbl_usuarios.nombres,' ',tbl_usuarios.apellido_paterno,' ',tbl_usuarios.apellido_materno) LIKE '%$buscar%') AND " . $string . "tbl_proyectos.direccion LIKE '%tijuana%' ". $status ." ORDER BY tbl_solicitud_devolucion.idtbl_solicitud_devolucion DESC " . $limit);
		}
		elseif ($this->session->userdata('tipo') == 5 || $this->session->userdata('tipo') == 9) {
			$string = "tbl_solicitud_devolucion.tbl_users_idtbl_users_autor = " . $this->session->userdata('id') . " AND ";
			$query = $this->db->query("SELECT tbl_proyectos.nombre_proyecto, tbl_proyectos.numero_proyecto, tbl_solicitud_devolucion.*, user_autor.nombre as user_autor, user_aprobacion.nombre as user_aprobacion, user_ag.nombre as user_almacen_general, user_sh.nombre as user_sh, CONCAT(tbl_usuarios.nombres,' ',tbl_usuarios.apellido_paterno,' ',tbl_usuarios.apellido_materno) as recibe FROM tbl_solicitud_devolucion LEFT JOIN tbl_users as user_ag ON user_ag.idtbl_users = tbl_solicitud_devolucion.tbl_users_idtbl_users_aprobar_ag LEFT JOIN tbl_users as user_sh ON user_sh.idtbl_users = tbl_solicitud_devolucion.tbl_users_idtbl_user_aprobar_sh LEFT JOIN tbl_proyectos ON tbl_solicitud_devolucion.tbl_proyectos_idtbl_proyectos=tbl_proyectos.idtbl_proyectos LEFT JOIN tbl_users as user_autor ON tbl_solicitud_devolucion.tbl_users_idtbl_users_autor=user_autor.idtbl_users LEFT JOIN tbl_users as user_aprobacion ON tbl_solicitud_devolucion.tbl_users_idtbl_users_aprobacion=user_aprobacion.idtbl_users LEFT JOIN tbl_usuarios ON tbl_solicitud_devolucion.tbl_usuarios_idtbl_usuarios=tbl_usuarios.idtbl_usuarios WHERE (tbl_solicitud_devolucion.uid LIKE '%$buscar%' OR tbl_solicitud_devolucion.fecha_creacion LIKE '%$buscar%' OR tbl_proyectos.numero_proyecto LIKE '%$buscar%' OR user_autor.nombre LIKE '%$buscar%' OR user_aprobacion.nombre LIKE '%$buscar%' OR user_ag.nombre LIKE '%$buscar%' OR CONCAT(tbl_usuarios.nombres,' ',tbl_usuarios.apellido_paterno,' ',tbl_usuarios.apellido_materno) LIKE '%$buscar%') AND " . $string . "tbl_solicitud_devolucion.tipo_devolucion = 'Seguridad e Higiene' ". $status ." ORDER BY tbl_solicitud_devolucion.idtbl_solicitud_devolucion DESC " . $limit);
		}
		elseif($this->session->userdata('encargado_almacen') != null && $this->session->userdata('encargado_almacen') != '') {
			$id_almacenes = '';
			$string = "user_autor.idtbl_users = " . $this->session->userdata('id');
			$usuario = $this->session->userdata('id');
			$almacenes_encargados = $this->db->query("SELECT tbl_almacenes.tbl_proyectos_idtbl_proyectos FROM tbl_encargado_almacen JOIN tbl_almacenes ON tbl_almacenes.idtbl_almacenes = tbl_encargado_almacen.tbl_almacenes_idtbl_almacenes WHERE tbl_encargado_almacen.tbl_users_idtbl_users = $usuario GROUP BY tbl_almacenes.tbl_proyectos_idtbl_proyectos");
			foreach($almacenes_encargados->result() AS $key => $value){
                if (isset($almacenes_encargados->result()[$key+1]->tbl_proyectos_idtbl_proyectos)) {
                    	$id_almacenes .= $value->tbl_proyectos_idtbl_proyectos.', ';
                }else{
					$id_almacenes .= $value->tbl_proyectos_idtbl_proyectos;
				}
			}

			if($id_almacenes != ''){
				$in = "IN ($id_almacenes)";
			}else{
				$in = '';
			}			
			
			$query = $this->db->query("SELECT tbl_proyectos.nombre_proyecto, tbl_proyectos.numero_proyecto, tbl_solicitud_devolucion.*, user_autor.nombre as user_autor, user_aprobacion.nombre as user_aprobacion, user_ag.nombre as user_almacen_general, user_sh.nombre as user_sh, CONCAT(tbl_usuarios.nombres,' ',tbl_usuarios.apellido_paterno,' ',tbl_usuarios.apellido_materno) as recibe FROM tbl_solicitud_devolucion LEFT JOIN tbl_users as user_ag ON user_ag.idtbl_users = tbl_solicitud_devolucion.tbl_users_idtbl_users_aprobar_ag LEFT JOIN tbl_users as user_sh ON user_sh.idtbl_users = tbl_solicitud_devolucion.tbl_users_idtbl_user_aprobar_sh LEFT JOIN tbl_proyectos ON tbl_solicitud_devolucion.tbl_proyectos_idtbl_proyectos=tbl_proyectos.idtbl_proyectos LEFT JOIN tbl_users as user_autor ON tbl_solicitud_devolucion.tbl_users_idtbl_users_autor=user_autor.idtbl_users LEFT JOIN tbl_users as user_aprobacion ON tbl_solicitud_devolucion.tbl_users_idtbl_users_aprobacion=user_aprobacion.idtbl_users LEFT JOIN tbl_usuarios ON tbl_solicitud_devolucion.tbl_usuarios_idtbl_usuarios=tbl_usuarios.idtbl_usuarios WHERE (tbl_solicitud_devolucion.uid LIKE '%$buscar%' OR tbl_solicitud_devolucion.fecha_creacion LIKE '%$buscar%' OR tbl_proyectos.numero_proyecto LIKE '%$buscar%' OR user_autor.nombre LIKE '%$buscar%' OR user_aprobacion.nombre LIKE '%$buscar%' OR user_ag.nombre LIKE '%$buscar%' OR CONCAT(tbl_usuarios.nombres,' ',tbl_usuarios.apellido_paterno,' ',tbl_usuarios.apellido_materno) LIKE '%$buscar%') AND (tbl_solicitud_devolucion.tbl_proyectos_idtbl_proyectos $in OR " . $string . ") AND tbl_solicitud_devolucion.tbl_users_idtbl_users_aprobacion IS NOT NULL AND tbl_solicitud_devolucion.tipo_devolucion = 'Seguridad e Higiene' ". $status ." ORDER BY tbl_solicitud_devolucion.idtbl_solicitud_devolucion DESC " . $limit);
		}else{
			
			$query = $this->db->query("SELECT tbl_proyectos.nombre_proyecto, tbl_proyectos.numero_proyecto, tbl_solicitud_devolucion.*, user_autor.nombre as user_autor, user_aprobacion.nombre as user_aprobacion, user_ag.nombre as user_almacen_general, user_sh.nombre as user_sh, CONCAT(tbl_usuarios.nombres,' ',tbl_usuarios.apellido_paterno,' ',tbl_usuarios.apellido_materno) as recibe FROM tbl_solicitud_devolucion LEFT JOIN tbl_users as user_ag ON user_ag.idtbl_users = tbl_solicitud_devolucion.tbl_users_idtbl_users_aprobar_ag LEFT JOIN tbl_users as user_sh ON user_sh.idtbl_users = tbl_solicitud_devolucion.tbl_users_idtbl_user_aprobar_sh LEFT JOIN tbl_proyectos ON tbl_solicitud_devolucion.tbl_proyectos_idtbl_proyectos=tbl_proyectos.idtbl_proyectos LEFT JOIN tbl_users as user_autor ON tbl_solicitud_devolucion.tbl_users_idtbl_users_autor=user_autor.idtbl_users LEFT JOIN tbl_users as user_aprobacion ON tbl_solicitud_devolucion.tbl_users_idtbl_users_aprobacion=user_aprobacion.idtbl_users LEFT JOIN tbl_usuarios ON tbl_solicitud_devolucion.tbl_usuarios_idtbl_usuarios=tbl_usuarios.idtbl_usuarios WHERE (tbl_solicitud_devolucion.uid LIKE '%$buscar%' OR tbl_solicitud_devolucion.fecha_creacion LIKE '%$buscar%' OR tbl_proyectos.numero_proyecto LIKE '%$buscar%' OR user_autor.nombre LIKE '%$buscar%' OR user_aprobacion.nombre LIKE '%$buscar%' OR user_ag.nombre LIKE '%$buscar%' OR CONCAT(tbl_usuarios.nombres,' ',tbl_usuarios.apellido_paterno,' ',tbl_usuarios.apellido_materno) LIKE '%$buscar%') AND " . "tbl_solicitud_devolucion.tipo_devolucion = 'Seguridad e Higiene' ". $status ." ORDER BY tbl_solicitud_devolucion.idtbl_solicitud_devolucion DESC " . $limit);
		}
		
		return $query->result_array();
	}

	/**
	 * Devoluciones Seguridad e Higiene
	 **/
	public function solicitudes_devoluciones_tuxpan($buscar = '', $buscar2 = '', $inicio = false, $cantidadRegistro = false) {
		$limit = '';
		if ($inicio !== false && $cantidadRegistro !== false) {
			$limit = 'LIMIT ' . $inicio . "," . $cantidadRegistro;
		}		
		if ($buscar2 == '') {
			$status = "";
		}
		if ($buscar2 != '') {
			$status = "AND (tbl_solicitud_devolucion.estatus_solicitud = '$buscar2')";
		}
		$string = "";
		if ($this->session->userdata('tipo') == 10 || $this->session->userdata('tipo') == 4) {
			//$string = "tbl_solicitud_devolucion.tbl_users_idtbl_users_aprobacion IS NOT NULL AND ";
			$query = $this->db->query("SELECT tbl_proyectos.nombre_proyecto, tbl_proyectos.numero_proyecto, tbl_solicitud_devolucion.*, user_autor.nombre as user_autor, user_aprobacion.nombre as user_aprobacion, user_ag.nombre as user_almacen_general, user_sh.nombre as user_sh, CONCAT(tbl_usuarios.nombres,' ',tbl_usuarios.apellido_paterno,' ',tbl_usuarios.apellido_materno) as recibe FROM tbl_solicitud_devolucion LEFT JOIN tbl_users as user_ag ON user_ag.idtbl_users = tbl_solicitud_devolucion.tbl_users_idtbl_users_aprobar_ag LEFT JOIN tbl_users as user_sh ON user_sh.idtbl_users = tbl_solicitud_devolucion.tbl_users_idtbl_user_aprobar_sh LEFT JOIN tbl_proyectos ON tbl_solicitud_devolucion.tbl_proyectos_idtbl_proyectos=tbl_proyectos.idtbl_proyectos LEFT JOIN tbl_users as user_autor ON tbl_solicitud_devolucion.tbl_users_idtbl_users_autor=user_autor.idtbl_users LEFT JOIN tbl_users as user_aprobacion ON tbl_solicitud_devolucion.tbl_users_idtbl_users_aprobacion=user_aprobacion.idtbl_users LEFT JOIN tbl_usuarios ON tbl_solicitud_devolucion.tbl_usuarios_idtbl_usuarios=tbl_usuarios.idtbl_usuarios WHERE (tbl_solicitud_devolucion.uid LIKE '%$buscar%' OR tbl_solicitud_devolucion.fecha_creacion LIKE '%$buscar%' OR tbl_proyectos.numero_proyecto LIKE '%$buscar%' OR user_autor.nombre LIKE '%$buscar%' OR user_aprobacion.nombre LIKE '%$buscar%' OR user_ag.nombre LIKE '%$buscar%' OR CONCAT(tbl_usuarios.nombres,' ',tbl_usuarios.apellido_paterno,' ',tbl_usuarios.apellido_materno) LIKE '%$buscar%') AND " . $string . "tbl_proyectos.direccion LIKE '%tuxpan%' ". $status ." ORDER BY tbl_solicitud_devolucion.idtbl_solicitud_devolucion DESC " . $limit);
		}
		elseif ($this->session->userdata('tipo') == 5 || $this->session->userdata('tipo') == 9) {
			$string = "tbl_solicitud_devolucion.tbl_users_idtbl_users_autor = " . $this->session->userdata('id') . " AND ";
			$query = $this->db->query("SELECT tbl_proyectos.nombre_proyecto, tbl_proyectos.numero_proyecto, tbl_solicitud_devolucion.*, user_autor.nombre as user_autor, user_aprobacion.nombre as user_aprobacion, user_ag.nombre as user_almacen_general, user_sh.nombre as user_sh, CONCAT(tbl_usuarios.nombres,' ',tbl_usuarios.apellido_paterno,' ',tbl_usuarios.apellido_materno) as recibe FROM tbl_solicitud_devolucion LEFT JOIN tbl_users as user_ag ON user_ag.idtbl_users = tbl_solicitud_devolucion.tbl_users_idtbl_users_aprobar_ag LEFT JOIN tbl_users as user_sh ON user_sh.idtbl_users = tbl_solicitud_devolucion.tbl_users_idtbl_user_aprobar_sh LEFT JOIN tbl_proyectos ON tbl_solicitud_devolucion.tbl_proyectos_idtbl_proyectos=tbl_proyectos.idtbl_proyectos LEFT JOIN tbl_users as user_autor ON tbl_solicitud_devolucion.tbl_users_idtbl_users_autor=user_autor.idtbl_users LEFT JOIN tbl_users as user_aprobacion ON tbl_solicitud_devolucion.tbl_users_idtbl_users_aprobacion=user_aprobacion.idtbl_users LEFT JOIN tbl_usuarios ON tbl_solicitud_devolucion.tbl_usuarios_idtbl_usuarios=tbl_usuarios.idtbl_usuarios WHERE (tbl_solicitud_devolucion.uid LIKE '%$buscar%' OR tbl_solicitud_devolucion.fecha_creacion LIKE '%$buscar%' OR tbl_proyectos.numero_proyecto LIKE '%$buscar%' OR user_autor.nombre LIKE '%$buscar%' OR user_aprobacion.nombre LIKE '%$buscar%' OR user_ag.nombre LIKE '%$buscar%' OR CONCAT(tbl_usuarios.nombres,' ',tbl_usuarios.apellido_paterno,' ',tbl_usuarios.apellido_materno) LIKE '%$buscar%') AND " . $string . "tbl_solicitud_devolucion.tipo_devolucion = 'Seguridad e Higiene' ". $status ." ORDER BY tbl_solicitud_devolucion.idtbl_solicitud_devolucion DESC " . $limit);
		}
		elseif($this->session->userdata('encargado_almacen') != null && $this->session->userdata('encargado_almacen') != '') {
			$id_almacenes = '';
			$string = "user_autor.idtbl_users = " . $this->session->userdata('id');
			$usuario = $this->session->userdata('id');
			$almacenes_encargados = $this->db->query("SELECT tbl_almacenes.tbl_proyectos_idtbl_proyectos FROM tbl_encargado_almacen JOIN tbl_almacenes ON tbl_almacenes.idtbl_almacenes = tbl_encargado_almacen.tbl_almacenes_idtbl_almacenes WHERE tbl_encargado_almacen.tbl_users_idtbl_users = $usuario GROUP BY tbl_almacenes.tbl_proyectos_idtbl_proyectos");
			foreach($almacenes_encargados->result() AS $key => $value){
                if (isset($almacenes_encargados->result()[$key+1]->tbl_proyectos_idtbl_proyectos)) {
                    	$id_almacenes .= $value->tbl_proyectos_idtbl_proyectos.', ';
                }else{
					$id_almacenes .= $value->tbl_proyectos_idtbl_proyectos;
				}
			}

			if($id_almacenes != ''){
				$in = "IN ($id_almacenes)";
			}else{
				$in = '';
			}			
			
			$query = $this->db->query("SELECT tbl_proyectos.nombre_proyecto, tbl_proyectos.numero_proyecto, tbl_solicitud_devolucion.*, user_autor.nombre as user_autor, user_aprobacion.nombre as user_aprobacion, user_ag.nombre as user_almacen_general, user_sh.nombre as user_sh, CONCAT(tbl_usuarios.nombres,' ',tbl_usuarios.apellido_paterno,' ',tbl_usuarios.apellido_materno) as recibe FROM tbl_solicitud_devolucion LEFT JOIN tbl_users as user_ag ON user_ag.idtbl_users = tbl_solicitud_devolucion.tbl_users_idtbl_users_aprobar_ag LEFT JOIN tbl_users as user_sh ON user_sh.idtbl_users = tbl_solicitud_devolucion.tbl_users_idtbl_user_aprobar_sh LEFT JOIN tbl_proyectos ON tbl_solicitud_devolucion.tbl_proyectos_idtbl_proyectos=tbl_proyectos.idtbl_proyectos LEFT JOIN tbl_users as user_autor ON tbl_solicitud_devolucion.tbl_users_idtbl_users_autor=user_autor.idtbl_users LEFT JOIN tbl_users as user_aprobacion ON tbl_solicitud_devolucion.tbl_users_idtbl_users_aprobacion=user_aprobacion.idtbl_users LEFT JOIN tbl_usuarios ON tbl_solicitud_devolucion.tbl_usuarios_idtbl_usuarios=tbl_usuarios.idtbl_usuarios WHERE (tbl_solicitud_devolucion.uid LIKE '%$buscar%' OR tbl_solicitud_devolucion.fecha_creacion LIKE '%$buscar%' OR tbl_proyectos.numero_proyecto LIKE '%$buscar%' OR user_autor.nombre LIKE '%$buscar%' OR user_aprobacion.nombre LIKE '%$buscar%' OR user_ag.nombre LIKE '%$buscar%' OR CONCAT(tbl_usuarios.nombres,' ',tbl_usuarios.apellido_paterno,' ',tbl_usuarios.apellido_materno) LIKE '%$buscar%') AND (tbl_solicitud_devolucion.tbl_proyectos_idtbl_proyectos $in OR " . $string . ") AND tbl_solicitud_devolucion.tbl_users_idtbl_users_aprobacion IS NOT NULL AND tbl_solicitud_devolucion.tipo_devolucion = 'Seguridad e Higiene' ". $status ." ORDER BY tbl_solicitud_devolucion.idtbl_solicitud_devolucion DESC " . $limit);
		}else{
			
			$query = $this->db->query("SELECT tbl_proyectos.nombre_proyecto, tbl_proyectos.numero_proyecto, tbl_solicitud_devolucion.*, user_autor.nombre as user_autor, user_aprobacion.nombre as user_aprobacion, user_ag.nombre as user_almacen_general, user_sh.nombre as user_sh, CONCAT(tbl_usuarios.nombres,' ',tbl_usuarios.apellido_paterno,' ',tbl_usuarios.apellido_materno) as recibe FROM tbl_solicitud_devolucion LEFT JOIN tbl_users as user_ag ON user_ag.idtbl_users = tbl_solicitud_devolucion.tbl_users_idtbl_users_aprobar_ag LEFT JOIN tbl_users as user_sh ON user_sh.idtbl_users = tbl_solicitud_devolucion.tbl_users_idtbl_user_aprobar_sh LEFT JOIN tbl_proyectos ON tbl_solicitud_devolucion.tbl_proyectos_idtbl_proyectos=tbl_proyectos.idtbl_proyectos LEFT JOIN tbl_users as user_autor ON tbl_solicitud_devolucion.tbl_users_idtbl_users_autor=user_autor.idtbl_users LEFT JOIN tbl_users as user_aprobacion ON tbl_solicitud_devolucion.tbl_users_idtbl_users_aprobacion=user_aprobacion.idtbl_users LEFT JOIN tbl_usuarios ON tbl_solicitud_devolucion.tbl_usuarios_idtbl_usuarios=tbl_usuarios.idtbl_usuarios WHERE (tbl_solicitud_devolucion.uid LIKE '%$buscar%' OR tbl_solicitud_devolucion.fecha_creacion LIKE '%$buscar%' OR tbl_proyectos.numero_proyecto LIKE '%$buscar%' OR user_autor.nombre LIKE '%$buscar%' OR user_aprobacion.nombre LIKE '%$buscar%' OR user_ag.nombre LIKE '%$buscar%' OR CONCAT(tbl_usuarios.nombres,' ',tbl_usuarios.apellido_paterno,' ',tbl_usuarios.apellido_materno) LIKE '%$buscar%') AND " . "tbl_solicitud_devolucion.tipo_devolucion = 'Seguridad e Higiene' ". $status ." ORDER BY tbl_solicitud_devolucion.idtbl_solicitud_devolucion DESC " . $limit);
		}
		
		return $query->result_array();
	}
	
	public function solicitudes_devoluciones_monclova($buscar = '', $buscar2 = '', $inicio = false, $cantidadRegistro = false) {
		$limit = '';
		if ($inicio !== false && $cantidadRegistro !== false) {
			$limit = 'LIMIT ' . $inicio . "," . $cantidadRegistro;
		}		
		if ($buscar2 == '') {
			$status = "";
		}
		if ($buscar2 != '') {
			$status = "AND (tbl_solicitud_devolucion.estatus_solicitud = '$buscar2')";
		}
		$string = "";
		if ($this->session->userdata('tipo') == 10 || $this->session->userdata('tipo') == 4) {
			//$string = "tbl_solicitud_devolucion.tbl_users_idtbl_users_aprobacion IS NOT NULL AND ";
			$query = $this->db->query("SELECT tbl_proyectos.nombre_proyecto, tbl_proyectos.numero_proyecto, tbl_solicitud_devolucion.*, user_autor.nombre as user_autor, user_aprobacion.nombre as user_aprobacion, user_ag.nombre as user_almacen_general, user_sh.nombre as user_sh, CONCAT(tbl_usuarios.nombres,' ',tbl_usuarios.apellido_paterno,' ',tbl_usuarios.apellido_materno) as recibe FROM tbl_solicitud_devolucion LEFT JOIN tbl_users as user_ag ON user_ag.idtbl_users = tbl_solicitud_devolucion.tbl_users_idtbl_users_aprobar_ag LEFT JOIN tbl_users as user_sh ON user_sh.idtbl_users = tbl_solicitud_devolucion.tbl_users_idtbl_user_aprobar_sh LEFT JOIN tbl_proyectos ON tbl_solicitud_devolucion.tbl_proyectos_idtbl_proyectos=tbl_proyectos.idtbl_proyectos LEFT JOIN tbl_users as user_autor ON tbl_solicitud_devolucion.tbl_users_idtbl_users_autor=user_autor.idtbl_users LEFT JOIN tbl_users as user_aprobacion ON tbl_solicitud_devolucion.tbl_users_idtbl_users_aprobacion=user_aprobacion.idtbl_users LEFT JOIN tbl_usuarios ON tbl_solicitud_devolucion.tbl_usuarios_idtbl_usuarios=tbl_usuarios.idtbl_usuarios WHERE (tbl_solicitud_devolucion.uid LIKE '%$buscar%' OR tbl_solicitud_devolucion.fecha_creacion LIKE '%$buscar%' OR tbl_proyectos.numero_proyecto LIKE '%$buscar%' OR user_autor.nombre LIKE '%$buscar%' OR user_aprobacion.nombre LIKE '%$buscar%' OR user_ag.nombre LIKE '%$buscar%' OR CONCAT(tbl_usuarios.nombres,' ',tbl_usuarios.apellido_paterno,' ',tbl_usuarios.apellido_materno) LIKE '%$buscar%') AND " . $string . "tbl_proyectos.direccion LIKE '%monclova%' ". $status ." ORDER BY tbl_solicitud_devolucion.idtbl_solicitud_devolucion DESC " . $limit);
		}
		elseif ($this->session->userdata('tipo') == 5 || $this->session->userdata('tipo') == 9) {
			$string = "tbl_solicitud_devolucion.tbl_users_idtbl_users_autor = " . $this->session->userdata('id') . " AND ";
			$query = $this->db->query("SELECT tbl_proyectos.nombre_proyecto, tbl_proyectos.numero_proyecto, tbl_solicitud_devolucion.*, user_autor.nombre as user_autor, user_aprobacion.nombre as user_aprobacion, user_ag.nombre as user_almacen_general, user_sh.nombre as user_sh, CONCAT(tbl_usuarios.nombres,' ',tbl_usuarios.apellido_paterno,' ',tbl_usuarios.apellido_materno) as recibe FROM tbl_solicitud_devolucion LEFT JOIN tbl_users as user_ag ON user_ag.idtbl_users = tbl_solicitud_devolucion.tbl_users_idtbl_users_aprobar_ag LEFT JOIN tbl_users as user_sh ON user_sh.idtbl_users = tbl_solicitud_devolucion.tbl_users_idtbl_user_aprobar_sh LEFT JOIN tbl_proyectos ON tbl_solicitud_devolucion.tbl_proyectos_idtbl_proyectos=tbl_proyectos.idtbl_proyectos LEFT JOIN tbl_users as user_autor ON tbl_solicitud_devolucion.tbl_users_idtbl_users_autor=user_autor.idtbl_users LEFT JOIN tbl_users as user_aprobacion ON tbl_solicitud_devolucion.tbl_users_idtbl_users_aprobacion=user_aprobacion.idtbl_users LEFT JOIN tbl_usuarios ON tbl_solicitud_devolucion.tbl_usuarios_idtbl_usuarios=tbl_usuarios.idtbl_usuarios WHERE (tbl_solicitud_devolucion.uid LIKE '%$buscar%' OR tbl_solicitud_devolucion.fecha_creacion LIKE '%$buscar%' OR tbl_proyectos.numero_proyecto LIKE '%$buscar%' OR user_autor.nombre LIKE '%$buscar%' OR user_aprobacion.nombre LIKE '%$buscar%' OR user_ag.nombre LIKE '%$buscar%' OR CONCAT(tbl_usuarios.nombres,' ',tbl_usuarios.apellido_paterno,' ',tbl_usuarios.apellido_materno) LIKE '%$buscar%') AND " . $string . "tbl_solicitud_devolucion.tipo_devolucion = 'Seguridad e Higiene' ". $status ." ORDER BY tbl_solicitud_devolucion.idtbl_solicitud_devolucion DESC " . $limit);
		}
		elseif($this->session->userdata('encargado_almacen') != null && $this->session->userdata('encargado_almacen') != '') {
			$id_almacenes = '';
			$string = "user_autor.idtbl_users = " . $this->session->userdata('id');
			$usuario = $this->session->userdata('id');
			$almacenes_encargados = $this->db->query("SELECT tbl_almacenes.tbl_proyectos_idtbl_proyectos FROM tbl_encargado_almacen JOIN tbl_almacenes ON tbl_almacenes.idtbl_almacenes = tbl_encargado_almacen.tbl_almacenes_idtbl_almacenes WHERE tbl_encargado_almacen.tbl_users_idtbl_users = $usuario GROUP BY tbl_almacenes.tbl_proyectos_idtbl_proyectos");
			foreach($almacenes_encargados->result() AS $key => $value){
                if (isset($almacenes_encargados->result()[$key+1]->tbl_proyectos_idtbl_proyectos)) {
                    	$id_almacenes .= $value->tbl_proyectos_idtbl_proyectos.', ';
                }else{
					$id_almacenes .= $value->tbl_proyectos_idtbl_proyectos;
				}
			}

			if($id_almacenes != ''){
				$in = "IN ($id_almacenes)";
			}else{
				$in = '';
			}			
			
			$query = $this->db->query("SELECT tbl_proyectos.nombre_proyecto, tbl_proyectos.numero_proyecto, tbl_solicitud_devolucion.*, user_autor.nombre as user_autor, user_aprobacion.nombre as user_aprobacion, user_ag.nombre as user_almacen_general, user_sh.nombre as user_sh, CONCAT(tbl_usuarios.nombres,' ',tbl_usuarios.apellido_paterno,' ',tbl_usuarios.apellido_materno) as recibe FROM tbl_solicitud_devolucion LEFT JOIN tbl_users as user_ag ON user_ag.idtbl_users = tbl_solicitud_devolucion.tbl_users_idtbl_users_aprobar_ag LEFT JOIN tbl_users as user_sh ON user_sh.idtbl_users = tbl_solicitud_devolucion.tbl_users_idtbl_user_aprobar_sh LEFT JOIN tbl_proyectos ON tbl_solicitud_devolucion.tbl_proyectos_idtbl_proyectos=tbl_proyectos.idtbl_proyectos LEFT JOIN tbl_users as user_autor ON tbl_solicitud_devolucion.tbl_users_idtbl_users_autor=user_autor.idtbl_users LEFT JOIN tbl_users as user_aprobacion ON tbl_solicitud_devolucion.tbl_users_idtbl_users_aprobacion=user_aprobacion.idtbl_users LEFT JOIN tbl_usuarios ON tbl_solicitud_devolucion.tbl_usuarios_idtbl_usuarios=tbl_usuarios.idtbl_usuarios WHERE (tbl_solicitud_devolucion.uid LIKE '%$buscar%' OR tbl_solicitud_devolucion.fecha_creacion LIKE '%$buscar%' OR tbl_proyectos.numero_proyecto LIKE '%$buscar%' OR user_autor.nombre LIKE '%$buscar%' OR user_aprobacion.nombre LIKE '%$buscar%' OR user_ag.nombre LIKE '%$buscar%' OR CONCAT(tbl_usuarios.nombres,' ',tbl_usuarios.apellido_paterno,' ',tbl_usuarios.apellido_materno) LIKE '%$buscar%') AND (tbl_solicitud_devolucion.tbl_proyectos_idtbl_proyectos $in OR " . $string . ") AND tbl_solicitud_devolucion.tbl_users_idtbl_users_aprobacion IS NOT NULL AND tbl_solicitud_devolucion.tipo_devolucion = 'Seguridad e Higiene' ". $status ." ORDER BY tbl_solicitud_devolucion.idtbl_solicitud_devolucion DESC " . $limit);
		}else{
			
			$query = $this->db->query("SELECT tbl_proyectos.nombre_proyecto, tbl_proyectos.numero_proyecto, tbl_solicitud_devolucion.*, user_autor.nombre as user_autor, user_aprobacion.nombre as user_aprobacion, user_ag.nombre as user_almacen_general, user_sh.nombre as user_sh, CONCAT(tbl_usuarios.nombres,' ',tbl_usuarios.apellido_paterno,' ',tbl_usuarios.apellido_materno) as recibe FROM tbl_solicitud_devolucion LEFT JOIN tbl_users as user_ag ON user_ag.idtbl_users = tbl_solicitud_devolucion.tbl_users_idtbl_users_aprobar_ag LEFT JOIN tbl_users as user_sh ON user_sh.idtbl_users = tbl_solicitud_devolucion.tbl_users_idtbl_user_aprobar_sh LEFT JOIN tbl_proyectos ON tbl_solicitud_devolucion.tbl_proyectos_idtbl_proyectos=tbl_proyectos.idtbl_proyectos LEFT JOIN tbl_users as user_autor ON tbl_solicitud_devolucion.tbl_users_idtbl_users_autor=user_autor.idtbl_users LEFT JOIN tbl_users as user_aprobacion ON tbl_solicitud_devolucion.tbl_users_idtbl_users_aprobacion=user_aprobacion.idtbl_users LEFT JOIN tbl_usuarios ON tbl_solicitud_devolucion.tbl_usuarios_idtbl_usuarios=tbl_usuarios.idtbl_usuarios WHERE (tbl_solicitud_devolucion.uid LIKE '%$buscar%' OR tbl_solicitud_devolucion.fecha_creacion LIKE '%$buscar%' OR tbl_proyectos.numero_proyecto LIKE '%$buscar%' OR user_autor.nombre LIKE '%$buscar%' OR user_aprobacion.nombre LIKE '%$buscar%' OR user_ag.nombre LIKE '%$buscar%' OR CONCAT(tbl_usuarios.nombres,' ',tbl_usuarios.apellido_paterno,' ',tbl_usuarios.apellido_materno) LIKE '%$buscar%') AND " . "tbl_solicitud_devolucion.tipo_devolucion = 'Seguridad e Higiene' ". $status ." ORDER BY tbl_solicitud_devolucion.idtbl_solicitud_devolucion DESC " . $limit);
		}
		
		return $query->result_array();
	}

	public function solicitudes_devoluciones_villa($buscar = '', $buscar2 = '', $inicio = false, $cantidadRegistro = false) {
		$limit = '';
		if ($inicio !== false && $cantidadRegistro !== false) {
			$limit = 'LIMIT ' . $inicio . "," . $cantidadRegistro;
		}		
		if ($buscar2 == '') {
			$status = "";
		}
		if ($buscar2 != '') {
			$status = "AND (tbl_solicitud_devolucion.estatus_solicitud = '$buscar2')";
		}
		$string = "";
		if ($this->session->userdata('tipo') == 10 || $this->session->userdata('tipo') == 4) {
			//$string = "tbl_solicitud_devolucion.tbl_users_idtbl_users_aprobacion IS NOT NULL AND ";
			$query = $this->db->query("SELECT tbl_proyectos.nombre_proyecto, tbl_proyectos.numero_proyecto, tbl_solicitud_devolucion.*, user_autor.nombre as user_autor, user_aprobacion.nombre as user_aprobacion, user_ag.nombre as user_almacen_general, user_sh.nombre as user_sh, CONCAT(tbl_usuarios.nombres,' ',tbl_usuarios.apellido_paterno,' ',tbl_usuarios.apellido_materno) as recibe FROM tbl_solicitud_devolucion LEFT JOIN tbl_users as user_ag ON user_ag.idtbl_users = tbl_solicitud_devolucion.tbl_users_idtbl_users_aprobar_ag LEFT JOIN tbl_users as user_sh ON user_sh.idtbl_users = tbl_solicitud_devolucion.tbl_users_idtbl_user_aprobar_sh LEFT JOIN tbl_proyectos ON tbl_solicitud_devolucion.tbl_proyectos_idtbl_proyectos=tbl_proyectos.idtbl_proyectos LEFT JOIN tbl_users as user_autor ON tbl_solicitud_devolucion.tbl_users_idtbl_users_autor=user_autor.idtbl_users LEFT JOIN tbl_users as user_aprobacion ON tbl_solicitud_devolucion.tbl_users_idtbl_users_aprobacion=user_aprobacion.idtbl_users LEFT JOIN tbl_usuarios ON tbl_solicitud_devolucion.tbl_usuarios_idtbl_usuarios=tbl_usuarios.idtbl_usuarios WHERE (tbl_solicitud_devolucion.uid LIKE '%$buscar%' OR tbl_solicitud_devolucion.fecha_creacion LIKE '%$buscar%' OR tbl_proyectos.numero_proyecto LIKE '%$buscar%' OR user_autor.nombre LIKE '%$buscar%' OR user_aprobacion.nombre LIKE '%$buscar%' OR user_ag.nombre LIKE '%$buscar%' OR CONCAT(tbl_usuarios.nombres,' ',tbl_usuarios.apellido_paterno,' ',tbl_usuarios.apellido_materno) LIKE '%$buscar%') AND " . $string . "tbl_solicitud_devolucion.tbl_proyectos_idtbl_proyectos = 278 ". $status ." ORDER BY tbl_solicitud_devolucion.idtbl_solicitud_devolucion DESC " . $limit);
		}
		elseif ($this->session->userdata('tipo') == 5 || $this->session->userdata('tipo') == 9) {
			$string = "tbl_solicitud_devolucion.tbl_users_idtbl_users_autor = " . $this->session->userdata('id') . " AND ";
			$query = $this->db->query("SELECT tbl_proyectos.nombre_proyecto, tbl_proyectos.numero_proyecto, tbl_solicitud_devolucion.*, user_autor.nombre as user_autor, user_aprobacion.nombre as user_aprobacion, user_ag.nombre as user_almacen_general, user_sh.nombre as user_sh, CONCAT(tbl_usuarios.nombres,' ',tbl_usuarios.apellido_paterno,' ',tbl_usuarios.apellido_materno) as recibe FROM tbl_solicitud_devolucion LEFT JOIN tbl_users as user_ag ON user_ag.idtbl_users = tbl_solicitud_devolucion.tbl_users_idtbl_users_aprobar_ag LEFT JOIN tbl_users as user_sh ON user_sh.idtbl_users = tbl_solicitud_devolucion.tbl_users_idtbl_user_aprobar_sh LEFT JOIN tbl_proyectos ON tbl_solicitud_devolucion.tbl_proyectos_idtbl_proyectos=tbl_proyectos.idtbl_proyectos LEFT JOIN tbl_users as user_autor ON tbl_solicitud_devolucion.tbl_users_idtbl_users_autor=user_autor.idtbl_users LEFT JOIN tbl_users as user_aprobacion ON tbl_solicitud_devolucion.tbl_users_idtbl_users_aprobacion=user_aprobacion.idtbl_users LEFT JOIN tbl_usuarios ON tbl_solicitud_devolucion.tbl_usuarios_idtbl_usuarios=tbl_usuarios.idtbl_usuarios WHERE (tbl_solicitud_devolucion.uid LIKE '%$buscar%' OR tbl_solicitud_devolucion.fecha_creacion LIKE '%$buscar%' OR tbl_proyectos.numero_proyecto LIKE '%$buscar%' OR user_autor.nombre LIKE '%$buscar%' OR user_aprobacion.nombre LIKE '%$buscar%' OR user_ag.nombre LIKE '%$buscar%' OR CONCAT(tbl_usuarios.nombres,' ',tbl_usuarios.apellido_paterno,' ',tbl_usuarios.apellido_materno) LIKE '%$buscar%') AND " . $string . "tbl_solicitud_devolucion.tipo_devolucion = 'Seguridad e Higiene' ". $status ." ORDER BY tbl_solicitud_devolucion.idtbl_solicitud_devolucion DESC " . $limit);
		}
		elseif($this->session->userdata('encargado_almacen') != null && $this->session->userdata('encargado_almacen') != '') {
			$id_almacenes = '';
			$string = "user_autor.idtbl_users = " . $this->session->userdata('id');
			$usuario = $this->session->userdata('id');
			$almacenes_encargados = $this->db->query("SELECT tbl_almacenes.tbl_proyectos_idtbl_proyectos FROM tbl_encargado_almacen JOIN tbl_almacenes ON tbl_almacenes.idtbl_almacenes = tbl_encargado_almacen.tbl_almacenes_idtbl_almacenes WHERE tbl_encargado_almacen.tbl_users_idtbl_users = $usuario GROUP BY tbl_almacenes.tbl_proyectos_idtbl_proyectos");
			foreach($almacenes_encargados->result() AS $key => $value){
                if (isset($almacenes_encargados->result()[$key+1]->tbl_proyectos_idtbl_proyectos)) {
                    	$id_almacenes .= $value->tbl_proyectos_idtbl_proyectos.', ';
                }else{
					$id_almacenes .= $value->tbl_proyectos_idtbl_proyectos;
				}
			}

			if($id_almacenes != ''){
				$in = "IN ($id_almacenes)";
			}else{
				$in = '';
			}			
			
			$query = $this->db->query("SELECT tbl_proyectos.nombre_proyecto, tbl_proyectos.numero_proyecto, tbl_solicitud_devolucion.*, user_autor.nombre as user_autor, user_aprobacion.nombre as user_aprobacion, user_ag.nombre as user_almacen_general, user_sh.nombre as user_sh, CONCAT(tbl_usuarios.nombres,' ',tbl_usuarios.apellido_paterno,' ',tbl_usuarios.apellido_materno) as recibe FROM tbl_solicitud_devolucion LEFT JOIN tbl_users as user_ag ON user_ag.idtbl_users = tbl_solicitud_devolucion.tbl_users_idtbl_users_aprobar_ag LEFT JOIN tbl_users as user_sh ON user_sh.idtbl_users = tbl_solicitud_devolucion.tbl_users_idtbl_user_aprobar_sh LEFT JOIN tbl_proyectos ON tbl_solicitud_devolucion.tbl_proyectos_idtbl_proyectos=tbl_proyectos.idtbl_proyectos LEFT JOIN tbl_users as user_autor ON tbl_solicitud_devolucion.tbl_users_idtbl_users_autor=user_autor.idtbl_users LEFT JOIN tbl_users as user_aprobacion ON tbl_solicitud_devolucion.tbl_users_idtbl_users_aprobacion=user_aprobacion.idtbl_users LEFT JOIN tbl_usuarios ON tbl_solicitud_devolucion.tbl_usuarios_idtbl_usuarios=tbl_usuarios.idtbl_usuarios WHERE (tbl_solicitud_devolucion.uid LIKE '%$buscar%' OR tbl_solicitud_devolucion.fecha_creacion LIKE '%$buscar%' OR tbl_proyectos.numero_proyecto LIKE '%$buscar%' OR user_autor.nombre LIKE '%$buscar%' OR user_aprobacion.nombre LIKE '%$buscar%' OR user_ag.nombre LIKE '%$buscar%' OR CONCAT(tbl_usuarios.nombres,' ',tbl_usuarios.apellido_paterno,' ',tbl_usuarios.apellido_materno) LIKE '%$buscar%') AND (tbl_solicitud_devolucion.tbl_proyectos_idtbl_proyectos $in OR " . $string . ") AND tbl_solicitud_devolucion.tbl_users_idtbl_users_aprobacion IS NOT NULL AND tbl_solicitud_devolucion.tipo_devolucion = 'Seguridad e Higiene' ". $status ." ORDER BY tbl_solicitud_devolucion.idtbl_solicitud_devolucion DESC " . $limit);
		}else{
			
			$query = $this->db->query("SELECT tbl_proyectos.nombre_proyecto, tbl_proyectos.numero_proyecto, tbl_solicitud_devolucion.*, user_autor.nombre as user_autor, user_aprobacion.nombre as user_aprobacion, user_ag.nombre as user_almacen_general, user_sh.nombre as user_sh, CONCAT(tbl_usuarios.nombres,' ',tbl_usuarios.apellido_paterno,' ',tbl_usuarios.apellido_materno) as recibe FROM tbl_solicitud_devolucion LEFT JOIN tbl_users as user_ag ON user_ag.idtbl_users = tbl_solicitud_devolucion.tbl_users_idtbl_users_aprobar_ag LEFT JOIN tbl_users as user_sh ON user_sh.idtbl_users = tbl_solicitud_devolucion.tbl_users_idtbl_user_aprobar_sh LEFT JOIN tbl_proyectos ON tbl_solicitud_devolucion.tbl_proyectos_idtbl_proyectos=tbl_proyectos.idtbl_proyectos LEFT JOIN tbl_users as user_autor ON tbl_solicitud_devolucion.tbl_users_idtbl_users_autor=user_autor.idtbl_users LEFT JOIN tbl_users as user_aprobacion ON tbl_solicitud_devolucion.tbl_users_idtbl_users_aprobacion=user_aprobacion.idtbl_users LEFT JOIN tbl_usuarios ON tbl_solicitud_devolucion.tbl_usuarios_idtbl_usuarios=tbl_usuarios.idtbl_usuarios WHERE (tbl_solicitud_devolucion.uid LIKE '%$buscar%' OR tbl_solicitud_devolucion.fecha_creacion LIKE '%$buscar%' OR tbl_proyectos.numero_proyecto LIKE '%$buscar%' OR user_autor.nombre LIKE '%$buscar%' OR user_aprobacion.nombre LIKE '%$buscar%' OR user_ag.nombre LIKE '%$buscar%' OR CONCAT(tbl_usuarios.nombres,' ',tbl_usuarios.apellido_paterno,' ',tbl_usuarios.apellido_materno) LIKE '%$buscar%') AND " . "tbl_solicitud_devolucion.tipo_devolucion = 'Seguridad e Higiene' ". $status ." ORDER BY tbl_solicitud_devolucion.idtbl_solicitud_devolucion DESC " . $limit);
		}
		
		return $query->result_array();
	}

	public function guardar_solicitud_devolucion($uid) {
		if ($this->session->userdata('tipo') == 11 && $this->session->userdata('id') != 45 && ($this->input->post('tipo_devolucion') == 'Almacen General' || $this->input->post('tipo_devolucion') == 'Seguridad e Higiene') && $this->input->post('parent') != null) {
			$data = array(
				'estatus_solicitud' => 'A.G',
				'tbl_users_idtbl_users_aprobacion' => $this->session->userdata('id'),
				'fecha_aprobacion_co' => date('Y-m-d H:i:s')
			);
			$this->db->where('idtbl_solicitud_devolucion ', $uid);
			return $this->db->update('tbl_solicitud_devolucion', $data);
		}
		if ($this->session->userdata('tipo') == 11 && $this->session->userdata('id') != 45 && $this->input->post('tipo_devolucion') == 'Alto Costo' && $this->input->post('parent') != null) {
			$data = array(
				'estatus_solicitud' => 'A.C',
				'tbl_users_idtbl_users_aprobacion' => $this->session->userdata('id'),
				'fecha_aprobacion_co' => date('Y-m-d H:i:s')
			);
			$this->db->where('idtbl_solicitud_devolucion ', $uid);
			return $this->db->update('tbl_solicitud_devolucion', $data);
		}
		if ($this->session->userdata('tipo') == 10 && $this->input->post('tipo_devolucion') == 'Seguridad e Higiene' && $this->input->post('parent') != null) {
			if(isset($_POST['contratista']) && ($this->input->post('contratista') != '' && $this->input->post('contratista') != NULL)){
				$status = 'C.O';
			}else{				
				$status = 'A.G';								
			}
			$data = array(
				'estatus_solicitud' => $status,
				'tbl_users_idtbl_user_aprobar_sh' => $this->session->userdata('id'),
				'fecha_aprobacion_sh' => date('Y-m-d H:i:s')
			);
			$this->db->where('idtbl_solicitud_devolucion ', $uid);
			return $this->db->update('tbl_solicitud_devolucion', $data);
		}
		if ($this->session->userdata('tipo') == 11 && $this->session->userdata('id') != 45 && $this->input->post('tipo_devolucion') == 'Sistemas' && $this->input->post('parent') != null) {
			$data = array(
				'estatus_solicitud' => 'Sis',
				'tbl_users_idtbl_users_aprobacion' => $this->session->userdata('id'),
				'fecha_aprobacion_co' => date('Y-m-d H:i:s')
			);
			$this->db->where('idtbl_solicitud_devolucion ', $uid);
			return $this->db->update('tbl_solicitud_devolucion', $data);
		}
		if ($this->session->userdata('tipo') == 11 && $this->session->userdata('id') != 45 && $this->input->post('tipo_devolucion') == 'Autos Control Vehicular' && $this->input->post('parent') != null) {
			$data = array(
				'estatus_solicitud' => 'A.C.V',
				'tbl_users_idtbl_users_aprobacion' => $this->session->userdata('id'),
				'fecha_aprobacion_co' => date('Y-m-d H:i:s')
			);
			$this->db->where('idtbl_solicitud_devolucion ', $uid);
			return $this->db->update('tbl_solicitud_devolucion', $data);
		}
		if ($this->session->userdata('tipo') == 11 && $this->session->userdata('id') != 45 && $this->input->post('tipo_devolucion') == 'Kuali' && $this->input->post('parent') != null) {
			$data = array(
				'estatus_solicitud' => 'K',
				'tbl_users_idtbl_users_aprobacion' => $this->session->userdata('id')
			);
			$this->db->where('idtbl_solicitud_devolucion ', $uid);
			return $this->db->update('tbl_solicitud_devolucion', $data);
		}	 elseif (($this->session->userdata('tipo') == 4 || ($this->session->userdata('encargado_almacen') != null && $this->session->userdata('encargado_almacen') != '')) && $this->session->userdata('id') != 45 && $this->session->userdata('id')!=50 && $this->input->post('parent') != null) {
			$data = array(
				'estatus_solicitud' => 'aprobada',
				'tbl_users_idtbl_users_aprobar_ag' => $this->session->userdata('id'),
				'fecha_aprobacion_ag' => date('Y-m-d H:i:s')
			);
			$this->db->where('idtbl_solicitud_devolucion ', $uid);
			return $this->db->update('tbl_solicitud_devolucion', $data);
		} elseif ($this->session->userdata('tipo') == 4 && $this->session->userdata('id') == 50 && $this->input->post('parent') != null) {
			$data = array(
				'estatus_solicitud' => 'aprobada',
				'tbl_users_idtbl_users_aprobar_kuali' => $this->session->userdata('id'),
				'fecha_aprobacion_k' => date('Y-m-d H:i:s')
			);
			$this->db->where('idtbl_solicitud_devolucion ', $uid);
			return $this->db->update('tbl_solicitud_devolucion', $data);
		} elseif ($this->session->userdata('tipo') == 1 && $this->input->post('parent') != null) {
			$data = array(
				'estatus_solicitud' => 'aprobada',
				'tbl_users_idtbl_users_aprobar_ac' => $this->session->userdata('id'),
				'fecha_aprobacion_ac' => date('Y-m-d H:i:s')
			);
			$this->db->where('idtbl_solicitud_devolucion ', $uid);
			return $this->db->update('tbl_solicitud_devolucion', $data);
		} elseif ($this->session->userdata('tipo') == 3 && $this->input->post('parent') != null && $this->input->post('tipo_devolucion') == 'Autos Control Vehicular') {
			$data = array(
				'estatus_solicitud' => 'aprobada',
				'tbl_users_idtbl_users_aprobar_acv' => $this->session->userdata('id'),
				'fecha_aprobacion_acv' => date('Y-m-d H:i:s')
			);
			$this->db->where('idtbl_solicitud_devolucion ', $uid);
			return $this->db->update('tbl_solicitud_devolucion', $data);
		} elseif ($this->session->userdata('tipo') == 3 && $this->input->post('parent') != null && $this->input->post('tipo_devolucion') == 'Tarjetas') {
			$data = array(
				'estatus_solicitud' => 'aprobada',
				'tbl_users_idtbl_users_aprobar_rcv' => $this->session->userdata('id'),
				'fecha_aprobacion_rcv' => date('Y-m-d H:i:s')
			);
			$this->db->where('idtbl_solicitud_devolucion ', $uid);
			return $this->db->update('tbl_solicitud_devolucion', $data);
		} elseif ($this->session->userdata('tipo') == 3 && $this->input->post('parent') != null && $this->input->post('tipo_devolucion') == 'Refacciones Control Vehicular') {
			$data = array(
				'estatus_solicitud' => 'aprobada',
				'tbl_users_idtbl_users_aprobar_rcv' => $this->session->userdata('id'),
				'fecha_aprobacion_rcv' => date('Y-m-d H:i:s')
			);
			$this->db->where('idtbl_solicitud_devolucion ', $uid);
			return $this->db->update('tbl_solicitud_devolucion', $data);
		} elseif ($this->session->userdata('tipo') == 2 && $this->input->post('parent') != null && $this->input->post('tipo_devolucion') == 'Sistemas') {
			$data = array(
				'estatus_solicitud' => 'aprobada',
				'tbl_users_idtbl_users_aprobar_sis' => $this->session->userdata('id'),
				'fecha_aprobacion_sis' => date('Y-m-d H:i:s')
			);
			$this->db->where('idtbl_solicitud_devolucion ', $uid);
			return $this->db->update('tbl_solicitud_devolucion', $data);
		} elseif ($this->session->userdata('tipo') == 14 && $this->input->post('parent') != null && $this->input->post('tipo_devolucion') == 'Area Medica') {
			$data = array(
				'estatus_solicitud' => 'aprobada',
				'tbl_users_idtbl_users_aprobar_am' => $this->session->userdata('id'),
				'fecha_aprobacion_am' => date('Y-m-d H:i:s')
			);
			$this->db->where('idtbl_solicitud_devolucion ', $uid);
			return $this->db->update('tbl_solicitud_devolucion', $data);
		} elseif ($this->session->userdata('tipo') != 14 && $this->input->post('tipo_devolucion')=='Area Medica') {
			$this->db->trans_begin();
			//echo 'aqui si';
			$data = array(
				'estatus_solicitud' => 'A.M',
				'uid' => $uid,
				'comentarios' => $this->input->post('observaciones'),
				'tipo_devolucion' => $this->input->post('tipo_devolucion'),
				'tbl_usuarios_idtbl_usuarios' => $this->input->post('usuario'),
				'tbl_proyectos_idtbl_proyectos' => $this->input->post('idtbl_proyectos'),
				'tbl_segmentos_proyecto_idtbl_segmentos_proyecto' => (!$this->input->post('segmento') || $this->input->post('segmento') == '') ? NULL : $this->input->post('segmento'),
				'tbl_users_idtbl_users_autor' => $this->session->userdata('id'),
				'tbl_contratistas_idtbl_contratistas' => (!$this->input->post('contratista') || $this->input->post('contratista') == '') ? NULL : $this->input->post('contratista'),
				'tbl_usuarios_idtbl_usuarios_supervisor' => (!$this->input->post('supervisor') || $this->input->post('supervisor') == '') ? NULL : $this->input->post('supervisor')
			);

			$this->db->insert('tbl_solicitud_devolucion', $data);
			$insert_id = $this->db->insert_id();
			foreach ($this->input->post('producto') as $key => $value) {
				if ($value != 0) {
					$insert = array(
						'tbl_solicitud_devolucion_idtbl_solicitud_devolucion' => $insert_id,
						'tbl_catalogo_idtbl_catalogo' => $value,
						'cantidad' => $this->input->post('cantidad')[$key]
					);
					if ($this->input->post('cantidad')[$key] != 0) {
						//Se registra la entrada
						$this->db->insert('dtl_solicitud_devolucion', $insert);
					}
				}
			}
			if ($this->db->trans_status() === FALSE) {
				$this->db->trans_rollback();
				return false;
			} else {
				$this->db->trans_commit();
				return true;
			}
		} elseif ($this->session->userdata('tipo') == 14 && $this->input->post('tipo_devolucion')=='Area Medica') {
			$this->db->trans_begin();
			//echo 'aqui si';
			$data = array(
				'estatus_solicitud' => 'aprobada',
				'uid' => $uid,
				'comentarios' => $this->input->post('observaciones'),
				'tipo_devolucion' => $this->input->post('tipo_devolucion'),
				'tbl_usuarios_idtbl_usuarios' => $this->input->post('usuario'),
				'tbl_proyectos_idtbl_proyectos' => $this->input->post('idtbl_proyectos'),
				'tbl_segmentos_proyecto_idtbl_segmentos_proyecto' => (!$this->input->post('segmento') || $this->input->post('segmento') == '') ? NULL : $this->input->post('segmento'),
				'tbl_users_idtbl_users_autor' => $this->session->userdata('id'),
				'tbl_contratistas_idtbl_contratistas' => (!$this->input->post('contratista') || $this->input->post('contratista') == '') ? NULL : $this->input->post('contratista'),
				'tbl_usuarios_idtbl_usuarios_supervisor' => (!$this->input->post('supervisor') || $this->input->post('supervisor') == '') ? NULL : $this->input->post('supervisor'),
				'tbl_users_idtbl_users_aprobar_am' => $this->session->userdata('id'),
				'fecha_aprobacion_am' => date('Y-m-d H:i:s')
			);

			$this->db->insert('tbl_solicitud_devolucion', $data);
			$insert_id = $this->db->insert_id();
			foreach ($this->input->post('producto') as $key => $value) {
				if ($value != 0) {
					$insert = array(
						'tbl_solicitud_devolucion_idtbl_solicitud_devolucion' => $insert_id,
						'tbl_catalogo_idtbl_catalogo' => $value,
						'cantidad' => $this->input->post('cantidad')[$key]
					);
					if ($this->input->post('cantidad')[$key] != 0) {
						//Se registra la entrada
						$this->db->insert('dtl_solicitud_devolucion', $insert);
					}
				}
			}
			if ($this->db->trans_status() === FALSE) {
				$this->db->trans_rollback();
				return false;
			} else {
				$this->db->trans_commit();
				return true;
			}
		} elseif ($this->session->userdata('tipo') == 4 && $this->session->userdata('id') == 45) {
			$this->db->trans_begin();
			//echo 'aqui si';
			$data = array(
				'estatus_solicitud' => 'aprobada',
				'uid' => $uid,
				'comentarios' => $this->input->post('observaciones'),
				'tipo_devolucion' => $this->input->post('tipo_devolucion'),
				'tbl_usuarios_idtbl_usuarios' => $this->input->post('usuario'),
				'tbl_users_idtbl_users_aprobacion' => $this->session->userdata('id'),
				'fecha_aprobacion_co' => date('Y-m-d H:i:s'),
				'tbl_users_idtbl_users_aprobar_ag' => $this->session->userdata('id'),
				'fecha_aprobacion_ag' => date('Y-m-d H:i:s'),
				'tbl_proyectos_idtbl_proyectos' => $this->input->post('idtbl_proyectos'),
				'tbl_segmentos_proyecto_idtbl_segmentos_proyecto' => (!$this->input->post('segmento') || $this->input->post('segmento') == '') ? NULL : $this->input->post('segmento'),
				'tbl_users_idtbl_users_autor' => $this->session->userdata('id'),
				'tbl_contratistas_idtbl_contratistas' => (!$this->input->post('contratista') || $this->input->post('contratista') == '') ? NULL : $this->input->post('contratista'),
				'tbl_usuarios_idtbl_usuarios_supervisor' => (!$this->input->post('supervisor') || $this->input->post('supervisor') == '') ? NULL : $this->input->post('supervisor')
			);

			$this->db->insert('tbl_solicitud_devolucion', $data);
			$insert_id = $this->db->insert_id();
			foreach ($this->input->post('producto') as $key => $value) {
				if ($value != 0) {
					$insert = array(
						'tbl_solicitud_devolucion_idtbl_solicitud_devolucion' => $insert_id,
						'tbl_catalogo_idtbl_catalogo' => $value,
						'cantidad' => $this->input->post('cantidad')[$key]
					);
					if ($this->input->post('cantidad')[$key] != 0) {
						//Se registra la entrada
						$this->db->insert('dtl_solicitud_devolucion', $insert);
					}
				}
			}
			if ($this->db->trans_status() === FALSE) {
				$this->db->trans_rollback();
				return false;
			} else {
				$this->db->trans_commit();
				return true;
			}
		} elseif ($this->session->userdata('id') == 3 && $this->input->post('tipo_devolucion') != 'Kuali') {
			$this->db->trans_begin();
			//echo 'aqui si';
			$data = array(
				'estatus_solicitud' => ($this->input->post('tipo_devolucion') == 'Alto Costo' ? 'A.C' : 'A.G'),
				'uid' => $uid,
				'comentarios' => $this->input->post('observaciones'),
				'tipo_devolucion' => $this->input->post('tipo_devolucion'),
				'tbl_usuarios_idtbl_usuarios' => $this->input->post('usuario'),
				'tbl_users_idtbl_users_aprobacion' => $this->session->userdata('id'),
				'fecha_aprobacion_co' => date('Y-m-d H:i:s'),
				'tbl_proyectos_idtbl_proyectos' => $this->input->post('idtbl_proyectos'),
				'tbl_segmentos_proyecto_idtbl_segmentos_proyecto' => (!$this->input->post('segmento') || $this->input->post('segmento') == '') ? NULL : $this->input->post('segmento'),
				'tbl_users_idtbl_users_autor' => $this->session->userdata('id'),
				'tbl_contratistas_idtbl_contratistas' => (!$this->input->post('contratista') || $this->input->post('contratista') == '') ? NULL : $this->input->post('contratista'),
				'tbl_usuarios_idtbl_usuarios_supervisor' => (!$this->input->post('supervisor') || $this->input->post('supervisor') == '') ? NULL : $this->input->post('supervisor')
			);

			$this->db->insert('tbl_solicitud_devolucion', $data);
			$insert_id = $this->db->insert_id();
			foreach ($this->input->post('producto') as $key => $value) {
				if ($value != 0) {
					$insert = array(
						'tbl_solicitud_devolucion_idtbl_solicitud_devolucion' => $insert_id,
						'tbl_catalogo_idtbl_catalogo' => $value,
						'cantidad' => $this->input->post('cantidad')[$key]
					);
					if ($this->input->post('cantidad')[$key] != 0) {
						//Se registra la entrada
						$this->db->insert('dtl_solicitud_devolucion', $insert);
					}
				}
			}
			if ($this->db->trans_status() === FALSE) {
				$this->db->trans_rollback();
				return false;
			} else {
				$this->db->trans_commit();
				return true;
			}
		} elseif ($this->session->userdata('id') == 18 && $this->input->post('tipo_devolucion')=='Almacen General') {
			$this->db->trans_begin();
			//echo 'aqui si';
			$data = array(
				'estatus_solicitud' => 'A.G',
				'uid' => $uid,
				'comentarios' => $this->input->post('observaciones'),
				'tipo_devolucion' => $this->input->post('tipo_devolucion'),
				'tbl_usuarios_idtbl_usuarios' => $this->input->post('usuario'),
				'tbl_users_idtbl_users_aprobacion' => $this->session->userdata('id'),
				'fecha_aprobacion_co' => date('Y-m-d H:i:s'),
				'tbl_proyectos_idtbl_proyectos' => $this->input->post('idtbl_proyectos'),
				'tbl_segmentos_proyecto_idtbl_segmentos_proyecto' => (!$this->input->post('segmento') || $this->input->post('segmento') == '') ? NULL : $this->input->post('segmento'),
				'tbl_users_idtbl_users_autor' => $this->session->userdata('id'),
				'tbl_contratistas_idtbl_contratistas' => (!$this->input->post('contratista') || $this->input->post('contratista') == '') ? NULL : $this->input->post('contratista'),
				'tbl_usuarios_idtbl_usuarios_supervisor' => (!$this->input->post('supervisor') || $this->input->post('supervisor') == '') ? NULL : $this->input->post('supervisor'),
				'tipo_almacen' => $this->input->post('tipo_almacen')
			);

			$this->db->insert('tbl_solicitud_devolucion', $data);
			$insert_id = $this->db->insert_id();
			foreach ($this->input->post('producto') as $key => $value) {
				if ($value != 0) {
					$insert = array(
						'tbl_solicitud_devolucion_idtbl_solicitud_devolucion' => $insert_id,
						'tbl_catalogo_idtbl_catalogo' => $value,
						'cantidad' => $this->input->post('cantidad')[$key]
					);
					if ($this->input->post('cantidad')[$key] != 0) {
						//Se registra la entrada
						$this->db->insert('dtl_solicitud_devolucion', $insert);
					}
				}
			}
			if ($this->db->trans_status() === FALSE) {
				$this->db->trans_rollback();
				return false;
			} else {
				$this->db->trans_commit();
				return true;
			}
		} elseif ($this->session->userdata('id') == 66 && $this->input->post('tipo_devolucion')=='Almacen General') {
			$this->db->trans_begin();
			//echo 'aqui si';
			$data = array(
				'estatus_solicitud' => 'A.G',
				'uid' => $uid,
				'comentarios' => $this->input->post('observaciones'),
				'tipo_devolucion' => $this->input->post('tipo_devolucion'),
				'tbl_usuarios_idtbl_usuarios' => $this->input->post('usuario'),
				//'tbl_users_idtbl_users_aprobacion' => $this->session->userdata('id'),
				//'fecha_aprobacion_co' => date('Y-m-d H:i:s'),
				'tbl_proyectos_idtbl_proyectos' => $this->input->post('idtbl_proyectos'),
				'tbl_segmentos_proyecto_idtbl_segmentos_proyecto' => (!$this->input->post('segmento') || $this->input->post('segmento') == '') ? NULL : $this->input->post('segmento'),
				'tbl_users_idtbl_users_autor' => $this->session->userdata('id'),
				'tbl_contratistas_idtbl_contratistas' => (!$this->input->post('contratista') || $this->input->post('contratista') == '') ? NULL : $this->input->post('contratista'),
				'tbl_usuarios_idtbl_usuarios_supervisor' => (!$this->input->post('supervisor') || $this->input->post('supervisor') == '') ? NULL : $this->input->post('supervisor'),
				'tipo_almacen' => $this->input->post('tipo_almacen')
			);

			$this->db->insert('tbl_solicitud_devolucion', $data);
			$insert_id = $this->db->insert_id();
			foreach ($this->input->post('producto') as $key => $value) {
				if ($value != 0) {
					$insert = array(
						'tbl_solicitud_devolucion_idtbl_solicitud_devolucion' => $insert_id,
						'tbl_catalogo_idtbl_catalogo' => $value,
						'cantidad' => $this->input->post('cantidad')[$key]
					);
					if ($this->input->post('cantidad')[$key] != 0) {
						//Se registra la entrada
						$this->db->insert('dtl_solicitud_devolucion', $insert);
					}
				}
			}
			if ($this->db->trans_status() === FALSE) {
				$this->db->trans_rollback();
				return false;
			} else {
				$this->db->trans_commit();
				return true;
			}
		}/*elseif ($this->session->userdata('id') == 66 && ($this->input->post('tipo_devolucion') == 'Refacciones Control Vehicular' || $this->input->post('tipo_devolucion') == 'Autos Control Vehicular')) {
			$this->db->trans_begin();
			//echo 'aqui si';
			$data = array(
				'estatus_solicitud' => 'A.C.V',
				'uid' => $uid,
				'comentarios' => $this->input->post('observaciones'),
				'tipo_devolucion' => $this->input->post('tipo_devolucion'),
				'tbl_usuarios_idtbl_usuarios' => $this->input->post('usuario'),
				'tbl_users_idtbl_users_aprobacion' => $this->session->userdata('id'),
				'fecha_aprobacion_co' => date('Y-m-d H:i:s'),
				'tbl_proyectos_idtbl_proyectos' => $this->input->post('idtbl_proyectos'),
				'tbl_segmentos_proyecto_idtbl_segmentos_proyecto' => (!$this->input->post('segmento') || $this->input->post('segmento') == '') ? NULL : $this->input->post('segmento'),
				'tbl_users_idtbl_users_autor' => $this->session->userdata('id'),
				'tbl_contratistas_idtbl_contratistas' => (!$this->input->post('contratista') || $this->input->post('contratista') == '') ? NULL : $this->input->post('contratista'),
				'tbl_usuarios_idtbl_usuarios_supervisor' => (!$this->input->post('supervisor') || $this->input->post('supervisor') == '') ? NULL : $this->input->post('supervisor')
			);


			$this->db->insert('tbl_solicitud_devolucion', $data);
			$insert_id = $this->db->insert_id();
			foreach ($this->input->post('producto') as $key => $value) {
				if ($value != 0) {
					$insert = array(
						'tbl_solicitud_devolucion_idtbl_solicitud_devolucion' => $insert_id,
						'tbl_catalogo_idtbl_catalogo' => $value,
						'cantidad' => $this->input->post('cantidad')[$key]
					);
					if ($this->input->post('cantidad')[$key] != 0) {
						//Se registra la entrada
						$this->db->insert('dtl_solicitud_devolucion', $insert);
					}
				}
			}
			if ($this->db->trans_status() === FALSE) {
				$this->db->trans_rollback();
				return false;
			} else {
				$this->db->trans_commit();
				return true;
			}
		}*/ elseif ($this->session->userdata('tipo') == 9 && $this->input->post('tipo_devolucion')=='Autos Control Vehicular') {
			$this->db->trans_begin();
			if($this->input->post('tipo') == 'interno'){
				$estatus = 'A.C.V';
			}else{
				$estatus = 'C.O';
			}
			//echo 'aqui si';
			$data = array(
				'estatus_solicitud' => $estatus,
				'uid' => $uid,
				'comentarios' => $this->input->post('observaciones'),
				'tipo_devolucion' => $this->input->post('tipo_devolucion'),
				'tbl_usuarios_idtbl_usuarios' => $this->input->post('usuario'),
				'tbl_proyectos_idtbl_proyectos' => $this->input->post('idtbl_proyectos'),
				'tbl_segmentos_proyecto_idtbl_segmentos_proyecto' => (!$this->input->post('segmento') || $this->input->post('segmento') == '') ? NULL : $this->input->post('segmento'),
				'tbl_users_idtbl_users_autor' => $this->session->userdata('id'),
				'tbl_contratistas_idtbl_contratistas' => (!$this->input->post('contratista') || $this->input->post('contratista') == '') ? NULL : $this->input->post('contratista'),
				'tbl_usuarios_idtbl_usuarios_supervisor' => (!$this->input->post('supervisor') || $this->input->post('supervisor') == '') ? NULL : $this->input->post('supervisor')
			);

			$this->db->insert('tbl_solicitud_devolucion', $data);
			$insert_id = $this->db->insert_id();
			foreach ($this->input->post('producto') as $key => $value) {
				if ($value != 0) {
					$insert = array(
						'tbl_solicitud_devolucion_idtbl_solicitud_devolucion' => $insert_id,
						'tbl_catalogo_idtbl_catalogo' => $value,
						'cantidad' => $this->input->post('cantidad')[$key],
						//'dtl_almacen_iddtl_almacen' => $this->input->post('iddtl_almacen')[$key]
					);
					if ($this->input->post('cantidad')[$key] != 0) {
						//Se registra la entrada
						$this->db->insert('dtl_solicitud_devolucion', $insert);
					}
				}
			}
			if ($this->db->trans_status() === FALSE) {
				$this->db->trans_rollback();
				return false;
			} else {
				$this->db->trans_commit();
				return true;
			}
		} elseif ($this->session->userdata('tipo') == 3 && !isset($_POST['parent']) && $this->input->post('tipo_devolucion')=='Autos Control Vehicular') {
			$this->db->trans_begin();
			//echo 'aqui si';
			$data = array(
				'estatus_solicitud' => 'aprobada',
				'uid' => $uid,
				'comentarios' => $this->input->post('observaciones'),
				'tipo_devolucion' => $this->input->post('tipo_devolucion'),
				'tbl_usuarios_idtbl_usuarios' => $this->input->post('usuario'),
				'tbl_proyectos_idtbl_proyectos' => $this->input->post('idtbl_proyectos'),
				'tbl_segmentos_proyecto_idtbl_segmentos_proyecto' => (!$this->input->post('segmento') || $this->input->post('segmento') == '') ? NULL : $this->input->post('segmento'),
				'tbl_users_idtbl_users_autor' => $this->session->userdata('id'),
				'tbl_contratistas_idtbl_contratistas' => (!$this->input->post('contratista') || $this->input->post('contratista') == '') ? NULL : $this->input->post('contratista'),
				'tbl_usuarios_idtbl_usuarios_supervisor' => (!$this->input->post('supervisor') || $this->input->post('supervisor') == '') ? NULL : $this->input->post('supervisor'),
				'tbl_users_idtbl_users_aprobar_acv' => $this->session->userdata('id'),
				'fecha_aprobacion_acv' => date('Y-m-d H:i:s')
			);

			$this->db->insert('tbl_solicitud_devolucion', $data);
			$insert_id = $this->db->insert_id();
			foreach ($this->input->post('producto') as $key => $value) {
				if ($value != 0) {
					$insert = array(
						'tbl_solicitud_devolucion_idtbl_solicitud_devolucion' => $insert_id,
						'tbl_catalogo_idtbl_catalogo' => $value,
						'cantidad' => $this->input->post('cantidad')[$key],
						//'dtl_almacen_iddtl_almacen' => $this->input->post('iddtl_almacen')[$key]
					);
					if ($this->input->post('cantidad')[$key] != 0) {
						//Se registra la entrada
						$this->db->insert('dtl_solicitud_devolucion', $insert);
					}
				}
			}
			if ($this->db->trans_status() === FALSE) {
				$this->db->trans_rollback();
				return false;
			} else {
				$this->db->trans_commit();
				return true;
			}
		} elseif ($this->session->userdata('tipo') == 9 && $this->input->post('tipo_devolucion')=='Sistemas') {
			$this->db->trans_begin();
			//echo 'aqui si';
			$data = array(
				'estatus_solicitud' => 'C.O',
				'uid' => $uid,
				'comentarios' => $this->input->post('observaciones'),
				'tipo_devolucion' => $this->input->post('tipo_devolucion'),
				'tbl_usuarios_idtbl_usuarios' => $this->input->post('usuario'),
				'tbl_proyectos_idtbl_proyectos' => $this->input->post('idtbl_proyectos'),
				'tbl_segmentos_proyecto_idtbl_segmentos_proyecto' => (!$this->input->post('segmento') || $this->input->post('segmento') == '') ? NULL : $this->input->post('segmento'),
				'tbl_users_idtbl_users_autor' => $this->session->userdata('id'),
				'tbl_contratistas_idtbl_contratistas' => (!$this->input->post('contratista') || $this->input->post('contratista') == '') ? NULL : $this->input->post('contratista'),
				'tbl_usuarios_idtbl_usuarios_supervisor' => (!$this->input->post('supervisor') || $this->input->post('supervisor') == '') ? NULL : $this->input->post('supervisor')
			);

			$this->db->insert('tbl_solicitud_devolucion', $data);
			$insert_id = $this->db->insert_id();
			foreach ($this->input->post('producto') as $key => $value) {
				if ($value != 0) {
					$insert = array(
						'tbl_solicitud_devolucion_idtbl_solicitud_devolucion' => $insert_id,
						'tbl_catalogo_idtbl_catalogo' => $value,
						'cantidad' => $this->input->post('cantidad')[$key]
					);
					if ($this->input->post('cantidad')[$key] != 0) {
						//Se registra la entrada
						$this->db->insert('dtl_solicitud_devolucion', $insert);
					}
				}
			}
			if ($this->db->trans_status() === FALSE) {
				$this->db->trans_rollback();
				return false;
			} else {
				$this->db->trans_commit();
				return true;
			}
		} elseif (@$this->session->userdata('permisos')['devoluciones_refacciones_control_vehicular'] && $this->input->post('tipo_devolucion')=='Refacciones Control Vehicular') {
			$this->db->trans_begin();
			//echo 'aqui si';
			$data = array(
				'estatus_solicitud' => 'RCV',
				'uid' => $uid,
				'comentarios' => $this->input->post('observaciones'),
				'tipo_devolucion' => $this->input->post('tipo_devolucion'),
				'tbl_usuarios_idtbl_usuarios' => $this->input->post('usuario'),
				'tbl_proyectos_idtbl_proyectos' => $this->input->post('idtbl_proyectos'),
				'tbl_segmentos_proyecto_idtbl_segmentos_proyecto' => (!$this->input->post('segmento') || $this->input->post('segmento') == '') ? NULL : $this->input->post('segmento'),
				'tbl_users_idtbl_users_autor' => $this->session->userdata('id'),
				'tbl_contratistas_idtbl_contratistas' => (!$this->input->post('contratista') || $this->input->post('contratista') == '') ? NULL : $this->input->post('contratista'),
				'tbl_usuarios_idtbl_usuarios_supervisor' => (!$this->input->post('supervisor') || $this->input->post('supervisor') == '') ? NULL : $this->input->post('supervisor')
			);

			$this->db->insert('tbl_solicitud_devolucion', $data);
			$insert_id = $this->db->insert_id();
			foreach ($this->input->post('producto') as $key => $value) {
				if ($value != 0) {
					$insert = array(
						'tbl_solicitud_devolucion_idtbl_solicitud_devolucion' => $insert_id,
						'tbl_catalogo_idtbl_catalogo' => $value,
						'cantidad' => $this->input->post('cantidad')[$key]
					);
					if ($this->input->post('cantidad')[$key] != 0) {
						//Se registra la entrada
						$this->db->insert('dtl_solicitud_devolucion', $insert);
					}
				}
			}
			if ($this->db->trans_status() === FALSE) {
				$this->db->trans_rollback();
				return false;
			} else {
				$this->db->trans_commit();
				return true;
			}
		} elseif ($this->input->post('tipo_devolucion')=='Tarjetas') {
			$this->db->trans_begin();
			//echo 'aqui si';
			$data = array(
				'estatus_solicitud' => 'TCV',
				'uid' => $uid,
				'comentarios' => $this->input->post('observaciones'),
				'tipo_devolucion' => $this->input->post('tipo_devolucion'),
				'tbl_usuarios_idtbl_usuarios' => $this->input->post('usuario'),
				'tbl_proyectos_idtbl_proyectos' => $this->input->post('idtbl_proyectos'),
				'tbl_segmentos_proyecto_idtbl_segmentos_proyecto' => (!$this->input->post('segmento') || $this->input->post('segmento') == '') ? NULL : $this->input->post('segmento'),
				'tbl_users_idtbl_users_autor' => $this->session->userdata('id'),
				'tbl_contratistas_idtbl_contratistas' => (!$this->input->post('contratista') || $this->input->post('contratista') == '') ? NULL : $this->input->post('contratista'),
				'tbl_usuarios_idtbl_usuarios_supervisor' => (!$this->input->post('supervisor') || $this->input->post('supervisor') == '') ? NULL : $this->input->post('supervisor')
			);

			$this->db->insert('tbl_solicitud_devolucion', $data);
			$insert_id = $this->db->insert_id();
			foreach ($this->input->post('producto') as $key => $value) {
				if ($value != 0) {
					$insert = array(
						'tbl_solicitud_devolucion_idtbl_solicitud_devolucion' => $insert_id,
						'tbl_catalogo_idtbl_catalogo' => $value,
						'cantidad' => $this->input->post('cantidad')[$key]
					);
					if ($this->input->post('cantidad')[$key] != 0) {
						//Se registra la entrada
						$this->db->insert('dtl_solicitud_devolucion', $insert);
					}
				}
			}
			if ($this->db->trans_status() === FALSE) {
				$this->db->trans_rollback();
				return false;
			} else {
				$this->db->trans_commit();
				return true;
			}
		} elseif (($this->session->userdata('tipo') == 9 || $this->session->userdata('tipo') == 1 || $this->session->userdata('tipo') == 17 || $this->session->userdata('tipo') == 19) && $this->input->post('tipo_devolucion')=='Kuali') {
			$this->db->trans_begin();
			//echo 'aqui si';
			$data = array(
				'estatus_solicitud' => 'K',
				'uid' => $uid,
				'comentarios' => $this->input->post('observaciones'),
				'tipo_devolucion' => $this->input->post('tipo_devolucion'),
				'tbl_usuarios_idtbl_usuarios' => $this->input->post('usuario'),
				'tbl_proyectos_idtbl_proyectos' => $this->input->post('idtbl_proyectos'),
				'tbl_segmentos_proyecto_idtbl_segmentos_proyecto' => (!$this->input->post('segmento') || $this->input->post('segmento') == '') ? NULL : $this->input->post('segmento'),
				'tbl_users_idtbl_users_autor' => $this->session->userdata('id'),
				'tbl_contratistas_idtbl_contratistas' => (!$this->input->post('contratista') || $this->input->post('contratista') == '') ? NULL : $this->input->post('contratista'),
				'tbl_usuarios_idtbl_usuarios_supervisor' => (!$this->input->post('supervisor') || $this->input->post('supervisor') == '') ? NULL : $this->input->post('supervisor')
			);

			$this->db->insert('tbl_solicitud_devolucion', $data);
			$insert_id = $this->db->insert_id();
			foreach ($this->input->post('producto') as $key => $value) {
				if ($value != 0) {
					$insert = array(
						'tbl_solicitud_devolucion_idtbl_solicitud_devolucion' => $insert_id,
						'tbl_catalogo_idtbl_catalogo' => $value,
						'cantidad' => $this->input->post('cantidad')[$key]
					);
					if ($this->input->post('cantidad')[$key] != 0) {
						//Se registra la entrada
						$this->db->insert('dtl_solicitud_devolucion', $insert);
					}
				}
			}
			if ($this->db->trans_status() === FALSE) {
				$this->db->trans_rollback();
				return false;
			} else {
				$this->db->trans_commit();
				return true;
			}
		} elseif ($this->session->userdata('tipo') != 10 && $this->input->post('tipo_devolucion')=='Seguridad e Higiene') {
			$this->db->trans_begin();
			
			$data = array(
				'estatus_solicitud' => 'SH',
				'uid' => $uid,
				'comentarios' => $this->input->post('observaciones'),
				'tipo_devolucion' => $this->input->post('tipo_devolucion'),
				'tbl_usuarios_idtbl_usuarios' => $this->input->post('usuario'),
				'tbl_proyectos_idtbl_proyectos' => $this->input->post('idtbl_proyectos'),
				'tbl_segmentos_proyecto_idtbl_segmentos_proyecto' => (!$this->input->post('segmento') || $this->input->post('segmento') == '') ? NULL : $this->input->post('segmento'),
				'tbl_users_idtbl_users_autor' => $this->session->userdata('id'),
				'tbl_contratistas_idtbl_contratistas' => (!$this->input->post('contratista') || $this->input->post('contratista') == '') ? NULL : $this->input->post('contratista'),
				'tbl_usuarios_idtbl_usuarios_supervisor' => (!$this->input->post('supervisor') || $this->input->post('supervisor') == '') ? NULL : $this->input->post('supervisor'),
				'tipo_almacen' => $this->input->post('tipo_almacen')
			);

			$this->db->insert('tbl_solicitud_devolucion', $data);
			$insert_id = $this->db->insert_id();
			foreach ($this->input->post('producto') as $key => $value) {
				if ($value != 0) {
					$insert = array(
						'tbl_solicitud_devolucion_idtbl_solicitud_devolucion' => $insert_id,
						'tbl_catalogo_idtbl_catalogo' => $value,
						'cantidad' => $this->input->post('cantidad')[$key]
					);
					if ($this->input->post('cantidad')[$key] != 0) {
						//Se registra la entrada
						$this->db->insert('dtl_solicitud_devolucion', $insert);
					}
				}
			}
			if ($this->db->trans_status() === FALSE) {
				$this->db->trans_rollback();
				return false;
			} else {
				$this->db->trans_commit();
				return true;
			}
		} elseif ($this->session->userdata('tipo') == 10 && $this->input->post('tipo_devolucion')=='Seguridad e Higiene') {
			$this->db->trans_begin();
			if($this->input->post('contratista') != '' && $this->input->post('contratista') != NULL){
				$status = 'C.O';
			}else{				
				$status = 'A.G';								
			}
			$data = array(
				'estatus_solicitud' => $status,
				'uid' => $uid,
				'comentarios' => $this->input->post('observaciones'),
				'tipo_devolucion' => $this->input->post('tipo_devolucion'),
				'tbl_usuarios_idtbl_usuarios' => $this->input->post('usuario'),
				'tbl_proyectos_idtbl_proyectos' => $this->input->post('idtbl_proyectos'),
				'tbl_segmentos_proyecto_idtbl_segmentos_proyecto' => (!$this->input->post('segmento') || $this->input->post('segmento') == '') ? NULL : $this->input->post('segmento'),
				'tbl_users_idtbl_users_autor' => $this->session->userdata('id'),
				'tbl_contratistas_idtbl_contratistas' => (!$this->input->post('contratista') || $this->input->post('contratista') == '') ? NULL : $this->input->post('contratista'),
				'tbl_usuarios_idtbl_usuarios_supervisor' => (!$this->input->post('supervisor') || $this->input->post('supervisor') == '') ? NULL : $this->input->post('supervisor'),
				'tbl_users_idtbl_user_aprobar_sh' => $this->session->userdata('id'),
				'fecha_aprobacion_sh' => date('Y-m-d H:i:s'),
				'tipo_almacen' => $this->input->post('tipo_almacen')
			);

			$this->db->insert('tbl_solicitud_devolucion', $data);
			$insert_id = $this->db->insert_id();
			foreach ($this->input->post('producto') as $key => $value) {
				if ($value != 0) {
					$insert = array(
						'tbl_solicitud_devolucion_idtbl_solicitud_devolucion' => $insert_id,
						'tbl_catalogo_idtbl_catalogo' => $value,
						'cantidad' => $this->input->post('cantidad')[$key]
					);
					if ($this->input->post('cantidad')[$key] != 0) {
						//Se registra la entrada
						$this->db->insert('dtl_solicitud_devolucion', $insert);
					}
				}
			}
			if ($this->db->trans_status() === FALSE) {
				$this->db->trans_rollback();
				return false;
			} else {
				$this->db->trans_commit();
				return true;
			}
		} else {
			$this->db->trans_begin();
			//echo 'aqui';			
			if($this->input->post('contratista') != '' && $this->input->post('contratista') != NULL){
				$status = 'C.O';
			}else{
				if($this->input->post('tipo_devolucion') == 'Seguridad e Higiene' || $this->input->post('tipo_devolucion') == 'Almacen General'){
					$status = 'A.G';
				}
				elseif($this->input->post('tipo_devolucion') == 'Alto Costo'){
					$status = 'A.C';
				}elseif($this->input->post('tipo_devolucion') == 'Sistemas'){
					$status = 'Sis';
				}elseif($this->input->post('tipo_devolucion') == 'Autos Control Vehicular'){
					$status = 'A.C.V';
				}
			}
			$data = array(
				'estatus_solicitud' => $status,
				'uid' => $uid,
				'comentarios' => $this->input->post('observaciones'),
				'tipo_devolucion' => $this->input->post('tipo_devolucion'),
				'tbl_usuarios_idtbl_usuarios' => $this->input->post('usuario'),
				'tbl_proyectos_idtbl_proyectos' => $this->input->post('idtbl_proyectos'),
				'tbl_segmentos_proyecto_idtbl_segmentos_proyecto' => (!$this->input->post('segmento') || $this->input->post('segmento') == '') ? NULL : $this->input->post('segmento'),
				'tbl_users_idtbl_users_autor' => $this->session->userdata('id'),
				'tbl_contratistas_idtbl_contratistas' => (!$this->input->post('contratista') || $this->input->post('contratista') == '') ? NULL : $this->input->post('contratista'),
				'tbl_usuarios_idtbl_usuarios_supervisor' => (!$this->input->post('supervisor') || $this->input->post('supervisor') == '') ? NULL : $this->input->post('supervisor'),
				'tipo_almacen' => $this->input->post('tipo_almacen')
			);

			$this->db->insert('tbl_solicitud_devolucion', $data);
			$insert_id = $this->db->insert_id();
			foreach ($this->input->post('producto') as $key => $value) {
				if ($value != 0) {
					$insert = array(
						'tbl_solicitud_devolucion_idtbl_solicitud_devolucion' => $insert_id,
						'tbl_catalogo_idtbl_catalogo' => $value,
						'cantidad' => $this->input->post('cantidad')[$key]
					);
					if ($this->input->post('cantidad')[$key] != 0) {
						//Se registra la entrada
						$this->db->insert('dtl_solicitud_devolucion', $insert);
					}
				}
			}
			if ($this->db->trans_status() === FALSE) {
				$this->db->trans_rollback();
				return false;
			} else {
				$this->db->trans_commit();
				return true;
			}
		}
	}

	public function guardar_solicitud_devolucion_generador($uid) {
				
		$this->db->trans_begin();

		if((isset($_POST['mantenimiento']) && $this->input->post('mantenimiento') != NULL) && ($this->session->userdata('tipo') == 17 || $this->session->userdata('tipo') == 19)){			
			$updateMantenimiento = array( 
				'tbl_users_idtbl_users_supervisor' => NULL,
				'tbl_usuarios_idtbl_usuarios' => NULL

			);
			$this->db->set($updateMantenimiento);
			$this->db->where('idtbl_mantenimientos', $this->input->post('mantenimiento'));
			$this->db->update('tbl_mantenimientos');
		}
		//echo 'aqui';
		if($this->input->post('tipo') == 'contratista'){
			$estatus = 'C.O';
		}else{
			$estatus = 'A.G';
		}
		$data = array(
			'estatus_solicitud' => $estatus,
			'uid' => $uid,
			'comentarios' => $this->input->post('observaciones'),
			'tipo_devolucion' => $this->input->post('tipo_devolucion'),
			'tbl_usuarios_idtbl_usuarios' => $this->input->post('usuario'),
			'tbl_proyectos_idtbl_proyectos' => $this->input->post('idtbl_proyectos'),
			'tbl_segmentos_proyecto_idtbl_segmentos_proyecto' => (!$this->input->post('segmento') || $this->input->post('segmento') == '') ? NULL : $this->input->post('segmento'),
			'tbl_users_idtbl_users_autor' => $this->session->userdata('id'),
			'tbl_contratistas_idtbl_contratistas' => (!$this->input->post('contratista') || $this->input->post('contratista') == '') ? NULL : $this->input->post('contratista'),
			'tbl_usuarios_idtbl_usuarios_supervisor' => (!$this->input->post('supervisor') || $this->input->post('supervisor') == '') ? NULL : $this->input->post('supervisor'),
			'tbl_mantenimientos_idtbl_mantenimientos' => $this->input->post('mantenimiento'),
			'tipo_almacen' => $this->input->post('tipo_almacen')
		);

		
		$this->db->insert('tbl_solicitud_devolucion', $data);
		$insert_id = $this->db->insert_id();
		foreach ($this->input->post('producto') as $key => $value) {
			if ($value != 0) {
				$insert = array(
					'tbl_solicitud_devolucion_idtbl_solicitud_devolucion' => $insert_id,
					'tbl_catalogo_idtbl_catalogo' => $value,
					'cantidad' => $this->input->post('cantidad')[$key],
					'dtl_asignacion_iddtl_asignacion' => $this->input->post('iddtl_asignacion')[$key]
				);
				if ($this->input->post('cantidad')[$key] != 0) {
					//Se registra la entrada
					$this->db->insert('dtl_solicitud_devolucion', $insert);
				}
			}
		}

		

		if ($this->db->trans_status() === FALSE) {
			$this->db->trans_rollback();
			return false;
		} else {
			$this->db->trans_commit();
			return true;
		}
	}

	public function detalle_devolucion($uid) {
		$this->db->select('tbl_proyectos.uid as uid_proyecto');
		$this->db->select('tbl_proyectos.nombre_proyecto');
		$this->db->select('tbl_proyectos.numero_proyecto');
		$this->db->select('tbl_proyectos.direccion as direccion_proyecto');
		$this->db->select('tbl_segmentos_proyecto.idtbl_segmentos_proyecto');
		$this->db->select('tbl_segmentos_proyecto.segmento');

		$this->db->select('autor.nombre AS autor');
		$this->db->select('aprobador.nombre AS aprobacion');

		$this->db->select('tbl_contratistas.razon_social AS contratista');
		$this->db->select('CONCAT(supervisor.nombres," ",supervisor.apellido_materno," ",supervisor.apellido_paterno) as supervisor');
		$this->db->select('CONCAT(tbl_usuarios.nombres," ",tbl_usuarios.apellido_paterno," ",tbl_usuarios.apellido_materno) as entrega');
		$this->db->select('tbl_usuarios.uid  as uid_usuario');

		$this->db->select('tbl_almacen_movimientos.tbl_almacenes_idtbl_almacenes AS idalmacen');		
		$this->db->select('ctl_autorizados_entrega.idctl_autorizados_entrega  AS usuario_recibe');

		$this->db->select('tbl_solicitud_devolucion.*');

		$this->db->from('tbl_solicitud_devolucion');

		$this->db->join('tbl_proyectos', 'tbl_proyectos.idtbl_proyectos = tbl_solicitud_devolucion.tbl_proyectos_idtbl_proyectos', 'left');
		$this->db->join('tbl_segmentos_proyecto', 'tbl_segmentos_proyecto.idtbl_segmentos_proyecto = tbl_solicitud_devolucion.tbl_segmentos_proyecto_idtbl_segmentos_proyecto', 'left');

		$this->db->join('tbl_users AS autor', 'autor.idtbl_users = tbl_solicitud_devolucion.tbl_users_idtbl_users_autor', 'left');
		$this->db->join('tbl_users AS aprobador', 'aprobador.idtbl_users = tbl_solicitud_devolucion.tbl_users_idtbl_users_aprobacion', 'left');

		$this->db->join('tbl_contratistas', 'tbl_contratistas.idtbl_contratistas = tbl_solicitud_devolucion.tbl_contratistas_idtbl_contratistas', 'left');
		$this->db->join('tbl_usuarios AS supervisor', 'supervisor.idtbl_usuarios = tbl_solicitud_devolucion.tbl_usuarios_idtbl_usuarios_supervisor', 'left');
		$this->db->join('tbl_usuarios', 'tbl_solicitud_devolucion.tbl_usuarios_idtbl_usuarios = tbl_usuarios.idtbl_usuarios', 'left');
		$this->db->join('tbl_almacen_movimientos', 'tbl_almacen_movimientos.parent = tbl_solicitud_devolucion.idtbl_solicitud_devolucion', 'left');
		$this->db->join('ctl_autorizados_entrega', 'ctl_autorizados_entrega.idctl_autorizados_entrega  = tbl_almacen_movimientos.ctl_autorizados_entrega_idctl_autorizados_entrega ', 'left');
		$this->db->where('tbl_solicitud_devolucion.uid', $uid);
		$query = $this->db->get();
		$resultado = $query->result();
		if (count($resultado) > 0) {
			return $query->result()[0];
		} else {
			return false;
		}
	}

	public function detalle_devolucion_catalogo($id_solicitud, $tipo_devolucion = '') {
		/*if($tipo_devolucion == 'Autos Control Vehicular') {
			$query = $this->db->query("SELECT * FROM dtl_solicitud_devolucion WHERE tbl_solicitud_devolucion_idtbl_solicitud_devolucion = $id_solicitud AND dtl_almacen_iddtl_almacen IS NOT NULL");
			$datos = $query->result_array();
			if(sizeof($datos) == 0) {*/
				//echo "entra1";
				/*$this->db->select('dtl_solicitud_devolucion.*');*/
				//$this->db->select('tbl_catalogo.idtbl_catalogo');
				/*$this->db->select('tbl_catalogo.marca');
				$this->db->select('tbl_catalogo.modelo');
				$this->db->select('tbl_catalogo.descripcion');
				$this->db->select('tbl_catalogo.neodata');
				$this->db->select('tbl_solicitud_devolucion.tipo_devolucion as tipo_devolucion');*/
				//$this->db->select('tbl_catalogo.imagenes');
				/*$this->db->select('ctl_unidades_medida.unidad_medida_abr');*/
				//$this->db->select('dtl_almacen.*');
				/*$this->db->from('dtl_solicitud_devolucion');
				$this->db->join('tbl_catalogo', 'tbl_catalogo.idtbl_catalogo = dtl_solicitud_devolucion.tbl_catalogo_idtbl_catalogo', 'left');
				$this->db->join('ctl_unidades_medida', 'ctl_unidades_medida.idctl_unidades_medida = tbl_catalogo.ctl_unidades_medida_idctl_unidades_medida', 'left');
				$this->db->join('tbl_solicitud_devolucion', 'tbl_solicitud_devolucion.idtbl_solicitud_devolucion = dtl_solicitud_devolucion.tbl_solicitud_devolucion_idtbl_solicitud_devolucion');*/
				//$this->db->join('dtl_almacen', 'dtl_almacen.tbl_catalogo_idtbl_catalogo = tbl_catalogo.idtbl_catalogo', 'left');
				/*$this->db->where('dtl_solicitud_devolucion.tbl_solicitud_devolucion_idtbl_solicitud_devolucion', $id_solicitud);
				$query = $this->db->get();
			} else {*/
				//echo "entra2";
				/*$query = $this->db->query("SELECT dtl_solicitud_devolucion.*, dtl_solicitud_devolucion.dtl_almacen_iddtl_almacen as iddtl_almacen_relacion, tbl_catalogo.marca, tbl_catalogo.modelo, tbl_catalogo.descripcion, tbl_catalogo.neodata, ctl_unidades_medida.unidad_medida_abr, tbl_solicitud_devolucion.tipo_devolucion, dtl_almacen.* from dtl_solicitud_devolucion left join dtl_almacen on dtl_almacen.iddtl_almacen = dtl_solicitud_devolucion.dtl_almacen_iddtl_almacen left join tbl_catalogo on tbl_catalogo.idtbl_catalogo = dtl_almacen.tbl_catalogo_idtbl_catalogo left join ctl_unidades_medida on ctl_unidades_medida.idctl_unidades_medida = tbl_catalogo.ctl_unidades_medida_idctl_unidades_medida left join tbl_solicitud_devolucion on tbl_solicitud_devolucion.idtbl_solicitud_devolucion = dtl_solicitud_devolucion.tbl_solicitud_devolucion_idtbl_solicitud_devolucion where dtl_solicitud_devolucion.tbl_solicitud_devolucion_idtbl_solicitud_devolucion = " . $id_solicitud);
			}
		} else {*/
			//echo "entra3";
			$this->db->select('dtl_solicitud_devolucion.*');
			//$this->db->select('tbl_catalogo.idtbl_catalogo');
			$this->db->select('tbl_catalogo.marca');
			$this->db->select('tbl_catalogo.modelo');
			$this->db->select('tbl_catalogo.descripcion');
			$this->db->select('tbl_catalogo.neodata');
			$this->db->select('tbl_catalogo.ctl_categorias_idctl_categorias');
			//$this->db->select('tbl_catalogo.imagenes');
			$this->db->select('ctl_unidades_medida.unidad_medida_abr');
			//$this->db->select('dtl_almacen.*');
			$this->db->from('dtl_solicitud_devolucion');
			$this->db->join('tbl_catalogo', 'tbl_catalogo.idtbl_catalogo = dtl_solicitud_devolucion.tbl_catalogo_idtbl_catalogo', 'left');
			$this->db->join('ctl_unidades_medida', 'ctl_unidades_medida.idctl_unidades_medida = tbl_catalogo.ctl_unidades_medida_idctl_unidades_medida', 'left');
			//$this->db->join('dtl_almacen', 'dtl_almacen.tbl_catalogo_idtbl_catalogo = tbl_catalogo.idtbl_catalogo', 'left');
			$this->db->where('dtl_solicitud_devolucion.tbl_solicitud_devolucion_idtbl_solicitud_devolucion', $id_solicitud);
			$query = $this->db->get();
		/*}*/
		return $query->result();
	}

	public function detalle_devolucion_auto($id_solicitud) {
		$this->db->select('dtl_solicitud_devolucion.*');
		$this->db->select('tbl_catalogo.idtbl_catalogo');
		$this->db->select('tbl_catalogo.marca');
		$this->db->select('tbl_catalogo.modelo');
		$this->db->select('tbl_catalogo.descripcion');
		$this->db->select('tbl_catalogo.neodata');
		$this->db->select('tbl_catalogo.imagenes');
		$this->db->select('ctl_unidades_medida.unidad_medida_abr');
		$this->db->select('dtl_almacen.*');
		$this->db->from('dtl_solicitud_devolucion');
		$this->db->join('tbl_catalogo', 'tbl_catalogo.idtbl_catalogo = dtl_solicitud_devolucion.tbl_catalogo_idtbl_catalogo', 'left');
		$this->db->join('ctl_unidades_medida', 'ctl_unidades_medida.idctl_unidades_medida = tbl_catalogo.ctl_unidades_medida_idctl_unidades_medida', 'left');
		$this->db->join('dtl_almacen', 'dtl_almacen.tbl_catalogo_idtbl_catalogo = tbl_catalogo.idtbl_catalogo', 'left');
		$this->db->where('dtl_solicitud_devolucion.tbl_solicitud_devolucion_idtbl_solicitud_devolucion', $id_solicitud);
		$query = $this->db->get();
		return $query->result();
	}

	public function cancelar_devolucion($uid) {
		if (($this->session->userdata('tipo') == 4 && $this->session->userdata('id')!=50) || ($this->session->userdata('encargado_almacen') != null && $this->session->userdata('encargado_almacen') != '')) {
			$data = array(
				'estatus_solicitud' => 'cancelada A.G',
				'tbl_users_idtbl_users_aprobar_ag' => $this->session->userdata('id'),
				'comentarios' => $this->input->post('comentarios'),
				'fecha_aprobacion_ag' => date('Y-m-d H:i:s')
			);
		} else if ($this->session->userdata('tipo') == 4 && $this->session->userdata('id')==50) {
			$data = array(
				'estatus_solicitud' => 'cancelada K',
				'tbl_users_idtbl_users_aprobar_kuali' => $this->session->userdata('id'),
				'comentarios' => $this->input->post('comentarios'),
				'fecha_aprobacion_k' => date('Y-m-d H:i:s')
			);
		} else if ($this->session->userdata('tipo') == 1) {
			$data = array(
				'estatus_solicitud' => 'cancelada A.C',
				'tbl_users_idtbl_users_aprobar_ac' => $this->session->userdata('id'),
				'comentarios' => $this->input->post('comentarios'),
				'fecha_aprobacion_ac' => date('Y-m-d H:i:s')
			);
		} else if ($this->session->userdata('tipo') == 3 && $_POST['tipo_devolucion'] == 'Refacciones Control Vehicular') {
			$data = array(
				'estatus_solicitud' => 'cancelada RCV',
				'tbl_users_idtbl_users_aprobar_rcv' => $this->session->userdata('id'),
				'comentarios' => $this->input->post('comentarios'),
				'fecha_aprobacion_rcv' => date('Y-m-d H:i:s')
			);
		} else if ($this->session->userdata('tipo') == 2 && $_POST['tipo_devolucion'] == 'Sistemas') {
			$data = array(
				'estatus_solicitud' => 'cancelada Sis',
				'tbl_users_idtbl_users_aprobar_sis' => $this->session->userdata('id'),
				'comentarios' => $this->input->post('comentarios'),
				'fecha_aprobacion_sis' => date('Y-m-d H:i:s')
			);
		} else if ($this->session->userdata('tipo') == 3 && $_POST['tipo_devolucion'] == 'Autos Control Vehicular') {
			$data = array(
				'estatus_solicitud' => 'cancelada C.V',
				'tbl_users_idtbl_users_aprobar_acv' => $this->session->userdata('id'),
				'comentarios' => $this->input->post('comentarios'),
				'fecha_aprobacion_acv' => date('Y-m-d H:i:s')
			);
		} else if ($this->session->userdata('tipo') == 11){
			$data = array(
				'estatus_solicitud' => 'cancelada C.O',
				'tbl_users_idtbl_users_aprobacion' => $this->session->userdata('id'),
				'comentarios' => $this->input->post('comentarios'),
				'fecha_aprobacion_co' => date('Y-m-d H:i:s')
			);
		} else if ($this->session->userdata('tipo') == 14){
			$data = array(
				'estatus_solicitud' => 'cancelada A.M',
				'tbl_users_idtbl_users_aprobar_am' => $this->session->userdata('id'),
				'comentarios' => $this->input->post('comentarios'),
				'fecha_aprobacion_am' => date('Y-m-d H:i:s')
			);
		} else if ($this->session->userdata('tipo') == 10){
			$data = array(
				'estatus_solicitud' => 'cancelada S.H',
				'tbl_users_idtbl_user_aprobar_sh' => $this->session->userdata('id'),
				'comentarios' => $this->input->post('comentarios'),
				'fecha_aprobacion_sh' => date('Y-m-d H:i:s')
			);
		}
		$this->db->set($data);
		$this->db->where('idtbl_solicitud_devolucion', $uid);
		return $this->db->update('tbl_solicitud_devolucion');
	}

	public function cancelar_traspaso() {
		
			$data = array(
				'estatus' => 2
			);
		
		$this->db->set($data);
		$this->db->where('idtbl_almacen_movimientos', $this->input->post('id_movimiento'));
		return $this->db->update('tbl_almacen_movimientos');
	}

	/** Funciones para devoluciones de Kuali */

	public function solicitudes_devolucionesKuali($buscar = '', $buscar2 = '', $inicio = false, $cantidadRegistro = false) {
		$limit = '';
		if ($inicio !== false && $cantidadRegistro !== false) {
			$limit = 'LIMIT ' . $inicio . "," . $cantidadRegistro;
		}
		/*$this->db->select('tbl_proyectos.nombre_proyecto');
		$this->db->select('tbl_proyectos.numero_proyecto');
		$this->db->select('tbl_solicitud_devolucion.*');
		$this->db->select('user_autor.nombre as user_autor');
		$this->db->select('user_aprobacion.nombre as user_aprobacion');
		$this->db->select('CONCAT(tbl_usuarios.nombres," ",tbl_usuarios.apellido_paterno," ",tbl_usuarios.apellido_materno) as recibe');

		$this->db->join('tbl_proyectos', 'tbl_solicitud_devolucion.tbl_proyectos_idtbl_proyectos=tbl_proyectos.idtbl_proyectos', 'left');
		$this->db->join('tbl_users as user_autor', 'tbl_solicitud_devolucion.tbl_users_idtbl_users_autor=user_autor.idtbl_users', 'left');
		$this->db->join('tbl_users as user_aprobacion', 'tbl_solicitud_devolucion.tbl_users_idtbl_users_aprobacion=user_aprobacion.idtbl_users', 'left');
		$this->db->join('tbl_usuarios', 'tbl_solicitud_devolucion.tbl_usuarios_idtbl_usuarios=tbl_usuarios.idtbl_usuarios', 'left');
		if ($this->session->userdata('tipo') == 4) {
			$this->db->where('tbl_solicitud_devolucion.tbl_users_idtbl_users_aprobacion !=', NULL);
		} elseif ($this->session->userdata('tipo') == 5 || $this->session->userdata('tipo') == 9 || $this->session->userdata('tipo') == 10) {
			$this->db->where('user_autor.idtbl_users', $this->session->userdata('id'));
		}
		$this->db->where('tipo_devolucion', 'Almacen General');
		$this->db->order_by('tbl_solicitud_devolucion.idtbl_solicitud_devolucion', 'DESC');
		return $this->db->get('tbl_solicitud_devolucion')->result_array();*/
		if ($buscar2 == '') {
			$status = "";
		}
		if ($buscar2 != '') {
			$status = "AND (tbl_solicitud_devolucion.estatus_solicitud = '$buscar2')";
		}
		$string = "";
		if ($this->session->userdata('tipo') == 4) {
			$string = "tbl_solicitud_devolucion.tbl_users_idtbl_users_aprobacion IS NOT NULL AND ";
		}
		if ($this->session->userdata('id')==50){
			$string = "tbl_solicitud_devolucion.tipo_devolucion = " . "'Kuali'" . " AND ";
		}
		if ($this->session->userdata('tipo') == 5 || $this->session->userdata('tipo') == 9 || $this->session->userdata('tipo') == 10 || $this->session->userdata('tipo') == 19) {
			$string = "user_autor.idtbl_users = " . $this->session->userdata('id') . " AND ";
		}
		$query = $this->db->query("SELECT tbl_proyectos.nombre_proyecto, tbl_proyectos.numero_proyecto, tbl_solicitud_devolucion.*, user_autor.nombre as user_autor, user_aprobacion.nombre as user_aprobacion, user_k.nombre as user_kuali, CONCAT(tbl_usuarios.nombres,' ',tbl_usuarios.apellido_paterno,' ',tbl_usuarios.apellido_materno) as recibe FROM tbl_solicitud_devolucion LEFT JOIN tbl_users as user_k ON user_k.idtbl_users=tbl_solicitud_devolucion.tbl_users_idtbl_users_aprobar_kuali LEFT JOIN tbl_proyectos ON tbl_solicitud_devolucion.tbl_proyectos_idtbl_proyectos=tbl_proyectos.idtbl_proyectos LEFT JOIN tbl_users as user_autor ON tbl_solicitud_devolucion.tbl_users_idtbl_users_autor=user_autor.idtbl_users LEFT JOIN tbl_users as user_aprobacion ON tbl_solicitud_devolucion.tbl_users_idtbl_users_aprobacion=user_aprobacion.idtbl_users LEFT JOIN tbl_usuarios ON tbl_solicitud_devolucion.tbl_usuarios_idtbl_usuarios=tbl_usuarios.idtbl_usuarios WHERE (tbl_solicitud_devolucion.uid LIKE '%$buscar%' OR tbl_solicitud_devolucion.fecha_creacion LIKE '%$buscar%' OR tbl_proyectos.numero_proyecto LIKE '%$buscar%' OR user_autor.nombre LIKE '%$buscar%' OR user_aprobacion.nombre LIKE '%$buscar%' OR user_k.nombre LIKE '%$buscar%' OR CONCAT(tbl_usuarios.nombres,' ',tbl_usuarios.apellido_paterno,' ',tbl_usuarios.apellido_materno) LIKE '%$buscar%') AND " . $string . "tbl_solicitud_devolucion.tipo_devolucion = 'Kuali' " . $status . " ORDER BY tbl_solicitud_devolucion.idtbl_solicitud_devolucion DESC " . $limit);
		return $query->result_array();
	}

	public function solicitudes_devolucionesRCV($buscar = '', $buscar2 = '', $inicio = false, $cantidadRegistro = false) {
		$limit = '';
		if ($inicio !== false && $cantidadRegistro !== false) {
			$limit = 'LIMIT ' . $inicio . "," . $cantidadRegistro;
		}
		/*$this->db->select('tbl_proyectos.nombre_proyecto');
		$this->db->select('tbl_proyectos.numero_proyecto');
		$this->db->select('tbl_solicitud_devolucion.*');
		$this->db->select('user_autor.nombre as user_autor');
		$this->db->select('user_aprobacion.nombre as user_aprobacion');
		$this->db->select('CONCAT(tbl_usuarios.nombres," ",tbl_usuarios.apellido_paterno," ",tbl_usuarios.apellido_materno) as recibe');

		$this->db->join('tbl_proyectos', 'tbl_solicitud_devolucion.tbl_proyectos_idtbl_proyectos=tbl_proyectos.idtbl_proyectos', 'left');
		$this->db->join('tbl_users as user_autor', 'tbl_solicitud_devolucion.tbl_users_idtbl_users_autor=user_autor.idtbl_users', 'left');
		$this->db->join('tbl_users as user_aprobacion', 'tbl_solicitud_devolucion.tbl_users_idtbl_users_aprobacion=user_aprobacion.idtbl_users', 'left');
		$this->db->join('tbl_usuarios', 'tbl_solicitud_devolucion.tbl_usuarios_idtbl_usuarios=tbl_usuarios.idtbl_usuarios', 'left');
		if ($this->session->userdata('tipo') == 4) {
			$this->db->where('tbl_solicitud_devolucion.tbl_users_idtbl_users_aprobacion !=', NULL);
		} elseif ($this->session->userdata('tipo') == 5 || $this->session->userdata('tipo') == 9 || $this->session->userdata('tipo') == 10) {
			$this->db->where('user_autor.idtbl_users', $this->session->userdata('id'));
		}
		$this->db->where('tipo_devolucion', 'Almacen General');
		$this->db->order_by('tbl_solicitud_devolucion.idtbl_solicitud_devolucion', 'DESC');
		return $this->db->get('tbl_solicitud_devolucion')->result_array();*/
		if ($buscar2 == '') {
			$status = "";
		}
		if ($buscar2 != '') {
			$status = "AND (tbl_solicitud_devolucion.estatus_solicitud = '$buscar2')";
		}
		$string = "";
		//if ($this->session->userdata('tipo') == 3) {
		//	$string = "tbl_solicitud_devolucion.tbl_users_idtbl_users_aprobacion IS NOT NULL AND ";
		//}
		if ($this->session->userdata('tipo') == 15 || ($this->session->userdata('tipo') == 4 && !$_SESSION['tipo_anterior'])) {
			$string = "user_autor.idtbl_users = " . $this->session->userdata('id') . " AND ";
		}elseif($_SESSION['tipo_anterior']){
			$string = "";
		}elseif ($this->session->userdata('tipo') == 5 || $this->session->userdata('tipo') == 9 || $this->session->userdata('tipo') == 10) {
			$string = " user_autor.idtbl_users = " . $this->session->userdata('id') .  " AND ";
		} 
		$query = $this->db->query("SELECT tbl_proyectos.nombre_proyecto, tbl_proyectos.numero_proyecto, tbl_solicitud_devolucion.*, user_autor.nombre as user_autor, user_aprobacion.nombre as user_aprobacion, user_rcv.nombre as user_refacciones_cv, CONCAT(tbl_usuarios.nombres,' ',tbl_usuarios.apellido_paterno,' ',tbl_usuarios.apellido_materno) as recibe FROM tbl_solicitud_devolucion LEFT JOIN tbl_users as user_rcv ON user_rcv.idtbl_users=tbl_solicitud_devolucion.tbl_users_idtbl_users_aprobar_rcv LEFT JOIN tbl_proyectos ON tbl_solicitud_devolucion.tbl_proyectos_idtbl_proyectos=tbl_proyectos.idtbl_proyectos LEFT JOIN tbl_users as user_autor ON tbl_solicitud_devolucion.tbl_users_idtbl_users_autor=user_autor.idtbl_users LEFT JOIN tbl_users as user_aprobacion ON tbl_solicitud_devolucion.tbl_users_idtbl_users_aprobacion=user_aprobacion.idtbl_users LEFT JOIN tbl_usuarios ON tbl_solicitud_devolucion.tbl_usuarios_idtbl_usuarios=tbl_usuarios.idtbl_usuarios WHERE (tbl_solicitud_devolucion.uid LIKE '%$buscar%' OR tbl_solicitud_devolucion.fecha_creacion LIKE '%$buscar%' OR tbl_proyectos.numero_proyecto LIKE '%$buscar%' OR user_autor.nombre LIKE '%$buscar%' OR user_aprobacion.nombre LIKE '%$buscar%' OR user_rcv.nombre LIKE '%$buscar%' OR CONCAT(tbl_usuarios.nombres,' ',tbl_usuarios.apellido_paterno,' ',tbl_usuarios.apellido_materno) LIKE '%$buscar%') AND " . $string . "tbl_solicitud_devolucion.tipo_devolucion = 'Refacciones Control Vehicular' " . $status . " ORDER BY tbl_solicitud_devolucion.idtbl_solicitud_devolucion DESC " . $limit);
		return $query->result_array();
	}

	/** Funciones para devoluciones de Alto Costo */
	public function solicitudes_devolucionesAC($buscar = '', $buscar2 = '', $inicio = false, $cantidadRegistro = false) {
		$limit = '';
		if ($inicio !== false && $cantidadRegistro !== false) {
			$limit = 'LIMIT ' . $inicio . "," . $cantidadRegistro;
		}
		/*$this->db->select('tbl_proyectos.nombre_proyecto');
		$this->db->select('tbl_proyectos.numero_proyecto');
		$this->db->select('tbl_solicitud_devolucion.*');
		$this->db->select('user_autor.nombre as user_autor');
		$this->db->select('user_aprobacion.nombre as user_aprobacion');
		$this->db->select('CONCAT(tbl_usuarios.nombres," ",tbl_usuarios.apellido_paterno," ",tbl_usuarios.apellido_materno) as recibe');

		$this->db->join('tbl_proyectos', 'tbl_solicitud_devolucion.tbl_proyectos_idtbl_proyectos=tbl_proyectos.idtbl_proyectos', 'left');
		$this->db->join('tbl_users as user_autor', 'tbl_solicitud_devolucion.tbl_users_idtbl_users_autor=user_autor.idtbl_users', 'left');
		$this->db->join('tbl_users as user_aprobacion', 'tbl_solicitud_devolucion.tbl_users_idtbl_users_aprobacion=user_aprobacion.idtbl_users', 'left');
		$this->db->join('tbl_usuarios', 'tbl_solicitud_devolucion.tbl_usuarios_idtbl_usuarios=tbl_usuarios.idtbl_usuarios', 'left');
		if ($this->session->userdata('tipo') == 4) {
			$this->db->where('tbl_solicitud_devolucion.tbl_users_idtbl_users_aprobacion !=', NULL);
		} elseif ($this->session->userdata('tipo') == 5 || $this->session->userdata('tipo') == 9 || $this->session->userdata('tipo') == 10) {
			$this->db->where('user_autor.idtbl_users', $this->session->userdata('id'));
		}
		$this->db->where('tipo_devolucion', 'Alto Costo');
		$this->db->order_by('tbl_solicitud_devolucion.idtbl_solicitud_devolucion', 'DESC');
		return $this->db->get('tbl_solicitud_devolucion')->result_array();*/
		if ($buscar2 == '') {
			$status = "";
		}
		if ($buscar2 != '') {
			$status = "AND (tbl_solicitud_devolucion.estatus_solicitud = '$buscar2')";
		}
		$string = "";
		if ($this->session->userdata('tipo') == 4) {
			$string = " tbl_solicitud_devolucion.tbl_users_idtbl_users_aprobacion IS NOT NULL AND ";
		} 
		elseif ($this->session->userdata('tipo') == 5 || $this->session->userdata('tipo') == 9 || $this->session->userdata('tipo') == 10 || $this->session->userdata('tipo') == 21 || $this->session->userdata('tipo') == 19) {
			$string = " user_autor.idtbl_users = " . $this->session->userdata('id') .  " AND ";
		}
		$query = $this->db->query("SELECT tbl_proyectos.nombre_proyecto, tbl_proyectos.numero_proyecto, tbl_solicitud_devolucion.*, user_autor.nombre as user_autor, user_aprobacion.nombre as user_aprobacion, user_ac.nombre as user_alto_costo, CONCAT(tbl_usuarios.nombres,' ',tbl_usuarios.apellido_paterno,' ',tbl_usuarios.apellido_materno) as recibe FROM tbl_solicitud_devolucion LEFT JOIN tbl_users as user_ac ON user_ac.idtbl_users=tbl_solicitud_devolucion.tbl_users_idtbl_users_aprobar_ac LEFT JOIN tbl_proyectos ON tbl_solicitud_devolucion.tbl_proyectos_idtbl_proyectos=tbl_proyectos.idtbl_proyectos LEFT JOIN tbl_users as user_autor ON tbl_solicitud_devolucion.tbl_users_idtbl_users_autor=user_autor.idtbl_users LEFT JOIN tbl_users as user_aprobacion ON tbl_solicitud_devolucion.tbl_users_idtbl_users_aprobacion=user_aprobacion.idtbl_users LEFT JOIN tbl_usuarios ON tbl_solicitud_devolucion.tbl_usuarios_idtbl_usuarios=tbl_usuarios.idtbl_usuarios WHERE (tbl_solicitud_devolucion.uid LIKE '%$buscar%' OR tbl_solicitud_devolucion.fecha_creacion LIKE '%$buscar%' OR tbl_proyectos.numero_proyecto LIKE '%$buscar%' OR user_autor.nombre LIKE '%$buscar%' OR user_aprobacion.nombre LIKE '%$buscar%' OR user_ac.nombre LIKE '%$buscar%' OR CONCAT(tbl_usuarios.nombres,' ',tbl_usuarios.apellido_paterno,' ',tbl_usuarios.apellido_materno) LIKE '%$buscar%') AND $string tipo_devolucion='Alto Costo' " . $status . " ORDER BY tbl_solicitud_devolucion.idtbl_solicitud_devolucion DESC " . $limit);
		return $query->result_array();
	}

	/** Funciones para devoluciones de Area Medica */
	public function solicitudes_devolucionesAreaMedica($buscar = '', $buscar2 = '', $inicio = false, $cantidadRegistro = false) {
		$limit = '';
		if ($inicio !== false && $cantidadRegistro !== false) {
			$limit = 'LIMIT ' . $inicio . "," . $cantidadRegistro;
		}
		if ($buscar2 == '') {
			$status = "";
		}
		if ($buscar2 != '') {
			$status = "AND (tbl_solicitud_devolucion.estatus_solicitud = '$buscar2')";
		}
		$string = "";
		if ($this->session->userdata('tipo') != 14) {
			$string = " user_autor.idtbl_users = " . $this->session->userdata('id') .  " AND ";
		}elseif ($this->session->userdata('tipo') == 5 || $this->session->userdata('tipo') == 9 || $this->session->userdata('tipo') == 10) {
			$string = " user_autor.idtbl_users = " . $this->session->userdata('id') .  " AND ";
		}
		$query = $this->db->query("SELECT tbl_proyectos.nombre_proyecto, tbl_proyectos.numero_proyecto, tbl_solicitud_devolucion.*, user_autor.nombre as user_autor, user_aprobacion.nombre as user_aprobacion, CONCAT(tbl_usuarios.nombres,' ',tbl_usuarios.apellido_paterno,' ',tbl_usuarios.apellido_materno) as recibe FROM tbl_solicitud_devolucion LEFT JOIN tbl_proyectos ON tbl_solicitud_devolucion.tbl_proyectos_idtbl_proyectos=tbl_proyectos.idtbl_proyectos LEFT JOIN tbl_users as user_autor ON tbl_solicitud_devolucion.tbl_users_idtbl_users_autor=user_autor.idtbl_users LEFT JOIN tbl_users as user_aprobacion ON tbl_solicitud_devolucion.tbl_users_idtbl_users_aprobar_am=user_aprobacion.idtbl_users LEFT JOIN tbl_usuarios ON tbl_solicitud_devolucion.tbl_usuarios_idtbl_usuarios=tbl_usuarios.idtbl_usuarios WHERE (tbl_solicitud_devolucion.uid LIKE '%$buscar%' OR tbl_solicitud_devolucion.fecha_creacion LIKE '%$buscar%' OR tbl_proyectos.numero_proyecto LIKE '%$buscar%' OR user_autor.nombre LIKE '%$buscar%' OR user_aprobacion.nombre LIKE '%$buscar%' OR CONCAT(tbl_usuarios.nombres,' ',tbl_usuarios.apellido_paterno,' ',tbl_usuarios.apellido_materno) LIKE '%$buscar%') AND $string tipo_devolucion='Area Medica' " . $status . " ORDER BY tbl_solicitud_devolucion.idtbl_solicitud_devolucion DESC " . $limit);
		return $query->result_array();
	}

	/** Funciones para devoluciones de Sistemas */
	public function solicitudes_devolucionesSistemas($buscar = '', $buscar2 = '', $inicio = false, $cantidadRegistro = false) {
		$limit = '';
		if ($inicio !== false && $cantidadRegistro !== false) {
			$limit = 'LIMIT ' . $inicio . "," . $cantidadRegistro;
		}
		/*$this->db->select('tbl_proyectos.nombre_proyecto');
		$this->db->select('tbl_proyectos.numero_proyecto');
		$this->db->select('tbl_solicitud_devolucion.*');
		$this->db->select('user_autor.nombre as user_autor');
		$this->db->select('user_aprobacion.nombre as user_aprobacion');
		$this->db->select('CONCAT(tbl_usuarios.nombres," ",tbl_usuarios.apellido_paterno," ",tbl_usuarios.apellido_materno) as recibe');

		$this->db->join('tbl_proyectos', 'tbl_solicitud_devolucion.tbl_proyectos_idtbl_proyectos=tbl_proyectos.idtbl_proyectos', 'left');
		$this->db->join('tbl_users as user_autor', 'tbl_solicitud_devolucion.tbl_users_idtbl_users_autor=user_autor.idtbl_users', 'left');
		$this->db->join('tbl_users as user_aprobacion', 'tbl_solicitud_devolucion.tbl_users_idtbl_users_aprobacion=user_aprobacion.idtbl_users', 'left');
		$this->db->join('tbl_usuarios', 'tbl_solicitud_devolucion.tbl_usuarios_idtbl_usuarios=tbl_usuarios.idtbl_usuarios', 'left');
		if ($this->session->userdata('tipo') == 4) {
			$this->db->where('tbl_solicitud_devolucion.tbl_users_idtbl_users_aprobacion !=', NULL);
		} elseif ($this->session->userdata('tipo') == 5 || $this->session->userdata('tipo') == 9 || $this->session->userdata('tipo') == 10) {
			$this->db->where('user_autor.idtbl_users', $this->session->userdata('id'));
		}
		$this->db->where('tipo_devolucion', 'Alto Costo');
		$this->db->order_by('tbl_solicitud_devolucion.idtbl_solicitud_devolucion', 'DESC');
		return $this->db->get('tbl_solicitud_devolucion')->result_array();*/
		if ($buscar2 == '') {
			$status = "";
		}
		if ($buscar2 != '') {
			$status = "AND (tbl_solicitud_devolucion.estatus_solicitud = '$buscar2')";
		}
		$string = "";
		if ($this->session->userdata('tipo') == 4) {
			//$string = " tbl_solicitud_devolucion.tbl_users_idtbl_users_aprobacion IS NOT NULL AND ";
			$string = " user_autor.idtbl_users = " . $this->session->userdata('id') .  " AND ";
		} 
		//elseif ($this->session->userdata('tipo') == 5 || $this->session->userdata('tipo') == 9 || $this->session->userdata('tipo') == 10) {
		elseif ($this->session->userdata('tipo') != 2) {
			$string = " user_autor.idtbl_users = " . $this->session->userdata('id') .  " AND ";
		}
		$query = $this->db->query("SELECT tbl_proyectos.nombre_proyecto, tbl_proyectos.numero_proyecto, tbl_solicitud_devolucion.*, user_autor.nombre as user_autor, user_aprobacion.nombre as user_aprobacion, user_sis.nombre as user_sistemas, CONCAT(tbl_usuarios.nombres,' ',tbl_usuarios.apellido_paterno,' ',tbl_usuarios.apellido_materno) as recibe FROM tbl_solicitud_devolucion LEFT JOIN tbl_users as user_sis ON user_sis.idtbl_users=tbl_solicitud_devolucion.tbl_users_idtbl_users_aprobar_sis LEFT JOIN tbl_proyectos ON tbl_solicitud_devolucion.tbl_proyectos_idtbl_proyectos=tbl_proyectos.idtbl_proyectos LEFT JOIN tbl_users as user_autor ON tbl_solicitud_devolucion.tbl_users_idtbl_users_autor=user_autor.idtbl_users LEFT JOIN tbl_users as user_aprobacion ON tbl_solicitud_devolucion.tbl_users_idtbl_users_aprobacion=user_aprobacion.idtbl_users LEFT JOIN tbl_usuarios ON tbl_solicitud_devolucion.tbl_usuarios_idtbl_usuarios=tbl_usuarios.idtbl_usuarios WHERE (tbl_solicitud_devolucion.uid LIKE '%$buscar%' OR tbl_solicitud_devolucion.fecha_creacion LIKE '%$buscar%' OR tbl_proyectos.numero_proyecto LIKE '%$buscar%' OR user_autor.nombre LIKE '%$buscar%' OR user_aprobacion.nombre LIKE '%$buscar%' OR user_sis.nombre LIKE '%$buscar%' OR CONCAT(tbl_usuarios.nombres,' ',tbl_usuarios.apellido_paterno,' ',tbl_usuarios.apellido_materno) LIKE '%$buscar%') AND $string tipo_devolucion='Sistemas' " . $status . " ORDER BY tbl_solicitud_devolucion.idtbl_solicitud_devolucion DESC " . $limit);
		return $query->result_array();
	}

	/** Funciones para devoluciones de Autos Control Vehicular */
	public function solicitudes_devolucionesACV($buscar = '', $buscar2 = '', $inicio = false, $cantidadRegistro = false) {
		$limit = '';
		if ($inicio !== false && $cantidadRegistro !== false) {
			$limit = 'LIMIT ' . $inicio . "," . $cantidadRegistro;
		}
		/*$this->db->select('tbl_proyectos.nombre_proyecto');
		$this->db->select('tbl_proyectos.numero_proyecto');
		$this->db->select('tbl_solicitud_devolucion.*');
		$this->db->select('user_autor.nombre as user_autor');
		$this->db->select('user_aprobacion.nombre as user_aprobacion');
		$this->db->select('CONCAT(tbl_usuarios.nombres," ",tbl_usuarios.apellido_paterno," ",tbl_usuarios.apellido_materno) as recibe');

		$this->db->join('tbl_proyectos', 'tbl_solicitud_devolucion.tbl_proyectos_idtbl_proyectos=tbl_proyectos.idtbl_proyectos', 'left');
		$this->db->join('tbl_users as user_autor', 'tbl_solicitud_devolucion.tbl_users_idtbl_users_autor=user_autor.idtbl_users', 'left');
		$this->db->join('tbl_users as user_aprobacion', 'tbl_solicitud_devolucion.tbl_users_idtbl_users_aprobacion=user_aprobacion.idtbl_users', 'left');
		$this->db->join('tbl_usuarios', 'tbl_solicitud_devolucion.tbl_usuarios_idtbl_usuarios=tbl_usuarios.idtbl_usuarios', 'left');
		if ($this->session->userdata('tipo') == 4) {
			$this->db->where('tbl_solicitud_devolucion.tbl_users_idtbl_users_aprobacion !=', NULL);
		} elseif ($this->session->userdata('tipo') == 5 || $this->session->userdata('tipo') == 9 || $this->session->userdata('tipo') == 10) {
			$this->db->where('user_autor.idtbl_users', $this->session->userdata('id'));
		}
		$this->db->where('tipo_devolucion', 'Alto Costo');
		$this->db->order_by('tbl_solicitud_devolucion.idtbl_solicitud_devolucion', 'DESC');
		return $this->db->get('tbl_solicitud_devolucion')->result_array();*/
		if ($buscar2 == '') {
			$status = "";
		}
		if ($buscar2 != '') {
			$status = "AND (tbl_solicitud_devolucion.estatus_solicitud = '$buscar2')";
		}
		$string = "";
		if ($this->session->userdata('tipo') == 4) {
			//$string = " tbl_solicitud_devolucion.tbl_users_idtbl_users_aprobacion IS NOT NULL AND ";
			$string = " user_autor.idtbl_users = " . $this->session->userdata('id') .  " AND ";
		} 
		elseif ($this->session->userdata('tipo') == 5 || $this->session->userdata('tipo') == 9 || $this->session->userdata('tipo') == 10 || $this->session->userdata('tipo') == 21 || $this->session->userdata('tipo') == 19 || $this->session->userdata('tipo') == 1) {
			$string = " user_autor.idtbl_users = " . $this->session->userdata('id') .  " AND ";
		}
		$query = $this->db->query("SELECT tbl_proyectos.nombre_proyecto, tbl_proyectos.numero_proyecto, tbl_solicitud_devolucion.*, user_autor.nombre as user_autor, user_aprobacion.nombre as user_aprobacion, user_acv.nombre as user_autos_control_vehicular, CONCAT(tbl_usuarios.nombres,' ',tbl_usuarios.apellido_paterno,' ',tbl_usuarios.apellido_materno) as recibe FROM tbl_solicitud_devolucion LEFT JOIN tbl_users as user_acv ON user_acv.idtbl_users=tbl_solicitud_devolucion.tbl_users_idtbl_users_aprobar_acv LEFT JOIN tbl_proyectos ON tbl_solicitud_devolucion.tbl_proyectos_idtbl_proyectos=tbl_proyectos.idtbl_proyectos LEFT JOIN tbl_users as user_autor ON tbl_solicitud_devolucion.tbl_users_idtbl_users_autor=user_autor.idtbl_users LEFT JOIN tbl_users as user_aprobacion ON tbl_solicitud_devolucion.tbl_users_idtbl_users_aprobacion=user_aprobacion.idtbl_users LEFT JOIN tbl_usuarios ON tbl_solicitud_devolucion.tbl_usuarios_idtbl_usuarios=tbl_usuarios.idtbl_usuarios WHERE (tbl_solicitud_devolucion.uid LIKE '%$buscar%' OR tbl_solicitud_devolucion.fecha_creacion LIKE '%$buscar%' OR tbl_proyectos.numero_proyecto LIKE '%$buscar%' OR user_autor.nombre LIKE '%$buscar%' OR user_aprobacion.nombre LIKE '%$buscar%' OR user_acv.nombre LIKE '%$buscar%' OR CONCAT(tbl_usuarios.nombres,' ',tbl_usuarios.apellido_paterno,' ',tbl_usuarios.apellido_materno) LIKE '%$buscar%') AND $string tipo_devolucion='Autos Control Vehicular' " . $status . " ORDER BY tbl_solicitud_devolucion.idtbl_solicitud_devolucion DESC " . $limit);
		return $query->result_array();
	}

	public function getExistencias($idtbl_catalogo, $idtbl_almacenes, $idctl_categorias) {
		$data = ['select' => false, "datos" => []];
		if($this->input->post("sitio") != NULL AND ($idtbl_catalogo == "25053" || $idtbl_catalogo == "19955" || $idtbl_catalogo == "25054" || $idtbl_catalogo == "22124" || $idtbl_catalogo == "22882" || $idtbl_catalogo == "22463" || $idtbl_catalogo == "22918" || $idtbl_catalogo == "19420" || $idtbl_catalogo == "19421" || $idtbl_catalogo == "22763" || $idtbl_catalogo == "24792" || $idtbl_catalogo == "24793" || $idtbl_catalogo == "19428" || $idtbl_catalogo == "19429" || $idctl_categorias == 16 || $idctl_categorias == 7)){
			$query = $this->db->query("SELECT iddtl_almacen, existencias, numero_serie, numero_interno FROM dtl_almacen JOIN tbl_catalogo ON tbl_catalogo.idtbl_catalogo = dtl_almacen.tbl_catalogo_idtbl_catalogo WHERE tbl_almacenes_idtbl_almacenes = $idtbl_almacenes AND tbl_catalogo_idtbl_catalogo = $idtbl_catalogo AND estatus = 'almacen' AND sitio = '"  . $this->input->post("sitio") . "'");
		}else{
			$query = $this->db->query("SELECT iddtl_almacen, existencias, numero_serie, numero_interno FROM dtl_almacen JOIN tbl_catalogo ON tbl_catalogo.idtbl_catalogo = dtl_almacen.tbl_catalogo_idtbl_catalogo WHERE tbl_almacenes_idtbl_almacenes = $idtbl_almacenes AND tbl_catalogo_idtbl_catalogo = $idtbl_catalogo AND estatus = 'almacen'");
		}
		$data['datos'] = $query->result();
		//var_dump($data);
		//|| $idtbl_catalogo == "19955"
		if(($idtbl_catalogo == "25053" || $idtbl_catalogo == "25054" || $idtbl_catalogo == "22124" || $idtbl_catalogo == "22882" || $idtbl_catalogo == "22463" || $idtbl_catalogo == "22918" || $idtbl_catalogo == "19420" || $idtbl_catalogo == "19421" || $idtbl_catalogo == "22763" || $idtbl_catalogo == "24792" || $idtbl_catalogo == "24793" || $idtbl_catalogo == "19428" || $idtbl_catalogo == "19429") || $idctl_categorias == "16" || $idctl_categorias == 7){
				$data['select'] = true;
		}
		return $data;
	}

	public function reporte_operaciones($tipo_reporte) {
		// Datos esenciales
		$this->db->select('tbl_almacen_movimientos.idtbl_almacen_movimientos, tbl_almacen_movimientos.folio AS folio_almacen_movimientos, tbl_almacen_movimientos.fecha AS fecha_almacen_movimientos, tbl_almacen_movimientos.uid AS uid_almacen_movimientos, tbl_almacen_movimientos.numero_documento, tbl_almacen_movimientos.tipo AS tipo_almacen_movimientos, tbl_almacen_movimientos.estatus AS estatus_almacen_movimientos');

		$this->db->select('relizo_movimiento.nombre AS relizo_movimiento');

		

		// Datos para devoluciones
		if ($this->input->post('tipo_reporte') == 'devolucion-almacen') {
			$this->db->select('tbl_contratistas.razon_social, devolucion_proyectos.numero_proyecto AS numero_proyecto_devolucion_proyectos, devolucion_proyectos.nombre_proyecto AS nombre_proyecto_devolucion_proyectos, devolucion_segmentos_proyecto.segmento AS segmento_devolucion_segmentos_proyecto, CONCAT(devuelve_material.nombres," ",devuelve_material.apellido_materno," ",devuelve_material.apellido_paterno) as devuelve_material, dtl_solicitud_devolucion.entregado AS entregado_dtl_solicitud_devolucion, dtl_solicitud_devolucion.estado AS estado_dtl_solicitud_devolucion, dtl_solicitud_devolucion.observaciones AS observaciones_dtl_solicitud_devolucion, catalogo_dtl_solicitud_devolucion.descripcion AS producto_dtl_solicitud_devolucion, catalogo_dtl_solicitud_devolucion.neodata AS neodata_dtl_solicitud_devolucion, unidades_medida_dtl_solicitud_devolucion.unidad_medida_abr AS unidad_medida_abr_dtl_solicitud_devolucion, creado_por.nombre AS creado_por, dtl_solicitud_devolucion.cantidad AS cantidad_dtl_solicitud_devolucion');
		}

		// Datos para salidas
		if ($this->input->post('tipo_reporte') == 'salida-almacen') {
			$this->db->select('tbl_contratistas.razon_social, solicitud_proyectos.numero_proyecto AS numero_proyecto_solicitud_proyectos, solicitud_proyectos.nombre_proyecto AS nombre_proyecto_solicitud_proyectos, solicitud_segmentos_proyecto.segmento AS segmento_solicitud_segmentos_proyecto, CONCAT(recibe_material.nombres," ",recibe_material.apellido_paterno," ",recibe_material.apellido_materno) as recibe_material, dtl_solicitud_material.entregado AS entregado_dtl_solicitud_material, dtl_solicitud_material.observaciones AS observaciones_dtl_solicitud_material, catalogo_dtl_solicitud_material.descripcion AS producto_dtl_solicitud_material, catalogo_dtl_solicitud_material.neodata AS neodata_dtl_solicitud_material, unidades_medida_dtl_solicitud_material.unidad_medida_abr AS unidad_medida_abr_dtl_solicitud_material, creado_por.nombre AS creado_por, dtl_solicitud_material.cantidad AS cantidad_dtl_solicitud_material');
		}

		$this->db->from('tbl_almacen_movimientos');
		// Datos esenciales
		$this->db->join('tbl_users AS relizo_movimiento', 'relizo_movimiento ON relizo_movimiento.idtbl_users = tbl_almacen_movimientos.tbl_users_idtbl_users', 'left');
		

		// Datos para devoluciones
		if ($this->input->post('tipo_reporte') == 'devolucion-almacen') {
			$this->db->join('tbl_solicitud_devolucion', 'tbl_solicitud_devolucion.idtbl_solicitud_devolucion = tbl_almacen_movimientos.parent', 'left');
			$this->db->join('tbl_proyectos AS devolucion_proyectos', 'devolucion_proyectos.idtbl_proyectos = tbl_solicitud_devolucion.tbl_proyectos_idtbl_proyectos', 'left');
			$this->db->join('tbl_segmentos_proyecto AS devolucion_segmentos_proyecto', 'devolucion_segmentos_proyecto.idtbl_segmentos_proyecto = tbl_solicitud_devolucion.tbl_segmentos_proyecto_idtbl_segmentos_proyecto', 'left');
			$this->db->join('tbl_usuarios AS devuelve_material', 'devuelve_material.idtbl_usuarios = tbl_almacen_movimientos.tbl_usuarios_idtbl_usuarios', 'left');
			$this->db->join('tbl_users AS creado_por', 'creado_por.idtbl_users = tbl_solicitud_devolucion.tbl_users_idtbl_users_autor', 'left');
			$this->db->join('dtl_solicitud_devolucion', 'dtl_solicitud_devolucion.tbl_solicitud_devolucion_idtbl_solicitud_devolucion = tbl_almacen_movimientos.parent', 'left');
			$this->db->join('tbl_catalogo AS catalogo_dtl_solicitud_devolucion', 'catalogo_dtl_solicitud_devolucion.idtbl_catalogo = dtl_solicitud_devolucion.tbl_catalogo_idtbl_catalogo', 'left');
			$this->db->join('ctl_unidades_medida AS unidades_medida_dtl_solicitud_devolucion', 'unidades_medida_dtl_solicitud_devolucion.idctl_unidades_medida = catalogo_dtl_solicitud_devolucion.ctl_unidades_medida_idctl_unidades_medida', 'left');
			$this->db->join('dtl_almacen', 'dtl_almacen.tbl_catalogo_idtbl_catalogo = catalogo_dtl_solicitud_devolucion.idtbl_catalogo', 'left');
			$this->db->join('tbl_contratistas', 'tbl_contratistas.idtbl_contratistas = tbl_solicitud_devolucion.tbl_contratistas_idtbl_contratistas', 'left');
		}

		// Datos para salidas
		if ($this->input->post('tipo_reporte') == 'salida-almacen') {
			$this->db->join('tbl_solicitud_material', 'tbl_solicitud_material.idtbl_solicitud_material = tbl_almacen_movimientos.parent', 'left');
			$this->db->join('tbl_proyectos AS solicitud_proyectos', 'solicitud_proyectos.idtbl_proyectos = tbl_solicitud_material.tbl_proyectos_idtbl_proyectos', 'left');
			$this->db->join('tbl_segmentos_proyecto AS solicitud_segmentos_proyecto', 'solicitud_segmentos_proyecto.idtbl_segmentos_proyecto = tbl_solicitud_material.tbl_segmentos_proyecto_idtbl_segmentos_proyecto', 'left');
			$this->db->join('tbl_usuarios AS recibe_material', 'recibe_material.idtbl_usuarios = tbl_almacen_movimientos.tbl_usuarios_idtbl_usuarios', 'left');
			$this->db->join('tbl_users AS creado_por', 'creado_por.idtbl_users = tbl_solicitud_material.tbl_users_idtbl_users_autor', 'left');
			$this->db->join('dtl_solicitud_material', 'dtl_solicitud_material.tbl_solicitud_material_idtbl_solicitud_material = tbl_almacen_movimientos.parent', 'left');
			$this->db->join('tbl_catalogo AS catalogo_dtl_solicitud_material', 'catalogo_dtl_solicitud_material.idtbl_catalogo = dtl_solicitud_material.tbl_catalogo_idtbl_catalogo', 'left');
			$this->db->join('ctl_unidades_medida AS unidades_medida_dtl_solicitud_material', 'unidades_medida_dtl_solicitud_material.idctl_unidades_medida = catalogo_dtl_solicitud_material.ctl_unidades_medida_idctl_unidades_medida', 'left');
			$this->db->join('dtl_almacen', 'dtl_almacen.tbl_catalogo_idtbl_catalogo = catalogo_dtl_solicitud_material.idtbl_catalogo', 'left');
			$this->db->join('tbl_contratistas', 'tbl_contratistas.idtbl_contratistas = tbl_solicitud_material.tbl_contratistas_idtbl_contratistas', 'left');
		}
		$this->db->where('tbl_almacen_movimientos.tipo', $this->input->post('tipo_reporte'));

		if ($tipo_reporte == 'Proyecto') {
			//if ('entrada-almacen' == $this->input->post('tipo_reporte') || 'traspaso-almacen' == $this->input->post('tipo_reporte')) {
			//	$this->db->where('tbl_almacen_movimientos.tbl_proyectos_idtbl_proyectos', $this->input->post('proyecto'));
			//	if (!empty($this->input->post('segmento'))) {
			//		$this->db->where('tbl_solicitud_devolucion.tbl_segmentos_proyecto_idtbl_segmentos_proyecto', $this->input->post('segmento'));
			//	}
			//} 
			if ($this->input->post('tipo_reporte') == 'devolucion-almacen') {
				$this->db->where('tbl_solicitud_devolucion.tbl_proyectos_idtbl_proyectos', $this->input->post('proyecto'));
				if (isset($_POST['productoo'])) {
					$this->db->where('dtl_solicitud_devolucion.tbl_catalogo_idtbl_catalogo', $this->input->post('productoo'));
				}
				if ($_POST['fecha_inicioo'] != '' && $_POST['fecha_finall'] != '') {
					$fechaInicio = date($this->input->post('fecha_inicioo') . ' 00:00:00');
					$fechaFinal = date($this->input->post('fecha_finall') . ' 23:59:59');
					$this->db->where("tbl_almacen_movimientos.fecha BETWEEN '$fechaInicio' AND '$fechaFinal'");
				}
				if (!empty($this->input->post('segmento'))) {
					$this->db->where('tbl_solicitud_devolucion.tbl_segmentos_proyecto_idtbl_segmentos_proyecto', $this->input->post('segmento'));
				}
				$this->db->where('tbl_solicitud_devolucion.tbl_users_idtbl_users_autor', $this->session->userdata('id'));
			}
			if ($this->input->post('tipo_reporte') == 'salida-almacen') {
				$this->db->where('solicitud_proyectos.idtbl_proyectos', $this->input->post('proyecto'));
				if (isset($_POST['productoo'])) {
					$this->db->where('dtl_solicitud_material.tbl_catalogo_idtbl_catalogo', $this->input->post('productoo'));
				}
				if ($_POST['fecha_inicioo'] != '' && $_POST['fecha_finall'] != '') {
					$fechaInicio = date($this->input->post('fecha_inicioo') . ' 00:00:00');
					$fechaFinal = date($this->input->post('fecha_finall') . ' 23:59:59');
					$this->db->where("tbl_almacen_movimientos.fecha BETWEEN '$fechaInicio' AND '$fechaFinal'");
				}
				if (!empty($this->input->post('segmento'))) {
					$this->db->where('tbl_solicitud_material.tbl_segmentos_proyecto_idtbl_segmentos_proyecto', $this->input->post('segmento'));
				}
				if(isset($_POST['usuario'])) {
					$this->db->where('tbl_solicitud_material.tbl_usuarios_idtbl_usuarios', $_POST['usuario']);	
				}
				$this->db->where('tbl_solicitud_material.tbl_users_idtbl_users_autor', $this->session->userdata('id'));
			}
		}
		if($this->input->post('tipo_reporte') == 'salida-almacen') {
			$this->db->group_by('dtl_solicitud_material.iddtl_solicitud_material');
		} elseif($this->input->post('tipo_reporte') == 'devolucion-almacen') {
			$this->db->group_by('dtl_solicitud_devolucion.iddtl_solicitud_devolucion');
		}
		return $this->db->get()->result_array();
	}

	public function reporte_control_vehicular($tipo_reporte) {
		// Datos esenciales
		if($this->input->post("tipo_reporte") == 'servicio_km'){
			$condition = "";
			if(isset($_POST['modelo'])){
				$condition = $condition . " AND TC.modelo LIKE '% " . $this->input->post('modelo') . "%'";
			}

			if(isset($_POST['eco'])){
				$condition = $condition .  " AND DA.iddtl_almacen = " . $this->input->post('eco');
			}
			
			$query = $this->db->query("SELECT DS.iddtl_servicio, TC.marca, TC.modelo, DA.placas, DA.ubicacion AS ruth, DA.numero_interno, DA.km_actual, DA.km_servicio, DA.anio, DA.numero_serie, DA.no_motor, IF(DA.km_actual IS NOT NULL AND DA.km_servicio IS NOT NULL, DA.km_servicio - DA.km_actual, 0) AS km_diff, IF(DS.iddtl_servicio IS NOT NULL, 1, 0) AS en_servicio FROM dtl_almacen DA LEFT JOIN tbl_catalogo TC ON TC.idtbl_catalogo = DA.tbl_catalogo_idtbl_catalogo LEFT JOIN tbl_tramites_vehiculares ttv ON ttv.dtl_almacen_iddtl_almacen = DA.iddtl_almacen AND ttv.idtbl_tramites_vehiculares = (SELECT MAX(t1.idtbl_tramites_vehiculares) FROM tbl_tramites_vehiculares t1 WHERE t1.dtl_almacen_iddtl_almacen = DA.iddtl_almacen and t1.tipo_tramite = 'servicio') LEFT JOIN dtl_servicio DS ON DS.tbl_tramites_vehiculares_idtbl_tramites_vehiculares = ttv.idtbl_tramites_vehiculares AND DS.estatus != 'FINALIZADO' WHERE DA.tbl_almacenes_idtbl_almacenes = 28 AND (TC.tipo = 4) AND (DA.estatus = 'disponible' OR DA.estatus = 'asignado' OR DA.estatus = 'reparacion' OR DA.estatus = 'taller' OR DA.estatus = 'robado' OR DA.estatus = 'vendida' OR DA.estatus = 'perdida total' OR DA.estatus = 'vendida' OR DA.estatus = 'colision' OR DA.estatus = 'tramite vehicular') GROUP BY DA.iddtl_almacen ORDER BY DA.numero_interno");
			return $query->result_array();
		}
		
		$this->db->select('DAM.numero_interno, TC.descripcion, DAM.placas, tbl_entidad.nombre_entidad AS entidad_federativa, DAM.estatus AS estado, DAM.km_actual, DAM.no_motor, DAM.tipo_combustible, DAM.tipo_vehiculo, DAM.anio, DAM.ubicacion, DAM.km_actual, TC.modelo, TC.marca, TC.precio');

		//Datos para tipo de reporte asignaciones
		if($this->input->post('tipo_reporte') == 'general' || $this->input->post('tipo_reporte') == 'asignado'){
			$this->db->select('TAM.folio, TUS.nombres, TUS.apellido_paterno, TUS.apellido_materno, DA.fecha_asignacion, DA.fecha_finalizacion, TUSERS.nombre as autor');
			//$this->db->where('TC.descripcion != "PERSONAL"');
		}

		// Datos para servicios
		if ($this->input->post('tipo_reporte') == 'servicio') {
			$this->db->select('TV.idtbl_tramites_vehiculares, TV.detalle_tramite, TV.fecha_tramite, DS.fecha_inicio, DS.fecha_finalizacion, mecanico.nombre AS mecanico, autor.nombre AS autor, @minutes := (TIMESTAMPDIFF(MINUTE, DS.fecha_inicio, DS.fecha_finalizacion) - DS.tiempo_minutos_pausa), CONCAT(FLOOR(@minutes/60),"h ",MOD(@minutes,60)," m") AS productividad, IF(DS.estatus = "FINALIZADO", tbl_checklist_servicio.km_salida, tbl_checklist_servicio.km_entrada) AS km, json_extract(tbl_checklist_servicio.checklist_tecnico, "$.rt0") AS rt0');
		}

		// Datos para verificaciones
		if ($this->input->post('tipo_reporte') == 'verificacion' || $this->input->post('tipo_reporte') == 'seguro' || $this->input->post('tipo_reporte') == 'tenencia' || $this->input->post('tipo_reporte') == 'placas' || $this->input->post('tipo_reporte') == 'cambio_propietario' || $this->input->post('tipo_reporte') == 'siniestro') {
			$this->db->select('DATE_FORMAT(TV.fecha_tramite, "%d-%m-%Y") AS fecha_tramite, DATE_FORMAT(TV.proxima_fecha_tramite, "%d-%m-%Y") AS proxima_fecha_tramite, TV.detalle_tramite, TV.tipo_tramite, TV.poliza, TV.seguro, TV.costo, TV.engomado');
		}

		//Datos para siniestros
		if($this->input->post('tipo_reporte') == 'siniestro'){
			$this->db->select('TSV.*, CONCAT(TReporte.nombres," ",TReporte.apellido_materno," ",TReporte.apellido_paterno) as nombre_reporte, CONCAT(atiende.nombres," ",atiende.apellido_materno," ",atiende.apellido_paterno) as nombre_atiende');
			//$this->db->where('TC.descripcion != "PERSONAL"');
		}

		//Datos para cambio propietario
		if($this->input->post('tipo_reporte') == 'cambio_propietario'){
			$this->db->select('CP.dueno, CP.nuevo_dueno');
			//$this->db->where('TC.descripcion != "PERSONAL"');
		}

		$this->db->from('dtl_almacen DAM');
		// Datos esenciales
		$this->db->join('tbl_catalogo TC', 'TC.idtbl_catalogo = DAM.tbl_catalogo_idtbl_catalogo', 'left');
		$this->db->join('tbl_entidad', 'tbl_entidad.idtbl_entidad = DAM.entidad_federativa_placas', 'left');		
		$this->db->join('dtl_asignacion', 'DAM.iddtl_almacen = dtl_asignacion.dtl_almacen_iddtl_almacen', 'left');
		$this->db->join('tbl_almacen_movimientos', 'dtl_asignacion.tbl_almacen_movimientos_idtbl_almacen_movimientos = tbl_almacen_movimientos.idtbl_almacen_movimientos', 'left');
		$this->db->join('tbl_proyectos', 'tbl_almacen_movimientos.tbl_proyectos_idtbl_proyectos = tbl_proyectos.idtbl_proyectos', 'left');
		//$this->db->where('TC.descripcion != "PERSONAL"');
		

		// Datos para asignaciones
		if ($this->input->post('tipo_reporte') == 'general' || $this->input->post('tipo_reporte') == 'asignado') {
			$this->db->join('dtl_asignacion DA', 'DA.dtl_almacen_iddtl_almacen = DAM.iddtl_almacen', 'left');
			$this->db->join('tbl_almacen_movimientos TAM', 'TAM.idtbl_almacen_movimientos = DA.tbl_almacen_movimientos_idtbl_almacen_movimientos', 'left');
			//$this->db->join('tbl_proyectos TP', 'TP.idtbl_proyectos = TAM.tbl_proyectos_idtbl_proyectos', 'left');
			$this->db->join('tbl_segmentos_proyecto TSP', 'TSP.idtbl_segmentos_proyecto = TAM.tbl_segmentos_proyecto_idtbl_segmentos_proyecto', 'left');
			$this->db->join('tbl_usuarios TUS', 'TUS.idtbl_usuarios = DA.tbl_usuarios_idtbl_usuarios', 'left');
			//$this->db->join('tbl_proyectos', 'tbl_proyectos.idtbl_proyectos = TUS.tbl_proyectos_idtbl_proyectos', 'left');
			$this->db->join('tbl_users TUSERS', 'TUSERS.idtbl_users = TAM.tbl_users_idtbl_users', 'left');
			//$this->db->join('tbl_tramites_vehiculares', 'tbl_tramites_vehiculares.dtl_almacen_iddtl_almacen = DAM.iddtl_almacen AND tbl_tramites_vehiculares.tipo_tramite = "seguro" AND tbl_tramites_vehiculares.idtbl_tramites_vehiculares = (SELECT MAX(tbl_tramites_vehiculares.idtbl_tramites_vehiculares) FROM tbl_tramites_vehiculares WHERE tbl_tramites_vehiculares.dtl_almacen_iddtl_almacen = DAM.iddtl_almacen AND tbl_tramites_vehiculares.tipo_tramite = "seguro")');	
			//$this->db->join('tbl_tramites_vehiculares', 'tbl_tramites_vehiculares.dtl_almacen_iddtl_almacen = DAM.iddtl_almacen AND tbl_tramites_vehiculares.tipo_tramite = "seguro" AND ((tbl_tramites_vehiculares.proxima_fecha_tramite IS NOT NULL  AND DA.fecha_finalizacion BETWEEN tbl_tramites_vehiculares.fecha_tramite AND tbl_tramites_vehiculares.proxima_fecha_tramite) OR (DA.fecha_finalizacion BETWEEN tbl_tramites_vehiculares.fecha_tramite AND (SELECT DATE()) ))', 'LEFT');
			//$this->db->where('TC.descripcion != "PERSONAL"');
		}

		// Datos para Verificaciones
        if ($this->input->post('tipo_reporte') == 'verificacion' || $this->input->post('tipo_reporte') == 'seguro' || $this->input->post('tipo_reporte') == 'tenencia' || $this->input->post('tipo_reporte') == 'placas' || $this->input->post('tipo_reporte') == 'cambio_propietario' || $this->input->post('tipo_reporte') == 'siniestro') {
            $this->db->join('tbl_tramites_vehiculares TV', 'TV.dtl_almacen_iddtl_almacen = DAM.iddtl_almacen', 'left');
		}

		//Datos para siniestro
		if($this->input->post('tipo_reporte') == 'siniestro'){
			$this->db->join('tbl_siniestros_vehiculos TSV', 'TSV.tbl_tramites_vehiculares_idtbl_tramites_vehiculares = TV.idtbl_tramites_vehiculares');
			$this->db->join('tbl_usuarios TReporte', 'TReporte.idtbl_usuarios = TSV.reportado_por');
			$this->db->join('tbl_usuarios atiende', 'atiende.idtbl_usuarios = TSV.atiende');
			//$this->db->where('TC.descripcion != "PERSONAL"');
		}

		//Datos para cambio propietario
		if($this->input->post('tipo_reporte') == 'cambio_propietario'){
			$this->db->join('tbl_cambio_propietario CP', 'Cp.tbl_tramites_vehiculares_idtbl_tramites_vehiculares = TV.idtbl_tramites_vehiculares');
			//$this->db->where('TC.descripcion != "PERSONAL"');
		}
		
		// Datos para Servicios
		if ($this->input->post('tipo_reporte') == 'servicio') {
			$this->db->join('tbl_tramites_vehiculares TV', 'TV.dtl_almacen_iddtl_almacen = DAM.iddtl_almacen');
			$this->db->join('dtl_servicio DS', 'DS.tbl_tramites_vehiculares_idtbl_tramites_vehiculares = TV.idtbl_tramites_vehiculares', 'left');
			$this->db->join('tbl_users mecanico', 'mecanico.idtbl_users = DS.tbl_users_idtbl_users', 'left');
			$this->db->join('tbl_users autor', 'autor.idtbl_users = DS.tbl_users_idtbl_users_autor', 'left');
			$this->db->join('tbl_checklist_servicio', 'tbl_checklist_servicio.uid_servicio = TV.uid', 'left');
			//$this->db->where('TC.descripcion != "PERSONAL"');
		}

		$this->db->where('DAM.tbl_almacenes_idtbl_almacenes', 28);
		//$this->db->where('TC.descripcion != "PERSONAL"');
		
		//Where para asignado
		if($this->input->post('tipo_reporte')=='asignado'){
			$this->db->where('DA.fecha_finalizacion IS NULL');
		}

		//Where para tipo disponible
		if($this->input->post('tipo_reporte') == 'disponible'){
			$this->db->where('DAM.estatus', 'disponible');
		}

		if ($tipo_reporte == 'Unidad') {
			if ($this->input->post('tipo_reporte') == 'general' || $this->input->post('tipo_reporte') == 'asignado') {				
				$this->db->where('TAM.tipo', 'asignacion');
				if (isset($_POST['modelo'])) {
					$this->db->where('TC.idtbl_catalogo', $this->input->post('modelo'));
					if(isset($_POST['eco'])){
						$this->db->where('DAM.iddtl_almacen', $this->input->post('eco'));
					}
				}
				if ($_POST['fecha_inicio'] != '' && $_POST['fecha_final'] != '') {
					$fechaInicio = date($this->input->post('fecha_inicio') . ' 00:00:00');
					$fechaFinal = date($this->input->post('fecha_final') . ' 23:59:59');
					$this->db->where("DA.fecha_asignacion BETWEEN '$fechaInicio' AND '$fechaFinal'");
				}
				if (!empty($this->input->post('segmento'))) {
					$this->db->where('TAM.tbl_segmentos_proyecto_idtbl_segmentos_proyecto', $this->input->post('segmento'));
				}
				if(isset($_POST['proyecto'])){
					$this->db->where('TAM.tbl_proyectos_idtbl_proyectos', $this->input->post('proyecto'));
				}		
			}
			if ($this->input->post('tipo_reporte') == 'verificacion' || $this->input->post('tipo_reporte') == 'seguro' || $this->input->post('tipo_reporte') == 'tenencia' || $this->input->post('tipo_reporte') == 'placas') {
                if ($this->input->post('tipo_reporte') == 'verificacion') {
                    $this->db->where('TV.tipo_tramite', 'verificacion');
				}
                if ($this->input->post('tipo_reporte') == 'seguro') {
                    $this->db->where('TV.tipo_tramite', 'seguro');
				}
				if ($this->input->post('tipo_reporte') == 'tenencia'){
					$this->db->where('TV.tipo_tramite', 'tenencia');
				}
				if($this->input->post('tipo_reporte') == 'placas'){
					$this->db->where('TV.tipo_tramite', 'placas');
				}
				if (isset($_POST['producto'])) {
					$this->db->where('TC.idtbl_catalogo', $this->input->post('modelo'));
					if(isset($_POST['eco'])){
						$this->db->where('DAM.iddtl_almacen', $this->input->post('eco'));
					}
				}
				if ($_POST['fecha_inicio'] != '' && $_POST['fecha_final'] != '') {
					$fechaInicio = date($this->input->post('fecha_inicio') . ' 00:00:00');
					$fechaFinal = date($this->input->post('fecha_final') . ' 23:59:59');
					$this->db->where("TV.proxima_fecha_tramite BETWEEN '$fechaInicio' AND '$fechaFinal'");
				}
								
			}
			if ($this->input->post('tipo_reporte') == 'disponible') {								
				if (isset($_POST['producto'])) {
					$this->db->where('TC.idtbl_catalogo', $this->input->post('modelo'));
					if(isset($_POST['eco'])){
						$this->db->where('DAM.iddtl_almacen', $this->input->post('eco'));
					}
				}									
			}
			if($this->input->post('tipo_reporte') == 'cambio_reporte'){
				$this->db->where('TV.tipo_tramite', 'cambio propietario');

				if (isset($_POST['producto'])) {
					$this->db->where('TC.idtbl_catalogo', $this->input->post('modelo'));
					if(isset($_POST['eco'])){
						$this->db->where('DAM.iddtl_almacen', $this->input->post('eco'));
					}
				}
			}
			if ($this->input->post('tipo_reporte') == 'servicio'){
				$this->db->where('TV.tipo_tramite', 'servicio');
				if($this->input->post('estatus') == 'pendiente'){
					$this->db->where('DS.estatus != "FINALIZADO"');
					if(isset($_POST['mecanico'])){
						$this->db->where('DS.tbl_users_idtbl_users', $this->input->post('mecanico'));
					}
				}else if($this->input->post('estatus') == 'finalizado'){
					$this->db->where('DS.estatus', 'FINALIZADO');
					if(isset($_POST['mecanico'])){
						$this->db->where('DS.tbl_users_idtbl_users', $this->input->post('mecanico'));
					}
				}else{
					if(isset($_POST['mecanico'])){
						$this->db->where('DS.tbl_users_idtbl_users', $this->input->post('mecanico'));
					}
				}
				if (isset($_POST['producto'])) {
					$this->db->where('TC.idtbl_catalogo', $this->input->post('modelo'));
					if(isset($_POST['eco'])){
						$this->db->where('DAM.iddtl_almacen', $this->input->post('eco'));
					}
				}	
				if ($_POST['fecha_inicio'] != '' && $_POST['fecha_final'] != '') {
					$fechaInicio = date($this->input->post('fecha_inicio') . ' 00:00:00');
					$fechaFinal = date($this->input->post('fecha_final') . ' 23:59:59');
					$this->db->where("DS.fecha_inicio BETWEEN '$fechaInicio' AND '$fechaFinal'");
				}
				if($this->input->post("rt0") != ""){
					//"AND json_extract(tbl_checklist_servicio.checklist_tecnico, '$.rt0') = '" . $this->input->post("rt0") . "' "
					$this->db->where("json_extract(tbl_checklist_servicio.checklist_tecnico, '$.rt0') = ", $this->input->post("rt0"));
				}
			}
		}
		if($this->input->post('tipo_reporte') == 'salida-almacen') {
			$this->db->group_by('dtl_solicitud_material.iddtl_solicitud_material');
		} elseif($this->input->post('tipo_reporte') == 'general' || $this->input->post('asignado')) {
			$this->db->group_by('DA.iddtl_asignacion');
		}elseif ($this->input->post('tipo_reporte') == 'servicio'){
			$this->db->group_by('DS.iddtl_servicio');
		}elseif($this->input->post('tipo_reporte') == 'verificacion' || $this->input->post('tipo_reporte') == 'seguro' || $this->input->post('tipo_reporte') == 'tenencia'){
			$this->db->group_by('TV.idtbl_tramites_vehiculares');
		}elseif($this->input->post('tipo_reporte') == 'siniestro'){
			$this->db->group_by('TSV.idtbl_siniestros');
		}

		return $this->db->get()->result_array();
	}

	public function reporte_por_proyecto($tipo_reporte) {
		// Datos esenciales
		

		// Datos para entradas
		if ('entrada-almacen' == $this->input->post('tipo_reporte')) {
			$this->db->select('tbl_almacen_movimientos.idtbl_almacen_movimientos, tbl_almacen_movimientos.folio AS folio_almacen_movimientos, tbl_almacen_movimientos.fecha AS fecha_almacen_movimientos, tbl_almacen_movimientos.uid AS uid_almacen_movimientos, tbl_almacen_movimientos.numero_documento, tbl_almacen_movimientos.tipo AS tipo_almacen_movimientos, tbl_almacen_movimientos.estatus AS estatus_almacen_movimientos');

			$this->db->select('relizo_movimiento.nombre AS relizo_movimiento');
			$this->db->select('tbl_pedidos.neodata_pedido');
			$this->db->select('tbl_proyectos.numero_proyecto, tbl_proyectos.nombre_proyecto, tbl_segmentos_proyecto.segmento, dtl_almacen_movimientos.sitio AS ruth, catalogo_dtl_almacen_movimientos.descripcion AS producto_dtl_almacen_movimientos, catalogo_dtl_almacen_movimientos.neodata AS neodata_dtl_almacen_movimientos, unidades_medida_dtl_almacen_movimientos.unidad_medida_abr AS unidad_medida_abr_dtl_almacen_movimientos, dtl_almacen_movimientos.cantidad AS cantidad_dtl_almacen_movimientos, tbl_almacenes.idtbl_almacenes, tbl_proyectos1.numero_proyecto AS numero_proyecto1, tbl_proyectos1.nombre_proyecto AS nombre_proyecto1');
		}

	// Datos para explosion
	if ('explosion_insumos' == $this->input->post('tipo_reporte')) {
		$this->db->select('tbl_almacen_movimientos.idtbl_almacen_movimientos, almacen_destino.almacen AS almacen_destino, tbl_almacen_movimientos.folio AS folio_almacen_movimientos, tbl_almacen_movimientos.fecha AS fecha_almacen_movimientos, tbl_almacen_movimientos.uid AS uid_almacen_movimientos, tbl_almacen_movimientos.numero_documento, tbl_almacen_movimientos.tipo AS tipo_almacen_movimientos, tbl_almacen_movimientos.estatus AS estatus_almacen_movimientos');

		$this->db->select('relizo_movimiento.nombre AS relizo_movimiento');
		$this->db->select('tbl_pedidos.neodata_pedido');
		$this->db->select('tbl_proyectos.numero_proyecto, tbl_proyectos.nombre_proyecto, tbl_segmentos_proyecto.segmento, dtl_almacen_movimientos.sitio AS ruth, catalogo_dtl_almacen_movimientos.descripcion AS producto_dtl_almacen_movimientos, catalogo_dtl_almacen_movimientos.neodata AS neodata_dtl_almacen_movimientos, unidades_medida_dtl_almacen_movimientos.unidad_medida_abr AS unidad_medida_abr_dtl_almacen_movimientos, dtl_almacen_movimientos.cantidad AS cantidad_dtl_almacen_movimientos, tbl_almacenes.idtbl_almacenes, tbl_proyectos1.numero_proyecto AS numero_proyecto1, tbl_proyectos1.nombre_proyecto AS nombre_proyecto1');
	}

		// Datos para traspasos
		if ('traspaso-almacen' == $this->input->post('tipo_reporte')) {
			$this->db->select('tbl_almacen_movimientos.idtbl_almacen_movimientos, tbl_almacen_movimientos.folio AS folio_almacen_movimientos, tbl_almacen_movimientos.fecha AS fecha_almacen_movimientos, tbl_almacen_movimientos.uid AS uid_almacen_movimientos, tbl_almacen_movimientos.numero_documento, tbl_almacen_movimientos.tipo AS tipo_almacen_movimientos, tbl_almacen_movimientos.estatus AS estatus_almacen_movimientos');

			$this->db->select('relizo_movimiento.nombre AS relizo_movimiento');
			$this->db->select('tbl_proyectos.numero_proyecto, tbl_proyectos.nombre_proyecto, tbl_almacenes.almacen, almacen_origen.almacen AS nombre_origen, tbl_segmentos_proyecto.segmento, catalogo_dtl_almacen_movimientos.descripcion AS producto_dtl_almacen_movimientos, catalogo_dtl_almacen_movimientos.neodata AS neodata_dtl_almacen_movimientos, unidades_medida_dtl_almacen_movimientos.unidad_medida_abr AS unidad_medida_abr_dtl_almacen_movimientos, dtl_almacen_movimientos.cantidad AS cantidad_dtl_almacen_movimientos');
		}

		// Datos para devoluciones
		if ($this->input->post('tipo_reporte') == 'devolucion-almacen') {
			$this->db->select('tbl_almacen_movimientos.idtbl_almacen_movimientos, tbl_almacen_movimientos.folio AS folio_almacen_movimientos, tbl_almacen_movimientos.fecha AS fecha_almacen_movimientos, tbl_almacen_movimientos.uid AS uid_almacen_movimientos, tbl_almacen_movimientos.numero_documento, tbl_almacen_movimientos.tipo AS tipo_almacen_movimientos, tbl_almacen_movimientos.estatus AS estatus_almacen_movimientos');

			$this->db->select('relizo_movimiento.nombre AS relizo_movimiento');
			$this->db->select('tbl_contratistas.razon_social, devolucion_proyectos.numero_proyecto AS numero_proyecto_devolucion_proyectos, devolucion_proyectos.nombre_proyecto AS nombre_proyecto_devolucion_proyectos, devolucion_segmentos_proyecto.segmento AS segmento_devolucion_segmentos_proyecto, CONCAT(devuelve_material.nombres," ",devuelve_material.apellido_materno," ",devuelve_material.apellido_paterno) as devuelve_material, dtl_asignacion.entregado AS entregado_dtl_solicitud_devolucion, dtl_asignacion.estado_entrega AS estado_dtl_solicitud_devolucion, dtl_asignacion.observaciones AS observaciones_dtl_solicitud_devolucion, catalogo_dtl_solicitud_devolucion.descripcion AS producto_dtl_solicitud_devolucion, catalogo_dtl_solicitud_devolucion.neodata AS neodata_dtl_solicitud_devolucion, unidades_medida_dtl_solicitud_devolucion.unidad_medida_abr AS unidad_medida_abr_dtl_solicitud_devolucion');
		}

		// Datos para salidas
		if ($this->input->post('tipo_reporte') == 'salida-almacen') {
			$this->db->select('tbl_almacen_movimientos.idtbl_almacen_movimientos, catalogo_dtl_solicitud_material.precio, catalogo_dtl_solicitud_material.tipo_moneda, tbl_almacen_movimientos.folio AS folio_almacen_movimientos, tbl_almacen_movimientos.fecha AS fecha_almacen_movimientos, tbl_almacen_movimientos.uid AS uid_almacen_movimientos, tbl_almacen_movimientos.numero_documento, tbl_almacen_movimientos.tipo AS tipo_almacen_movimientos, tbl_almacen_movimientos.estatus AS estatus_almacen_movimientos');

			$this->db->select('relizo_movimiento.nombre AS relizo_movimiento, autor_solicitud.nombre AS nombre_autor');
			$this->db->select('tbl_contratistas.razon_social, solicitud_proyectos.numero_proyecto AS numero_proyecto_solicitud_proyectos, dtl_solicitud_material.observaciones_neodata, solicitud_proyectos.nombre_proyecto AS nombre_proyecto_solicitud_proyectos, solicitud_segmentos_proyecto.segmento AS segmento_solicitud_segmentos_proyecto, CONCAT(recibe_material.nombres," ",recibe_material.apellido_paterno," ",recibe_material.apellido_materno) as recibe_material, dtl_solicitud_material.entregado AS entregado_dtl_solicitud_material, dtl_solicitud_material.observaciones AS observaciones_dtl_solicitud_material, catalogo_dtl_solicitud_material.descripcion AS producto_dtl_solicitud_material, catalogo_dtl_solicitud_material.neodata AS neodata_dtl_solicitud_material, unidades_medida_dtl_solicitud_material.unidad_medida_abr AS unidad_medida_abr_dtl_solicitud_material, tbl_solicitud_material.uid AS uid_solicitud_material, dtl_solicitud_material.sitio AS sitio, tbl_solicitud_material.cleanup, tbl_solicitud_material.neodata_salida, tbl_solicitud_material.comentarios');
		}

		// Datos para salidas virtuales
		if ($this->input->post('tipo_reporte') == 'salida-virtual') {
			$this->db->select('tbl_almacen_movimientos.idtbl_almacen_movimientos, catalogo_dtl_solicitud_material.precio, tbl_almacen_movimientos.folio AS folio_almacen_movimientos, tbl_almacen_movimientos.fecha AS fecha_almacen_movimientos, catalogo_dtl_solicitud_material.tipo_moneda, tbl_almacen_movimientos.uid AS uid_almacen_movimientos, tbl_almacen_movimientos.numero_documento, tbl_almacen_movimientos.tipo AS tipo_almacen_movimientos, tbl_almacen_movimientos.estatus AS estatus_almacen_movimientos');

			$this->db->select('relizo_movimiento.nombre AS relizo_movimiento, relizo_movimiento.nombre AS nombre_autor');
			$this->db->select('tbl_contratistas.razon_social, solicitud_proyectos.numero_proyecto AS numero_proyecto_solicitud_proyectos, solicitud_proyectos.nombre_proyecto AS nombre_proyecto_solicitud_proyectos, solicitud_segmentos_proyecto.segmento AS segmento_solicitud_segmentos_proyecto, CONCAT(recibe_material.nombres," ",recibe_material.apellido_paterno," ",recibe_material.apellido_materno) as recibe_material, dtl_pedido_catalogo.entregado AS entregado_dtl_solicitud_material, catalogo_dtl_solicitud_material.descripcion AS producto_dtl_solicitud_material, catalogo_dtl_solicitud_material.neodata AS neodata_dtl_solicitud_material, unidades_medida_dtl_solicitud_material.unidad_medida_abr AS unidad_medida_abr_dtl_solicitud_material, tbl_pedidos.uid AS uid_solicitud_material');
		}

		// Datos para comparativa
		if ($this->input->post('tipo_reporte') == 'comparativa') {
			$this->db->select('tbl_proyectos.nombre_proyecto, tbl_proyectos.numero_proyecto, tbl_segmentos_proyecto.segmento, tbl_catalogo.neodata, tbl_catalogo.descripcion');
		}

		if (isset($_POST['estatus']) && $this->input->post('estatus') == 'asignado'){
			$this->db->select('tbl_almacen_movimientos.folio, dtl_asignacion.fecha_asignacion, tbl_proyectos.nombre_proyecto, tbl_segmentos_proyecto.segmento, tbl_users.nombre, tbl_usuarios.nombres, tbl_usuarios.apellido_paterno, tbl_usuarios.apellido_materno, tbl_catalogo.neodata, tbl_catalogo.descripcion, dtl_asignacion.cantidad, ctl_unidades_medida.unidad_medida');
		}

		$this->db->from('tbl_almacen_movimientos');
		// Datos esenciales		

		// Datos para entradas
		if ('entrada-almacen' == $this->input->post('tipo_reporte')) {
			$this->db->join('tbl_users AS relizo_movimiento', 'relizo_movimiento ON relizo_movimiento.idtbl_users = tbl_almacen_movimientos.tbl_users_idtbl_users', 'left');
			$this->db->join('dtl_almacen_movimientos', 'dtl_almacen_movimientos.tbl_almacen_movimientos_idtbl_almacen_movimientos = tbl_almacen_movimientos.idtbl_almacen_movimientos', 'left');
			$this->db->join('tbl_proyectos', 'tbl_proyectos.idtbl_proyectos = tbl_almacen_movimientos.tbl_proyectos_idtbl_proyectos', 'left');
			$this->db->join('tbl_segmentos_proyecto', 'tbl_segmentos_proyecto.idtbl_segmentos_proyecto = tbl_almacen_movimientos.tbl_segmentos_proyecto_idtbl_segmentos_proyecto', 'left');
			$this->db->join('tbl_catalogo AS catalogo_dtl_almacen_movimientos', 'catalogo_dtl_almacen_movimientos.idtbl_catalogo = dtl_almacen_movimientos.tbl_catalogo_idtbl_catalogo', 'left');
			$this->db->join('ctl_unidades_medida AS unidades_medida_dtl_almacen_movimientos', 'unidades_medida_dtl_almacen_movimientos.idctl_unidades_medida = catalogo_dtl_almacen_movimientos.ctl_unidades_medida_idctl_unidades_medida', 'left');
			$this->db->join('dtl_almacen', 'dtl_almacen.tbl_catalogo_idtbl_catalogo = catalogo_dtl_almacen_movimientos.idtbl_catalogo', 'left');
			$this->db->join('tbl_almacenes', 'tbl_almacenes.idtbl_almacenes = tbl_almacen_movimientos.tbl_almacenes_idtbl_almacenes', 'left');
			$this->db->join('tbl_proyectos AS tbl_proyectos1', 'tbl_proyectos1 ON tbl_proyectos1.idtbl_proyectos = tbl_almacenes.tbl_proyectos_idtbl_proyectos', 'left');
			$this->db->join('tbl_pedidos', 'tbl_pedidos.idtbl_pedidos = tbl_almacen_movimientos.parent', 'left');
			$this->db->where('tbl_almacen_movimientos.tipo_movimiento IS NULL');
		}
		// Datos para explosion
		if ('explosion_insumos' == $this->input->post('tipo_reporte')) {
			$this->db->join('tbl_users AS relizo_movimiento', 'relizo_movimiento ON relizo_movimiento.idtbl_users = tbl_almacen_movimientos.tbl_users_idtbl_users', 'left');
			$this->db->join('dtl_almacen_movimientos', 'dtl_almacen_movimientos.tbl_almacen_movimientos_idtbl_almacen_movimientos = tbl_almacen_movimientos.idtbl_almacen_movimientos', 'left');
			$this->db->join('tbl_proyectos', 'tbl_proyectos.idtbl_proyectos = tbl_almacen_movimientos.tbl_proyectos_idtbl_proyectos', 'left');
			$this->db->join('tbl_segmentos_proyecto', 'tbl_segmentos_proyecto.idtbl_segmentos_proyecto = tbl_almacen_movimientos.tbl_segmentos_proyecto_idtbl_segmentos_proyecto', 'left');
			$this->db->join('tbl_catalogo AS catalogo_dtl_almacen_movimientos', 'catalogo_dtl_almacen_movimientos.idtbl_catalogo = dtl_almacen_movimientos.tbl_catalogo_idtbl_catalogo', 'left');
			$this->db->join('ctl_unidades_medida AS unidades_medida_dtl_almacen_movimientos', 'unidades_medida_dtl_almacen_movimientos.idctl_unidades_medida = catalogo_dtl_almacen_movimientos.ctl_unidades_medida_idctl_unidades_medida', 'left');
			$this->db->join('dtl_almacen', 'dtl_almacen.tbl_catalogo_idtbl_catalogo = catalogo_dtl_almacen_movimientos.idtbl_catalogo', 'left');
			$this->db->join('tbl_almacenes', 'tbl_almacenes.idtbl_almacenes = tbl_almacen_movimientos.tbl_almacenes_idtbl_almacenes', 'left');
			$this->db->join('tbl_proyectos AS tbl_proyectos1', 'tbl_proyectos1 ON tbl_proyectos1.idtbl_proyectos = tbl_almacenes.tbl_proyectos_idtbl_proyectos', 'left');
			$this->db->join('tbl_pedidos', 'tbl_pedidos.idtbl_pedidos = tbl_almacen_movimientos.parent', 'left');	
			$this->db->join('tbl_almacenes almacen_destino', 'almacen_destino.idtbl_almacenes = tbl_almacen_movimientos.tbl_almacenes_idtbl_almacenes', 'left');
		}

		// Datos para comparativa
		if ('comparativa' == $this->input->post('tipo_reporte')) {
			$this->db->join('tbl_users AS relizo_movimiento', 'relizo_movimiento ON relizo_movimiento.idtbl_users = tbl_almacen_movimientos.tbl_users_idtbl_users', 'left');
			$this->db->join('dtl_almacen_movimientos', 'dtl_almacen_movimientos.tbl_almacen_movimientos_idtbl_almacen_movimientos = tbl_almacen_movimientos.idtbl_almacen_movimientos', 'left');
			$this->db->join('tbl_proyectos', 'tbl_proyectos.idtbl_proyectos = tbl_almacen_movimientos.tbl_proyectos_idtbl_proyectos', 'left');
			$this->db->join('tbl_segmentos_proyecto', 'tbl_segmentos_proyecto.idtbl_segmentos_proyecto = tbl_almacen_movimientos.tbl_segmentos_proyecto_idtbl_segmentos_proyecto', 'left');
			$this->db->join('tbl_catalogo AS catalogo_dtl_almacen_movimientos', 'catalogo_dtl_almacen_movimientos.idtbl_catalogo = dtl_almacen_movimientos.tbl_catalogo_idtbl_catalogo', 'left');
			$this->db->join('ctl_unidades_medida AS unidades_medida_dtl_almacen_movimientos', 'unidades_medida_dtl_almacen_movimientos.idctl_unidades_medida = catalogo_dtl_almacen_movimientos.ctl_unidades_medida_idctl_unidades_medida', 'left');
			$this->db->join('dtl_almacen', 'dtl_almacen.tbl_catalogo_idtbl_catalogo = catalogo_dtl_almacen_movimientos.idtbl_catalogo', 'left');
		}

		//Datos para traspasos
		if ('traspaso-almacen' == $this->input->post('tipo_reporte')) {
			$this->db->join('tbl_users AS relizo_movimiento', 'relizo_movimiento ON relizo_movimiento.idtbl_users = tbl_almacen_movimientos.tbl_users_idtbl_users', 'left');
			$this->db->join('tbl_almacen_movimientos AS tamentrada', 'tamentrada.idtbl_almacen_movimientos_traspaso = tbl_almacen_movimientos.idtbl_almacen_movimientos', 'left');
			$this->db->join('dtl_almacen_movimientos', 'dtl_almacen_movimientos.tbl_almacen_movimientos_idtbl_almacen_movimientos = tamentrada.idtbl_almacen_movimientos', 'left');
			$this->db->join('tbl_proyectos', 'tbl_proyectos.idtbl_proyectos = tbl_almacen_movimientos.tbl_proyectos_idtbl_proyectos_destino', 'left');
			$this->db->join('tbl_segmentos_proyecto', 'tbl_segmentos_proyecto.idtbl_segmentos_proyecto = tbl_almacen_movimientos.tbl_segmentos_proyecto_idtbl_segmentos_proyecto', 'left');
			$this->db->join('tbl_catalogo AS catalogo_dtl_almacen_movimientos', 'catalogo_dtl_almacen_movimientos.idtbl_catalogo = dtl_almacen_movimientos.tbl_catalogo_idtbl_catalogo', 'left');
			$this->db->join('ctl_unidades_medida AS unidades_medida_dtl_almacen_movimientos', 'unidades_medida_dtl_almacen_movimientos.idctl_unidades_medida = catalogo_dtl_almacen_movimientos.ctl_unidades_medida_idctl_unidades_medida', 'left');
			$this->db->join('dtl_almacen', 'dtl_almacen.tbl_catalogo_idtbl_catalogo = catalogo_dtl_almacen_movimientos.idtbl_catalogo', 'left');
			$this->db->join('tbl_almacenes', 'tbl_almacen_movimientos.tbl_almacenes_idtbl_almacenes_destino = tbl_almacenes.idtbl_almacenes', 'left');
			$this->db->join('tbl_almacenes AS almacen_origen', 'tbl_almacen_movimientos.tbl_almacenes_idtbl_almacenes = almacen_origen.idtbl_almacenes', 'left');
			$this->db->where('tamentrada.estatus=1');
		}

		// Datos para devoluciones
		if ($this->input->post('tipo_reporte') == 'devolucion-almacen') {
			$this->db->join('tbl_users AS relizo_movimiento', 'relizo_movimiento ON relizo_movimiento.idtbl_users = tbl_almacen_movimientos.tbl_users_idtbl_users', 'left');
			//$this->db->join('tbl_solicitud_devolucion', 'tbl_solicitud_devolucion.idtbl_solicitud_devolucion = tbl_almacen_movimientos.parent', 'left');
			$this->db->join('tbl_proyectos AS devolucion_proyectos', 'devolucion_proyectos.idtbl_proyectos = tbl_almacen_movimientos.tbl_proyectos_idtbl_proyectos', 'left');
			$this->db->join('tbl_segmentos_proyecto AS devolucion_segmentos_proyecto', 'devolucion_segmentos_proyecto.idtbl_segmentos_proyecto = tbl_almacen_movimientos.tbl_segmentos_proyecto_idtbl_segmentos_proyecto', 'left');
			$this->db->join('tbl_usuarios AS devuelve_material', 'devuelve_material.idtbl_usuarios = tbl_almacen_movimientos.tbl_usuarios_idtbl_usuarios', 'left');
			//$this->db->join('dtl_solicitud_devolucion', 'dtl_solicitud_devolucion.tbl_solicitud_devolucion_idtbl_solicitud_devolucion = tbl_almacen_movimientos.parent', 'left');
			$this->db->join('dtl_asignacion', 'dtl_asignacion.tbl_almacen_movimientos_idtbl_almacen_movimientos = tbl_almacen_movimientos.idtbl_almacen_movimientos', 'left');
			$this->db->join('dtl_almacen', 'dtl_almacen.iddtl_almacen = dtl_asignacion.dtl_almacen_iddtl_almacen', 'left');
			$this->db->join('tbl_catalogo AS catalogo_dtl_solicitud_devolucion', 'catalogo_dtl_solicitud_devolucion.idtbl_catalogo = dtl_almacen.tbl_catalogo_idtbl_catalogo', 'left');
			$this->db->join('ctl_unidades_medida AS unidades_medida_dtl_solicitud_devolucion', 'unidades_medida_dtl_solicitud_devolucion.idctl_unidades_medida = catalogo_dtl_solicitud_devolucion.ctl_unidades_medida_idctl_unidades_medida', 'left');			
			$this->db->join('tbl_contratistas', 'tbl_contratistas.idtbl_contratistas = devuelve_material.tbl_contratistas_idtbl_contratistas', 'left');

			
		}

		// Datos para salidas
		if ($this->input->post('tipo_reporte') == 'salida-almacen') {
			$this->db->join('tbl_users AS relizo_movimiento', 'relizo_movimiento ON relizo_movimiento.idtbl_users = tbl_almacen_movimientos.tbl_users_idtbl_users', 'left');
			//$this->db->join('dtl_almacen_movimientos', 'dtl_almacen_movimientos.tbl_almacen_movimientos_idtbl_almacen_movimientos = tbl_almacen_movimientos.idtbl_almacen_movimientost', 'left');
			$this->db->join('tbl_solicitud_material', 'tbl_solicitud_material.idtbl_solicitud_material = tbl_almacen_movimientos.parent', 'left');
			$this->db->join('tbl_users AS autor_solicitud', 'tbl_solicitud_material.tbl_users_idtbl_users_autor = autor_solicitud.idtbl_users', 'left');
			$this->db->join('tbl_proyectos AS solicitud_proyectos', 'solicitud_proyectos.idtbl_proyectos = tbl_solicitud_material.tbl_proyectos_idtbl_proyectos', 'left');
			$this->db->join('tbl_segmentos_proyecto AS solicitud_segmentos_proyecto', 'solicitud_segmentos_proyecto.idtbl_segmentos_proyecto = tbl_solicitud_material.tbl_segmentos_proyecto_idtbl_segmentos_proyecto', 'left');
			$this->db->join('tbl_usuarios AS recibe_material', 'recibe_material.idtbl_usuarios = tbl_almacen_movimientos.tbl_usuarios_idtbl_usuarios', 'left');
			$this->db->join('dtl_solicitud_material', 'dtl_solicitud_material.tbl_solicitud_material_idtbl_solicitud_material = tbl_almacen_movimientos.parent', 'left');
			$this->db->join('tbl_catalogo AS catalogo_dtl_solicitud_material', 'catalogo_dtl_solicitud_material.idtbl_catalogo = dtl_solicitud_material.tbl_catalogo_idtbl_catalogo', 'left');
			$this->db->join('ctl_unidades_medida AS unidades_medida_dtl_solicitud_material', 'unidades_medida_dtl_solicitud_material.idctl_unidades_medida = catalogo_dtl_solicitud_material.ctl_unidades_medida_idctl_unidades_medida', 'left');
			$this->db->join('dtl_almacen', 'dtl_almacen.tbl_catalogo_idtbl_catalogo = catalogo_dtl_solicitud_material.idtbl_catalogo', 'left');
			$this->db->join('tbl_contratistas', 'tbl_contratistas.idtbl_contratistas = recibe_material.tbl_contratistas_idtbl_contratistas', 'left');
			$this->db->where('tbl_almacen_movimientos.movimiento_virtual!=1');
		}

		// Datos para salidas virtuales
		if ($this->input->post('tipo_reporte') == 'salida-virtual') {
			$this->db->join('tbl_users AS relizo_movimiento', 'relizo_movimiento ON relizo_movimiento.idtbl_users = tbl_almacen_movimientos.tbl_users_idtbl_users', 'left');
			$this->db->join('tbl_pedidos', 'tbl_pedidos.idtbl_pedidos = tbl_almacen_movimientos.parent', 'left');
			$this->db->join('tbl_proyectos AS solicitud_proyectos', 'solicitud_proyectos.idtbl_proyectos = tbl_pedidos.tbl_proyectos_idtbl_proyectos', 'left');
			$this->db->join('tbl_segmentos_proyecto AS solicitud_segmentos_proyecto', 'solicitud_segmentos_proyecto.idtbl_segmentos_proyecto = tbl_pedidos.tbl_segmentos_proyecto_idtbl_segmentos_proyecto', 'left');
			$this->db->join('tbl_usuarios AS recibe_material', 'recibe_material.idtbl_usuarios = tbl_almacen_movimientos.tbl_usuarios_idtbl_usuarios', 'left');
			$this->db->join('dtl_pedido_catalogo', 'dtl_pedido_catalogo.tbl_pedidos_idtbl_pedidos = tbl_almacen_movimientos.parent', 'left');
			$this->db->join('tbl_catalogo AS catalogo_dtl_solicitud_material', 'catalogo_dtl_solicitud_material.idtbl_catalogo = dtl_pedido_catalogo.tbl_catalogo_idtbl_catalogo', 'left');
			$this->db->join('ctl_unidades_medida AS unidades_medida_dtl_solicitud_material', 'unidades_medida_dtl_solicitud_material.idctl_unidades_medida = catalogo_dtl_solicitud_material.ctl_unidades_medida_idctl_unidades_medida', 'left');
			$this->db->join('dtl_almacen', 'dtl_almacen.tbl_catalogo_idtbl_catalogo = catalogo_dtl_solicitud_material.idtbl_catalogo', 'left');
			$this->db->join('tbl_contratistas', 'tbl_contratistas.idtbl_contratistas = recibe_material.tbl_contratistas_idtbl_contratistas', 'left');
			$this->db->where('tbl_almacen_movimientos.movimiento_virtual', 1);
		}

		if(isset($_POST['estatus']) && $this->input->post('estatus') == 'asignado'){
			$this->db->join('dtl_asignacion', 'dtl_asignacion.tbl_almacen_movimientos_idtbl_almacen_movimientos = tbl_almacen_movimientos.idtbl_almacen_movimientos', 'left');
			$this->db->join('dtl_almacen', 'dtl_almacen.iddtl_almacen = dtl_asignacion.dtl_almacen_iddtl_almacen', 'left');
			$this->db->join('tbl_catalogo', 'tbl_catalogo.idtbl_catalogo = dtl_almacen.tbl_catalogo_idtbl_catalogo', 'left');
			$this->db->join('tbl_proyectos', 'tbl_proyectos.idtbl_proyectos = tbl_almacen_movimientos.tbl_proyectos_idtbl_proyectos', 'left');
			$this->db->join('tbl_segmentos_proyecto', 'tbl_segmentos_proyecto.tbl_proyectos_idtbl_proyectos = tbl_proyectos.idtbl_proyectos', 'left');
			$this->db->join('tbl_users', 'tbl_users.idtbl_users = tbl_almacen_movimientos.tbl_users_idtbl_users', 'left');
			$this->db->join('ctl_unidades_medida', 'ctl_unidades_medida.idctl_unidades_medida = tbl_catalogo.ctl_unidades_medida_idctl_unidades_medida', 'left');
			$this->db->join('tbl_usuarios', 'dtl_asignacion.tbl_usuarios_idtbl_usuarios = tbl_usuarios.idtbl_usuarios', 'left');
		}

		

		if($this->session->userdata('tipo') == 17){
			$this->db->where('tbl_almacen_movimientos.tbl_almacenes_idtbl_almacenes !=', 1);
		}
		if($this->input->post('almacen_reporte') != 'todos'){
			if($this->input->post('tipo_reporte') == 'explosion_insumos'){
				$this->db->where('tbl_almacen_movimientos.tbl_almacenes_idtbl_almacenes_origen', $this->input->post('almacen_reporte'));
			}else{
			$this->db->where('tbl_almacen_movimientos.tbl_almacenes_idtbl_almacenes', $this->input->post('almacen_reporte'));
			}
		}else{
			$this->db->where('tbl_almacen_movimientos.tbl_almacenes_idtbl_almacenes!=22');
		}		
        if ($this->input->post('estatus') != 'asignado' && $this->input->post('tipo_reporte') != 'salida-virtual' && $this->input->post('tipo_de_reporte') && $this->input->post('tipo_reporte') != 'explosion_insumos') {
            $this->db->where('tbl_almacen_movimientos.tipo', $this->input->post('tipo_reporte'));
        }elseif($this->input->post('tipo_reporte') == 'salida-virtual'){
			$this->db->where('tbl_almacen_movimientos.tipo', 'salida-almacen');
		}elseif($this->input->post('tipo_reporte')=='explosion_insumos'){
			$this->db->where('tbl_almacen_movimientos.tipo', 'entrada-almacen');
			$this->db->where('tbl_almacen_movimientos.estatus', 1);
			$this->db->where('tbl_almacen_movimientos.movimiento_virtual', 3);			
		}

		if ($tipo_reporte == 'Proyecto') {
			//if ('entrada-almacen' == $this->input->post('tipo_reporte') || 'traspaso-almacen' == $this->input->post('tipo_reporte')) {
			//	$this->db->where('tbl_almacen_movimientos.tbl_proyectos_idtbl_proyectos', $this->input->post('proyecto'));
			//	if (!empty($this->input->post('segmento'))) {
			//		$this->db->where('tbl_solicitud_devolucion.tbl_segmentos_proyecto_idtbl_segmentos_proyecto', $this->input->post('segmento'));
			//	}
			//} 
			if ($this->input->post('tipo_reporte') == 'devolucion-almacen') {
				$this->db->where('tbl_almacen_movimientos.tbl_proyectos_idtbl_proyectos', $this->input->post('proyecto'));
				if (isset($_POST['productoo'])) {
					$this->db->where('catalogo_dtl_solicitud_material.idtbl_catalogo', $this->input->post('productoo'));
				}
				if ($_POST['fecha_inicioo'] != '' && $_POST['fecha_finall'] != '') {
					$fechaInicio = date($this->input->post('fecha_inicioo') . ' 00:00:00');
					$fechaFinal = date($this->input->post('fecha_finall') . ' 23:59:59');
					$this->db->where("tbl_almacen_movimientos.fecha BETWEEN '$fechaInicio' AND '$fechaFinal'");
				}
				if (!empty($this->input->post('segmento'))) {
					$this->db->where('tbl_almacen_movimientos.tbl_segmentos_proyecto_idtbl_segmentos_proyecto', $this->input->post('segmento'));
				}
			}
			if ($this->input->post('tipo_reporte') == 'salida-almacen' || $this->input->post('tipo_reporte') == 'salida-virtual') {
				$this->db->where('solicitud_proyectos.idtbl_proyectos', $this->input->post('proyecto'));
				if (isset($_POST['productoo'])) {
					$this->db->where('dtl_solicitud_material.tbl_catalogo_idtbl_catalogo', $this->input->post('productoo'));
				}
				if ($_POST['fecha_inicioo'] != '' && $_POST['fecha_finall'] != '') {
					$fechaInicio = date($this->input->post('fecha_inicioo') . ' 00:00:00');
					$fechaFinal = date($this->input->post('fecha_finall') . ' 23:59:59');
					$this->db->where("tbl_almacen_movimientos.fecha BETWEEN '$fechaInicio' AND '$fechaFinal'");
				}
				if (!empty($this->input->post('segmento'))) {
					$this->db->where('tbl_solicitud_material.tbl_segmentos_proyecto_idtbl_segmentos_proyecto', $this->input->post('segmento'));
				}
			}
		} elseif ($tipo_reporte == 'Personal') {
			//if ('entrada-almacen' == $this->input->post('tipo_reporte') || 'traspaso-almacen' == $this->input->post('tipo_reporte')) {
			//$this->db->where('tbl_almacen_movimientos.tbl_users_idtbl_users', $this->input->post('usuario'));
			//} 
			if ($this->input->post('tipo_reporte') == 'salida-almacen' || $this->input->post('tipo_reporte') == 'devolucion-almacen' || $this->input->post('tipo_reporte') == 'salida-virtual') {
				if(($this->input->post('tipo_reporte') == 'salida-almacen' || $this->input->post('tipo_reporte') == 'devolucion-almacen') && $this->input->post('contratista') == 'todos'){
					if($this->input->post('tipo_reporte') == 'salida-almacen'){
						$this->db->where('tbl_solicitud_material.tbl_contratistas_idtbl_contratistas IS NOT NULL');
					}else{
						$this->db->where('devuelve_material.tbl_contratistas_idtbl_contratistas IS NOT NULL');
					}
				}else{
					if($this->input->post('usuario') == 'todos'){
						$this->db->where('tbl_contratistas.idtbl_contratistas', $this->input->post('contratista'));
					}else{
						$this->db->where('tbl_almacen_movimientos.tbl_usuarios_idtbl_usuarios', $this->input->post('usuario'));
					}
				}
				
				if (isset($_POST['productoo'])) {
					$this->db->where('dtl_solicitud_material.tbl_catalogo_idtbl_catalogo', $this->input->post('productoo'));
				}
				if ($_POST['fecha_inicioo'] != '' && $_POST['fecha_finall'] != '') {
					$fechaInicio = date($this->input->post('fecha_inicioo') . ' 00:00:00');
					$fechaFinal = date($this->input->post('fecha_finall') . ' 23:59:59');
					$this->db->where("tbl_almacen_movimientos.fecha BETWEEN '$fechaInicio' AND '$fechaFinal'");
				}
				if($this->input->post('tipo_reporte') == 'salida-almacen'){
					$this->db->group_by('dtl_solicitud_material.iddtl_solicitud_material');
				}elseif($this->input->post('tipo_reporte') == 'salida-virtual'){
					$this->db->group_by('dtl_pedido_catalogo.iddtl_pedido_catalogo');
				}elseif($this->input->post('tipo_reporte') == 'devolucion-almacen'){
					$this->db->group_by('dtl_asignacion.iddtl_asignacion');
				}
			}
		} elseif ($tipo_reporte == 'Producto') {
			if ('entrada-almacen' == $this->input->post('tipo_reporte') || 'traspaso-almacen' == $this->input->post('tipo_reporte')) {
				$this->db->where('dtl_almacen_movimientos.tbl_catalogo_idtbl_catalogo', $this->input->post('producto'));
				if (isset($_POST['estatus'])) {
					$this->db->where('dtl_almacen.estatus', $this->input->post('estatus'));
				}
			}
			elseif ('explosion_insumos' == $this->input->post('tipo_reporte') || 'traspaso-almacen' == $this->input->post('tipo_reporte')) {
				$this->db->where('dtl_almacen_movimientos.tbl_catalogo_idtbl_catalogo', $this->input->post('producto'));
				if (isset($_POST['estatus'])) {
					$this->db->where('dtl_almacen.estatus', $this->input->post('estatus'));
				}
			} elseif ($this->input->post('tipo_reporte') == 'devolucion-almacen') {
				$this->db->where('catalogo_dtl_solicitud_devolucion.idtbl_catalogo', $this->input->post('producto'));
				if (isset($_POST['estatus'])) {
					$this->db->where('dtl_asignacion.estado_entrega', $this->input->post('estatus'));
				}
			} elseif ($this->input->post('tipo_reporte') == 'salida-almacen' || $this->input->post('tipo_reporte') == 'salida-virtual') {
				$this->db->where('dtl_solicitud_material.tbl_catalogo_idtbl_catalogo', $this->input->post('producto'));
				if (isset($_POST['estatus'])) {
					$this->db->where('dtl_almacen.estatus', $this->input->post('estatus'));
				}
			} elseif (isset($_POST['estatus']) && $this->input->post('estatus') == 'asignado'){
				$this->db->where('tbl_catalogo.idtbl_catalogo', $this->input->post('producto'));
				$this->db->where('dtl_asignacion.estatus_asignacion', 'activa');
				$this->db->group_by('dtl_asignacion.iddtl_asignacion');
			}
		} elseif ($tipo_reporte == 'Fecha') {
			$fechaInicio = date($this->input->post('fecha_inicio') . ' 00:00:00');
			$fechaFinal = date($this->input->post('fecha_final') . ' 23:59:59');
			$this->db->where("tbl_almacen_movimientos.fecha BETWEEN '$fechaInicio' AND '$fechaFinal'");
		}elseif ($tipo_reporte == 'Almacen') {
			$this->db->where('tbl_almacen_movimientos.estatus', 1);
			$this->db->group_start();
			foreach($this->input->post('anio') AS $key => $value){
				$this->db->or_where('YEAR(tbl_almacen_movimientos.fecha)', $value);
			}	
			$this->db->group_end();
		}
		if($this->input->post('tipo_de_reporte') == 'caja_chica'){
			$this->db->where("tbl_almacen_movimientos.movimiento_virtual", 0);
			$this->db->where("tbl_almacen_movimientos.parent IS NULL");
			$this->db->where("tbl_almacen_movimientos.tipo_movimiento IS NULL");
		}
		if($this->input->post('tipo_reporte') == 'salida-almacen'){
			$this->db->group_by('dtl_solicitud_material.iddtl_solicitud_material');
		}elseif($this->input->post('tipo_reporte') == 'salida-virtual'){
			$this->db->group_by('dtl_pedido_catalogo.iddtl_pedido_catalogo');
		}elseif($this->input->post('tipo_reporte') == 'devolucion-almacen'){
			$this->db->group_by('dtl_asignacion.iddtl_asignacion');
		}elseif($this->input->post('tipo_reporte') == 'entrada-almacen'){
			$this->db->group_by('dtl_almacen_movimientos.iddtl_almacen_entradas');
		}elseif($this->input->post('tipo_reporte') == 'explosion_insumos'){
			$this->db->group_by('dtl_almacen_movimientos.iddtl_almacen_entradas');
		}elseif($this->input->post('tipo_reporte') == 'traspaso-almacen'){
			$this->db->group_by('dtl_almacen_movimientos.iddtl_almacen_entradas');
		}
		return $this->db->get()->result_array();
	}

	public function reporte_pm($tipo_reporte, $movimiento) {
		// Datos esenciales
		

		// Datos para entradas
		if ('entrada-almacen' == $movimiento) {
			$this->db->select('tbl_almacen_movimientos.idtbl_almacen_movimientos, tbl_almacen_movimientos.folio AS folio_almacen_movimientos, tbl_almacen_movimientos.fecha AS fecha_almacen_movimientos, tbl_almacen_movimientos.uid AS uid_almacen_movimientos, tbl_almacen_movimientos.numero_documento, tbl_almacen_movimientos.tipo AS tipo_almacen_movimientos, tbl_almacen_movimientos.estatus AS estatus_almacen_movimientos');

			$this->db->select('relizo_movimiento.nombre AS relizo_movimiento');
			$this->db->select('tbl_pedidos.neodata_pedido');
			$this->db->select('tbl_proyectos.numero_proyecto, tbl_proyectos.nombre_proyecto, tbl_segmentos_proyecto.segmento, dtl_almacen_movimientos.sitio AS ruth, catalogo_dtl_almacen_movimientos.descripcion AS producto_dtl_almacen_movimientos, catalogo_dtl_almacen_movimientos.neodata AS neodata_dtl_almacen_movimientos, unidades_medida_dtl_almacen_movimientos.unidad_medida_abr AS unidad_medida_abr_dtl_almacen_movimientos, dtl_almacen_movimientos.cantidad AS cantidad_dtl_almacen_movimientos, tbl_almacenes.idtbl_almacenes, tbl_almacenes.almacen AS almacen_entrada, tbl_proyectos1.numero_proyecto AS numero_proyecto1, tbl_proyectos1.nombre_proyecto AS nombre_proyecto1');
		}

		// Datos para traspasos
		if ('traspaso-almacen' == $movimiento) {
			$this->db->select('tbl_almacen_movimientos.idtbl_almacen_movimientos, tbl_almacen_movimientos.folio AS folio_almacen_movimientos, tbl_almacen_movimientos.fecha AS fecha_almacen_movimientos, tbl_almacen_movimientos.uid AS uid_almacen_movimientos, tbl_almacen_movimientos.numero_documento, tbl_almacen_movimientos.tipo AS tipo_almacen_movimientos, tbl_almacen_movimientos.estatus AS estatus_almacen_movimientos');

			$this->db->select('relizo_movimiento.nombre AS relizo_movimiento');
			$this->db->select('tbl_proyectos.numero_proyecto, tbl_proyectos.nombre_proyecto, tbl_almacenes.almacen, almacen_origen.almacen AS nombre_origen, tbl_segmentos_proyecto.segmento, catalogo_dtl_almacen_movimientos.descripcion AS producto_dtl_almacen_movimientos, catalogo_dtl_almacen_movimientos.neodata AS neodata_dtl_almacen_movimientos, unidades_medida_dtl_almacen_movimientos.unidad_medida_abr AS unidad_medida_abr_dtl_almacen_movimientos, dtl_almacen_movimientos.cantidad AS cantidad_dtl_almacen_movimientos');
		}

		// Datos para devoluciones
		if ($movimiento == 'devolucion-almacen') {
			$this->db->select('tbl_almacen_movimientos.idtbl_almacen_movimientos, tbl_almacen_movimientos.folio AS folio_almacen_movimientos, tbl_almacen_movimientos.fecha AS fecha_almacen_movimientos, tbl_almacen_movimientos.uid AS uid_almacen_movimientos, tbl_almacen_movimientos.numero_documento, tbl_almacen_movimientos.tipo AS tipo_almacen_movimientos, tbl_almacen_movimientos.estatus AS estatus_almacen_movimientos');

			$this->db->select('relizo_movimiento.nombre AS relizo_movimiento');
			$this->db->select('tbl_contratistas.razon_social, devolucion_proyectos.numero_proyecto AS numero_proyecto_devolucion_proyectos, devolucion_proyectos.nombre_proyecto AS nombre_proyecto_devolucion_proyectos, devolucion_segmentos_proyecto.segmento AS segmento_devolucion_segmentos_proyecto, CONCAT(devuelve_material.nombres," ",devuelve_material.apellido_materno," ",devuelve_material.apellido_paterno) as devuelve_material, dtl_asignacion.entregado AS entregado_dtl_solicitud_devolucion, dtl_asignacion.estado_entrega AS estado_dtl_solicitud_devolucion, dtl_asignacion.observaciones AS observaciones_dtl_solicitud_devolucion, catalogo_dtl_solicitud_devolucion.descripcion AS producto_dtl_solicitud_devolucion, catalogo_dtl_solicitud_devolucion.neodata AS neodata_dtl_solicitud_devolucion, unidades_medida_dtl_solicitud_devolucion.unidad_medida_abr AS unidad_medida_abr_dtl_solicitud_devolucion, tbl_almacenes.almacen AS almacen_devolucion');
		}

		// Datos para salidas
		if ($movimiento == 'salida-almacen') {
			$this->db->select('tbl_almacen_movimientos.idtbl_almacen_movimientos, catalogo_dtl_solicitud_material.precio, catalogo_dtl_solicitud_material.tipo_moneda, tbl_almacen_movimientos.folio AS folio_almacen_movimientos, tbl_almacen_movimientos.fecha AS fecha_almacen_movimientos, tbl_almacen_movimientos.uid AS uid_almacen_movimientos, tbl_almacen_movimientos.numero_documento, tbl_almacen_movimientos.tipo AS tipo_almacen_movimientos, tbl_almacen_movimientos.estatus AS estatus_almacen_movimientos');

			$this->db->select('relizo_movimiento.nombre AS relizo_movimiento, autor_solicitud.nombre AS nombre_autor');
			$this->db->select('tbl_contratistas.razon_social, solicitud_proyectos.numero_proyecto AS numero_proyecto_solicitud_proyectos, dtl_solicitud_material.observaciones_neodata, solicitud_proyectos.nombre_proyecto AS nombre_proyecto_solicitud_proyectos, solicitud_segmentos_proyecto.segmento AS segmento_solicitud_segmentos_proyecto, CONCAT(recibe_material.nombres," ",recibe_material.apellido_paterno," ",recibe_material.apellido_materno) as recibe_material, dtl_solicitud_material.entregado AS entregado_dtl_solicitud_material, dtl_solicitud_material.observaciones AS observaciones_dtl_solicitud_material, catalogo_dtl_solicitud_material.descripcion AS producto_dtl_solicitud_material, catalogo_dtl_solicitud_material.neodata AS neodata_dtl_solicitud_material, unidades_medida_dtl_solicitud_material.unidad_medida_abr AS unidad_medida_abr_dtl_solicitud_material, tbl_solicitud_material.uid AS uid_solicitud_material, dtl_solicitud_material.sitio AS sitio, tbl_solicitud_material.cleanup, tbl_solicitud_material.neodata_salida, tbl_solicitud_material.comentarios, tbl_almacenes.almacen AS almacen_salida');
		}

		// Datos para salidas virtuales
		if ($movimiento == 'salida-virtual') {
			$this->db->select('tbl_almacen_movimientos.idtbl_almacen_movimientos, tbl_almacen_movimientos.folio AS folio_almacen_movimientos, tbl_almacen_movimientos.fecha AS fecha_almacen_movimientos, tbl_almacen_movimientos.uid AS uid_almacen_movimientos, tbl_almacen_movimientos.numero_documento, tbl_almacen_movimientos.tipo AS tipo_almacen_movimientos, tbl_almacen_movimientos.estatus AS estatus_almacen_movimientos');

			$this->db->select('relizo_movimiento.nombre AS relizo_movimiento');
			$this->db->select('tbl_contratistas.razon_social, solicitud_proyectos.numero_proyecto AS numero_proyecto_solicitud_proyectos, solicitud_proyectos.nombre_proyecto AS nombre_proyecto_solicitud_proyectos, solicitud_segmentos_proyecto.segmento AS segmento_solicitud_segmentos_proyecto, CONCAT(recibe_material.nombres," ",recibe_material.apellido_paterno," ",recibe_material.apellido_materno) as recibe_material, dtl_pedido_catalogo.entregado AS entregado_dtl_solicitud_material, catalogo_dtl_solicitud_material.descripcion AS producto_dtl_solicitud_material, catalogo_dtl_solicitud_material.neodata AS neodata_dtl_solicitud_material, unidades_medida_dtl_solicitud_material.unidad_medida_abr AS unidad_medida_abr_dtl_solicitud_material, tbl_pedidos.uid AS uid_solicitud_material');
		}


		if (isset($_POST['estatus']) && $this->input->post('estatus') == 'asignado'){
			$this->db->select('tbl_almacen_movimientos.folio, dtl_asignacion.fecha_asignacion, tbl_proyectos.nombre_proyecto, tbl_segmentos_proyecto.segmento, tbl_users.nombre, tbl_usuarios.nombres, tbl_usuarios.apellido_paterno, tbl_usuarios.apellido_materno, tbl_catalogo.neodata, tbl_catalogo.descripcion, dtl_asignacion.cantidad, ctl_unidades_medida.unidad_medida');
		}

		$this->db->from('tbl_almacen_movimientos');
		// Datos esenciales		

		// Datos para entradas
		if ('entrada-almacen' == $movimiento) {
			$this->db->join('tbl_users AS relizo_movimiento', 'relizo_movimiento ON relizo_movimiento.idtbl_users = tbl_almacen_movimientos.tbl_users_idtbl_users', 'left');
			$this->db->join('dtl_almacen_movimientos', 'dtl_almacen_movimientos.tbl_almacen_movimientos_idtbl_almacen_movimientos = tbl_almacen_movimientos.idtbl_almacen_movimientos', 'left');
			$this->db->join('tbl_proyectos', 'tbl_proyectos.idtbl_proyectos = tbl_almacen_movimientos.tbl_proyectos_idtbl_proyectos', 'left');
			$this->db->join('tbl_segmentos_proyecto', 'tbl_segmentos_proyecto.idtbl_segmentos_proyecto = tbl_almacen_movimientos.tbl_segmentos_proyecto_idtbl_segmentos_proyecto', 'left');
			$this->db->join('tbl_catalogo AS catalogo_dtl_almacen_movimientos', 'catalogo_dtl_almacen_movimientos.idtbl_catalogo = dtl_almacen_movimientos.tbl_catalogo_idtbl_catalogo', 'left');
			$this->db->join('ctl_unidades_medida AS unidades_medida_dtl_almacen_movimientos', 'unidades_medida_dtl_almacen_movimientos.idctl_unidades_medida = catalogo_dtl_almacen_movimientos.ctl_unidades_medida_idctl_unidades_medida', 'left');
			$this->db->join('dtl_almacen', 'dtl_almacen.tbl_catalogo_idtbl_catalogo = catalogo_dtl_almacen_movimientos.idtbl_catalogo', 'left');
			$this->db->join('tbl_almacenes', 'tbl_almacenes.idtbl_almacenes = tbl_almacen_movimientos.tbl_almacenes_idtbl_almacenes', 'left');
			$this->db->join('tbl_proyectos AS tbl_proyectos1', 'tbl_proyectos1 ON tbl_proyectos1.idtbl_proyectos = tbl_almacenes.tbl_proyectos_idtbl_proyectos', 'left');
			$this->db->join('tbl_pedidos', 'tbl_pedidos.idtbl_pedidos = tbl_almacen_movimientos.parent', 'left');	
		}

		//Datos para traspasos
		if ('traspaso-almacen' == $movimiento) {
			$this->db->join('tbl_users AS relizo_movimiento', 'relizo_movimiento ON relizo_movimiento.idtbl_users = tbl_almacen_movimientos.tbl_users_idtbl_users', 'left');
			$this->db->join('dtl_almacen_movimientos', 'dtl_almacen_movimientos.tbl_almacen_movimientos_idtbl_almacen_movimientos = tbl_almacen_movimientos.idtbl_almacen_movimientos', 'left');
			$this->db->join('tbl_proyectos', 'tbl_proyectos.idtbl_proyectos = tbl_almacen_movimientos.tbl_proyectos_idtbl_proyectos_destino', 'left');
			$this->db->join('tbl_segmentos_proyecto', 'tbl_segmentos_proyecto.idtbl_segmentos_proyecto = tbl_almacen_movimientos.tbl_segmentos_proyecto_idtbl_segmentos_proyecto', 'left');
			$this->db->join('tbl_catalogo AS catalogo_dtl_almacen_movimientos', 'catalogo_dtl_almacen_movimientos.idtbl_catalogo = dtl_almacen_movimientos.tbl_catalogo_idtbl_catalogo', 'left');
			$this->db->join('ctl_unidades_medida AS unidades_medida_dtl_almacen_movimientos', 'unidades_medida_dtl_almacen_movimientos.idctl_unidades_medida = catalogo_dtl_almacen_movimientos.ctl_unidades_medida_idctl_unidades_medida', 'left');
			$this->db->join('dtl_almacen', 'dtl_almacen.tbl_catalogo_idtbl_catalogo = catalogo_dtl_almacen_movimientos.idtbl_catalogo', 'left');
			$this->db->join('tbl_almacenes', 'tbl_almacen_movimientos.tbl_almacenes_idtbl_almacenes_destino = tbl_almacenes.idtbl_almacenes', 'left');
			$this->db->join('tbl_almacenes AS almacen_origen', 'tbl_almacen_movimientos.tbl_almacenes_idtbl_almacenes = almacen_origen.idtbl_almacenes', 'left');
		}

		// Datos para devoluciones
		if ($movimiento == 'devolucion-almacen') {
			$this->db->join('tbl_users AS relizo_movimiento', 'relizo_movimiento ON relizo_movimiento.idtbl_users = tbl_almacen_movimientos.tbl_users_idtbl_users', 'left');
			//$this->db->join('tbl_solicitud_devolucion', 'tbl_solicitud_devolucion.idtbl_solicitud_devolucion = tbl_almacen_movimientos.parent', 'left');
			$this->db->join('tbl_proyectos AS devolucion_proyectos', 'devolucion_proyectos.idtbl_proyectos = tbl_almacen_movimientos.tbl_proyectos_idtbl_proyectos', 'left');
			$this->db->join('tbl_segmentos_proyecto AS devolucion_segmentos_proyecto', 'devolucion_segmentos_proyecto.idtbl_segmentos_proyecto = tbl_almacen_movimientos.tbl_segmentos_proyecto_idtbl_segmentos_proyecto', 'left');
			$this->db->join('tbl_usuarios AS devuelve_material', 'devuelve_material.idtbl_usuarios = tbl_almacen_movimientos.tbl_usuarios_idtbl_usuarios', 'left');
			//$this->db->join('dtl_solicitud_devolucion', 'dtl_solicitud_devolucion.tbl_solicitud_devolucion_idtbl_solicitud_devolucion = tbl_almacen_movimientos.parent', 'left');
			$this->db->join('dtl_asignacion', 'dtl_asignacion.tbl_almacen_movimientos_idtbl_almacen_movimientos = tbl_almacen_movimientos.idtbl_almacen_movimientos', 'left');
			$this->db->join('dtl_almacen', 'dtl_almacen.iddtl_almacen = dtl_asignacion.dtl_almacen_iddtl_almacen', 'left');
			$this->db->join('tbl_catalogo AS catalogo_dtl_solicitud_devolucion', 'catalogo_dtl_solicitud_devolucion.idtbl_catalogo = dtl_almacen.tbl_catalogo_idtbl_catalogo', 'left');
			$this->db->join('ctl_unidades_medida AS unidades_medida_dtl_solicitud_devolucion', 'unidades_medida_dtl_solicitud_devolucion.idctl_unidades_medida = catalogo_dtl_solicitud_devolucion.ctl_unidades_medida_idctl_unidades_medida', 'left');			
			$this->db->join('tbl_contratistas', 'tbl_contratistas.idtbl_contratistas = devuelve_material.tbl_contratistas_idtbl_contratistas', 'left');
			$this->db->join('tbl_almacenes', 'tbl_almacen_movimientos.tbl_almacenes_idtbl_almacenes = tbl_almacenes.idtbl_almacenes');
			
		}

		// Datos para salidas
		if ($movimiento == 'salida-almacen') {
			$this->db->join('tbl_users AS relizo_movimiento', 'relizo_movimiento ON relizo_movimiento.idtbl_users = tbl_almacen_movimientos.tbl_users_idtbl_users', 'left');
			//$this->db->join('dtl_almacen_movimientos', 'dtl_almacen_movimientos.tbl_almacen_movimientos_idtbl_almacen_movimientos = tbl_almacen_movimientos.idtbl_almacen_movimientost', 'left');
			$this->db->join('tbl_solicitud_material', 'tbl_solicitud_material.idtbl_solicitud_material = tbl_almacen_movimientos.parent', 'left');
			$this->db->join('tbl_almacenes', 'tbl_almacenes.uid = tbl_solicitud_material.uid_almacen_seleccionado', 'left');
			$this->db->join('tbl_users AS autor_solicitud', 'tbl_solicitud_material.tbl_users_idtbl_users_autor = autor_solicitud.idtbl_users', 'left');
			$this->db->join('tbl_proyectos AS solicitud_proyectos', 'solicitud_proyectos.idtbl_proyectos = tbl_solicitud_material.tbl_proyectos_idtbl_proyectos', 'left');
			$this->db->join('tbl_segmentos_proyecto AS solicitud_segmentos_proyecto', 'solicitud_segmentos_proyecto.idtbl_segmentos_proyecto = tbl_solicitud_material.tbl_segmentos_proyecto_idtbl_segmentos_proyecto', 'left');
			$this->db->join('tbl_usuarios AS recibe_material', 'recibe_material.idtbl_usuarios = tbl_almacen_movimientos.tbl_usuarios_idtbl_usuarios', 'left');
			$this->db->join('dtl_solicitud_material', 'dtl_solicitud_material.tbl_solicitud_material_idtbl_solicitud_material = tbl_almacen_movimientos.parent', 'left');
			$this->db->join('tbl_catalogo AS catalogo_dtl_solicitud_material', 'catalogo_dtl_solicitud_material.idtbl_catalogo = dtl_solicitud_material.tbl_catalogo_idtbl_catalogo', 'left');
			$this->db->join('ctl_unidades_medida AS unidades_medida_dtl_solicitud_material', 'unidades_medida_dtl_solicitud_material.idctl_unidades_medida = catalogo_dtl_solicitud_material.ctl_unidades_medida_idctl_unidades_medida', 'left');
			$this->db->join('dtl_almacen', 'dtl_almacen.tbl_catalogo_idtbl_catalogo = catalogo_dtl_solicitud_material.idtbl_catalogo', 'left');
			$this->db->join('tbl_contratistas', 'tbl_contratistas.idtbl_contratistas = recibe_material.tbl_contratistas_idtbl_contratistas', 'left');
			$this->db->where('tbl_almacen_movimientos.movimiento_virtual!=1');
		}

		// Datos para salidas virtuales
		if ($movimiento == 'salida-virtual') {
			$this->db->join('tbl_users AS relizo_movimiento', 'relizo_movimiento ON relizo_movimiento.idtbl_users = tbl_almacen_movimientos.tbl_users_idtbl_users', 'left');
			$this->db->join('tbl_pedidos', 'tbl_pedidos.idtbl_pedidos = tbl_almacen_movimientos.parent', 'left');
			$this->db->join('tbl_proyectos AS solicitud_proyectos', 'solicitud_proyectos.idtbl_proyectos = tbl_pedidos.tbl_proyectos_idtbl_proyectos', 'left');
			$this->db->join('tbl_segmentos_proyecto AS solicitud_segmentos_proyecto', 'solicitud_segmentos_proyecto.idtbl_segmentos_proyecto = tbl_pedidos.tbl_segmentos_proyecto_idtbl_segmentos_proyecto', 'left');
			$this->db->join('tbl_usuarios AS recibe_material', 'recibe_material.idtbl_usuarios = tbl_almacen_movimientos.tbl_usuarios_idtbl_usuarios', 'left');
			$this->db->join('dtl_pedido_catalogo', 'dtl_pedido_catalogo.tbl_pedidos_idtbl_pedidos = tbl_almacen_movimientos.parent', 'left');
			$this->db->join('tbl_catalogo AS catalogo_dtl_solicitud_material', 'catalogo_dtl_solicitud_material.idtbl_catalogo = dtl_pedido_catalogo.tbl_catalogo_idtbl_catalogo', 'left');
			$this->db->join('ctl_unidades_medida AS unidades_medida_dtl_solicitud_material', 'unidades_medida_dtl_solicitud_material.idctl_unidades_medida = catalogo_dtl_solicitud_material.ctl_unidades_medida_idctl_unidades_medida', 'left');
			$this->db->join('dtl_almacen', 'dtl_almacen.tbl_catalogo_idtbl_catalogo = catalogo_dtl_solicitud_material.idtbl_catalogo', 'left');
			$this->db->join('tbl_contratistas', 'tbl_contratistas.idtbl_contratistas = recibe_material.tbl_contratistas_idtbl_contratistas', 'left');
			$this->db->where('tbl_almacen_movimientos.movimiento_virtual', 1);
		}

		if(isset($_POST['estatus']) && $this->input->post('estatus') == 'asignado'){
			$this->db->join('dtl_asignacion', 'dtl_asignacion.tbl_almacen_movimientos_idtbl_almacen_movimientos = tbl_almacen_movimientos.idtbl_almacen_movimientos', 'left');
			$this->db->join('dtl_almacen', 'dtl_almacen.iddtl_almacen = dtl_asignacion.dtl_almacen_iddtl_almacen', 'left');
			$this->db->join('tbl_catalogo', 'tbl_catalogo.idtbl_catalogo = dtl_almacen.tbl_catalogo_idtbl_catalogo', 'left');
			$this->db->join('tbl_proyectos', 'tbl_proyectos.idtbl_proyectos = tbl_almacen_movimientos.tbl_proyectos_idtbl_proyectos', 'left');
			$this->db->join('tbl_segmentos_proyecto', 'tbl_segmentos_proyecto.tbl_proyectos_idtbl_proyectos = tbl_proyectos.idtbl_proyectos', 'left');
			$this->db->join('tbl_users', 'tbl_users.idtbl_users = tbl_almacen_movimientos.tbl_users_idtbl_users', 'left');
			$this->db->join('ctl_unidades_medida', 'ctl_unidades_medida.idctl_unidades_medida = tbl_catalogo.ctl_unidades_medida_idctl_unidades_medida', 'left');
			$this->db->join('tbl_usuarios', 'dtl_asignacion.tbl_usuarios_idtbl_usuarios = tbl_usuarios.idtbl_usuarios', 'left');
		}

		

        if ($movimiento != 'general' && $this->input->post('tipo_de_reporte')) {
            $this->db->where('tbl_almacen_movimientos.tipo', $movimiento);
        }elseif($movimiento == 'salida-virtual'){
			$this->db->where('tbl_almacen_movimientos.tipo', 'salida-almacen');
		}

		if ($tipo_reporte == 'Proyecto') {
			if ('entrada-almacen' == $movimiento || 'traspaso-almacen' == $movimiento) {
				$this->db->where('tbl_almacen_movimientos.tbl_proyectos_idtbl_proyectos', $this->input->post('proyecto'));
				if (!empty($this->input->post('segmento'))) {
					$this->db->where('tbl_almacen_movimientos.tbl_segmentos_proyecto_idtbl_segmentos_proyecto', $this->input->post('segmento'));
				}
				if (isset($_POST['productoo'])) {

					$this->db->where('dtl_almacen_movimientos.tbl_catalogo_idtbl_catalogo', $this->input->post('productoo'));
				}
			} 
			if ($movimiento == 'devolucion-almacen') {
				$this->db->where('tbl_almacen_movimientos.tbl_proyectos_idtbl_proyectos', $this->input->post('proyecto'));
				if (isset($_POST['productoo'])) {
					$this->db->where('catalogo_dtl_solicitud_material.idtbl_catalogo', $this->input->post('productoo'));
				}
				if ($_POST['fecha_inicioo'] != '' && $_POST['fecha_finall'] != '') {
					$fechaInicio = date($this->input->post('fecha_inicioo') . ' 00:00:00');
					$fechaFinal = date($this->input->post('fecha_finall') . ' 23:59:59');
					$this->db->where("tbl_almacen_movimientos.fecha BETWEEN '$fechaInicio' AND '$fechaFinal'");
				}
				if (!empty($this->input->post('segmento'))) {
					$this->db->where('tbl_almacen_movimientos.tbl_segmentos_proyecto_idtbl_segmentos_proyecto', $this->input->post('segmento'));
				}

			}
			if ($movimiento == 'salida-almacen' || $movimiento == 'salida-virtual') {
				$this->db->where('solicitud_proyectos.idtbl_proyectos', $this->input->post('proyecto'));
				if (isset($_POST['productoo'])) {
					$this->db->where('dtl_solicitud_material.tbl_catalogo_idtbl_catalogo', $this->input->post('productoo'));
				}
				if ($_POST['fecha_inicioo'] != '' && $_POST['fecha_finall'] != '') {
					$fechaInicio = date($this->input->post('fecha_inicioo') . ' 00:00:00');
					$fechaFinal = date($this->input->post('fecha_finall') . ' 23:59:59');
					$this->db->where("tbl_almacen_movimientos.fecha BETWEEN '$fechaInicio' AND '$fechaFinal'");
				}
				if (!empty($this->input->post('segmento'))) {
					$this->db->where('tbl_solicitud_material.tbl_segmentos_proyecto_idtbl_segmentos_proyecto', $this->input->post('segmento'));
				}

			}
		}  


		
		if($movimiento == 'salida-almacen'){
			$this->db->group_by('dtl_solicitud_material.iddtl_solicitud_material');
		}elseif($movimiento == 'salida-virtual'){
			$this->db->group_by('dtl_pedido_catalogo.iddtl_pedido_catalogo');
		}elseif($movimiento == 'devolucion-almacen'){
			$this->db->group_by('dtl_asignacion.iddtl_asignacion');
		}elseif($movimiento == 'entrada-almacen'){
			$this->db->group_by('dtl_almacen_movimientos.iddtl_almacen_entradas');
		}elseif($movimiento == 'traspaso-almacen'){
			$this->db->group_by('dtl_almacen_movimientos.iddtl_almacen_entradas');
		}
		return $this->db->get()->result_array();
	}

	public function reporte_por_proyectoAC($tipo_reporte) {
		// Datos esenciales
		$this->db->select('tbl_almacen_movimientos.idtbl_almacen_movimientos, tbl_almacen_movimientos.folio AS folio_almacen_movimientos, tbl_almacen_movimientos.fecha AS fecha_almacen_movimientos, tbl_almacen_movimientos.uid AS uid_almacen_movimientos, tbl_almacen_movimientos.numero_documento, tbl_almacen_movimientos.tipo AS tipo_almacen_movimientos, tbl_almacen_movimientos.estatus AS estatus_almacen_movimientos');

		$this->db->select('relizo_movimiento.nombre AS relizo_movimiento');
		// Datos para entradas
		if ('entrada' == $this->input->post('tipo_reporte')) {
			$this->db->select('tbl_proyectos.numero_proyecto, tbl_proyectos.nombre_proyecto, tbl_segmentos_proyecto.segmento, catalogo_dtl_almacen_movimientos.descripcion AS producto_dtl_almacen_movimientos, catalogo_dtl_almacen_movimientos.neodata AS neodata_dtl_almacen_movimientos, unidades_medida_dtl_almacen_movimientos.unidad_medida_abr AS unidad_medida_abr_dtl_almacen_movimientos, dtl_almacen_movimientos.cantidad AS cantidad_dtl_almacen_movimientos');
		}
		// Datos para traspasos
		if ('traspaso' == $this->input->post('tipo_reporte') || 'traspaso-almacen' == $this->input->post('tipo_reporte')) {
			$this->db->select('tbl_proyectos.numero_proyecto, tbl_proyectos.nombre_proyecto, destino.almacen AS almacen_destino, tbl_segmentos_proyecto.segmento, catalogo_dtl_almacen_movimientos.descripcion AS producto_dtl_almacen_movimientos, catalogo_dtl_almacen_movimientos.neodata AS neodata_dtl_almacen_movimientos, unidades_medida_dtl_almacen_movimientos.unidad_medida_abr AS unidad_medida_abr_dtl_almacen_movimientos, dtl_almacen_movimientos.cantidad AS cantidad_dtl_almacen_movimientos');
		}
		// Datos para devoluciones
		if ($this->input->post('tipo_reporte') == 'devolucion') {
			$this->db->select('devolucion_proyectos.numero_proyecto AS numero_proyecto_devolucion_proyectos, devolucion_proyectos.nombre_proyecto AS nombre_proyecto_devolucion_proyectos, devolucion_segmentos_proyecto.segmento AS segmento_devolucion_segmentos_proyecto, CONCAT(devuelve_material.nombres," ",devuelve_material.apellido_materno," ",devuelve_material.apellido_paterno) as devuelve_material, dtl_solicitud_devolucion.cantidad AS entregado_dtl_solicitud_devolucion, dtl_solicitud_devolucion.estado_entrega AS estado_dtl_solicitud_devolucion, dtl_solicitud_devolucion.observaciones AS observaciones_dtl_solicitud_devolucion, catalogo_dtl_solicitud_devolucion.descripcion AS producto_dtl_solicitud_devolucion, catalogo_dtl_solicitud_devolucion.neodata AS neodata_dtl_solicitud_devolucion, unidades_medida_dtl_solicitud_devolucion.unidad_medida_abr AS unidad_medida_abr_dtl_solicitud_devolucion');
			/*$this->db->select('solicitud_proyectos.numero_proyecto AS numero_proyecto_solicitud_proyectos, solicitud_proyectos.nombre_proyecto AS nombre_proyecto_solicitud_proyectos, solicitud_segmentos_proyecto.segmento AS segmento_solicitud_segmentos_proyecto, CONCAT(devuelve_material.nombres," ",devuelve_material.apellido_materno," ",devuelve_material.apellido_paterno) as devuelve_material, dtl_asignacion.entregado AS entregado_dtl_solicitud_devolucion, dtl_almacen.estatus AS estado_dtl_solicitud_devolucion, dtl_solicitud_material.observaciones AS observaciones_dtl_solicitud_devolucion, catalogo_dtl_solicitud_devolucion.descripcion AS producto_dtl_solicitud_devolucion, catalogo_dtl_solicitud_devolucion.neodata AS neodata_dtl_solicitud_devolucion, unidades_medida_dtl_solicitud_devolucion.unidad_medida_abr AS unidad_medida_abr_dtl_solicitud_devolucion');*/
		}
		// Datos para salidas
		if ($this->input->post('tipo_reporte') == 'asignacion') {
			$this->db->select('solicitud_proyectos.numero_proyecto AS numero_proyecto_solicitud_proyectos, solicitud_proyectos.nombre_proyecto AS nombre_proyecto_solicitud_proyectos, solicitud_segmentos_proyecto.segmento AS segmento_solicitud_segmentos_proyecto, CONCAT(recibe_material.nombres," ",recibe_material.apellido_paterno," ",recibe_material.apellido_materno) as recibe_material, dtl_asignacion.cantidad AS entregado_dtl_solicitud_material, dtl_asignacion.entregado AS entregado_dtl_asignacion, dtl_solicitud_material.observaciones AS observaciones_dtl_solicitud_material, catalogo_dtl_solicitud_material.descripcion AS producto_dtl_solicitud_material, catalogo_dtl_solicitud_material.neodata AS neodata_dtl_solicitud_material, unidades_medida_dtl_solicitud_material.unidad_medida_abr AS unidad_medida_abr_dtl_solicitud_material');
		}
		// Datos para entradas
		if ('entrada' == $this->input->post('tipo_reporte')) {
			$this->db->from('tbl_almacen_movimientos');
			// Datos esenciales
			$this->db->join('tbl_users AS relizo_movimiento', 'relizo_movimiento ON relizo_movimiento.idtbl_users = tbl_almacen_movimientos.tbl_users_idtbl_users', 'left');
			$this->db->join('dtl_almacen_movimientos', 'dtl_almacen_movimientos.tbl_almacen_movimientos_idtbl_almacen_movimientos = tbl_almacen_movimientos.idtbl_almacen_movimientos', 'left');
			$this->db->join('tbl_proyectos', 'tbl_proyectos.idtbl_proyectos = tbl_almacen_movimientos.tbl_proyectos_idtbl_proyectos', 'left');
			$this->db->join('tbl_segmentos_proyecto', 'tbl_segmentos_proyecto.idtbl_segmentos_proyecto = tbl_almacen_movimientos.tbl_segmentos_proyecto_idtbl_segmentos_proyecto', 'left');
			$this->db->join('tbl_catalogo AS catalogo_dtl_almacen_movimientos', 'catalogo_dtl_almacen_movimientos.idtbl_catalogo = dtl_almacen_movimientos.tbl_catalogo_idtbl_catalogo', 'left');
			$this->db->join('ctl_unidades_medida AS unidades_medida_dtl_almacen_movimientos', 'unidades_medida_dtl_almacen_movimientos.idctl_unidades_medida = catalogo_dtl_almacen_movimientos.ctl_unidades_medida_idctl_unidades_medida', 'left');
		}
		// Datos para traspasos
		if ('traspaso' == $this->input->post('tipo_reporte') || 'traspaso-almacen' == $this->input->post('tipo_reporte')) {
			$this->db->from('tbl_almacen_movimientos');
			// Datos esenciales
			$this->db->join('tbl_users AS relizo_movimiento', 'relizo_movimiento ON relizo_movimiento.idtbl_users = tbl_almacen_movimientos.tbl_users_idtbl_users', 'left');
			$this->db->join('dtl_almacen_movimientos', 'dtl_almacen_movimientos.tbl_almacen_movimientos_idtbl_almacen_movimientos = tbl_almacen_movimientos.idtbl_almacen_movimientos', 'left');
			$this->db->join('tbl_proyectos', 'tbl_proyectos.idtbl_proyectos = tbl_almacen_movimientos.tbl_proyectos_idtbl_proyectos', 'left');
			$this->db->join('tbl_segmentos_proyecto', 'tbl_segmentos_proyecto.idtbl_segmentos_proyecto = tbl_almacen_movimientos.tbl_segmentos_proyecto_idtbl_segmentos_proyecto', 'left');
			$this->db->join('tbl_catalogo AS catalogo_dtl_almacen_movimientos', 'catalogo_dtl_almacen_movimientos.idtbl_catalogo = dtl_almacen_movimientos.tbl_catalogo_idtbl_catalogo', 'left');
			$this->db->join('ctl_unidades_medida AS unidades_medida_dtl_almacen_movimientos', 'unidades_medida_dtl_almacen_movimientos.idctl_unidades_medida = catalogo_dtl_almacen_movimientos.ctl_unidades_medida_idctl_unidades_medida', 'left');
			$this->db->join('tbl_almacenes AS destino', 'destino.idtbl_almacenes = tbl_almacen_movimientos.tbl_almacenes_idtbl_almacenes_destino', 'left');
		}
		// Datos para devoluciones
		if ($this->input->post('tipo_reporte') == 'devolucion') {
			/*$this->db->from('tbl_almacen_movimientos');
			// Datos esenciales
			$this->db->join('dtl_solicitud_devolucion', 'dtl_solicitud_devolucion.tbl_solicitud_devolucion_idtbl_solicitud_devolucion = tbl_almacen_movimientos.parent');
			$this->db->join('tbl_solicitud_devolucion', 'tbl_solicitud_devolucion.idtbl_solicitud_devolucion = dtl_solicitud_devolucion.tbl_solicitud_devolucion_idtbl_solicitud_devolucion');
			$this->db->join('tbl_catalogo AS catalogo_dtl_solicitud_devolucion', 'catalogo_dtl_solicitud_devolucion.idtbl_catalogo = dtl_solicitud_devolucion.tbl_catalogo_idtbl_catalogo');
			$this->db->join('dtl_almacen', 'dtl_almacen.tbl_catalogo_idtbl_catalogo = catalogo_dtl_solicitud_devolucion.idtbl_catalogo');
			$this->db->join('tbl_users AS relizo_movimiento', 'relizo_movimiento ON relizo_movimiento.idtbl_users = tbl_almacen_movimientos.tbl_users_idtbl_users', 'left');
			$this->db->join('tbl_proyectos AS devolucion_proyectos', 'devolucion_proyectos.idtbl_proyectos = tbl_solicitud_devolucion.tbl_proyectos_idtbl_proyectos', 'left');
			$this->db->join('tbl_segmentos_proyecto AS devolucion_segmentos_proyecto', 'devolucion_segmentos_proyecto.idtbl_segmentos_proyecto = tbl_solicitud_devolucion.tbl_segmentos_proyecto_idtbl_segmentos_proyecto', 'left');
			$this->db->join('tbl_usuarios AS devuelve_material', 'devuelve_material.idtbl_usuarios = tbl_almacen_movimientos.tbl_usuarios_idtbl_usuarios', 'left');
			$this->db->join('ctl_unidades_medida AS unidades_medida_dtl_solicitud_devolucion', 'unidades_medida_dtl_solicitud_devolucion.idctl_unidades_medida = catalogo_dtl_solicitud_devolucion.ctl_unidades_medida_idctl_unidades_medida', 'left');*/

			$this->db->from('tbl_almacen_movimientos');
			$this->db->join('dtl_asignacion AS dtl_solicitud_devolucion', 'dtl_solicitud_devolucion.tbl_almacen_movimientos_idtbl_almacen_movimientos = tbl_almacen_movimientos.idtbl_almacen_movimientos');
			$this->db->join('dtl_almacen', 'dtl_almacen.iddtl_almacen = dtl_solicitud_devolucion.dtl_almacen_iddtl_almacen');
			$this->db->join('tbl_catalogo AS catalogo_dtl_solicitud_devolucion', 'catalogo_dtl_solicitud_devolucion.idtbl_catalogo = dtl_almacen.tbl_catalogo_idtbl_catalogo');
			$this->db->join('tbl_users AS relizo_movimiento', 'relizo_movimiento ON relizo_movimiento.idtbl_users = tbl_almacen_movimientos.tbl_users_idtbl_users', 'left');
			$this->db->join('tbl_proyectos AS devolucion_proyectos', 'devolucion_proyectos.idtbl_proyectos = tbl_almacen_movimientos.tbl_proyectos_idtbl_proyectos', 'left');
			$this->db->join('tbl_segmentos_proyecto AS devolucion_segmentos_proyecto', 'devolucion_segmentos_proyecto.idtbl_segmentos_proyecto = tbl_almacen_movimientos.tbl_segmentos_proyecto_idtbl_segmentos_proyecto', 'left');
			$this->db->join('tbl_usuarios AS devuelve_material', 'devuelve_material.idtbl_usuarios = tbl_almacen_movimientos.tbl_usuarios_idtbl_usuarios', 'left');
			$this->db->join('ctl_unidades_medida AS unidades_medida_dtl_solicitud_devolucion', 'unidades_medida_dtl_solicitud_devolucion.idctl_unidades_medida = catalogo_dtl_solicitud_devolucion.ctl_unidades_medida_idctl_unidades_medida', 'left');
		}
		// Datos para salidas
		if ($this->input->post('tipo_reporte') == 'asignacion') {
			$this->db->from('dtl_asignacion');
			$this->db->join('dtl_almacen', 'dtl_asignacion.dtl_almacen_iddtl_almacen=dtl_almacen.iddtl_almacen', 'left');
			$this->db->join('tbl_catalogo AS catalogo_dtl_solicitud_material', 'catalogo_dtl_solicitud_material.idtbl_catalogo=dtl_almacen.tbl_catalogo_idtbl_catalogo', 'left');
			$this->db->join('ctl_unidades_medida AS unidades_medida_dtl_solicitud_material', 'catalogo_dtl_solicitud_material.ctl_unidades_medida_idctl_unidades_medida=unidades_medida_dtl_solicitud_material.idctl_unidades_medida', 'left');
			$this->db->join('ctl_categorias', 'catalogo_dtl_solicitud_material.ctl_categorias_idctl_categorias=ctl_categorias.idctl_categorias', 'left');
			$this->db->join('tbl_almacen_movimientos', 'tbl_almacen_movimientos.idtbl_almacen_movimientos=dtl_asignacion.tbl_almacen_movimientos_idtbl_almacen_movimientos', 'left');
			$this->db->join('tbl_solicitud_material', 'tbl_solicitud_material.idtbl_solicitud_material = tbl_almacen_movimientos.parent', 'left');
			$this->db->join('dtl_solicitud_material', 'dtl_solicitud_material.tbl_solicitud_material_idtbl_solicitud_material = tbl_almacen_movimientos.parent', 'left');
			$this->db->join('tbl_usuarios', 'tbl_almacen_movimientos.tbl_usuarios_idtbl_usuarios=tbl_usuarios.idtbl_usuarios', 'left');
			$this->db->join('tbl_users', 'tbl_almacen_movimientos.tbl_users_idtbl_users=tbl_users.idtbl_users', 'left');
			$this->db->join('tbl_proyectos AS solicitud_proyectos', 'tbl_almacen_movimientos.tbl_proyectos_idtbl_proyectos=solicitud_proyectos.idtbl_proyectos', 'left');
			$this->db->join('tbl_segmentos_proyecto AS solicitud_segmentos_proyecto', 'solicitud_segmentos_proyecto.idtbl_segmentos_proyecto = tbl_solicitud_material.tbl_segmentos_proyecto_idtbl_segmentos_proyecto', 'left');
			$this->db->join('tbl_usuarios AS recibe_material', 'recibe_material.idtbl_usuarios = tbl_almacen_movimientos.tbl_usuarios_idtbl_usuarios', 'left');
			$this->db->join('tbl_almacenes', 'tbl_almacen_movimientos.tbl_almacenes_idtbl_almacenes=tbl_almacenes.idtbl_almacenes', 'left');
			$this->db->join('tbl_users AS relizo_movimiento', 'relizo_movimiento.idtbl_users = tbl_almacen_movimientos.tbl_users_idtbl_users', 'left');
		}
		if($tipo_reporte != 'Almacen'){
			$this->db->where('tbl_almacen_movimientos.tbl_almacenes_idtbl_almacenes', 2);
			if($this->input->post('tipo_reporte') == 'devolucion'){
				$this->db->group_start();
				$this->db->or_like('tbl_almacen_movimientos.tipo', $this->input->post('tipo_reporte'));
				$this->db->or_where('tbl_almacen_movimientos.tipo', 'justificacion');
				$this->db->or_where('tbl_almacen_movimientos.tipo', 'desasignacion');
				$this->db->group_end();
			}else{
				$this->db->where('tbl_almacen_movimientos.tipo', $this->input->post('tipo_reporte'));
			}
		}else{
			$this->db->like('tbl_almacen_movimientos.tipo', $this->input->post('tipo_reporte'));
		}
		
		if ($tipo_reporte == 'Proyecto') {
			//if ('entrada-almacen' == $this->input->post('tipo_reporte') || 'traspaso-almacen' == $this->input->post('tipo_reporte')) {
			//	$this->db->where('tbl_almacen_movimientos.tbl_proyectos_idtbl_proyectos', $this->input->post('proyecto'));
			//	if (!empty($this->input->post('segmento'))) {
			//		$this->db->where('tbl_solicitud_devolucion.tbl_segmentos_proyecto_idtbl_segmentos_proyecto', $this->input->post('segmento'));
			//	}
			//} 
			if ($this->input->post('tipo_reporte') == 'devolucion') {
				$this->db->where('tbl_solicitud_devolucion.tbl_proyectos_idtbl_proyectos', $this->input->post('proyecto'));
				if (isset($_POST['productoo'])) {
					$this->db->where('dtl_solicitud_devolucion.tbl_catalogo_idtbl_catalogo', $this->input->post('productoo'));
				}
				if ($_POST['fecha_inicioo'] != '' && $_POST['fecha_finall'] != '') {
					$fechaInicio = date($this->input->post('fecha_inicioo') . ' 00:00:00');
					$fechaFinal = date($this->input->post('fecha_finall') . ' 23:59:59');
					$this->db->where("tbl_almacen_movimientos.fecha BETWEEN '$fechaInicio' AND '$fechaFinal'");
				}
				if (!empty($this->input->post('segmento'))) {
					$this->db->where('tbl_solicitud_devolucion.tbl_segmentos_proyecto_idtbl_segmentos_proyecto', $this->input->post('segmento'));
				}
			}
			if ($this->input->post('tipo_reporte') == 'asignacion') {
				$this->db->where('solicitud_proyectos.idtbl_proyectos', $this->input->post('proyecto'));
				if (isset($_POST['productoo'])) {
					$this->db->where('dtl_solicitud_material.tbl_catalogo_idtbl_catalogo', $this->input->post('productoo'));
				}
				if ($_POST['fecha_inicioo'] != '' && $_POST['fecha_finall'] != '') {
					$fechaInicio = date($this->input->post('fecha_inicioo') . ' 00:00:00');
					$fechaFinal = date($this->input->post('fecha_finall') . ' 23:59:59');
					$this->db->where("tbl_almacen_movimientos.fecha BETWEEN '$fechaInicio' AND '$fechaFinal'");
				}
				if (!empty($this->input->post('segmento'))) {
					$this->db->where('tbl_solicitud_material.tbl_segmentos_proyecto_idtbl_segmentos_proyecto', $this->input->post('segmento'));
				}
			}
		} elseif ($tipo_reporte == 'Personal') {
			//if ('entrada-almacen' == $this->input->post('tipo_reporte') || 'traspaso-almacen' == $this->input->post('tipo_reporte')) {
			//$this->db->where('tbl_almacen_movimientos.tbl_users_idtbl_users', $this->input->post('usuario'));
			//} 
			if ($this->input->post('tipo_reporte') == 'asignacion' || $this->input->post('tipo_reporte') == 'devolucion') {
				$this->db->where('tbl_usuarios.tipo', $this->input->post('tipo_personal'));
				if(isset($_POST['estatus_asignacion']) && $_POST['estatus_asignacion'] != ""){
					$this->db->where('dtl_asignacion.estatus_asignacion', $_POST['estatus_asignacion']);
				}
				if (isset($_POST['usuario'])) {
					$this->db->where('tbl_almacen_movimientos.tbl_usuarios_idtbl_usuarios', $this->input->post('usuario'));
				}
				if (isset($_POST['productoo'])) {
					$this->db->where('dtl_solicitud_material.tbl_catalogo_idtbl_catalogo', $this->input->post('productoo'));
				}
				if ($_POST['fecha_inicioo'] != '' && $_POST['fecha_finall'] != '') {
					$fechaInicio = date($this->input->post('fecha_inicioo') . ' 00:00:00');
					$fechaFinal = date($this->input->post('fecha_finall') . ' 23:59:59');
					$this->db->where("tbl_almacen_movimientos.fecha BETWEEN '$fechaInicio' AND '$fechaFinal'");
				}
			}
		} elseif ($tipo_reporte == 'Producto') {
			if ('entrada' == $this->input->post('tipo_reporte') || 'traspaso-almacen' == $this->input->post('tipo_reporte')) {
				$this->db->where('dtl_almacen_movimientos.tbl_catalogo_idtbl_catalogo', $this->input->post('producto'));
				if (isset($_POST['estatus'])) {
					$this->db->where('dtl_almacen.estatus', $this->input->post('estatus'));
				}
			} elseif ($this->input->post('tipo_reporte') == 'devolucion') {
				$this->db->where('catalogo_dtl_solicitud_devolucion.idtbl_catalogo', $this->input->post('producto'));
				if (isset($_POST['estatus'])) {
					$this->db->where('dtl_solicitud_devolucion.estado_entrega', $this->input->post('estatus'));
				}
			} elseif ($this->input->post('tipo_reporte') == 'asignacion') {
				$this->db->where('catalogo_dtl_solicitud_material.idtbl_catalogo', $this->input->post('producto'));
				if (isset($_POST['estatus'])) {
					$this->db->where('dtl_almacen.estatus', $this->input->post('estatus'));
				}
			}
		} elseif ($tipo_reporte == 'Fecha') {
			$fechaInicio = date($this->input->post('fecha_inicio') . ' 00:00:00');
			$fechaFinal = date($this->input->post('fecha_final') . ' 23:59:59');
			$this->db->where("tbl_almacen_movimientos.fecha BETWEEN '$fechaInicio' AND '$fechaFinal'");
		} elseif ($tipo_reporte == 'Almacen') {
			$this->db->where('tbl_almacen_movimientos.tbl_almacenes_idtbl_almacenes', $this->input->post('almacen'));
		}
		return $this->db->get()->result_array();
	}

	public function reporte_proyectoAC() {
		$query = $this->db->query("SELECT tbl_usuarios.nombres, tbl_usuarios.apellido_paterno, tbl_usuarios.apellido_materno, dtl_asignacion.*, dtl_almacen.*, tbl_catalogo.descripcion, tbl_catalogo.marca, tbl_catalogo.modelo, tbl_catalogo.precio, tbl_catalogo.tipo_moneda, ctl_unidades_medida.*, ctl_unidades_medida.*, ctl_categorias.*, tbl_almacen_movimientos.folio, tbl_almacen_movimientos.uid, SUM(dtl_asignacion.cantidad) as total FROM dtl_asignacion LEFT JOIN dtl_almacen ON dtl_asignacion.dtl_almacen_iddtl_almacen=dtl_almacen.iddtl_almacen LEFT JOIN tbl_catalogo ON tbl_catalogo.idtbl_catalogo=dtl_almacen.tbl_catalogo_idtbl_catalogo LEFT JOIN ctl_unidades_medida ON tbl_catalogo.ctl_unidades_medida_idctl_unidades_medida=ctl_unidades_medida.idctl_unidades_medida LEFT JOIN ctl_categorias ON tbl_catalogo.ctl_categorias_idctl_categorias=ctl_categorias.idctl_categorias LEFT JOIN tbl_almacen_movimientos ON tbl_almacen_movimientos.idtbl_almacen_movimientos=dtl_asignacion.tbl_almacen_movimientos_idtbl_almacen_movimientos LEFT JOIN tbl_usuarios ON tbl_usuarios.idtbl_usuarios=dtl_asignacion.tbl_usuarios_idtbl_usuarios WHERE dtl_asignacion.estatus_asignacion='activa' AND tbl_almacen_movimientos.tbl_proyectos_idtbl_proyectos=" . $this->input->post('proyecto') . " GROUP BY dtl_asignacion.iddtl_asignacion");
		return $query->result();
	}

	public function reporte_fechaAC() {
		if ($this->input->post('fechainicial') == $this->input->post('fechafinal')) {
			$query = $this->db->query("SELECT tbl_usuarios.nombres, tbl_usuarios.apellido_paterno, tbl_usuarios.apellido_materno, dtl_asignacion.*, dtl_almacen.*, tbl_catalogo.descripcion, tbl_catalogo.marca, tbl_catalogo.modelo, tbl_catalogo.precio, tbl_catalogo.tipo_moneda, ctl_unidades_medida.*, ctl_unidades_medida.*, ctl_categorias.*, tbl_almacen_movimientos.folio, tbl_almacen_movimientos.uid, SUM(dtl_asignacion.cantidad) as total FROM dtl_asignacion LEFT JOIN dtl_almacen ON dtl_asignacion.dtl_almacen_iddtl_almacen=dtl_almacen.iddtl_almacen LEFT JOIN tbl_catalogo ON tbl_catalogo.idtbl_catalogo=dtl_almacen.tbl_catalogo_idtbl_catalogo LEFT JOIN ctl_unidades_medida ON tbl_catalogo.ctl_unidades_medida_idctl_unidades_medida=ctl_unidades_medida.idctl_unidades_medida LEFT JOIN ctl_categorias ON tbl_catalogo.ctl_categorias_idctl_categorias=ctl_categorias.idctl_categorias LEFT JOIN tbl_almacen_movimientos ON tbl_almacen_movimientos.idtbl_almacen_movimientos=dtl_asignacion.tbl_almacen_movimientos_idtbl_almacen_movimientos LEFT JOIN tbl_usuarios ON tbl_usuarios.idtbl_usuarios=dtl_asignacion.tbl_usuarios_idtbl_usuarios WHERE dtl_asignacion.estatus_asignacion='activa' AND dtl_asignacion.fecha_asignacion LIKE " . "'" . $this->input->post('fechainicio') . "%'" . " GROUP BY dtl_asignacion.iddtl_asignacion");
		}
		$query = $this->db->query("SELECT tbl_usuarios.nombres, tbl_usuarios.apellido_paterno, tbl_usuarios.apellido_materno, dtl_asignacion.*, dtl_almacen.*, tbl_catalogo.descripcion, tbl_catalogo.marca, tbl_catalogo.modelo, tbl_catalogo.precio, tbl_catalogo.tipo_moneda, ctl_unidades_medida.*, ctl_unidades_medida.*, ctl_categorias.*, tbl_almacen_movimientos.folio, tbl_almacen_movimientos.uid, SUM(dtl_asignacion.cantidad) as total FROM dtl_asignacion LEFT JOIN dtl_almacen ON dtl_asignacion.dtl_almacen_iddtl_almacen=dtl_almacen.iddtl_almacen LEFT JOIN tbl_catalogo ON tbl_catalogo.idtbl_catalogo=dtl_almacen.tbl_catalogo_idtbl_catalogo LEFT JOIN ctl_unidades_medida ON tbl_catalogo.ctl_unidades_medida_idctl_unidades_medida=ctl_unidades_medida.idctl_unidades_medida LEFT JOIN ctl_categorias ON tbl_catalogo.ctl_categorias_idctl_categorias=ctl_categorias.idctl_categorias LEFT JOIN tbl_almacen_movimientos ON tbl_almacen_movimientos.idtbl_almacen_movimientos=dtl_asignacion.tbl_almacen_movimientos_idtbl_almacen_movimientos LEFT JOIN tbl_usuarios ON tbl_usuarios.idtbl_usuarios=dtl_asignacion.tbl_usuarios_idtbl_usuarios WHERE dtl_asignacion.estatus_asignacion='activa' AND dtl_asignacion.fecha_asignacion BETWEEN " . "'" . $this->input->post('fechainicio') . "'" . " AND " . "'" . $this->input->post('fechafinal') . "'" . " GROUP BY dtl_asignacion.iddtl_asignacion");
		return $query->result();
	}

	public function reporte_productoAC() {
		$query = $this->db->query("SELECT tbl_usuarios.nombres, tbl_usuarios.apellido_paterno, tbl_usuarios.apellido_materno, dtl_asignacion.*, dtl_almacen.*, tbl_catalogo.descripcion, tbl_catalogo.marca, tbl_catalogo.modelo, tbl_catalogo.precio, tbl_catalogo.tipo_moneda, ctl_unidades_medida.*, ctl_unidades_medida.*, ctl_categorias.*, tbl_almacen_movimientos.folio, tbl_almacen_movimientos.uid, SUM(dtl_asignacion.cantidad) as total FROM dtl_asignacion LEFT JOIN dtl_almacen ON dtl_asignacion.dtl_almacen_iddtl_almacen=dtl_almacen.iddtl_almacen LEFT JOIN tbl_catalogo ON tbl_catalogo.idtbl_catalogo=dtl_almacen.tbl_catalogo_idtbl_catalogo LEFT JOIN ctl_unidades_medida ON tbl_catalogo.ctl_unidades_medida_idctl_unidades_medida=ctl_unidades_medida.idctl_unidades_medida LEFT JOIN ctl_categorias ON tbl_catalogo.ctl_categorias_idctl_categorias=ctl_categorias.idctl_categorias LEFT JOIN tbl_almacen_movimientos ON tbl_almacen_movimientos.idtbl_almacen_movimientos=dtl_asignacion.tbl_almacen_movimientos_idtbl_almacen_movimientos LEFT JOIN tbl_usuarios ON tbl_usuarios.idtbl_usuarios=dtl_asignacion.tbl_usuarios_idtbl_usuarios WHERE tbl_catalogo.idtbl_catalogo=" . $this->input->post('producto') . " GROUP BY dtl_asignacion.iddtl_asignacion");
		return $query->result();
	}

	public function reporte_inventarioAC() {
		$query = $this->db->query("SELECT tbl_usuarios.nombres, tbl_usuarios.apellido_paterno, tbl_usuarios.apellido_materno, dtl_asignacion.*, dtl_almacen.*, tbl_catalogo.descripcion, tbl_catalogo.marca, tbl_catalogo.modelo, tbl_catalogo.precio, tbl_catalogo.tipo_moneda, ctl_unidades_medida.*, ctl_unidades_medida.*, ctl_categorias.*, tbl_almacen_movimientos.folio, tbl_almacen_movimientos.uid, SUM(dtl_asignacion.cantidad) as total FROM dtl_asignacion LEFT JOIN dtl_almacen ON dtl_asignacion.dtl_almacen_iddtl_almacen=dtl_almacen.iddtl_almacen LEFT JOIN tbl_catalogo ON tbl_catalogo.idtbl_catalogo=dtl_almacen.tbl_catalogo_idtbl_catalogo LEFT JOIN ctl_unidades_medida ON tbl_catalogo.ctl_unidades_medida_idctl_unidades_medida=ctl_unidades_medida.idctl_unidades_medida LEFT JOIN ctl_categorias ON tbl_catalogo.ctl_categorias_idctl_categorias=ctl_categorias.idctl_categorias LEFT JOIN tbl_almacen_movimientos ON tbl_almacen_movimientos.idtbl_almacen_movimientos=dtl_asignacion.tbl_almacen_movimientos_idtbl_almacen_movimientos LEFT JOIN tbl_usuarios ON tbl_usuarios.idtbl_usuarios=dtl_asignacion.tbl_usuarios_idtbl_usuarios WHERE tbl_catalogo.idtbl_catalogo=" . $this->input->post('producto') . " GROUP BY dtl_asignacion.iddtl_asignacion");
		return $query->result();
	}

	public function reporte_personalAC() {
		$query = $this->db->query("SELECT tbl_usuarios.nombres, tbl_usuarios.apellido_paterno, tbl_usuarios.apellido_materno, dtl_asignacion.*, dtl_almacen.*, tbl_catalogo.descripcion, tbl_catalogo.marca, tbl_catalogo.modelo, tbl_catalogo.precio, tbl_catalogo.tipo_moneda, ctl_unidades_medida.*, ctl_unidades_medida.*, ctl_categorias.*, tbl_almacen_movimientos.folio, tbl_almacen_movimientos.uid, SUM(dtl_asignacion.cantidad) as total FROM dtl_asignacion LEFT JOIN dtl_almacen ON dtl_asignacion.dtl_almacen_iddtl_almacen=dtl_almacen.iddtl_almacen LEFT JOIN tbl_catalogo ON tbl_catalogo.idtbl_catalogo=dtl_almacen.tbl_catalogo_idtbl_catalogo LEFT JOIN ctl_unidades_medida ON tbl_catalogo.ctl_unidades_medida_idctl_unidades_medida=ctl_unidades_medida.idctl_unidades_medida LEFT JOIN ctl_categorias ON tbl_catalogo.ctl_categorias_idctl_categorias=ctl_categorias.idctl_categorias LEFT JOIN tbl_almacen_movimientos ON tbl_almacen_movimientos.idtbl_almacen_movimientos=dtl_asignacion.tbl_almacen_movimientos_idtbl_almacen_movimientos LEFT JOIN tbl_usuarios ON tbl_usuarios.idtbl_usuarios=dtl_asignacion.tbl_usuarios_idtbl_usuarios WHERE dtl_asignacion.tbl_usuarios_idtbl_usuarios=" . $this->input->post('usuario') . " GROUP BY dtl_asignacion.iddtl_asignacion");
		return $query->result();
	}

	public function getEcosAsignados($id_usuario) {
		//$query = $this->db->query("SELECT * FROM dtl_asignacion inner join dtl_almacen on dtl_almacen.iddtl_almacen = dtl_asignacion.dtl_almacen_iddtl_almacen where dtl_asignacion.tbl_usuarios_idtbl_usuarios = $id_usuario AND dtl_almacen.tbl_almacenes_idtbl_almacenes = 28 AND dtl_asignacion.estatus_asignacion = 'activa'");
		$query = $this->db->query("SELECT dtl_almacen.iddtl_almacen, dtl_almacen.tbl_almacenes_idtbl_almacenes, dtl_almacen.tbl_catalogo_idtbl_catalogo, dtl_almacen.existencias, dtl_almacen.numero_serie, dtl_almacen.numero_interno, dtl_almacen.estatus, dtl_almacen.nota, dtl_almacen.rack, dtl_almacen.nivel, dtl_almacen.placas, dtl_almacen.no_motor, dtl_almacen.tipo_vehiculo, dtl_almacen.estado, dtl_almacen.propietario, tbl_catalogo.*, ctl_categorias.*, ctl_unidades_medida.*, tbl_tramites_vehiculares.tipo_tramite, tbl_tramites_vehiculares.proxima_fecha_tramite, tbl_tramites_vehiculares.poliza, tbl_tramites_vehiculares.seguro FROM dtl_almacen LEFT JOIN tbl_catalogo ON tbl_catalogo.idtbl_catalogo = dtl_almacen.tbl_catalogo_idtbl_catalogo LEFT JOIN ctl_categorias ON ctl_categorias.idctl_categorias = tbl_catalogo.ctl_categorias_idctl_categorias LEFT JOIN ctl_unidades_medida ON ctl_unidades_medida.idctl_unidades_medida = tbl_catalogo.ctl_unidades_medida_idctl_unidades_medida LEFT JOIN tbl_tramites_vehiculares ON tbl_tramites_vehiculares.dtl_almacen_iddtl_almacen = dtl_almacen.iddtl_almacen AND tbl_tramites_vehiculares.tipo_tramite = 'seguro' LEFT JOIN dtl_asignacion ON dtl_asignacion.dtl_almacen_iddtl_almacen = dtl_almacen.iddtl_almacen WHERE dtl_almacen.tbl_almacenes_idtbl_almacenes = 28 AND (tbl_tramites_vehiculares.proxima_fecha_tramite = (SELECT MAX(proxima_fecha_tramite) FROM tbl_tramites_vehiculares t1 WHERE t1.dtl_almacen_iddtl_almacen = dtl_almacen.iddtl_almacen AND t1.tipo_tramite = 'seguro') OR tbl_tramites_vehiculares.proxima_fecha_tramite IS NULL) AND tbl_catalogo.descripcion != 'PERSONAL' AND dtl_asignacion.tbl_usuarios_idtbl_usuarios = $id_usuario AND dtl_asignacion.estatus_asignacion = 'activa'");
		return $query->result();
	}	

	public function getEquiposAsignados($id_usuario) {
		//$query = $this->db->query("SELECT * FROM dtl_asignacion inner join dtl_almacen on dtl_almacen.iddtl_almacen = dtl_asignacion.dtl_almacen_iddtl_almacen where dtl_asignacion.tbl_usuarios_idtbl_usuarios = $id_usuario AND dtl_almacen.tbl_almacenes_idtbl_almacenes = 28 AND dtl_asignacion.estatus_asignacion = 'activa'");
		$query = $this->db->query("SELECT dtl_almacen.iddtl_almacen, dtl_almacen.tbl_almacenes_idtbl_almacenes, dtl_almacen.tbl_catalogo_idtbl_catalogo, dtl_almacen.existencias, dtl_almacen.numero_serie, dtl_almacen.numero_interno, dtl_almacen.estatus, dtl_almacen.nota, dtl_almacen.rack, dtl_almacen.nivel, dtl_almacen.placas, dtl_almacen.no_motor, dtl_almacen.tipo_vehiculo, dtl_almacen.estado, dtl_almacen.propietario, tbl_catalogo.*, ctl_categorias.*, ctl_unidades_medida.*, tbl_catalogo.imagenes, tbl_almacen_movimientos.imagenes_checklist, dtl_asignacion.iddtl_asignacion FROM dtl_almacen LEFT JOIN tbl_catalogo ON tbl_catalogo.idtbl_catalogo = dtl_almacen.tbl_catalogo_idtbl_catalogo LEFT JOIN ctl_categorias ON ctl_categorias.idctl_categorias = tbl_catalogo.ctl_categorias_idctl_categorias LEFT JOIN ctl_unidades_medida ON ctl_unidades_medida.idctl_unidades_medida = tbl_catalogo.ctl_unidades_medida_idctl_unidades_medida LEFT JOIN dtl_asignacion ON dtl_asignacion.dtl_almacen_iddtl_almacen = dtl_almacen.iddtl_almacen LEFT JOIN tbl_almacen_movimientos ON tbl_almacen_movimientos.idtbl_almacen_movimientos = dtl_asignacion.tbl_almacen_movimientos_idtbl_almacen_movimientos WHERE dtl_almacen.tbl_almacenes_idtbl_almacenes = 30 AND (tbl_catalogo.ctl_categorias_idctl_categorias = 16 OR tbl_catalogo.ctl_categorias_idctl_categorias = 10) AND dtl_asignacion.tbl_usuarios_idtbl_usuarios = $id_usuario AND dtl_asignacion.estatus_asignacion = 'activa'");
		return $query->result();
	}

	public function reporte_incidencias() {
		$consulta = '';
		$consulta .= "SELECT tbl_incidencias.*, tbl_usuarios.nombres, tbl_usuarios.apellido_paterno, tbl_usuarios.apellido_materno, dtl_almacen.numero_interno FROM tbl_incidencias INNER JOIN tbl_usuarios ON tbl_usuarios.idtbl_usuarios = tbl_incidencias.tbl_usuarios_idtbl_usuarios INNER JOIN dtl_almacen ON dtl_almacen.iddtl_almacen = tbl_incidencias.dtl_almacen_iddtl_almacen";
		if($this->session->userdata('tipo') == 16) { 
			$consulta .= " WHERE tbl_incidencias.estatus_contabilidad = '" . $_POST['estatus'] . "'";
		} else {
			$consulta .= " WHERE tbl_incidencias.estatus = '" . $_POST['estatus'] . "'";
		}
		if(isset($_POST['tipo_incidencia'])) {
			$consulta .= " AND tbl_incidencias.tipo_incidencia = '" . $_POST['tipo_incidencia'] . "'";
		}
		if(isset($_POST['producto']) && $_POST['producto'] != '') {
			$consulta .= " AND tbl_incidencias.dtl_almacen_iddtl_almacen = " . $_POST['producto']; 
		}
		if(isset($_POST['fecha']) && $_POST['fecha'] != '') {
			$consulta .= " AND tbl_incidencias.fecha_incidencia = '" . $_POST['fecha'] . "'"; 
		}
		$query = $this->db->query($consulta);
		return $query->result_array();
	}

	public function getProductosConsumibles($id_usuario, $id_categoria, $id_almacen) {
		//$query = $this->db->query("SELECT * FROM dtl_asignacion INNER JOIN dtl_almacen ON dtl_almacen.iddtl_almacen = dtl_asignacion.dtl_almacen_iddtl_almacen INNER JOIN tbl_catalogo ON tbl_catalogo.idtbl_catalogo = dtl_almacen.tbl_catalogo_idtbl_catalogo INNER JOIN ctl_unidades_medida ON ctl_unidades_medida.idctl_unidades_medida = tbl_catalogo.ctl_unidades_medida_idctl_unidades_medida WHERE dtl_asignacion.tbl_usuarios_idtbl_usuarios = $id_usuario AND dtl_asignacion.estatus_asignacion = 'activa' AND tbl_catalogo.ctl_categorias_idctl_categorias = $id_categoria AND dtl_almacen.tbl_almacenes_idtbl_almacenes = $id_almacen AND dtl_asignacion.cantidad > 0 GROUP BY dtl_asignacion.iddtl_asignacion");
		//$query = $this->db->query("SELECT tbl_catalogo.descripcion, dtl_asignacion.iddtl_asignacion, dtl_asignacion.cantidad, ctl_unidades_medida.unidad_medida_abr, SUM(dtl_justificacion_material.cantidad_justificada) AS cantidad_justificada, dtl_justificacion_material.observaciones FROM dtl_asignacion INNER JOIN dtl_almacen ON dtl_almacen.iddtl_almacen = dtl_asignacion.dtl_almacen_iddtl_almacen INNER JOIN tbl_catalogo ON tbl_catalogo.idtbl_catalogo = dtl_almacen.tbl_catalogo_idtbl_catalogo INNER JOIN ctl_unidades_medida ON ctl_unidades_medida.idctl_unidades_medida = tbl_catalogo.ctl_unidades_medida_idctl_unidades_medida LEFT JOIN dtl_justificacion_material ON dtl_justificacion_material.dtl_asignacion_iddtl_asignacion = dtl_asignacion.iddtl_asignacion WHERE dtl_asignacion.tbl_usuarios_idtbl_usuarios = $id_usuario AND dtl_asignacion.estatus_asignacion = 'activa' AND tbl_catalogo.ctl_categorias_idctl_categorias = $id_categoria AND dtl_almacen.tbl_almacenes_idtbl_almacenes = $id_almacen AND dtl_asignacion.cantidad > 0 GROUP BY dtl_asignacion.iddtl_asignacion");
		$query = $this->db->query("SELECT tbl_catalogo.descripcion, dtl_asignacion.iddtl_asignacion, dtl_asignacion.cantidad, ctl_unidades_medida.unidad_medida_abr, (SELECT SUM(dtl_justificacion_material.cantidad_justificada) FROM dtl_justificacion_material LEFT JOIN tbl_justificacion_material ON tbl_justificacion_material.idtbl_justificacion_material = dtl_justificacion_material.tbl_justificacion_material_idtbl_justificacion_material WHERE dtl_justificacion_material.dtl_asignacion_iddtl_asignacion = dtl_asignacion.iddtl_asignacion AND tbl_justificacion_material.estatus != 'Supervisor' AND tbl_justificacion_material.estatus != 'Cancelada Supervisor') AS cantidad_justificada, dtl_justificacion_material.observaciones FROM dtl_asignacion INNER JOIN dtl_almacen ON dtl_almacen.iddtl_almacen = dtl_asignacion.dtl_almacen_iddtl_almacen INNER JOIN tbl_catalogo ON tbl_catalogo.idtbl_catalogo = dtl_almacen.tbl_catalogo_idtbl_catalogo INNER JOIN ctl_unidades_medida ON ctl_unidades_medida.idctl_unidades_medida = tbl_catalogo.ctl_unidades_medida_idctl_unidades_medida LEFT JOIN dtl_justificacion_material ON dtl_justificacion_material.dtl_asignacion_iddtl_asignacion = dtl_asignacion.iddtl_asignacion WHERE dtl_asignacion.tbl_usuarios_idtbl_usuarios = $id_usuario AND dtl_asignacion.estatus_asignacion = 'activa' AND tbl_catalogo.ctl_categorias_idctl_categorias = $id_categoria AND dtl_almacen.tbl_almacenes_idtbl_almacenes = $id_almacen AND dtl_asignacion.cantidad > 0 GROUP BY dtl_asignacion.iddtl_asignacion");
		return $query->result(); 
	}

	public function detalleJustificacionMaterial($uid) {
		$query = $this->db->query("SELECT tbl_justificacion_material.*, CONCAT(usuario_empalmador.nombres,' ',usuario_empalmador.apellido_paterno,' ',usuario_empalmador.apellido_materno) AS nombre_empalmador, CONCAT(usuario_auxiliar.nombres,' ',usuario_auxiliar.apellido_paterno,' ',usuario_auxiliar.apellido_materno) AS nombre_auxiliar, usuario_supervisor.nombre AS nombre_supervisor, tbl_segmentos_proyecto.segmento AS segmento_proyecto, tbl_segmentos_proyecto.direccion AS direccion_segmento, tbl_justificacion_material.segmento AS segmento_justificacion, tbl_justificacion_material.uid as uid_justificacion, tbl_justificacion_material.estatus AS estatus_justificacion, tbl_proyectos.nombre_proyecto AS nombre_proyecto, tbl_proyectos.numero_proyecto AS numero_proyecto FROM tbl_justificacion_material INNER JOIN tbl_usuarios AS usuario_empalmador ON usuario_empalmador.idtbl_usuarios = tbl_justificacion_material.tbl_usuarios_idtbl_usuarios_empalmador INNER JOIN tbl_usuarios AS usuario_auxiliar ON usuario_auxiliar.idtbl_usuarios = tbl_justificacion_material.tbl_usuarios_idtbl_usuarios_auxiliar INNER JOIN tbl_users AS usuario_supervisor ON usuario_supervisor.idtbl_users = tbl_justificacion_material.tbl_users_idtbl_users_supervisor INNER JOIN tbl_proyectos ON tbl_proyectos.idtbl_proyectos = tbl_justificacion_material.tbl_proyectos_idtbl_proyectos LEFT JOIN tbl_segmentos_proyecto ON tbl_segmentos_proyecto.idtbl_segmentos_proyecto = tbl_justificacion_material.tbl_segmentos_proyecto_idtbl_segmentos_proyecto WHERE tbl_justificacion_material.uid = '$uid'");
		return $query->result();
	}

	public function getMaterialJustificado($idtbl_justificacion_material,$id_categoria, $id_almacen) {
		//$query = $this->db->query("SELECT tbl_catalogo.descripcion, dtl_asignacion.iddtl_asignacion, dtl_asignacion.cantidad, ctl_unidades_medida.unidad_medida_abr, SUM(dtl_justificacion_material.cantidad_justificada) AS cantidad_justificada, dtl_justificacion_material.observaciones FROM dtl_justificacion_material INNER JOIN dtl_asignacion ON dtl_asignacion.iddtl_asignacion = dtl_justificacion_material.dtl_asignacion_iddtl_asignacion INNER JOIN dtl_almacen ON dtl_almacen.iddtl_almacen = dtl_asignacion.dtl_almacen_iddtl_almacen INNER JOIN tbl_catalogo ON tbl_catalogo.idtbl_catalogo = dtl_almacen.tbl_catalogo_idtbl_catalogo INNER JOIN ctl_unidades_medida ON ctl_unidades_medida.idctl_unidades_medida = tbl_catalogo.ctl_unidades_medida_idctl_unidades_medida WHERE dtl_justificacion_material.tbl_justificacion_material_idtbl_justificacion_material = $idtbl_justificacion_material AND tbl_catalogo.ctl_categorias_idctl_categorias = $id_categoria AND dtl_almacen.tbl_almacenes_idtbl_almacenes = $id_almacen");
		$query = $this->db->query("SELECT tbl_catalogo.descripcion, dtl_asignacion.iddtl_asignacion, dtl_asignacion.cantidad, ctl_unidades_medida.unidad_medida_abr, dtl_justificacion_material.observaciones, (SELECT SUM(t2.cantidad_justificada) FROM dtl_justificacion_material t2 INNER JOIN tbl_justificacion_material ON tbl_justificacion_material.idtbl_justificacion_material = t2.tbl_justificacion_material_idtbl_justificacion_material WHERE t2.dtl_asignacion_iddtl_asignacion =  dtl_justificacion_material.dtl_asignacion_iddtl_asignacion AND tbl_justificacion_material.estatus != 'Supervisor' AND tbl_justificacion_material.estatus != 'Cancelada Supervisor') AS cantidad_justificada_2 ,SUM(dtl_justificacion_material.cantidad_justificada) AS cantidad_justificada, dtl_justificacion_material.observaciones FROM dtl_justificacion_material INNER JOIN dtl_asignacion ON dtl_asignacion.iddtl_asignacion = dtl_justificacion_material.dtl_asignacion_iddtl_asignacion INNER JOIN dtl_almacen ON dtl_almacen.iddtl_almacen = dtl_asignacion.dtl_almacen_iddtl_almacen INNER JOIN tbl_catalogo ON tbl_catalogo.idtbl_catalogo = dtl_almacen.tbl_catalogo_idtbl_catalogo INNER JOIN ctl_unidades_medida ON ctl_unidades_medida.idctl_unidades_medida = tbl_catalogo.ctl_unidades_medida_idctl_unidades_medida WHERE dtl_justificacion_material.tbl_justificacion_material_idtbl_justificacion_material = $idtbl_justificacion_material AND tbl_catalogo.ctl_categorias_idctl_categorias = $id_categoria AND dtl_almacen.tbl_almacenes_idtbl_almacenes = $id_almacen GROUP BY dtl_justificacion_material.dtl_asignacion_iddtl_asignacion");
		return $query->result();
	}

	public function getUidSolicitudDevolucion($folio) {
		$query = $this->db->query("SELECT tbl_solicitud_devolucion.uid FROM tbl_almacen_movimientos INNER JOIN tbl_solicitud_devolucion ON tbl_solicitud_devolucion.idtbl_solicitud_devolucion = tbl_almacen_movimientos.parent WHERE tbl_almacen_movimientos.tipo = 'desasignacion' AND tbl_almacen_movimientos.tbl_almacenes_idtbl_almacenes = 28 AND tbl_almacen_movimientos.folio = $folio");
		$resultado = $query->result_array();
		return $resultado[0]['uid'];
	}

	public function getCatalogoExistencias($limit = false){
		$query_limit = "";
		if($limit){
			$query_limit = "limit " . $this->input->post("offset") . ", 25";
		}
		$query = $this->db->query("SELECT tbl_catalogo.descripcion, dtl_almacen.existencias, tbl_catalogo.minimo, tbl_catalogo.maximo FROM dtl_almacen JOIN tbl_catalogo ON tbl_catalogo.idtbl_catalogo = dtl_almacen.tbl_catalogo_idtbl_catalogo WHERE dtl_almacen.tbl_almacenes_idtbl_almacenes = 1 AND dtl_almacen.estatus = 'almacen' AND tbl_catalogo.ctl_categorias_idctl_categorias = 2 AND tbl_catalogo.tipo = 3 AND tbl_catalogo.estatus_producto = 1 AND tbl_catalogo.descripcion LIKE '%" . $this->input->post("busqueda") . "%' GROUP BY tbl_catalogo.idtbl_catalogo " . $query_limit);
		return $query->result_array();
	}

	public function getCostoAlmacenPorCategoria(){
		$query = $this->db->query("SELECT tbl_catalogo.ctl_categorias_idctl_categorias, SUM(IF(tbl_catalogo.tipo_moneda = 'd', (tbl_catalogo.precio * 20) * dtl_almacen.existencias, tbl_catalogo.precio * dtl_almacen.existencias)) total, ctl_categorias.categoria FROM dtl_almacen JOIN tbl_catalogo ON tbl_catalogo.idtbl_catalogo = dtl_almacen.tbl_catalogo_idtbl_catalogo JOIN ctl_categorias ON tbl_catalogo.ctl_categorias_idctl_categorias = ctl_categorias.idctl_categorias WHERE dtl_almacen.tbl_almacenes_idtbl_almacenes = 1 AND dtl_almacen.existencias != 0 AND dtl_almacen.estatus = '" . $this->input->post("estatus") . "' GROUP BY ctl_categorias.idctl_categorias");
		return $query->result_array();
	}

	//Función para update para saber si ya se subió el archivo de herramienta
	public function archivo_alto_costo()
    {
        $this->db->trans_begin();        
            $data = array(
                'archivo' => 1   
            );
    
		$this->db->where('iddtl_almacen', $this->input->post('idalmacen'));
        //Se hace el update
        $this->db->update('dtl_almacen', $data);
        
        if ($this->db->trans_status() === false) {
            $this->db->trans_rollback();
            return 'Ocurrio un error intente nuevamente';
        } else {
            $this->db->trans_commit();
            return true;
        }
    }

    public function validateSitio($sitio) {
    	$query = $this->db->query("SELECT sitio FROM tbl_almacen_movimientos WHERE sitio = '$sitio'");
    	if($query->num_rows() == 0) {
    		$ret = false;
    	} else {
    		$ret = true; 
    	}
    	return $ret;
    }


	//Insert de nuevo mantenimiento
	public function guardarMantenimiento($parametros)
	{
		$this->db->insert('tbl_mantenimientos', $parametros);
		
		$insert_id = $this->db->insert_id();
		
        if (isset($_POST['producto'])) {
            foreach ($this->input->post('producto') as $key => $value) {
                if ($value != 0) {
                    $insert = array(
                    'tbl_mantenimientos_idtbl_mantenimientos' => $insert_id,
                    'tbl_catalogo_mantenimientos_idtbl_catalogo_mantenimientos' => $value,
                    'cantidad' => $this->input->post('cantidad')[$key]
                );
                    if ($this->input->post('cantidad')[$key] != 0) {
                        //Se registra la entrada
                        $this->db->insert('dtl_mantenimientos', $insert);
                    }
                }
            }
        }

		return $insert_id;
		
	}

	public function getTodosActivosAsignadosAC($idtbl_usuarios)
    {
        $query = $this->db->query("SELECT * FROM dtl_asignacion LEFT JOIN dtl_almacen ON dtl_almacen.iddtl_almacen = dtl_asignacion.dtl_almacen_iddtl_almacen LEFT JOIN tbl_catalogo ON tbl_catalogo.idtbl_catalogo = dtl_almacen.tbl_catalogo_idtbl_catalogo WHERE dtl_asignacion.tbl_usuarios_idtbl_usuarios = " . $idtbl_usuarios . " AND dtl_almacen.tbl_almacenes_idtbl_almacenes = " . ID_ALMACEN_ALTO_COSTO . " GROUP BY dtl_almacen.iddtl_almacen");
        return $query->result();
    }

	//Trae todos los mantenimientos
	public function mostrarMantenimientos($buscar = '', $inicio = false, $cantidadRegistro = false)
    {        
        $user = $this->session->userdata('id');
        $limit = '';
        if ($inicio !== false && $cantidadRegistro !== false) {
            $limit = 'LIMIT ' . $inicio . "," . $cantidadRegistro;
        }
		if($this->session->userdata('tipo') == 18){
			$usuario = $this->session->userdata('id_usuario');
			$query = $this->db->query("SELECT tm.*, dm.*, tus.nombre AS autor, tfo.*, tcc.razon_social FROM tbl_mantenimientos tm LEFT JOIN dtl_mantenimientos dm ON dm.tbl_mantenimientos_idtbl_mantenimientos = tm.idtbl_mantenimientos LEFT JOIN tbl_solicitud_material tsm ON tsm.tbl_mantenimientos_idtbl_mantenimientos = tm.idtbl_mantenimientos LEFT JOIN tbl_users tus ON tus.idtbl_users = tm.tbl_users_idtbl_users_supervisor LEFT JOIN tbl_clientes tcc ON tcc.idtbl_clientes = tm.tbl_clientes_idtbl_clientes LEFT JOIN tbl_tramo_fibra_optica tfo ON tfo.idtbl_tramo_fibra_optica = tm.tbl_tramo_fibra_optica_idtbl_tramo_fibra_optica WHERE tsm.tbl_usuarios_idtbl_usuarios = $usuario AND tm.zte != 1 AND (tm.incidente LIKE '%$buscar%' OR tm.tipo_actividad LIKE '%$buscar%' OR tm.fecha LIKE '%$buscar%') GROUP BY tm.idtbl_mantenimientos ORDER BY tm.idtbl_mantenimientos DESC " . $limit);
        }elseif($this->session->userdata('tipo') == 17 || $this->session->userdata('tipo') == 19){
            $query = $this->db->query("SELECT tm.*, dm.*, tus.nombre AS autor, tfo.*, tcc.razon_social FROM tbl_mantenimientos tm LEFT JOIN dtl_mantenimientos dm ON dm.tbl_mantenimientos_idtbl_mantenimientos = tm.idtbl_mantenimientos LEFT JOIN tbl_users tus ON tus.idtbl_users = tm.tbl_users_idtbl_users_supervisor LEFT JOIN tbl_tramo_fibra_optica tfo ON tfo.idtbl_tramo_fibra_optica = tm.tbl_tramo_fibra_optica_idtbl_tramo_fibra_optica LEFT JOIN tbl_clientes tcc ON tcc.idtbl_clientes = tm.tbl_clientes_idtbl_clientes LEFT JOIN tbl_solicitud_material ON tbl_solicitud_material.tbl_mantenimientos_idtbl_mantenimientos = tm.idtbl_mantenimientos WHERE tm.zte != 1 AND (tm.incidente LIKE '%$buscar%' OR tm.tipo_actividad LIKE '%$buscar%' OR tm.fecha LIKE '%$buscar%') GROUP BY tm.idtbl_mantenimientos ORDER BY tm.idtbl_mantenimientos DESC " . $limit);
        }else{
			$usuario = $this->session->userdata('id_usuario');
			$query = $this->db->query("SELECT tm.*, dm.*, tus.nombre AS autor, tfo.*, tcc.razon_social FROM tbl_mantenimientos tm LEFT JOIN dtl_mantenimientos dm ON dm.tbl_mantenimientos_idtbl_mantenimientos = tm.idtbl_mantenimientos LEFT JOIN tbl_solicitud_material tsm ON tsm.tbl_mantenimientos_idtbl_mantenimientos = tm.idtbl_mantenimientos LEFT JOIN tbl_users tus ON tus.idtbl_users = tm.tbl_users_idtbl_users_supervisor LEFT JOIN tbl_clientes tcc ON tcc.idtbl_clientes = tm.tbl_clientes_idtbl_clientes LEFT JOIN tbl_tramo_fibra_optica tfo ON tfo.idtbl_tramo_fibra_optica = tm.tbl_tramo_fibra_optica_idtbl_tramo_fibra_optica WHERE tsm.tbl_usuarios_idtbl_usuarios_supervisor = $usuario AND tm.zte != 1 AND (tm.estatus = 'SV' || tm.estatus = 'SP') AND (tm.incidente LIKE '%$buscar%' OR tm.tipo_actividad LIKE '%$buscar%' OR tm.fecha LIKE '%$buscar%') GROUP BY tm.idtbl_mantenimientos ORDER BY tm.idtbl_mantenimientos DESC " . $limit);
		}
        return $query->result();
    }

	//Trae todos los generadores zte
	public function mostrarGeneradores($buscar = '', $inicio = false, $cantidadRegistro = false)
    {
		$segmento = $this->input->post('segmento');
        $user = $this->session->userdata('id');
        $limit = '';
        if ($inicio !== false && $cantidadRegistro !== false) {
            $limit = 'LIMIT ' . $inicio . "," . $cantidadRegistro;
        }
		if($this->session->userdata('tipo') == 18){
			$query = $this->db->query("SELECT tm.*, dm.*, tus.nombre AS autor, tfo.*, tcc.razon_social, tcm.descripcion AS descripcion_servicio, ttr.tipo_red, SUM(tjg.kilomentraje) AS kilometraje FROM tbl_mantenimientos tm LEFT JOIN dtl_mantenimientos dm ON dm.tbl_mantenimientos_idtbl_mantenimientos = tm.idtbl_mantenimientos LEFT JOIN tbl_tipo_red ttr ON ttr.idtbl_tipo_red = tm.tbl_tipo_red_idtbl_tipo_red LEFT JOIN tbl_solicitud_material tsm ON tsm.tbl_mantenimientos_idtbl_mantenimientos = tm.idtbl_mantenimientos LEFT JOIN tbl_users tus ON tus.idtbl_users = tm.tbl_users_idtbl_users_supervisor LEFT JOIN tbl_clientes tcc ON tcc.idtbl_clientes = tm.tbl_clientes_idtbl_clientes LEFT JOIN tbl_tramo_fibra_optica tfo ON tfo.idtbl_tramo_fibra_optica = tm.tbl_tramo_fibra_optica_idtbl_tramo_fibra_optica LEFT JOIN tbl_justificacion_generador tjg ON tjg.tbl_mantenimientos_idtbl_mantenimientos = tm.idtbl_mantenimientos WHERE tsm.tbl_usuarios_idtbl_usuarios = $user AND tm.tbl_segmentos_proyecto_idtbl_segmentos_proyecto = $segmento AND (ttr.tipo_red LIKE '%$buscar%' OR tfo.nombre_oracle LIKE '%$buscar%' OR tcm.descripcion LIKE '%$buscar%') GROUP BY tm.idtbl_mantenimientos ORDER BY tm.idtbl_mantenimientos DESC " . $limit);
        }elseif($this->session->userdata('tipo') == 17 || $this->session->userdata('tipo') == 19 || $this->session->userdata('tipo') == 21){
            $query = $this->db->query("SELECT tm.*, dm.*, tfo.*, tcm.descripcion AS descripcion_servicio, cum.unidad_medida_abr, ttr.tipo_red, SUM(tjg.kilometraje) AS kilometraje, tjg.fecha_justificacion, tus.nombre, tu.nombres, tu.apellido_paterno, tu.apellido_materno, (SELECT DATE_FORMAT(MAX(fecha_justificacion),'%Y-%m-%d') FROM tbl_justificacion_generador LEFT JOIN tbl_mantenimientos ON tbl_mantenimientos.idtbl_mantenimientos = tbl_justificacion_generador.tbl_mantenimientos_idtbl_mantenimientos WHERE tbl_mantenimientos.tbl_segmentos_proyecto_idtbl_segmentos_proyecto = $segmento AND tbl_mantenimientos.idtbl_mantenimientos = tm.idtbl_mantenimientos) AS ultima_fecha FROM tbl_mantenimientos tm LEFT JOIN dtl_mantenimientos dm ON dm.tbl_mantenimientos_idtbl_mantenimientos = tm.idtbl_mantenimientos LEFT JOIN tbl_tipo_red ttr ON ttr.idtbl_tipo_red = tm.tbl_tipo_red_idtbl_tipo_red LEFT JOIN tbl_catalogo_mantenimientos tcm ON tcm.idtbl_catalogo_mantenimientos = dm.tbl_catalogo_mantenimientos_idtbl_catalogo_mantenimientos LEFT JOIN tbl_users tus ON tus.idtbl_users = tm.tbl_users_idtbl_users_supervisor LEFT JOIN tbl_usuarios tu ON tu.idtbl_usuarios = tm.tbl_usuarios_idtbl_usuarios LEFT JOIN ctl_unidades_medida cum ON cum.idctl_unidades_medida = tcm.ctl_unidades_medida_idctl_unidades_medida LEFT JOIN tbl_tramo_fibra_optica tfo ON tfo.idtbl_tramo_fibra_optica = tm.tbl_tramo_fibra_optica_idtbl_tramo_fibra_optica LEFT JOIN tbl_justificacion_generador tjg ON tjg.tbl_mantenimientos_idtbl_mantenimientos = tm.idtbl_mantenimientos WHERE tm.zte = 1 AND tm.tbl_segmentos_proyecto_idtbl_segmentos_proyecto = $segmento AND (ttr.tipo_red LIKE '%$buscar%' OR tfo.nombre_oracle LIKE '%$buscar%' OR tus.nombre LIKE '%$buscar%' OR tcm.descripcion LIKE '%$buscar%') GROUP BY tm.idtbl_mantenimientos ORDER BY tm.idtbl_mantenimientos ASC " . $limit);
        }else{
			$usuario = $this->session->userdata('id_usuario');
			$query = $this->db->query("SELECT tm.*, dm.*, tus.nombre AS autor, tfo.*, tcc.razon_social, tcm.descripcion AS descripcion_servicio, cum.unidad_medida_abr, ttr.tipo_red, SUM(tjg.kilometraje) AS kilometraje, tus.nombre, tu.nombres, tu.apellido_paterno, tu.apellido_materno, (SELECT DATE_FORMAT(MAX(fecha_justificacion),'%Y-%m-%d') FROM tbl_justificacion_generador LEFT JOIN tbl_mantenimientos ON tbl_mantenimientos.idtbl_mantenimientos = tbl_justificacion_generador.tbl_mantenimientos_idtbl_mantenimientos WHERE tbl_mantenimientos.tbl_segmentos_proyecto_idtbl_segmentos_proyecto = $segmento AND tbl_mantenimientos.idtbl_mantenimientos = tm.idtbl_mantenimientos) AS ultima_fecha FROM tbl_mantenimientos tm LEFT JOIN dtl_mantenimientos dm ON dm.tbl_mantenimientos_idtbl_mantenimientos = tm.idtbl_mantenimientos LEFT JOIN tbl_tipo_red ttr ON ttr.idtbl_tipo_red = tm.tbl_tipo_red_idtbl_tipo_red LEFT JOIN tbl_catalogo_mantenimientos tcm ON tcm.idtbl_catalogo_mantenimientos = dm.tbl_catalogo_mantenimientos_idtbl_catalogo_mantenimientos LEFT JOIN tbl_users tus ON tus.idtbl_users = tm.tbl_users_idtbl_users_supervisor LEFT JOIN tbl_usuarios tu ON tu.idtbl_usuarios = tm.tbl_usuarios_idtbl_usuarios LEFT JOIN ctl_unidades_medida cum ON cum.idctl_unidades_medida = tcm.ctl_unidades_medida_idctl_unidades_medida LEFT JOIN tbl_tramo_fibra_optica tfo ON tfo.idtbl_tramo_fibra_optica = tm.tbl_tramo_fibra_optica_idtbl_tramo_fibra_optica LEFT JOIN tbl_clientes tcc ON tcc.idtbl_clientes = tm.tbl_clientes_idtbl_clientes LEFT JOIN tbl_solicitud_material ON tbl_solicitud_material.tbl_mantenimientos_idtbl_mantenimientos = tm.idtbl_mantenimientos LEFT JOIN tbl_justificacion_generador tjg ON tjg.tbl_mantenimientos_idtbl_mantenimientos = tm.idtbl_mantenimientos WHERE tm.zte = 1 AND tm.tbl_segmentos_proyecto_idtbl_segmentos_proyecto = $segmento AND tbl_solicitud_material.tbl_usuarios_idtbl_usuarios_supervisor = $usuario AND (tm.estatus = 'SV' || tm.estatus = 'SP') AND (ttr.tipo_red LIKE '%$buscar%' OR tfo.nombre_oracle LIKE '%$buscar%' OR tus.nombre LIKE '%$buscar%' OR tcm.descripcion LIKE '%$buscar%') GROUP BY tm.idtbl_mantenimientos ORDER BY tm.idtbl_mantenimientos ASC " . $limit);			
		}
        return $query->result();
    }

	//Trae todos los generadores zte
	public function mostrarGeneradoresZte($buscar = '', $inicio = false, $cantidadRegistro = false)
    {
        $user = $this->session->userdata('id');
        $limit = '';
        if ($inicio !== false && $cantidadRegistro !== false) {
            $limit = 'LIMIT ' . $inicio . "," . $cantidadRegistro;
        }
		if($this->session->userdata('tipo') == 18){
			$query = $this->db->query("SELECT tm.*, dm.*, tus.nombre AS autor, tfo.*, tcc.razon_social, tcm.descripcion AS descripcion_servicio, ttr.tipo_red, SUM(tjg.kilomentraje) AS kilometraje FROM tbl_mantenimientos tm LEFT JOIN dtl_mantenimientos dm ON dm.tbl_mantenimientos_idtbl_mantenimientos = tm.idtbl_mantenimientos LEFT JOIN tbl_tipo_red ttr ON ttr.idtbl_tipo_red = tm.tbl_tipo_red_idtbl_tipo_red LEFT JOIN tbl_solicitud_material tsm ON tsm.tbl_mantenimientos_idtbl_mantenimientos = tm.idtbl_mantenimientos LEFT JOIN tbl_users tus ON tus.idtbl_users = tm.tbl_users_idtbl_users_supervisor LEFT JOIN tbl_clientes tcc ON tcc.idtbl_clientes = tm.tbl_clientes_idtbl_clientes LEFT JOIN tbl_tramo_fibra_optica tfo ON tfo.idtbl_tramo_fibra_optica = tm.tbl_tramo_fibra_optica_idtbl_tramo_fibra_optica LEFT JOIN tbl_justificacion_generador tjg ON tjg.tbl_mantenimientos_idtbl_mantenimientos = tm.idtbl_mantenimientos WHERE tsm.tbl_usuarios_idtbl_usuarios = $user AND tm.tbl_segmentos_proyecto_idtbl_segmentos_proyecto = 316 AND (ttr.tipo_red LIKE '%$buscar%' OR tfo.nombre_oracle LIKE '%$buscar%' OR tcm.descripcion LIKE '%$buscar%') GROUP BY tm.idtbl_mantenimientos ORDER BY tm.idtbl_mantenimientos DESC " . $limit);
        }elseif($this->session->userdata('tipo') == 17 || $this->session->userdata('tipo') == 19 || $this->session->userdata('tipo') == 21){
            $query = $this->db->query("SELECT tm.*, dm.*, tfo.*, tcm.descripcion AS descripcion_servicio, cum.unidad_medida_abr, ttr.tipo_red, SUM(tjg.kilometraje) AS kilometraje, tjg.fecha_justificacion, tus.nombre, tu.nombres, tu.apellido_paterno, tu.apellido_materno, (SELECT DATE_FORMAT(MAX(fecha_justificacion),'%Y-%m-%d') FROM tbl_justificacion_generador LEFT JOIN tbl_mantenimientos ON tbl_mantenimientos.idtbl_mantenimientos = tbl_justificacion_generador.tbl_mantenimientos_idtbl_mantenimientos WHERE tbl_mantenimientos.tbl_segmentos_proyecto_idtbl_segmentos_proyecto = 322 AND tbl_mantenimientos.idtbl_mantenimientos = tm.idtbl_mantenimientos) AS ultima_fecha FROM tbl_mantenimientos tm LEFT JOIN dtl_mantenimientos dm ON dm.tbl_mantenimientos_idtbl_mantenimientos = tm.idtbl_mantenimientos LEFT JOIN tbl_tipo_red ttr ON ttr.idtbl_tipo_red = tm.tbl_tipo_red_idtbl_tipo_red LEFT JOIN tbl_catalogo_mantenimientos tcm ON tcm.idtbl_catalogo_mantenimientos = dm.tbl_catalogo_mantenimientos_idtbl_catalogo_mantenimientos LEFT JOIN tbl_users tus ON tus.idtbl_users = tm.tbl_users_idtbl_users_supervisor LEFT JOIN tbl_usuarios tu ON tu.idtbl_usuarios = tm.tbl_usuarios_idtbl_usuarios LEFT JOIN ctl_unidades_medida cum ON cum.idctl_unidades_medida = tcm.ctl_unidades_medida_idctl_unidades_medida LEFT JOIN tbl_tramo_fibra_optica tfo ON tfo.idtbl_tramo_fibra_optica = tm.tbl_tramo_fibra_optica_idtbl_tramo_fibra_optica LEFT JOIN tbl_justificacion_generador tjg ON tjg.tbl_mantenimientos_idtbl_mantenimientos = tm.idtbl_mantenimientos WHERE tm.zte = 1 AND tm.tbl_segmentos_proyecto_idtbl_segmentos_proyecto = 316 AND (ttr.tipo_red LIKE '%$buscar%' OR tfo.nombre_oracle LIKE '%$buscar%' OR tus.nombre LIKE '%$buscar%' OR tcm.descripcion LIKE '%$buscar%') GROUP BY tm.idtbl_mantenimientos ORDER BY tm.idtbl_mantenimientos ASC " . $limit);
        }else{
			$usuario = $this->session->userdata('id_usuario');
			$query = $this->db->query("SELECT tm.*, dm.*, tus.nombre AS autor, tfo.*, tcc.razon_social, tcm.descripcion AS descripcion_servicio, cum.unidad_medida_abr, ttr.tipo_red, SUM(tjg.kilometraje) AS kilometraje, tus.nombre, tu.nombres, tu.apellido_paterno, tu.apellido_materno, (SELECT DATE_FORMAT(MAX(fecha_justificacion),'%Y-%m-%d') FROM tbl_justificacion_generador LEFT JOIN tbl_mantenimientos ON tbl_mantenimientos.idtbl_mantenimientos = tbl_justificacion_generador.tbl_mantenimientos_idtbl_mantenimientos WHERE tbl_mantenimientos.tbl_segmentos_proyecto_idtbl_segmentos_proyecto = 322 AND tbl_mantenimientos.idtbl_mantenimientos = tm.idtbl_mantenimientos) AS ultima_fecha FROM tbl_mantenimientos tm LEFT JOIN dtl_mantenimientos dm ON dm.tbl_mantenimientos_idtbl_mantenimientos = tm.idtbl_mantenimientos LEFT JOIN tbl_tipo_red ttr ON ttr.idtbl_tipo_red = tm.tbl_tipo_red_idtbl_tipo_red LEFT JOIN tbl_catalogo_mantenimientos tcm ON tcm.idtbl_catalogo_mantenimientos = dm.tbl_catalogo_mantenimientos_idtbl_catalogo_mantenimientos LEFT JOIN tbl_users tus ON tus.idtbl_users = tm.tbl_users_idtbl_users_supervisor LEFT JOIN tbl_usuarios tu ON tu.idtbl_usuarios = tm.tbl_usuarios_idtbl_usuarios LEFT JOIN ctl_unidades_medida cum ON cum.idctl_unidades_medida = tcm.ctl_unidades_medida_idctl_unidades_medida LEFT JOIN tbl_tramo_fibra_optica tfo ON tfo.idtbl_tramo_fibra_optica = tm.tbl_tramo_fibra_optica_idtbl_tramo_fibra_optica LEFT JOIN tbl_clientes tcc ON tcc.idtbl_clientes = tm.tbl_clientes_idtbl_clientes LEFT JOIN tbl_solicitud_material ON tbl_solicitud_material.tbl_mantenimientos_idtbl_mantenimientos = tm.idtbl_mantenimientos LEFT JOIN tbl_justificacion_generador tjg ON tjg.tbl_mantenimientos_idtbl_mantenimientos = tm.idtbl_mantenimientos WHERE tm.zte = 1 AND tm.tbl_segmentos_proyecto_idtbl_segmentos_proyecto = 316 AND tbl_solicitud_material.tbl_usuarios_idtbl_usuarios_supervisor = $usuario AND (tm.estatus = 'SV' || tm.estatus = 'SP') AND (ttr.tipo_red LIKE '%$buscar%' OR tfo.nombre_oracle LIKE '%$buscar%' OR tus.nombre LIKE '%$buscar%' OR tcm.descripcion LIKE '%$buscar%') GROUP BY tm.idtbl_mantenimientos ORDER BY tm.idtbl_mantenimientos ASC " . $limit);			
		}
        return $query->result();
    }

	//Trae todos los generadores zte de natura
	public function mostrarGeneradoresZteNatura($buscar = '', $inicio = false, $cantidadRegistro = false)
    {
        $user = $this->session->userdata('id');
        $limit = '';
        if ($inicio !== false && $cantidadRegistro !== false) {
            $limit = 'LIMIT ' . $inicio . "," . $cantidadRegistro;
        }
		if($this->session->userdata('tipo') == 18){
			$usuario = $this->session->userdata('id_usuario');
			$query = $this->db->query("SELECT tm.*, dm.*, tus.nombre AS autor, tfo.*, tcc.razon_social, ttr.tipo_red FROM tbl_mantenimientos tm LEFT JOIN dtl_mantenimientos dm ON dm.tbl_mantenimientos_idtbl_mantenimientos = tm.idtbl_mantenimientos LEFT JOIN tbl_tipo_red ttr ON ttr.idtbl_tipo_red = tm.tbl_tipo_red_idtbl_tipo_red LEFT JOIN tbl_solicitud_material tsm ON tsm.tbl_mantenimientos_idtbl_mantenimientos = tm.idtbl_mantenimientos LEFT JOIN tbl_users tus ON tus.idtbl_users = tm.tbl_users_idtbl_users_supervisor LEFT JOIN tbl_clientes tcc ON tcc.idtbl_clientes = tm.tbl_clientes_idtbl_clientes LEFT JOIN tbl_tramo_fibra_optica tfo ON tfo.idtbl_tramo_fibra_optica = tm.tbl_tramo_fibra_optica_idtbl_tramo_fibra_optica WHERE tsm.tbl_usuarios_idtbl_usuarios = $usuario AND tm.tbl_segmentos_proyecto_idtbl_segmentos_proyecto = 315 AND (ttr.tipo_red LIKE '%$buscar%' OR tfo.nombre_oracle LIKE '%$buscar%' OR tcm.descripcion LIKE '%$buscar%') GROUP BY tm.idtbl_mantenimientos ORDER BY tm.idtbl_mantenimientos DESC " . $limit);
        }elseif($this->session->userdata('tipo') == 17 || $this->session->userdata('tipo') == 19 || $this->session->userdata('tipo') == 21){
            $query = $this->db->query("SELECT tm.*, dm.*, tfo.*, tcm.descripcion AS descripcion_servicio, cum.unidad_medida_abr, ttr.tipo_red, SUM(tjg.kilometraje) AS kilometraje, tjg.fecha_justificacion, tus.nombre, tu.nombres, tu.apellido_paterno, tu.apellido_materno, (SELECT DATE_FORMAT(MAX(fecha_justificacion),'%Y-%m-%d') FROM tbl_justificacion_generador LEFT JOIN tbl_mantenimientos ON tbl_mantenimientos.idtbl_mantenimientos = tbl_justificacion_generador.tbl_mantenimientos_idtbl_mantenimientos WHERE tbl_mantenimientos.tbl_segmentos_proyecto_idtbl_segmentos_proyecto = 322 AND tbl_mantenimientos.idtbl_mantenimientos = tm.idtbl_mantenimientos) AS ultima_fecha FROM tbl_mantenimientos tm LEFT JOIN dtl_mantenimientos dm ON dm.tbl_mantenimientos_idtbl_mantenimientos = tm.idtbl_mantenimientos LEFT JOIN tbl_tipo_red ttr ON ttr.idtbl_tipo_red = tm.tbl_tipo_red_idtbl_tipo_red LEFT JOIN tbl_catalogo_mantenimientos tcm ON tcm.idtbl_catalogo_mantenimientos = dm.tbl_catalogo_mantenimientos_idtbl_catalogo_mantenimientos LEFT JOIN tbl_users tus ON tus.idtbl_users = tm.tbl_users_idtbl_users_supervisor LEFT JOIN tbl_usuarios tu ON tu.idtbl_usuarios = tm.tbl_usuarios_idtbl_usuarios LEFT JOIN ctl_unidades_medida cum ON cum.idctl_unidades_medida = tcm.ctl_unidades_medida_idctl_unidades_medida LEFT JOIN tbl_tramo_fibra_optica tfo ON tfo.idtbl_tramo_fibra_optica = tm.tbl_tramo_fibra_optica_idtbl_tramo_fibra_optica LEFT JOIN tbl_justificacion_generador tjg ON tjg.tbl_mantenimientos_idtbl_mantenimientos = tm.idtbl_mantenimientos WHERE tm.zte = 1 AND tm.tbl_segmentos_proyecto_idtbl_segmentos_proyecto = 315 AND (ttr.tipo_red LIKE '%$buscar%' OR tfo.nombre_oracle LIKE '%$buscar%' OR tus.nombre LIKE '%$buscar%' OR tcm.descripcion LIKE '%$buscar%') GROUP BY tm.idtbl_mantenimientos ORDER BY tm.idtbl_mantenimientos ASC " . $limit);
        }else{
			$usuario = $this->session->userdata('id_usuario');
			$query = $this->db->query("SELECT tm.*, dm.*, tus.nombre AS autor, tfo.*, tcc.razon_social, tcm.descripcion AS descripcion_servicio, cum.unidad_medida_abr, ttr.tipo_red, tus.nombre, tu.nombres, tu.apellido_paterno, tu.apellido_materno, (SELECT DATE_FORMAT(MAX(fecha_justificacion),'%Y-%m-%d') FROM tbl_justificacion_generador LEFT JOIN tbl_mantenimientos ON tbl_mantenimientos.idtbl_mantenimientos = tbl_justificacion_generador.tbl_mantenimientos_idtbl_mantenimientos WHERE tbl_mantenimientos.tbl_segmentos_proyecto_idtbl_segmentos_proyecto = 322 AND tbl_mantenimientos.idtbl_mantenimientos = tm.idtbl_mantenimientos) AS ultima_fecha FROM tbl_mantenimientos tm LEFT JOIN dtl_mantenimientos dm ON dm.tbl_mantenimientos_idtbl_mantenimientos = tm.idtbl_mantenimientos LEFT JOIN tbl_tipo_red ttr ON ttr.idtbl_tipo_red = tm.tbl_tipo_red_idtbl_tipo_red LEFT JOIN tbl_catalogo_mantenimientos tcm ON tcm.idtbl_catalogo_mantenimientos = dm.tbl_catalogo_mantenimientos_idtbl_catalogo_mantenimientos LEFT JOIN tbl_users tus ON tus.idtbl_users = tm.tbl_users_idtbl_users_supervisor LEFT JOIN tbl_usuarios tu ON tu.idtbl_usuarios = tm.tbl_usuarios_idtbl_usuarios LEFT JOIN ctl_unidades_medida cum ON cum.idctl_unidades_medida = tcm.ctl_unidades_medida_idctl_unidades_medida LEFT JOIN tbl_tramo_fibra_optica tfo ON tfo.idtbl_tramo_fibra_optica = tm.tbl_tramo_fibra_optica_idtbl_tramo_fibra_optica LEFT JOIN tbl_clientes tcc ON tcc.idtbl_clientes = tm.tbl_clientes_idtbl_clientes LEFT JOIN tbl_solicitud_material ON tbl_solicitud_material.tbl_mantenimientos_idtbl_mantenimientos = tm.idtbl_mantenimientos WHERE tm.zte = 1 AND tm.tbl_segmentos_proyecto_idtbl_segmentos_proyecto = 315 AND tbl_solicitud_material.tbl_usuarios_idtbl_usuarios_supervisor = $usuario AND (tm.estatus = 'SV' || tm.estatus = 'SP') AND (ttr.tipo_red LIKE '%$buscar%' OR tfo.nombre_oracle LIKE '%$buscar%' OR tus.nombre LIKE '%$buscar%' OR tcm.descripcion LIKE '%$buscar%') GROUP BY tm.idtbl_mantenimientos ORDER BY tm.idtbl_mantenimientos ASC " . $limit);			
		}
        return $query->result();
    }

	//Trae todos los generadores zte de colinas
	public function mostrarGeneradoresZteColinas($buscar = '', $inicio = false, $cantidadRegistro = false)
    {
        $user = $this->session->userdata('id');
        $limit = '';
        if ($inicio !== false && $cantidadRegistro !== false) {
            $limit = 'LIMIT ' . $inicio . "," . $cantidadRegistro;
        }
		if($this->session->userdata('tipo') == 18){
			$usuario = $this->session->userdata('id_usuario');
			$query = $this->db->query("SELECT tm.*, dm.*, tus.nombre AS autor, tfo.*, tcc.razon_social, ttr.tipo_red FROM tbl_mantenimientos tm LEFT JOIN dtl_mantenimientos dm ON dm.tbl_mantenimientos_idtbl_mantenimientos = tm.idtbl_mantenimientos LEFT JOIN tbl_tipo_red ttr ON ttr.idtbl_tipo_red = tm.tbl_tipo_red_idtbl_tipo_red LEFT JOIN tbl_solicitud_material tsm ON tsm.tbl_mantenimientos_idtbl_mantenimientos = tm.idtbl_mantenimientos LEFT JOIN tbl_users tus ON tus.idtbl_users = tm.tbl_users_idtbl_users_supervisor LEFT JOIN tbl_clientes tcc ON tcc.idtbl_clientes = tm.tbl_clientes_idtbl_clientes LEFT JOIN tbl_tramo_fibra_optica tfo ON tfo.idtbl_tramo_fibra_optica = tm.tbl_tramo_fibra_optica_idtbl_tramo_fibra_optica WHERE tsm.tbl_usuarios_idtbl_usuarios = $usuario AND tm.tbl_segmentos_proyecto_idtbl_segmentos_proyecto = 317 AND (ttr.tipo_red LIKE '%$buscar%' OR tfo.nombre_oracle LIKE '%$buscar%' OR tcm.descripcion LIKE '%$buscar%') GROUP BY tm.idtbl_mantenimientos ORDER BY tm.idtbl_mantenimientos DESC " . $limit);
        }elseif($this->session->userdata('tipo') == 17 || $this->session->userdata('tipo') == 19 || $this->session->userdata('tipo') == 21){
            $query = $this->db->query("SELECT tm.*, dm.*, tfo.*, tcm.descripcion AS descripcion_servicio, cum.unidad_medida_abr, ttr.tipo_red, SUM(tjg.kilometraje) AS kilometraje, tjg.fecha_justificacion, tus.nombre, tu.nombres, tu.apellido_paterno, tu.apellido_materno, (SELECT DATE_FORMAT(MAX(fecha_justificacion),'%Y-%m-%d') FROM tbl_justificacion_generador LEFT JOIN tbl_mantenimientos ON tbl_mantenimientos.idtbl_mantenimientos = tbl_justificacion_generador.tbl_mantenimientos_idtbl_mantenimientos WHERE tbl_mantenimientos.tbl_segmentos_proyecto_idtbl_segmentos_proyecto = 322 AND tbl_mantenimientos.idtbl_mantenimientos = tm.idtbl_mantenimientos) AS ultima_fecha FROM tbl_mantenimientos tm LEFT JOIN dtl_mantenimientos dm ON dm.tbl_mantenimientos_idtbl_mantenimientos = tm.idtbl_mantenimientos LEFT JOIN tbl_tipo_red ttr ON ttr.idtbl_tipo_red = tm.tbl_tipo_red_idtbl_tipo_red LEFT JOIN tbl_catalogo_mantenimientos tcm ON tcm.idtbl_catalogo_mantenimientos = dm.tbl_catalogo_mantenimientos_idtbl_catalogo_mantenimientos LEFT JOIN tbl_users tus ON tus.idtbl_users = tm.tbl_users_idtbl_users_supervisor LEFT JOIN tbl_usuarios tu ON tu.idtbl_usuarios = tm.tbl_usuarios_idtbl_usuarios LEFT JOIN ctl_unidades_medida cum ON cum.idctl_unidades_medida = tcm.ctl_unidades_medida_idctl_unidades_medida LEFT JOIN tbl_tramo_fibra_optica tfo ON tfo.idtbl_tramo_fibra_optica = tm.tbl_tramo_fibra_optica_idtbl_tramo_fibra_optica LEFT JOIN tbl_justificacion_generador tjg ON tjg.tbl_mantenimientos_idtbl_mantenimientos = tm.idtbl_mantenimientos WHERE tm.zte = 1 AND tm.tbl_segmentos_proyecto_idtbl_segmentos_proyecto = 317 AND (ttr.tipo_red LIKE '%$buscar%' OR tfo.nombre_oracle LIKE '%$buscar%' OR tus.nombre LIKE '%$buscar%' OR tcm.descripcion LIKE '%$buscar%') GROUP BY tm.idtbl_mantenimientos ORDER BY tm.idtbl_mantenimientos ASC " . $limit);
        }else{
			$usuario = $this->session->userdata('id_usuario');
			$query = $this->db->query("SELECT tm.*, dm.*, tus.nombre AS autor, tfo.*, tcc.razon_social, tcm.descripcion AS descripcion_servicio, cum.unidad_medida_abr, ttr.tipo_red, tus.nombre, tu.nombres, tu.apellido_paterno, tu.apellido_materno, (SELECT DATE_FORMAT(MAX(fecha_justificacion),'%Y-%m-%d') FROM tbl_justificacion_generador LEFT JOIN tbl_mantenimientos ON tbl_mantenimientos.idtbl_mantenimientos = tbl_justificacion_generador.tbl_mantenimientos_idtbl_mantenimientos WHERE tbl_mantenimientos.tbl_segmentos_proyecto_idtbl_segmentos_proyecto = 322 AND tbl_mantenimientos.idtbl_mantenimientos = tm.idtbl_mantenimientos) AS ultima_fecha FROM tbl_mantenimientos tm LEFT JOIN dtl_mantenimientos dm ON dm.tbl_mantenimientos_idtbl_mantenimientos = tm.idtbl_mantenimientos LEFT JOIN tbl_tipo_red ttr ON ttr.idtbl_tipo_red = tm.tbl_tipo_red_idtbl_tipo_red LEFT JOIN tbl_catalogo_mantenimientos tcm ON tcm.idtbl_catalogo_mantenimientos = dm.tbl_catalogo_mantenimientos_idtbl_catalogo_mantenimientos LEFT JOIN tbl_users tus ON tus.idtbl_users = tm.tbl_users_idtbl_users_supervisor LEFT JOIN tbl_usuarios tu ON tu.idtbl_usuarios = tm.tbl_usuarios_idtbl_usuarios LEFT JOIN ctl_unidades_medida cum ON cum.idctl_unidades_medida = tcm.ctl_unidades_medida_idctl_unidades_medida LEFT JOIN tbl_tramo_fibra_optica tfo ON tfo.idtbl_tramo_fibra_optica = tm.tbl_tramo_fibra_optica_idtbl_tramo_fibra_optica LEFT JOIN tbl_clientes tcc ON tcc.idtbl_clientes = tm.tbl_clientes_idtbl_clientes LEFT JOIN tbl_solicitud_material ON tbl_solicitud_material.tbl_mantenimientos_idtbl_mantenimientos = tm.idtbl_mantenimientos WHERE tm.zte = 1 AND tm.tbl_segmentos_proyecto_idtbl_segmentos_proyecto = 317 AND tbl_solicitud_material.tbl_usuarios_idtbl_usuarios_supervisor = $usuario AND (tm.estatus = 'SV' || tm.estatus = 'SP') AND (ttr.tipo_red LIKE '%$buscar%' OR tfo.nombre_oracle LIKE '%$buscar%' OR tus.nombre LIKE '%$buscar%' OR tcm.descripcion LIKE '%$buscar%') GROUP BY tm.idtbl_mantenimientos ORDER BY tm.idtbl_mantenimientos ASC " . $limit);
		}
        return $query->result();
    }

	//Trae todos los generadores zte de natura
	public function mostrarGeneradoresZteB2($buscar = '', $inicio = false, $cantidadRegistro = false)
    {
        $user = $this->session->userdata('id');
        $limit = '';
        if ($inicio !== false && $cantidadRegistro !== false) {
            $limit = 'LIMIT ' . $inicio . "," . $cantidadRegistro;
        }
		if($this->session->userdata('tipo') == 18){
			$usuario = $this->session->userdata('id_usuario');
			$query = $this->db->query("SELECT tm.*, dm.*, tus.nombre AS autor, tfo.*, tcc.razon_social, ttr.tipo_red FROM tbl_mantenimientos tm LEFT JOIN dtl_mantenimientos dm ON dm.tbl_mantenimientos_idtbl_mantenimientos = tm.idtbl_mantenimientos LEFT JOIN tbl_tipo_red ttr ON ttr.idtbl_tipo_red = tm.tbl_tipo_red_idtbl_tipo_red LEFT JOIN tbl_solicitud_material tsm ON tsm.tbl_mantenimientos_idtbl_mantenimientos = tm.idtbl_mantenimientos LEFT JOIN tbl_users tus ON tus.idtbl_users = tm.tbl_users_idtbl_users_supervisor LEFT JOIN tbl_clientes tcc ON tcc.idtbl_clientes = tm.tbl_clientes_idtbl_clientes LEFT JOIN tbl_tramo_fibra_optica tfo ON tfo.idtbl_tramo_fibra_optica = tm.tbl_tramo_fibra_optica_idtbl_tramo_fibra_optica WHERE tsm.tbl_usuarios_idtbl_usuarios = $usuario AND tm.tbl_segmentos_proyecto_idtbl_segmentos_proyecto = 318 AND (ttr.tipo_red LIKE '%$buscar%' OR tfo.nombre_oracle LIKE '%$buscar%' OR tcm.descripcion LIKE '%$buscar%') GROUP BY tm.idtbl_mantenimientos ORDER BY tm.idtbl_mantenimientos DESC " . $limit);
        }elseif($this->session->userdata('tipo') == 17 || $this->session->userdata('tipo') == 19 || $this->session->userdata('tipo') == 21){
            $query = $this->db->query("SELECT tm.*, dm.*, tfo.*, tcm.descripcion AS descripcion_servicio, cum.unidad_medida_abr, ttr.tipo_red, SUM(tjg.kilometraje) AS kilometraje, tjg.fecha_justificacion, tus.nombre, tu.nombres, tu.apellido_paterno, tu.apellido_materno, (SELECT DATE_FORMAT(MAX(fecha_justificacion),'%Y-%m-%d') FROM tbl_justificacion_generador LEFT JOIN tbl_mantenimientos ON tbl_mantenimientos.idtbl_mantenimientos = tbl_justificacion_generador.tbl_mantenimientos_idtbl_mantenimientos WHERE tbl_mantenimientos.tbl_segmentos_proyecto_idtbl_segmentos_proyecto = 322 AND tbl_mantenimientos.idtbl_mantenimientos = tm.idtbl_mantenimientos) AS ultima_fecha FROM tbl_mantenimientos tm LEFT JOIN dtl_mantenimientos dm ON dm.tbl_mantenimientos_idtbl_mantenimientos = tm.idtbl_mantenimientos LEFT JOIN tbl_tipo_red ttr ON ttr.idtbl_tipo_red = tm.tbl_tipo_red_idtbl_tipo_red LEFT JOIN tbl_catalogo_mantenimientos tcm ON tcm.idtbl_catalogo_mantenimientos = dm.tbl_catalogo_mantenimientos_idtbl_catalogo_mantenimientos LEFT JOIN tbl_usuarios tu ON tu.idtbl_usuarios = tm.tbl_usuarios_idtbl_usuarios LEFT JOIN tbl_users tus ON tus.idtbl_users = tm.tbl_users_idtbl_users_supervisor LEFT JOIN ctl_unidades_medida cum ON cum.idctl_unidades_medida = tcm.ctl_unidades_medida_idctl_unidades_medida LEFT JOIN tbl_tramo_fibra_optica tfo ON tfo.idtbl_tramo_fibra_optica = tm.tbl_tramo_fibra_optica_idtbl_tramo_fibra_optica LEFT JOIN tbl_justificacion_generador tjg ON tjg.tbl_mantenimientos_idtbl_mantenimientos = tm.idtbl_mantenimientos WHERE tm.zte = 1 AND tm.tbl_segmentos_proyecto_idtbl_segmentos_proyecto = 318 AND (ttr.tipo_red LIKE '%$buscar%' OR tfo.nombre_oracle LIKE '%$buscar%' OR tus.nombre LIKE '%$buscar%' OR tcm.descripcion LIKE '%$buscar%') GROUP BY tm.idtbl_mantenimientos ORDER BY tm.idtbl_mantenimientos ASC " . $limit);
        }else{
			$usuario = $this->session->userdata('id_usuario');
			$query = $this->db->query("SELECT tm.*, dm.*, tus.nombre AS autor, tfo.*, tcc.razon_social, tcm.descripcion AS descripcion_servicio, cum.unidad_medida_abr, ttr.tipo_red, tus.nombre, tu.nombres, tu.apellido_paterno, tu.apellido_materno, (SELECT DATE_FORMAT(MAX(fecha_justificacion),'%Y-%m-%d') FROM tbl_justificacion_generador LEFT JOIN tbl_mantenimientos ON tbl_mantenimientos.idtbl_mantenimientos = tbl_justificacion_generador.tbl_mantenimientos_idtbl_mantenimientos WHERE tbl_mantenimientos.tbl_segmentos_proyecto_idtbl_segmentos_proyecto = 322 AND tbl_mantenimientos.idtbl_mantenimientos = tm.idtbl_mantenimientos) AS ultima_fecha FROM tbl_mantenimientos tm LEFT JOIN dtl_mantenimientos dm ON dm.tbl_mantenimientos_idtbl_mantenimientos = tm.idtbl_mantenimientos LEFT JOIN tbl_tipo_red ttr ON ttr.idtbl_tipo_red = tm.tbl_tipo_red_idtbl_tipo_red LEFT JOIN tbl_catalogo_mantenimientos tcm ON tcm.idtbl_catalogo_mantenimientos = dm.tbl_catalogo_mantenimientos_idtbl_catalogo_mantenimientos LEFT JOIN tbl_usuarios tu ON tu.idtbl_usuarios = tm.tbl_usuarios_idtbl_usuarios LEFT JOIN tbl_users tus ON tus.idtbl_users = tm.tbl_users_idtbl_users_supervisor LEFT JOIN ctl_unidades_medida cum ON cum.idctl_unidades_medida = tcm.ctl_unidades_medida_idctl_unidades_medida LEFT JOIN tbl_tramo_fibra_optica tfo ON tfo.idtbl_tramo_fibra_optica = tm.tbl_tramo_fibra_optica_idtbl_tramo_fibra_optica LEFT JOIN tbl_clientes tcc ON tcc.idtbl_clientes = tm.tbl_clientes_idtbl_clientes LEFT JOIN tbl_solicitud_material ON tbl_solicitud_material.tbl_mantenimientos_idtbl_mantenimientos = tm.idtbl_mantenimientos WHERE tm.zte = 1 AND tm.tbl_segmentos_proyecto_idtbl_segmentos_proyecto = 318 AND tbl_solicitud_material.tbl_usuarios_idtbl_usuarios_supervisor = $usuario AND (tm.estatus = 'SV' || tm.estatus = 'SP') AND (ttr.tipo_red LIKE '%$buscar%' OR tfo.nombre_oracle LIKE '%$buscar%' OR tus.nombre LIKE '%$buscar%' OR tcm.descripcion LIKE '%$buscar%') GROUP BY tm.idtbl_mantenimientos ORDER BY tm.idtbl_mantenimientos ASC " . $limit);			
		}
        return $query->result();
    }

	//Trae todos los generadores zte de magistral
	public function mostrarGeneradoresZteMagistral($buscar = '', $inicio = false, $cantidadRegistro = false)
    {
        $user = $this->session->userdata('id');
        $limit = '';
        if ($inicio !== false && $cantidadRegistro !== false) {
            $limit = 'LIMIT ' . $inicio . "," . $cantidadRegistro;
        }
		if($this->session->userdata('tipo') == 18){
			$usuario = $this->session->userdata('id_usuario');
			$query = $this->db->query("SELECT tm.*, dm.*, tus.nombre AS autor, tfo.*, tcc.razon_social, ttr.tipo_red FROM tbl_mantenimientos tm LEFT JOIN dtl_mantenimientos dm ON dm.tbl_mantenimientos_idtbl_mantenimientos = tm.idtbl_mantenimientos LEFT JOIN tbl_tipo_red ttr ON ttr.idtbl_tipo_red = tm.tbl_tipo_red_idtbl_tipo_red LEFT JOIN tbl_solicitud_material tsm ON tsm.tbl_mantenimientos_idtbl_mantenimientos = tm.idtbl_mantenimientos LEFT JOIN tbl_users tus ON tus.idtbl_users = tm.tbl_users_idtbl_users_supervisor LEFT JOIN tbl_clientes tcc ON tcc.idtbl_clientes = tm.tbl_clientes_idtbl_clientes LEFT JOIN tbl_tramo_fibra_optica tfo ON tfo.idtbl_tramo_fibra_optica = tm.tbl_tramo_fibra_optica_idtbl_tramo_fibra_optica WHERE tsm.tbl_usuarios_idtbl_usuarios = $usuario AND tm.tbl_segmentos_proyecto_idtbl_segmentos_proyecto = 321 AND (ttr.tipo_red LIKE '%$buscar%' OR tfo.nombre_oracle LIKE '%$buscar%' OR tcm.descripcion LIKE '%$buscar%') GROUP BY tm.idtbl_mantenimientos ORDER BY tm.idtbl_mantenimientos DESC " . $limit);
        }elseif($this->session->userdata('tipo') == 17 || $this->session->userdata('tipo') == 19 || $this->session->userdata('tipo') == 21){
            $query = $this->db->query("SELECT tm.*, dm.*, tfo.*, tcm.descripcion AS descripcion_servicio, cum.unidad_medida_abr, ttr.tipo_red, SUM(tjg.kilometraje) AS kilometraje, tjg.fecha_justificacion, tus.nombre, tu.nombres, tu.apellido_paterno, tu.apellido_materno, (SELECT DATE_FORMAT(MAX(fecha_justificacion),'%Y-%m-%d') FROM tbl_justificacion_generador LEFT JOIN tbl_mantenimientos ON tbl_mantenimientos.idtbl_mantenimientos = tbl_justificacion_generador.tbl_mantenimientos_idtbl_mantenimientos WHERE tbl_mantenimientos.tbl_segmentos_proyecto_idtbl_segmentos_proyecto = 322 AND tbl_mantenimientos.idtbl_mantenimientos = tm.idtbl_mantenimientos) AS ultima_fecha FROM tbl_mantenimientos tm LEFT JOIN dtl_mantenimientos dm ON dm.tbl_mantenimientos_idtbl_mantenimientos = tm.idtbl_mantenimientos LEFT JOIN tbl_tipo_red ttr ON ttr.idtbl_tipo_red = tm.tbl_tipo_red_idtbl_tipo_red LEFT JOIN tbl_catalogo_mantenimientos tcm ON tcm.idtbl_catalogo_mantenimientos = dm.tbl_catalogo_mantenimientos_idtbl_catalogo_mantenimientos LEFT JOIN tbl_users tus ON tus.idtbl_users = tm.tbl_users_idtbl_users_supervisor LEFT JOIN tbl_usuarios tu ON tu.idtbl_usuarios = tm.tbl_usuarios_idtbl_usuarios LEFT JOIN ctl_unidades_medida cum ON cum.idctl_unidades_medida = tcm.ctl_unidades_medida_idctl_unidades_medida LEFT JOIN tbl_tramo_fibra_optica tfo ON tfo.idtbl_tramo_fibra_optica = tm.tbl_tramo_fibra_optica_idtbl_tramo_fibra_optica LEFT JOIN tbl_justificacion_generador tjg ON tjg.tbl_mantenimientos_idtbl_mantenimientos = tm.idtbl_mantenimientos WHERE tm.zte = 1 AND tm.tbl_segmentos_proyecto_idtbl_segmentos_proyecto = 321 AND (ttr.tipo_red LIKE '%$buscar%' OR tfo.nombre_oracle LIKE '%$buscar%' OR tus.nombre LIKE '%$buscar%' OR tcm.descripcion LIKE '%$buscar%') GROUP BY tm.idtbl_mantenimientos ORDER BY tm.idtbl_mantenimientos ASC " . $limit);
        }else{
			$usuario = $this->session->userdata('id_usuario');
			$query = $this->db->query("SELECT tm.*, dm.*, tus.nombre AS autor, tfo.*, tcc.razon_social, tcm.descripcion AS descripcion_servicio, cum.unidad_medida_abr, ttr.tipo_red, tus.nombre, tu.nombres, tu.apellido_paterno, tu.apellido_materno, (SELECT DATE_FORMAT(MAX(fecha_justificacion),'%Y-%m-%d') FROM tbl_justificacion_generador LEFT JOIN tbl_mantenimientos ON tbl_mantenimientos.idtbl_mantenimientos = tbl_justificacion_generador.tbl_mantenimientos_idtbl_mantenimientos WHERE tbl_mantenimientos.tbl_segmentos_proyecto_idtbl_segmentos_proyecto = 322 AND tbl_mantenimientos.idtbl_mantenimientos = tm.idtbl_mantenimientos) AS ultima_fecha FROM tbl_mantenimientos tm LEFT JOIN dtl_mantenimientos dm ON dm.tbl_mantenimientos_idtbl_mantenimientos = tm.idtbl_mantenimientos LEFT JOIN tbl_tipo_red ttr ON ttr.idtbl_tipo_red = tm.tbl_tipo_red_idtbl_tipo_red LEFT JOIN tbl_catalogo_mantenimientos tcm ON tcm.idtbl_catalogo_mantenimientos = dm.tbl_catalogo_mantenimientos_idtbl_catalogo_mantenimientos LEFT JOIN tbl_users tus ON tus.idtbl_users = tm.tbl_users_idtbl_users_supervisor LEFT JOIN tbl_usuarios tu ON tu.idtbl_usuarios = tm.tbl_usuarios_idtbl_usuarios LEFT JOIN ctl_unidades_medida cum ON cum.idctl_unidades_medida = tcm.ctl_unidades_medida_idctl_unidades_medida LEFT JOIN tbl_tramo_fibra_optica tfo ON tfo.idtbl_tramo_fibra_optica = tm.tbl_tramo_fibra_optica_idtbl_tramo_fibra_optica LEFT JOIN tbl_clientes tcc ON tcc.idtbl_clientes = tm.tbl_clientes_idtbl_clientes LEFT JOIN tbl_solicitud_material ON tbl_solicitud_material.tbl_mantenimientos_idtbl_mantenimientos = tm.idtbl_mantenimientos WHERE tm.zte = 1 AND tm.tbl_segmentos_proyecto_idtbl_segmentos_proyecto = 321 AND tbl_solicitud_material.tbl_usuarios_idtbl_usuarios_supervisor = $usuario AND (tm.estatus = 'SV' || tm.estatus = 'SP') AND (ttr.tipo_red LIKE '%$buscar%' OR tfo.nombre_oracle LIKE '%$buscar%' OR tus.nombre LIKE '%$buscar%' OR tcm.descripcion LIKE '%$buscar%') GROUP BY tm.idtbl_mantenimientos ORDER BY tm.idtbl_mantenimientos ASC " . $limit);			
		}
        return $query->result();
    }

	//Trae todos los generadores zte de rosa
	public function mostrarGeneradoresZteRosa($buscar = '', $inicio = false, $cantidadRegistro = false)
    {
        $user = $this->session->userdata('id');
        $limit = '';
        if ($inicio !== false && $cantidadRegistro !== false) {
            $limit = 'LIMIT ' . $inicio . "," . $cantidadRegistro;
        }
		if($this->session->userdata('tipo') == 18){
			$usuario = $this->session->userdata('id_usuario');
			$query = $this->db->query("SELECT tm.*, dm.*, tus.nombre AS autor, tfo.*, tcc.razon_social, ttr.tipo_red FROM tbl_mantenimientos tm LEFT JOIN dtl_mantenimientos dm ON dm.tbl_mantenimientos_idtbl_mantenimientos = tm.idtbl_mantenimientos LEFT JOIN tbl_tipo_red ttr ON ttr.idtbl_tipo_red = tm.tbl_tipo_red_idtbl_tipo_red LEFT JOIN tbl_solicitud_material tsm ON tsm.tbl_mantenimientos_idtbl_mantenimientos = tm.idtbl_mantenimientos LEFT JOIN tbl_users tus ON tus.idtbl_users = tm.tbl_users_idtbl_users_supervisor LEFT JOIN tbl_clientes tcc ON tcc.idtbl_clientes = tm.tbl_clientes_idtbl_clientes LEFT JOIN tbl_tramo_fibra_optica tfo ON tfo.idtbl_tramo_fibra_optica = tm.tbl_tramo_fibra_optica_idtbl_tramo_fibra_optica WHERE tsm.tbl_usuarios_idtbl_usuarios = $usuario AND tm.tbl_segmentos_proyecto_idtbl_segmentos_proyecto = 326 AND (ttr.tipo_red LIKE '%$buscar%' OR tfo.nombre_oracle LIKE '%$buscar%' OR tcm.descripcion LIKE '%$buscar%') GROUP BY tm.idtbl_mantenimientos ORDER BY tm.idtbl_mantenimientos DESC " . $limit);
        }elseif($this->session->userdata('tipo') == 17 || $this->session->userdata('tipo') == 19 || $this->session->userdata('tipo') == 21){
            $query = $this->db->query("SELECT tm.*, dm.*, tfo.*, tcm.descripcion AS descripcion_servicio, cum.unidad_medida_abr, ttr.tipo_red, SUM(tjg.kilometraje) AS kilometraje, tjg.fecha_justificacion, tus.nombre, tu.nombres, tu.apellido_paterno, tu.apellido_materno, (SELECT DATE_FORMAT(MAX(fecha_justificacion),'%Y-%m-%d') FROM tbl_justificacion_generador LEFT JOIN tbl_mantenimientos ON tbl_mantenimientos.idtbl_mantenimientos = tbl_justificacion_generador.tbl_mantenimientos_idtbl_mantenimientos WHERE tbl_mantenimientos.tbl_segmentos_proyecto_idtbl_segmentos_proyecto = 322 AND tbl_mantenimientos.idtbl_mantenimientos = tm.idtbl_mantenimientos) AS ultima_fecha FROM tbl_mantenimientos tm LEFT JOIN dtl_mantenimientos dm ON dm.tbl_mantenimientos_idtbl_mantenimientos = tm.idtbl_mantenimientos LEFT JOIN tbl_tipo_red ttr ON ttr.idtbl_tipo_red = tm.tbl_tipo_red_idtbl_tipo_red LEFT JOIN tbl_catalogo_mantenimientos tcm ON tcm.idtbl_catalogo_mantenimientos = dm.tbl_catalogo_mantenimientos_idtbl_catalogo_mantenimientos LEFT JOIN tbl_users tus ON tus.idtbl_users = tm.tbl_users_idtbl_users_supervisor LEFT JOIN tbl_usuarios tu ON tu.idtbl_usuarios = tm.tbl_usuarios_idtbl_usuarios LEFT JOIN ctl_unidades_medida cum ON cum.idctl_unidades_medida = tcm.ctl_unidades_medida_idctl_unidades_medida LEFT JOIN tbl_tramo_fibra_optica tfo ON tfo.idtbl_tramo_fibra_optica = tm.tbl_tramo_fibra_optica_idtbl_tramo_fibra_optica LEFT JOIN tbl_justificacion_generador tjg ON tjg.tbl_mantenimientos_idtbl_mantenimientos = tm.idtbl_mantenimientos WHERE tm.zte = 1 AND tm.tbl_segmentos_proyecto_idtbl_segmentos_proyecto = 326 AND (ttr.tipo_red LIKE '%$buscar%' OR tfo.nombre_oracle LIKE '%$buscar%' OR tus.nombre LIKE '%$buscar%' OR tcm.descripcion LIKE '%$buscar%') GROUP BY tm.idtbl_mantenimientos ORDER BY tm.idtbl_mantenimientos ASC " . $limit);
        }else{
			$usuario = $this->session->userdata('id_usuario');
			$query = $this->db->query("SELECT tm.*, dm.*, tus.nombre AS autor, tfo.*, tcc.razon_social, tcm.descripcion AS descripcion_servicio, cum.unidad_medida_abr, ttr.tipo_red, tus.nombre, tu.nombres, tu.apellido_paterno, tu.apellido_materno, (SELECT DATE_FORMAT(MAX(fecha_justificacion),'%Y-%m-%d') FROM tbl_justificacion_generador LEFT JOIN tbl_mantenimientos ON tbl_mantenimientos.idtbl_mantenimientos = tbl_justificacion_generador.tbl_mantenimientos_idtbl_mantenimientos WHERE tbl_mantenimientos.tbl_segmentos_proyecto_idtbl_segmentos_proyecto = 322 AND tbl_mantenimientos.idtbl_mantenimientos = tm.idtbl_mantenimientos) AS ultima_fecha FROM tbl_mantenimientos tm LEFT JOIN dtl_mantenimientos dm ON dm.tbl_mantenimientos_idtbl_mantenimientos = tm.idtbl_mantenimientos LEFT JOIN tbl_tipo_red ttr ON ttr.idtbl_tipo_red = tm.tbl_tipo_red_idtbl_tipo_red LEFT JOIN tbl_catalogo_mantenimientos tcm ON tcm.idtbl_catalogo_mantenimientos = dm.tbl_catalogo_mantenimientos_idtbl_catalogo_mantenimientos LEFT JOIN tbl_users tus ON tus.idtbl_users = tm.tbl_users_idtbl_users_supervisor LEFT JOIN tbl_usuarios tu ON tu.idtbl_usuarios = tm.tbl_usuarios_idtbl_usuarios LEFT JOIN ctl_unidades_medida cum ON cum.idctl_unidades_medida = tcm.ctl_unidades_medida_idctl_unidades_medida LEFT JOIN tbl_tramo_fibra_optica tfo ON tfo.idtbl_tramo_fibra_optica = tm.tbl_tramo_fibra_optica_idtbl_tramo_fibra_optica LEFT JOIN tbl_clientes tcc ON tcc.idtbl_clientes = tm.tbl_clientes_idtbl_clientes LEFT JOIN tbl_solicitud_material ON tbl_solicitud_material.tbl_mantenimientos_idtbl_mantenimientos = tm.idtbl_mantenimientos WHERE tm.zte = 1 AND tm.tbl_segmentos_proyecto_idtbl_segmentos_proyecto = 326 AND tbl_solicitud_material.tbl_usuarios_idtbl_usuarios_supervisor = $usuario AND (tm.estatus = 'SV' || tm.estatus = 'SP') AND (ttr.tipo_red LIKE '%$buscar%' OR tfo.nombre_oracle LIKE '%$buscar%' OR tus.nombre LIKE '%$buscar%' OR tcm.descripcion LIKE '%$buscar%') GROUP BY tm.idtbl_mantenimientos ORDER BY tm.idtbl_mantenimientos ASC " . $limit);			
		}
        return $query->result();
    }

	//Trae todos los generadores zte de centro
	public function mostrarGeneradoresZteCentro($buscar = '', $inicio = false, $cantidadRegistro = false)
    {
        $user = $this->session->userdata('id');
        $limit = '';
        if ($inicio !== false && $cantidadRegistro !== false) {
            $limit = 'LIMIT ' . $inicio . "," . $cantidadRegistro;
        }
		if($this->session->userdata('tipo') == 18){
			$usuario = $this->session->userdata('id_usuario');
			$query = $this->db->query("SELECT tm.*, dm.*, tus.nombre AS autor, tfo.*, tcc.razon_social, ttr.tipo_red FROM tbl_mantenimientos tm LEFT JOIN dtl_mantenimientos dm ON dm.tbl_mantenimientos_idtbl_mantenimientos = tm.idtbl_mantenimientos LEFT JOIN tbl_tipo_red ttr ON ttr.idtbl_tipo_red = tm.tbl_tipo_red_idtbl_tipo_red LEFT JOIN tbl_solicitud_material tsm ON tsm.tbl_mantenimientos_idtbl_mantenimientos = tm.idtbl_mantenimientos LEFT JOIN tbl_users tus ON tus.idtbl_users = tm.tbl_users_idtbl_users_supervisor LEFT JOIN tbl_clientes tcc ON tcc.idtbl_clientes = tm.tbl_clientes_idtbl_clientes LEFT JOIN tbl_tramo_fibra_optica tfo ON tfo.idtbl_tramo_fibra_optica = tm.tbl_tramo_fibra_optica_idtbl_tramo_fibra_optica WHERE tsm.tbl_usuarios_idtbl_usuarios = $usuario AND tm.tbl_segmentos_proyecto_idtbl_segmentos_proyecto = 313 AND (ttr.tipo_red LIKE '%$buscar%' OR tfo.nombre_oracle LIKE '%$buscar%' OR tcm.descripcion LIKE '%$buscar%') GROUP BY tm.idtbl_mantenimientos ORDER BY tm.idtbl_mantenimientos DESC " . $limit);
        }elseif($this->session->userdata('tipo') == 17 || $this->session->userdata('tipo') == 19 || $this->session->userdata('tipo') == 21){
            $query = $this->db->query("SELECT tm.*, dm.*, tfo.*, tcm.descripcion AS descripcion_servicio, cum.unidad_medida_abr, ttr.tipo_red, SUM(tjg.kilometraje) AS kilometraje, tjg.fecha_justificacion, tus.nombre, tu.nombres, tu.apellido_paterno, tu.apellido_materno, (SELECT DATE_FORMAT(MAX(fecha_justificacion),'%Y-%m-%d') FROM tbl_justificacion_generador LEFT JOIN tbl_mantenimientos ON tbl_mantenimientos.idtbl_mantenimientos = tbl_justificacion_generador.tbl_mantenimientos_idtbl_mantenimientos WHERE tbl_mantenimientos.tbl_segmentos_proyecto_idtbl_segmentos_proyecto = 322 AND tbl_mantenimientos.idtbl_mantenimientos = tm.idtbl_mantenimientos) AS ultima_fecha FROM tbl_mantenimientos tm LEFT JOIN dtl_mantenimientos dm ON dm.tbl_mantenimientos_idtbl_mantenimientos = tm.idtbl_mantenimientos LEFT JOIN tbl_tipo_red ttr ON ttr.idtbl_tipo_red = tm.tbl_tipo_red_idtbl_tipo_red LEFT JOIN tbl_users tus ON tus.idtbl_users = tm.tbl_users_idtbl_users_supervisor LEFT JOIN tbl_usuarios tu ON tu.idtbl_usuarios = tm.tbl_usuarios_idtbl_usuarios LEFT JOIN tbl_catalogo_mantenimientos tcm ON tcm.idtbl_catalogo_mantenimientos = dm.tbl_catalogo_mantenimientos_idtbl_catalogo_mantenimientos LEFT JOIN ctl_unidades_medida cum ON cum.idctl_unidades_medida = tcm.ctl_unidades_medida_idctl_unidades_medida LEFT JOIN tbl_tramo_fibra_optica tfo ON tfo.idtbl_tramo_fibra_optica = tm.tbl_tramo_fibra_optica_idtbl_tramo_fibra_optica LEFT JOIN tbl_justificacion_generador tjg ON tjg.tbl_mantenimientos_idtbl_mantenimientos = tm.idtbl_mantenimientos WHERE tm.zte = 1 AND tm.tbl_segmentos_proyecto_idtbl_segmentos_proyecto = 313 AND (ttr.tipo_red LIKE '%$buscar%' OR tfo.nombre_oracle LIKE '%$buscar%' OR tus.nombre LIKE '%$buscar%' OR tcm.descripcion LIKE '%$buscar%') GROUP BY tm.idtbl_mantenimientos ORDER BY tm.idtbl_mantenimientos ASC " . $limit);
        }else{
			$usuario = $this->session->userdata('id_usuario');
			$query = $this->db->query("SELECT tm.*, dm.*, tus.nombre AS autor, tfo.*, tcc.razon_social, tcm.descripcion AS descripcion_servicio, cum.unidad_medida_abr, ttr.tipo_red, tus.nombre, tu.nombres, tu.apellido_paterno, tu.apellido_materno, (SELECT DATE_FORMAT(MAX(fecha_justificacion),'%Y-%m-%d') FROM tbl_justificacion_generador LEFT JOIN tbl_mantenimientos ON tbl_mantenimientos.idtbl_mantenimientos = tbl_justificacion_generador.tbl_mantenimientos_idtbl_mantenimientos WHERE tbl_mantenimientos.tbl_segmentos_proyecto_idtbl_segmentos_proyecto = 322 AND tbl_mantenimientos.idtbl_mantenimientos = tm.idtbl_mantenimientos) AS ultima_fecha FROM tbl_mantenimientos tm LEFT JOIN dtl_mantenimientos dm ON dm.tbl_mantenimientos_idtbl_mantenimientos = tm.idtbl_mantenimientos LEFT JOIN tbl_tipo_red ttr ON ttr.idtbl_tipo_red = tm.tbl_tipo_red_idtbl_tipo_red LEFT JOIN tbl_users tus ON tus.idtbl_users = tm.tbl_users_idtbl_users_supervisor LEFT JOIN tbl_usuarios tu ON tu.idtbl_usuarios = tm.tbl_usuarios_idtbl_usuarios LEFT JOIN tbl_catalogo_mantenimientos tcm ON tcm.idtbl_catalogo_mantenimientos = dm.tbl_catalogo_mantenimientos_idtbl_catalogo_mantenimientos LEFT JOIN ctl_unidades_medida cum ON cum.idctl_unidades_medida = tcm.ctl_unidades_medida_idctl_unidades_medida LEFT JOIN tbl_tramo_fibra_optica tfo ON tfo.idtbl_tramo_fibra_optica = tm.tbl_tramo_fibra_optica_idtbl_tramo_fibra_optica LEFT JOIN tbl_clientes tcc ON tcc.idtbl_clientes = tm.tbl_clientes_idtbl_clientes LEFT JOIN tbl_solicitud_material ON tbl_solicitud_material.tbl_mantenimientos_idtbl_mantenimientos = tm.idtbl_mantenimientos WHERE tm.zte = 1 AND tm.tbl_segmentos_proyecto_idtbl_segmentos_proyecto = 313 AND tbl_solicitud_material.tbl_usuarios_idtbl_usuarios_supervisor = $usuario AND (tm.estatus = 'SV' || tm.estatus = 'SP') AND (ttr.tipo_red LIKE '%$buscar%' OR tfo.nombre_oracle LIKE '%$buscar%' OR tus.nombre LIKE '%$buscar%' OR tcm.descripcion LIKE '%$buscar%') GROUP BY tm.idtbl_mantenimientos ORDER BY tm.idtbl_mantenimientos ASC " . $limit);			
		}
        return $query->result();
    }

	//Trae todos los generadores zte de Ilustres
	public function mostrarGeneradoresZteIlustres($buscar = '', $inicio = false, $cantidadRegistro = false)
    {
        $user = $this->session->userdata('id');
        $limit = '';
        if ($inicio !== false && $cantidadRegistro !== false) {
            $limit = 'LIMIT ' . $inicio . "," . $cantidadRegistro;
        }
		if($this->session->userdata('tipo') == 18){
			$usuario = $this->session->userdata('id_usuario');
			$query = $this->db->query("SELECT tm.*, dm.*, tus.nombre AS autor, tfo.*, tcc.razon_social, ttr.tipo_red FROM tbl_mantenimientos tm LEFT JOIN dtl_mantenimientos dm ON dm.tbl_mantenimientos_idtbl_mantenimientos = tm.idtbl_mantenimientos LEFT JOIN tbl_tipo_red ttr ON ttr.idtbl_tipo_red = tm.tbl_tipo_red_idtbl_tipo_red LEFT JOIN tbl_solicitud_material tsm ON tsm.tbl_mantenimientos_idtbl_mantenimientos = tm.idtbl_mantenimientos LEFT JOIN tbl_users tus ON tus.idtbl_users = tm.tbl_users_idtbl_users_supervisor LEFT JOIN tbl_clientes tcc ON tcc.idtbl_clientes = tm.tbl_clientes_idtbl_clientes LEFT JOIN tbl_tramo_fibra_optica tfo ON tfo.idtbl_tramo_fibra_optica = tm.tbl_tramo_fibra_optica_idtbl_tramo_fibra_optica WHERE tsm.tbl_usuarios_idtbl_usuarios = $usuario AND tm.tbl_segmentos_proyecto_idtbl_segmentos_proyecto = 314 AND (ttr.tipo_red LIKE '%$buscar%' OR tfo.nombre_oracle LIKE '%$buscar%' OR tcm.descripcion LIKE '%$buscar%') GROUP BY tm.idtbl_mantenimientos ORDER BY tm.idtbl_mantenimientos DESC " . $limit);
        }elseif($this->session->userdata('tipo') == 17 || $this->session->userdata('tipo') == 19 || $this->session->userdata('tipo') == 21){
            $query = $this->db->query("SELECT tm.*, dm.*, tfo.*, tcm.descripcion AS descripcion_servicio, cum.unidad_medida_abr, ttr.tipo_red, SUM(tjg.kilometraje) AS kilometraje, tjg.fecha_justificacion, tus.nombre, tu.nombres, tu.apellido_paterno, tu.apellido_materno, (SELECT DATE_FORMAT(MAX(fecha_justificacion),'%Y-%m-%d') FROM tbl_justificacion_generador LEFT JOIN tbl_mantenimientos ON tbl_mantenimientos.idtbl_mantenimientos = tbl_justificacion_generador.tbl_mantenimientos_idtbl_mantenimientos WHERE tbl_mantenimientos.tbl_segmentos_proyecto_idtbl_segmentos_proyecto = 322 AND tbl_mantenimientos.idtbl_mantenimientos = tm.idtbl_mantenimientos) AS ultima_fecha FROM tbl_mantenimientos tm LEFT JOIN dtl_mantenimientos dm ON dm.tbl_mantenimientos_idtbl_mantenimientos = tm.idtbl_mantenimientos LEFT JOIN tbl_tipo_red ttr ON ttr.idtbl_tipo_red = tm.tbl_tipo_red_idtbl_tipo_red LEFT JOIN tbl_catalogo_mantenimientos tcm ON tcm.idtbl_catalogo_mantenimientos = dm.tbl_catalogo_mantenimientos_idtbl_catalogo_mantenimientos LEFT JOIN tbl_users tus ON tus.idtbl_users = tm.tbl_users_idtbl_users_supervisor LEFT JOIN tbl_usuarios tu ON tu.idtbl_usuarios = tm.tbl_usuarios_idtbl_usuarios LEFT JOIN ctl_unidades_medida cum ON cum.idctl_unidades_medida = tcm.ctl_unidades_medida_idctl_unidades_medida LEFT JOIN tbl_tramo_fibra_optica tfo ON tfo.idtbl_tramo_fibra_optica = tm.tbl_tramo_fibra_optica_idtbl_tramo_fibra_optica LEFT JOIN tbl_justificacion_generador tjg ON tjg.tbl_mantenimientos_idtbl_mantenimientos = tm.idtbl_mantenimientos WHERE tm.zte = 1 AND tm.tbl_segmentos_proyecto_idtbl_segmentos_proyecto = 314 AND (ttr.tipo_red LIKE '%$buscar%' OR tfo.nombre_oracle LIKE '%$buscar%' OR tus.nombre LIKE '%$buscar%' OR tcm.descripcion LIKE '%$buscar%') GROUP BY tm.idtbl_mantenimientos ORDER BY tm.idtbl_mantenimientos ASC " . $limit);
        }else{
			$usuario = $this->session->userdata('id_usuario');
			$query = $this->db->query("SELECT tm.*, dm.*, tus.nombre AS autor, tfo.*, tcc.razon_social, tcm.descripcion AS descripcion_servicio, cum.unidad_medida_abr, ttr.tipo_red, tus.nombre, tu.nombres, tu.apellido_paterno, tu.apellido_materno, (SELECT DATE_FORMAT(MAX(fecha_justificacion),'%Y-%m-%d') FROM tbl_justificacion_generador LEFT JOIN tbl_mantenimientos ON tbl_mantenimientos.idtbl_mantenimientos = tbl_justificacion_generador.tbl_mantenimientos_idtbl_mantenimientos WHERE tbl_mantenimientos.tbl_segmentos_proyecto_idtbl_segmentos_proyecto = 322 AND tbl_mantenimientos.idtbl_mantenimientos = tm.idtbl_mantenimientos) AS ultima_fecha FROM tbl_mantenimientos tm LEFT JOIN dtl_mantenimientos dm ON dm.tbl_mantenimientos_idtbl_mantenimientos = tm.idtbl_mantenimientos LEFT JOIN tbl_tipo_red ttr ON ttr.idtbl_tipo_red = tm.tbl_tipo_red_idtbl_tipo_red LEFT JOIN tbl_catalogo_mantenimientos tcm ON tcm.idtbl_catalogo_mantenimientos = dm.tbl_catalogo_mantenimientos_idtbl_catalogo_mantenimientos LEFT JOIN tbl_users tus ON tus.idtbl_users = tm.tbl_users_idtbl_users_supervisor LEFT JOIN tbl_usuarios tu ON tu.idtbl_usuarios = tm.tbl_usuarios_idtbl_usuarios LEFT JOIN ctl_unidades_medida cum ON cum.idctl_unidades_medida = tcm.ctl_unidades_medida_idctl_unidades_medida LEFT JOIN tbl_tramo_fibra_optica tfo ON tfo.idtbl_tramo_fibra_optica = tm.tbl_tramo_fibra_optica_idtbl_tramo_fibra_optica LEFT JOIN tbl_clientes tcc ON tcc.idtbl_clientes = tm.tbl_clientes_idtbl_clientes LEFT JOIN tbl_solicitud_material ON tbl_solicitud_material.tbl_mantenimientos_idtbl_mantenimientos = tm.idtbl_mantenimientos WHERE tm.zte = 1 AND tm.tbl_segmentos_proyecto_idtbl_segmentos_proyecto = 314 AND tbl_solicitud_material.tbl_usuarios_idtbl_usuarios_supervisor = $usuario AND (tm.estatus = 'SV' || tm.estatus = 'SP') AND (ttr.tipo_red LIKE '%$buscar%' OR tfo.nombre_oracle LIKE '%$buscar%' OR tus.nombre LIKE '%$buscar%' OR tcm.descripcion LIKE '%$buscar%') GROUP BY tm.idtbl_mantenimientos ORDER BY tm.idtbl_mantenimientos ASC " . $limit);			
		}
        return $query->result();
    }

	//Trae todos los generadores zte de Acereros
	public function mostrarGeneradoresZteAcereros($buscar = '', $inicio = false, $cantidadRegistro = false)
    {
        $user = $this->session->userdata('id');
        $limit = '';
        if ($inicio !== false && $cantidadRegistro !== false) {
            $limit = 'LIMIT ' . $inicio . "," . $cantidadRegistro;
        }
		if($this->session->userdata('tipo') == 18){
			$usuario = $this->session->userdata('id_usuario');
			$query = $this->db->query("SELECT tm.*, dm.*, tus.nombre AS autor, tfo.*, tcc.razon_social, ttr.tipo_red FROM tbl_mantenimientos tm LEFT JOIN dtl_mantenimientos dm ON dm.tbl_mantenimientos_idtbl_mantenimientos = tm.idtbl_mantenimientos LEFT JOIN tbl_tipo_red ttr ON ttr.idtbl_tipo_red = tm.tbl_tipo_red_idtbl_tipo_red LEFT JOIN tbl_solicitud_material tsm ON tsm.tbl_mantenimientos_idtbl_mantenimientos = tm.idtbl_mantenimientos LEFT JOIN tbl_users tus ON tus.idtbl_users = tm.tbl_users_idtbl_users_supervisor LEFT JOIN tbl_clientes tcc ON tcc.idtbl_clientes = tm.tbl_clientes_idtbl_clientes LEFT JOIN tbl_tramo_fibra_optica tfo ON tfo.idtbl_tramo_fibra_optica = tm.tbl_tramo_fibra_optica_idtbl_tramo_fibra_optica WHERE tsm.tbl_usuarios_idtbl_usuarios = $usuario AND tm.tbl_segmentos_proyecto_idtbl_segmentos_proyecto = 322 AND (ttr.tipo_red LIKE '%$buscar%' OR tfo.nombre_oracle LIKE '%$buscar%' OR tcm.descripcion LIKE '%$buscar%') GROUP BY tm.idtbl_mantenimientos ORDER BY tm.idtbl_mantenimientos DESC " . $limit);
        }elseif($this->session->userdata('tipo') == 17 || $this->session->userdata('tipo') == 19 || $this->session->userdata('tipo') == 21){
            $query = $this->db->query("SELECT tm.*, dm.*, tfo.*, tcm.descripcion AS descripcion_servicio, cum.unidad_medida_abr, ttr.tipo_red, SUM(tjg.kilometraje) AS kilometraje, tjg.fecha_justificacion, tus.nombre, tu.nombres, tu.apellido_paterno, tu.apellido_materno, (SELECT DATE_FORMAT(MAX(fecha_justificacion),'%Y-%m-%d') FROM tbl_justificacion_generador LEFT JOIN tbl_mantenimientos ON tbl_mantenimientos.idtbl_mantenimientos = tbl_justificacion_generador.tbl_mantenimientos_idtbl_mantenimientos WHERE tbl_mantenimientos.tbl_segmentos_proyecto_idtbl_segmentos_proyecto = 322 AND tbl_mantenimientos.idtbl_mantenimientos = tm.idtbl_mantenimientos) AS ultima_fecha FROM tbl_mantenimientos tm LEFT JOIN dtl_mantenimientos dm ON dm.tbl_mantenimientos_idtbl_mantenimientos = tm.idtbl_mantenimientos LEFT JOIN tbl_tipo_red ttr ON ttr.idtbl_tipo_red = tm.tbl_tipo_red_idtbl_tipo_red LEFT JOIN tbl_users tus ON tus.idtbl_users = tm.tbl_users_idtbl_users_supervisor LEFT JOIN tbl_usuarios tu ON tu.idtbl_usuarios = tm.tbl_usuarios_idtbl_usuarios LEFT JOIN tbl_catalogo_mantenimientos tcm ON tcm.idtbl_catalogo_mantenimientos = dm.tbl_catalogo_mantenimientos_idtbl_catalogo_mantenimientos LEFT JOIN ctl_unidades_medida cum ON cum.idctl_unidades_medida = tcm.ctl_unidades_medida_idctl_unidades_medida LEFT JOIN tbl_tramo_fibra_optica tfo ON tfo.idtbl_tramo_fibra_optica = tm.tbl_tramo_fibra_optica_idtbl_tramo_fibra_optica LEFT JOIN tbl_justificacion_generador tjg ON tjg.tbl_mantenimientos_idtbl_mantenimientos = tm.idtbl_mantenimientos WHERE tm.zte = 1 AND tm.tbl_segmentos_proyecto_idtbl_segmentos_proyecto = 322 AND (ttr.tipo_red LIKE '%$buscar%' OR tfo.nombre_oracle LIKE '%$buscar%' OR tus.nombre LIKE '%$buscar%' OR tcm.descripcion LIKE '%$buscar%') GROUP BY tm.idtbl_mantenimientos ORDER BY tm.idtbl_mantenimientos ASC " . $limit);
        }else{
			$usuario = $this->session->userdata('id');
			$query = $this->db->query("SELECT tm.*, dm.*, tus.nombre AS autor, tfo.*, tcc.razon_social, tcm.descripcion AS descripcion_servicio, cum.unidad_medida_abr, ttr.tipo_red, tus.nombre, tu.nombres, tu.apellido_paterno, tu.apellido_materno, (SELECT DATE_FORMAT(MAX(fecha_justificacion),'%Y-%m-%d') FROM tbl_justificacion_generador LEFT JOIN tbl_mantenimientos ON tbl_mantenimientos.idtbl_mantenimientos = tbl_justificacion_generador.tbl_mantenimientos_idtbl_mantenimientos WHERE tbl_mantenimientos.tbl_segmentos_proyecto_idtbl_segmentos_proyecto = 322 AND tbl_mantenimientos.idtbl_mantenimientos = tm.idtbl_mantenimientos) AS ultima_fecha FROM tbl_mantenimientos tm LEFT JOIN dtl_mantenimientos dm ON dm.tbl_mantenimientos_idtbl_mantenimientos = tm.idtbl_mantenimientos LEFT JOIN tbl_tipo_red ttr ON ttr.idtbl_tipo_red = tm.tbl_tipo_red_idtbl_tipo_red LEFT JOIN tbl_catalogo_mantenimientos tcm ON tcm.idtbl_catalogo_mantenimientos = dm.tbl_catalogo_mantenimientos_idtbl_catalogo_mantenimientos LEFT JOIN ctl_unidades_medida cum ON cum.idctl_unidades_medida = tcm.ctl_unidades_medida_idctl_unidades_medida LEFT JOIN tbl_users tus ON tus.idtbl_users = tm.tbl_users_idtbl_users_supervisor LEFT JOIN tbl_usuarios tu ON tu.idtbl_usuarios = tm.tbl_usuarios_idtbl_usuarios LEFT JOIN tbl_tramo_fibra_optica tfo ON tfo.idtbl_tramo_fibra_optica = tm.tbl_tramo_fibra_optica_idtbl_tramo_fibra_optica LEFT JOIN tbl_clientes tcc ON tcc.idtbl_clientes = tm.tbl_clientes_idtbl_clientes LEFT JOIN tbl_solicitud_material ON tbl_solicitud_material.tbl_mantenimientos_idtbl_mantenimientos = tm.idtbl_mantenimientos WHERE tm.zte = 1 AND tm.tbl_segmentos_proyecto_idtbl_segmentos_proyecto = 322 AND tm.tbl_users_idtbl_users_supervisor = $usuario AND (tm.estatus = 'SV' || tm.estatus = 'SP') AND (ttr.tipo_red LIKE '%$buscar%' OR tfo.nombre_oracle LIKE '%$buscar%' OR tus.nombre LIKE '%$buscar%' OR tcm.descripcion LIKE '%$buscar%') GROUP BY tm.idtbl_mantenimientos ORDER BY tm.idtbl_mantenimientos ASC " . $limit);			
		}
        return $query->result();
    }

	//Trae todos los generadores zte de Tcg1
	public function mostrarGeneradoresZteTcg1($buscar = '', $inicio = false, $cantidadRegistro = false)
    {
        $user = $this->session->userdata('id');
        $limit = '';
        if ($inicio !== false && $cantidadRegistro !== false) {
            $limit = 'LIMIT ' . $inicio . "," . $cantidadRegistro;
        }
		if($this->session->userdata('tipo') == 18){
			$usuario = $this->session->userdata('id_usuario');
			$query = $this->db->query("SELECT tm.*, dm.*, tus.nombre AS autor, tfo.*, tcc.razon_social, ttr.tipo_red FROM tbl_mantenimientos tm LEFT JOIN dtl_mantenimientos dm ON dm.tbl_mantenimientos_idtbl_mantenimientos = tm.idtbl_mantenimientos LEFT JOIN tbl_tipo_red ttr ON ttr.idtbl_tipo_red = tm.tbl_tipo_red_idtbl_tipo_red LEFT JOIN tbl_solicitud_material tsm ON tsm.tbl_mantenimientos_idtbl_mantenimientos = tm.idtbl_mantenimientos LEFT JOIN tbl_users tus ON tus.idtbl_users = tm.tbl_users_idtbl_users_supervisor LEFT JOIN tbl_clientes tcc ON tcc.idtbl_clientes = tm.tbl_clientes_idtbl_clientes LEFT JOIN tbl_tramo_fibra_optica tfo ON tfo.idtbl_tramo_fibra_optica = tm.tbl_tramo_fibra_optica_idtbl_tramo_fibra_optica WHERE tsm.tbl_usuarios_idtbl_usuarios = $usuario AND tm.tbl_segmentos_proyecto_idtbl_segmentos_proyecto = 323 AND (ttr.tipo_red LIKE '%$buscar%' OR tfo.nombre_oracle LIKE '%$buscar%' OR tcm.descripcion LIKE '%$buscar%') GROUP BY tm.idtbl_mantenimientos ORDER BY tm.idtbl_mantenimientos DESC " . $limit);
        }elseif($this->session->userdata('tipo') == 17 || $this->session->userdata('tipo') == 19 || $this->session->userdata('tipo') == 21){
            $query = $this->db->query("SELECT tm.*, dm.*, tfo.*, tcm.descripcion AS descripcion_servicio, cum.unidad_medida_abr, ttr.tipo_red, SUM(tjg.kilometraje) AS kilometraje, tjg.fecha_justificacion, tus.nombre, tu.nombres, tu.apellido_paterno, tu.apellido_materno, (SELECT DATE_FORMAT(MAX(fecha_justificacion),'%Y-%m-%d') FROM tbl_justificacion_generador LEFT JOIN tbl_mantenimientos ON tbl_mantenimientos.idtbl_mantenimientos = tbl_justificacion_generador.tbl_mantenimientos_idtbl_mantenimientos WHERE tbl_mantenimientos.tbl_segmentos_proyecto_idtbl_segmentos_proyecto = 322 AND tbl_mantenimientos.idtbl_mantenimientos = tm.idtbl_mantenimientos) AS ultima_fecha FROM tbl_mantenimientos tm LEFT JOIN dtl_mantenimientos dm ON dm.tbl_mantenimientos_idtbl_mantenimientos = tm.idtbl_mantenimientos LEFT JOIN tbl_tipo_red ttr ON ttr.idtbl_tipo_red = tm.tbl_tipo_red_idtbl_tipo_red LEFT JOIN tbl_catalogo_mantenimientos tcm ON tcm.idtbl_catalogo_mantenimientos = dm.tbl_catalogo_mantenimientos_idtbl_catalogo_mantenimientos LEFT JOIN tbl_users tus ON tus.idtbl_users = tm.tbl_users_idtbl_users_supervisor LEFT JOIN tbl_usuarios tu ON tu.idtbl_usuarios = tm.tbl_usuarios_idtbl_usuarios LEFT JOIN ctl_unidades_medida cum ON cum.idctl_unidades_medida = tcm.ctl_unidades_medida_idctl_unidades_medida LEFT JOIN tbl_tramo_fibra_optica tfo ON tfo.idtbl_tramo_fibra_optica = tm.tbl_tramo_fibra_optica_idtbl_tramo_fibra_optica LEFT JOIN tbl_justificacion_generador tjg ON tjg.tbl_mantenimientos_idtbl_mantenimientos = tm.idtbl_mantenimientos WHERE tm.zte = 1 AND tm.tbl_segmentos_proyecto_idtbl_segmentos_proyecto = 323 AND (ttr.tipo_red LIKE '%$buscar%' OR tfo.nombre_oracle LIKE '%$buscar%' OR tus.nombre LIKE '%$buscar%' OR tcm.descripcion LIKE '%$buscar%') GROUP BY tm.idtbl_mantenimientos ORDER BY tm.idtbl_mantenimientos ASC " . $limit);
        }else{
			$usuario = $this->session->userdata('id_usuario');
			$query = $this->db->query("SELECT tm.*, dm.*, tus.nombre AS autor, tfo.*, tcc.razon_social, tcm.descripcion AS descripcion_servicio, cum.unidad_medida_abr, ttr.tipo_red, tus.nombre, tu.nombres, tu.apellido_paterno, tu.apellido_materno, (SELECT DATE_FORMAT(MAX(fecha_justificacion),'%Y-%m-%d') FROM tbl_justificacion_generador LEFT JOIN tbl_mantenimientos ON tbl_mantenimientos.idtbl_mantenimientos = tbl_justificacion_generador.tbl_mantenimientos_idtbl_mantenimientos WHERE tbl_mantenimientos.tbl_segmentos_proyecto_idtbl_segmentos_proyecto = 322 AND tbl_mantenimientos.idtbl_mantenimientos = tm.idtbl_mantenimientos) AS ultima_fecha FROM tbl_mantenimientos tm LEFT JOIN dtl_mantenimientos dm ON dm.tbl_mantenimientos_idtbl_mantenimientos = tm.idtbl_mantenimientos LEFT JOIN tbl_tipo_red ttr ON ttr.idtbl_tipo_red = tm.tbl_tipo_red_idtbl_tipo_red LEFT JOIN tbl_catalogo_mantenimientos tcm ON tcm.idtbl_catalogo_mantenimientos = dm.tbl_catalogo_mantenimientos_idtbl_catalogo_mantenimientos LEFT JOIN tbl_users tus ON tus.idtbl_users = tm.tbl_users_idtbl_users_supervisor LEFT JOIN tbl_usuarios tu ON tu.idtbl_usuarios = tm.tbl_usuarios_idtbl_usuarios LEFT JOIN ctl_unidades_medida cum ON cum.idctl_unidades_medida = tcm.ctl_unidades_medida_idctl_unidades_medida LEFT JOIN tbl_tramo_fibra_optica tfo ON tfo.idtbl_tramo_fibra_optica = tm.tbl_tramo_fibra_optica_idtbl_tramo_fibra_optica LEFT JOIN tbl_clientes tcc ON tcc.idtbl_clientes = tm.tbl_clientes_idtbl_clientes LEFT JOIN tbl_solicitud_material ON tbl_solicitud_material.tbl_mantenimientos_idtbl_mantenimientos = tm.idtbl_mantenimientos WHERE tm.zte = 1 AND tm.tbl_segmentos_proyecto_idtbl_segmentos_proyecto = 323 AND tbl_solicitud_material.tbl_usuarios_idtbl_usuarios_supervisor = $usuario AND (tm.estatus = 'SV' || tm.estatus = 'SP') AND (ttr.tipo_red LIKE '%$buscar%' OR tfo.nombre_oracle LIKE '%$buscar%' OR tus.nombre LIKE '%$buscar%' OR tcm.descripcion LIKE '%$buscar%') GROUP BY tm.idtbl_mantenimientos ORDER BY tm.idtbl_mantenimientos ASC " . $limit);			
		}
        return $query->result();
    }

	//Trae todos los generadores zte de Tcg2
	public function mostrarGeneradoresZteTcg2($buscar = '', $inicio = false, $cantidadRegistro = false)
    {
        $user = $this->session->userdata('id');
        $limit = '';
        if ($inicio !== false && $cantidadRegistro !== false) {
            $limit = 'LIMIT ' . $inicio . "," . $cantidadRegistro;
        }
		if($this->session->userdata('tipo') == 18){
			$usuario = $this->session->userdata('id_usuario');
			$query = $this->db->query("SELECT tm.*, dm.*, tus.nombre AS autor, tfo.*, tcc.razon_social, ttr.tipo_red FROM tbl_mantenimientos tm LEFT JOIN dtl_mantenimientos dm ON dm.tbl_mantenimientos_idtbl_mantenimientos = tm.idtbl_mantenimientos LEFT JOIN tbl_tipo_red ttr ON ttr.idtbl_tipo_red = tm.tbl_tipo_red_idtbl_tipo_red LEFT JOIN tbl_solicitud_material tsm ON tsm.tbl_mantenimientos_idtbl_mantenimientos = tm.idtbl_mantenimientos LEFT JOIN tbl_users tus ON tus.idtbl_users = tm.tbl_users_idtbl_users_supervisor LEFT JOIN tbl_clientes tcc ON tcc.idtbl_clientes = tm.tbl_clientes_idtbl_clientes LEFT JOIN tbl_tramo_fibra_optica tfo ON tfo.idtbl_tramo_fibra_optica = tm.tbl_tramo_fibra_optica_idtbl_tramo_fibra_optica WHERE tsm.tbl_usuarios_idtbl_usuarios = $usuario AND tm.tbl_segmentos_proyecto_idtbl_segmentos_proyecto = 324 AND (ttr.tipo_red LIKE '%$buscar%' OR tfo.nombre_oracle LIKE '%$buscar%' OR tcm.descripcion LIKE '%$buscar%') GROUP BY tm.idtbl_mantenimientos ORDER BY tm.idtbl_mantenimientos DESC " . $limit);
        }elseif($this->session->userdata('tipo') == 17 || $this->session->userdata('tipo') == 19 || $this->session->userdata('tipo') == 21){
            $query = $this->db->query("SELECT tm.*, dm.*, tfo.*, tcm.descripcion AS descripcion_servicio, cum.unidad_medida_abr, ttr.tipo_red, SUM(tjg.kilometraje) AS kilometraje, tjg.fecha_justificacion, tus.nombre, tu.nombres, tu.apellido_paterno, tu.apellido_materno, (SELECT DATE_FORMAT(MAX(fecha_justificacion),'%Y-%m-%d') FROM tbl_justificacion_generador LEFT JOIN tbl_mantenimientos ON tbl_mantenimientos.idtbl_mantenimientos = tbl_justificacion_generador.tbl_mantenimientos_idtbl_mantenimientos WHERE tbl_mantenimientos.tbl_segmentos_proyecto_idtbl_segmentos_proyecto = 322 AND tbl_mantenimientos.idtbl_mantenimientos = tm.idtbl_mantenimientos) AS ultima_fecha FROM tbl_mantenimientos tm LEFT JOIN dtl_mantenimientos dm ON dm.tbl_mantenimientos_idtbl_mantenimientos = tm.idtbl_mantenimientos LEFT JOIN tbl_tipo_red ttr ON ttr.idtbl_tipo_red = tm.tbl_tipo_red_idtbl_tipo_red LEFT JOIN tbl_catalogo_mantenimientos tcm ON tcm.idtbl_catalogo_mantenimientos = dm.tbl_catalogo_mantenimientos_idtbl_catalogo_mantenimientos LEFT JOIN tbl_users tus ON tus.idtbl_users = tm.tbl_users_idtbl_users_supervisor LEFT JOIN tbl_usuarios tu ON tu.idtbl_usuarios = tm.tbl_usuarios_idtbl_usuarios LEFT JOIN ctl_unidades_medida cum ON cum.idctl_unidades_medida = tcm.ctl_unidades_medida_idctl_unidades_medida LEFT JOIN tbl_tramo_fibra_optica tfo ON tfo.idtbl_tramo_fibra_optica = tm.tbl_tramo_fibra_optica_idtbl_tramo_fibra_optica LEFT JOIN tbl_justificacion_generador tjg ON tjg.tbl_mantenimientos_idtbl_mantenimientos = tm.idtbl_mantenimientos WHERE tm.zte = 1 AND tm.tbl_segmentos_proyecto_idtbl_segmentos_proyecto = 324 AND (ttr.tipo_red LIKE '%$buscar%' OR tfo.nombre_oracle LIKE '%$buscar%' OR tus.nombre LIKE '%$buscar%' OR tcm.descripcion LIKE '%$buscar%') GROUP BY tm.idtbl_mantenimientos ORDER BY tm.idtbl_mantenimientos ASC " . $limit);
        }else{
			$usuario = $this->session->userdata('id_usuario');
			$query = $this->db->query("SELECT tm.*, dm.*, tus.nombre AS autor, tfo.*, tcc.razon_social, tcm.descripcion AS descripcion_servicio, cum.unidad_medida_abr, ttr.tipo_red, tus.nombre, tu.nombres, tu.apellido_paterno, tu.apellido_materno, (SELECT DATE_FORMAT(MAX(fecha_justificacion),'%Y-%m-%d') FROM tbl_justificacion_generador LEFT JOIN tbl_mantenimientos ON tbl_mantenimientos.idtbl_mantenimientos = tbl_justificacion_generador.tbl_mantenimientos_idtbl_mantenimientos WHERE tbl_mantenimientos.tbl_segmentos_proyecto_idtbl_segmentos_proyecto = 322 AND tbl_mantenimientos.idtbl_mantenimientos = tm.idtbl_mantenimientos) AS ultima_fecha FROM tbl_mantenimientos tm LEFT JOIN dtl_mantenimientos dm ON dm.tbl_mantenimientos_idtbl_mantenimientos = tm.idtbl_mantenimientos LEFT JOIN tbl_tipo_red ttr ON ttr.idtbl_tipo_red = tm.tbl_tipo_red_idtbl_tipo_red LEFT JOIN tbl_catalogo_mantenimientos tcm ON tcm.idtbl_catalogo_mantenimientos = dm.tbl_catalogo_mantenimientos_idtbl_catalogo_mantenimientos LEFT JOIN tbl_users tus ON tus.idtbl_users = tm.tbl_users_idtbl_users_supervisor LEFT JOIN tbl_usuarios tu ON tu.idtbl_usuarios = tm.tbl_usuarios_idtbl_usuarios LEFT JOIN ctl_unidades_medida cum ON cum.idctl_unidades_medida = tcm.ctl_unidades_medida_idctl_unidades_medida LEFT JOIN tbl_tramo_fibra_optica tfo ON tfo.idtbl_tramo_fibra_optica = tm.tbl_tramo_fibra_optica_idtbl_tramo_fibra_optica LEFT JOIN tbl_clientes tcc ON tcc.idtbl_clientes = tm.tbl_clientes_idtbl_clientes LEFT JOIN tbl_solicitud_material ON tbl_solicitud_material.tbl_mantenimientos_idtbl_mantenimientos = tm.idtbl_mantenimientos WHERE tm.zte = 1 AND tm.tbl_segmentos_proyecto_idtbl_segmentos_proyecto = 324 AND tbl_solicitud_material.tbl_usuarios_idtbl_usuarios_supervisor = $usuario AND (tm.estatus = 'SV' || tm.estatus = 'SP') AND (ttr.tipo_red LIKE '%$buscar%' OR tfo.nombre_oracle LIKE '%$buscar%' OR tus.nombre LIKE '%$buscar%' OR tcm.descripcion LIKE '%$buscar%') GROUP BY tm.idtbl_mantenimientos ORDER BY tm.idtbl_mantenimientos ASC " . $limit);			
		}
        return $query->result();
    }

	//Trae todos los generadores zte de Tcg3
	public function mostrarGeneradoresZteTcg3($buscar = '', $inicio = false, $cantidadRegistro = false)
    {
        $user = $this->session->userdata('id');
        $limit = '';
        if ($inicio !== false && $cantidadRegistro !== false) {
            $limit = 'LIMIT ' . $inicio . "," . $cantidadRegistro;
        }
		if($this->session->userdata('tipo') == 18){
			$usuario = $this->session->userdata('id_usuario');
			$query = $this->db->query("SELECT tm.*, dm.*, tus.nombre AS autor, tfo.*, tcc.razon_social, ttr.tipo_red FROM tbl_mantenimientos tm LEFT JOIN dtl_mantenimientos dm ON dm.tbl_mantenimientos_idtbl_mantenimientos = tm.idtbl_mantenimientos LEFT JOIN tbl_tipo_red ttr ON ttr.idtbl_tipo_red = tm.tbl_tipo_red_idtbl_tipo_red LEFT JOIN tbl_solicitud_material tsm ON tsm.tbl_mantenimientos_idtbl_mantenimientos = tm.idtbl_mantenimientos LEFT JOIN tbl_users tus ON tus.idtbl_users = tm.tbl_users_idtbl_users_supervisor LEFT JOIN tbl_clientes tcc ON tcc.idtbl_clientes = tm.tbl_clientes_idtbl_clientes LEFT JOIN tbl_tramo_fibra_optica tfo ON tfo.idtbl_tramo_fibra_optica = tm.tbl_tramo_fibra_optica_idtbl_tramo_fibra_optica WHERE tsm.tbl_usuarios_idtbl_usuarios = $usuario AND tm.tbl_segmentos_proyecto_idtbl_segmentos_proyecto = 325 AND (ttr.tipo_red LIKE '%$buscar%' OR tfo.nombre_oracle LIKE '%$buscar%' OR tcm.descripcion LIKE '%$buscar%') GROUP BY tm.idtbl_mantenimientos ORDER BY tm.idtbl_mantenimientos DESC " . $limit);
        }elseif($this->session->userdata('tipo') == 17 || $this->session->userdata('tipo') == 19 || $this->session->userdata('tipo') == 21){
            $query = $this->db->query("SELECT tm.*, dm.*, tfo.*, tcm.descripcion AS descripcion_servicio, cum.unidad_medida_abr, ttr.tipo_red, SUM(tjg.kilometraje) AS kilometraje, tjg.fecha_justificacion, tus.nombre, tu.nombres, tu.apellido_paterno, tu.apellido_materno, (SELECT DATE_FORMAT(MAX(fecha_justificacion),'%Y-%m-%d') FROM tbl_justificacion_generador LEFT JOIN tbl_mantenimientos ON tbl_mantenimientos.idtbl_mantenimientos = tbl_justificacion_generador.tbl_mantenimientos_idtbl_mantenimientos WHERE tbl_mantenimientos.tbl_segmentos_proyecto_idtbl_segmentos_proyecto = 322 AND tbl_mantenimientos.idtbl_mantenimientos = tm.idtbl_mantenimientos) AS ultima_fecha FROM tbl_mantenimientos tm LEFT JOIN dtl_mantenimientos dm ON dm.tbl_mantenimientos_idtbl_mantenimientos = tm.idtbl_mantenimientos LEFT JOIN tbl_tipo_red ttr ON ttr.idtbl_tipo_red = tm.tbl_tipo_red_idtbl_tipo_red LEFT JOIN tbl_catalogo_mantenimientos tcm ON tcm.idtbl_catalogo_mantenimientos = dm.tbl_catalogo_mantenimientos_idtbl_catalogo_mantenimientos LEFT JOIN tbl_users tus ON tus.idtbl_users = tm.tbl_users_idtbl_users_supervisor LEFT JOIN tbl_usuarios tu ON tu.idtbl_usuarios = tm.tbl_usuarios_idtbl_usuarios LEFT JOIN ctl_unidades_medida cum ON cum.idctl_unidades_medida = tcm.ctl_unidades_medida_idctl_unidades_medida LEFT JOIN tbl_tramo_fibra_optica tfo ON tfo.idtbl_tramo_fibra_optica = tm.tbl_tramo_fibra_optica_idtbl_tramo_fibra_optica LEFT JOIN tbl_justificacion_generador tjg ON tjg.tbl_mantenimientos_idtbl_mantenimientos = tm.idtbl_mantenimientos WHERE tm.zte = 1 AND tm.tbl_segmentos_proyecto_idtbl_segmentos_proyecto = 325 AND (ttr.tipo_red LIKE '%$buscar%' OR tfo.nombre_oracle LIKE '%$buscar%' OR tus.nombre LIKE '%$buscar%' OR tcm.descripcion LIKE '%$buscar%') GROUP BY tm.idtbl_mantenimientos ORDER BY tm.idtbl_mantenimientos ASC " . $limit);
        }else{
			$usuario = $this->session->userdata('id_usuario');
			$query = $this->db->query("SELECT tm.*, dm.*, tus.nombre AS autor, tfo.*, tcc.razon_social, tcm.descripcion AS descripcion_servicio, cum.unidad_medida_abr, ttr.tipo_red, tus.nombre, tu.nombres, tu.apellido_paterno, tu.apellido_materno, (SELECT DATE_FORMAT(MAX(fecha_justificacion),'%Y-%m-%d') FROM tbl_justificacion_generador LEFT JOIN tbl_mantenimientos ON tbl_mantenimientos.idtbl_mantenimientos = tbl_justificacion_generador.tbl_mantenimientos_idtbl_mantenimientos WHERE tbl_mantenimientos.tbl_segmentos_proyecto_idtbl_segmentos_proyecto = 322 AND tbl_mantenimientos.idtbl_mantenimientos = tm.idtbl_mantenimientos) AS ultima_fecha FROM tbl_mantenimientos tm LEFT JOIN dtl_mantenimientos dm ON dm.tbl_mantenimientos_idtbl_mantenimientos = tm.idtbl_mantenimientos LEFT JOIN tbl_tipo_red ttr ON ttr.idtbl_tipo_red = tm.tbl_tipo_red_idtbl_tipo_red LEFT JOIN tbl_catalogo_mantenimientos tcm ON tcm.idtbl_catalogo_mantenimientos = dm.tbl_catalogo_mantenimientos_idtbl_catalogo_mantenimientos LEFT JOIN tbl_users tus ON tus.idtbl_users = tm.tbl_users_idtbl_users_supervisor LEFT JOIN tbl_usuarios tu ON tu.idtbl_usuarios = tm.tbl_usuarios_idtbl_usuarios LEFT JOIN ctl_unidades_medida cum ON cum.idctl_unidades_medida = tcm.ctl_unidades_medida_idctl_unidades_medida LEFT JOIN tbl_tramo_fibra_optica tfo ON tfo.idtbl_tramo_fibra_optica = tm.tbl_tramo_fibra_optica_idtbl_tramo_fibra_optica LEFT JOIN tbl_clientes tcc ON tcc.idtbl_clientes = tm.tbl_clientes_idtbl_clientes LEFT JOIN tbl_solicitud_material ON tbl_solicitud_material.tbl_mantenimientos_idtbl_mantenimientos = tm.idtbl_mantenimientos WHERE tm.zte = 1 AND tm.tbl_segmentos_proyecto_idtbl_segmentos_proyecto = 325 AND tbl_solicitud_material.tbl_usuarios_idtbl_usuarios_supervisor = $usuario AND (tm.estatus = 'SV' || tm.estatus = 'SP') AND (ttr.tipo_red LIKE '%$buscar%' OR tfo.nombre_oracle LIKE '%$buscar%' OR tus.nombre LIKE '%$buscar%' OR tcm.descripcion LIKE '%$buscar%') GROUP BY tm.idtbl_mantenimientos ORDER BY tm.idtbl_mantenimientos ASC " . $limit);			
		}
        return $query->result();
    }


	//Trae todos los generadores zte de Heron
	public function mostrarGeneradoresZteHeron($buscar = '', $inicio = false, $cantidadRegistro = false)
    {
        $user = $this->session->userdata('id');
        $limit = '';
        if ($inicio !== false && $cantidadRegistro !== false) {
            $limit = 'LIMIT ' . $inicio . "," . $cantidadRegistro;
        }
		if($this->session->userdata('tipo') == 18){
			$usuario = $this->session->userdata('id_usuario');
			$query = $this->db->query("SELECT tm.*, dm.*, tus.nombre AS autor, tfo.*, tcc.razon_social, ttr.tipo_red FROM tbl_mantenimientos tm LEFT JOIN dtl_mantenimientos dm ON dm.tbl_mantenimientos_idtbl_mantenimientos = tm.idtbl_mantenimientos LEFT JOIN tbl_tipo_red ttr ON ttr.idtbl_tipo_red = tm.tbl_tipo_red_idtbl_tipo_red LEFT JOIN tbl_solicitud_material tsm ON tsm.tbl_mantenimientos_idtbl_mantenimientos = tm.idtbl_mantenimientos LEFT JOIN tbl_users tus ON tus.idtbl_users = tm.tbl_users_idtbl_users_supervisor LEFT JOIN tbl_clientes tcc ON tcc.idtbl_clientes = tm.tbl_clientes_idtbl_clientes LEFT JOIN tbl_tramo_fibra_optica tfo ON tfo.idtbl_tramo_fibra_optica = tm.tbl_tramo_fibra_optica_idtbl_tramo_fibra_optica WHERE tsm.tbl_usuarios_idtbl_usuarios = $usuario AND tm.tbl_segmentos_proyecto_idtbl_segmentos_proyecto = 309 AND (ttr.tipo_red LIKE '%$buscar%' OR tfo.nombre_oracle LIKE '%$buscar%' OR tcm.descripcion LIKE '%$buscar%') GROUP BY tm.idtbl_mantenimientos ORDER BY tm.idtbl_mantenimientos DESC " . $limit);
        }elseif($this->session->userdata('tipo') == 17 || $this->session->userdata('tipo') == 19 || $this->session->userdata('tipo') == 21){
            $query = $this->db->query("SELECT tm.*, dm.*, tfo.*, tcm.descripcion AS descripcion_servicio, cum.unidad_medida_abr, ttr.tipo_red, SUM(tjg.kilometraje) AS kilometraje, tjg.fecha_justificacion, tus.nombre, tu.nombres, tu.apellido_paterno, tu.apellido_materno, (SELECT DATE_FORMAT(MAX(fecha_justificacion),'%Y-%m-%d') FROM tbl_justificacion_generador LEFT JOIN tbl_mantenimientos ON tbl_mantenimientos.idtbl_mantenimientos = tbl_justificacion_generador.tbl_mantenimientos_idtbl_mantenimientos WHERE tbl_mantenimientos.tbl_segmentos_proyecto_idtbl_segmentos_proyecto = 322 AND tbl_mantenimientos.idtbl_mantenimientos = tm.idtbl_mantenimientos) AS ultima_fecha FROM tbl_mantenimientos tm LEFT JOIN dtl_mantenimientos dm ON dm.tbl_mantenimientos_idtbl_mantenimientos = tm.idtbl_mantenimientos LEFT JOIN tbl_tipo_red ttr ON ttr.idtbl_tipo_red = tm.tbl_tipo_red_idtbl_tipo_red LEFT JOIN tbl_catalogo_mantenimientos tcm ON tcm.idtbl_catalogo_mantenimientos = dm.tbl_catalogo_mantenimientos_idtbl_catalogo_mantenimientos LEFT JOIN tbl_users tus ON tus.idtbl_users = tm.tbl_users_idtbl_users_supervisor LEFT JOIN tbl_usuarios tu ON tu.idtbl_usuarios = tm.tbl_usuarios_idtbl_usuarios LEFT JOIN ctl_unidades_medida cum ON cum.idctl_unidades_medida = tcm.ctl_unidades_medida_idctl_unidades_medida LEFT JOIN tbl_tramo_fibra_optica tfo ON tfo.idtbl_tramo_fibra_optica = tm.tbl_tramo_fibra_optica_idtbl_tramo_fibra_optica LEFT JOIN tbl_justificacion_generador tjg ON tjg.tbl_mantenimientos_idtbl_mantenimientos = tm.idtbl_mantenimientos WHERE tm.zte = 1 AND tm.tbl_segmentos_proyecto_idtbl_segmentos_proyecto = 309 AND (ttr.tipo_red LIKE '%$buscar%' OR tfo.nombre_oracle LIKE '%$buscar%' OR tus.nombre LIKE '%$buscar%' OR tcm.descripcion LIKE '%$buscar%') GROUP BY tm.idtbl_mantenimientos ORDER BY tm.idtbl_mantenimientos ASC " . $limit);
        }else{
			$usuario = $this->session->userdata('id_usuario');
			$query = $this->db->query("SELECT tm.*, dm.*, tus.nombre AS autor, tfo.*, tcc.razon_social, tcm.descripcion AS descripcion_servicio, cum.unidad_medida_abr, ttr.tipo_red, tus.nombre, tu.nombres, tu.apellido_paterno, tu.apellido_materno, (SELECT DATE_FORMAT(MAX(fecha_justificacion),'%Y-%m-%d') FROM tbl_justificacion_generador LEFT JOIN tbl_mantenimientos ON tbl_mantenimientos.idtbl_mantenimientos = tbl_justificacion_generador.tbl_mantenimientos_idtbl_mantenimientos WHERE tbl_mantenimientos.tbl_segmentos_proyecto_idtbl_segmentos_proyecto = 322 AND tbl_mantenimientos.idtbl_mantenimientos = tm.idtbl_mantenimientos) AS ultima_fecha FROM tbl_mantenimientos tm LEFT JOIN dtl_mantenimientos dm ON dm.tbl_mantenimientos_idtbl_mantenimientos = tm.idtbl_mantenimientos LEFT JOIN tbl_tipo_red ttr ON ttr.idtbl_tipo_red = tm.tbl_tipo_red_idtbl_tipo_red LEFT JOIN tbl_catalogo_mantenimientos tcm ON tcm.idtbl_catalogo_mantenimientos = dm.tbl_catalogo_mantenimientos_idtbl_catalogo_mantenimientos LEFT JOIN tbl_users tus ON tus.idtbl_users = tm.tbl_users_idtbl_users_supervisor LEFT JOIN tbl_usuarios tu ON tu.idtbl_usuarios = tm.tbl_usuarios_idtbl_usuarios LEFT JOIN ctl_unidades_medida cum ON cum.idctl_unidades_medida = tcm.ctl_unidades_medida_idctl_unidades_medida LEFT JOIN tbl_tramo_fibra_optica tfo ON tfo.idtbl_tramo_fibra_optica = tm.tbl_tramo_fibra_optica_idtbl_tramo_fibra_optica LEFT JOIN tbl_clientes tcc ON tcc.idtbl_clientes = tm.tbl_clientes_idtbl_clientes LEFT JOIN tbl_solicitud_material ON tbl_solicitud_material.tbl_mantenimientos_idtbl_mantenimientos = tm.idtbl_mantenimientos WHERE tm.zte = 1 AND tm.tbl_segmentos_proyecto_idtbl_segmentos_proyecto = 309 AND tbl_solicitud_material.tbl_usuarios_idtbl_usuarios_supervisor = $usuario AND (tm.estatus = 'SV' || tm.estatus = 'SP') AND (ttr.tipo_red LIKE '%$buscar%' OR tfo.nombre_oracle LIKE '%$buscar%' OR tus.nombre LIKE '%$buscar%' OR tcm.descripcion LIKE '%$buscar%') GROUP BY tm.idtbl_mantenimientos ORDER BY tm.idtbl_mantenimientos ASC " . $limit);			
		}
        return $query->result();
    }

	//Trae todos los generadores zte de Jarachina
	public function mostrarGeneradoresZteJarachina($buscar = '', $inicio = false, $cantidadRegistro = false)
    {
        $user = $this->session->userdata('id');
        $limit = '';
        if ($inicio !== false && $cantidadRegistro !== false) {
            $limit = 'LIMIT ' . $inicio . "," . $cantidadRegistro;
        }
		if($this->session->userdata('tipo') == 18){
			$usuario = $this->session->userdata('id_usuario');
			$query = $this->db->query("SELECT tm.*, dm.*, tus.nombre AS autor, tfo.*, tcc.razon_social, ttr.tipo_red FROM tbl_mantenimientos tm LEFT JOIN dtl_mantenimientos dm ON dm.tbl_mantenimientos_idtbl_mantenimientos = tm.idtbl_mantenimientos LEFT JOIN tbl_tipo_red ttr ON ttr.idtbl_tipo_red = tm.tbl_tipo_red_idtbl_tipo_red LEFT JOIN tbl_solicitud_material tsm ON tsm.tbl_mantenimientos_idtbl_mantenimientos = tm.idtbl_mantenimientos LEFT JOIN tbl_users tus ON tus.idtbl_users = tm.tbl_users_idtbl_users_supervisor LEFT JOIN tbl_clientes tcc ON tcc.idtbl_clientes = tm.tbl_clientes_idtbl_clientes LEFT JOIN tbl_tramo_fibra_optica tfo ON tfo.idtbl_tramo_fibra_optica = tm.tbl_tramo_fibra_optica_idtbl_tramo_fibra_optica WHERE tsm.tbl_usuarios_idtbl_usuarios = $usuario AND tm.tbl_segmentos_proyecto_idtbl_segmentos_proyecto = 311 AND (ttr.tipo_red LIKE '%$buscar%' OR tfo.nombre_oracle LIKE '%$buscar%' OR tcm.descripcion LIKE '%$buscar%') GROUP BY tm.idtbl_mantenimientos ORDER BY tm.idtbl_mantenimientos DESC " . $limit);
        }elseif($this->session->userdata('tipo') == 17 || $this->session->userdata('tipo') == 19 || $this->session->userdata('tipo') == 21){
            $query = $this->db->query("SELECT tm.*, dm.*, tfo.*, tcm.descripcion AS descripcion_servicio, cum.unidad_medida_abr, ttr.tipo_red, SUM(tjg.kilometraje) AS kilometraje, tjg.fecha_justificacion, tus.nombre, tu.nombres, tu.apellido_paterno, tu.apellido_materno, (SELECT DATE_FORMAT(MAX(fecha_justificacion),'%Y-%m-%d') FROM tbl_justificacion_generador LEFT JOIN tbl_mantenimientos ON tbl_mantenimientos.idtbl_mantenimientos = tbl_justificacion_generador.tbl_mantenimientos_idtbl_mantenimientos WHERE tbl_mantenimientos.tbl_segmentos_proyecto_idtbl_segmentos_proyecto = 322 AND tbl_mantenimientos.idtbl_mantenimientos = tm.idtbl_mantenimientos) AS ultima_fecha FROM tbl_mantenimientos tm LEFT JOIN dtl_mantenimientos dm ON dm.tbl_mantenimientos_idtbl_mantenimientos = tm.idtbl_mantenimientos LEFT JOIN tbl_tipo_red ttr ON ttr.idtbl_tipo_red = tm.tbl_tipo_red_idtbl_tipo_red LEFT JOIN tbl_catalogo_mantenimientos tcm ON tcm.idtbl_catalogo_mantenimientos = dm.tbl_catalogo_mantenimientos_idtbl_catalogo_mantenimientos LEFT JOIN tbl_users tus ON tus.idtbl_users = tm.tbl_users_idtbl_users_supervisor LEFT JOIN tbl_usuarios tu ON tu.idtbl_usuarios = tm.tbl_usuarios_idtbl_usuarios LEFT JOIN ctl_unidades_medida cum ON cum.idctl_unidades_medida = tcm.ctl_unidades_medida_idctl_unidades_medida LEFT JOIN tbl_tramo_fibra_optica tfo ON tfo.idtbl_tramo_fibra_optica = tm.tbl_tramo_fibra_optica_idtbl_tramo_fibra_optica LEFT JOIN tbl_justificacion_generador tjg ON tjg.tbl_mantenimientos_idtbl_mantenimientos = tm.idtbl_mantenimientos WHERE tm.zte = 1 AND tm.tbl_segmentos_proyecto_idtbl_segmentos_proyecto = 311 AND (ttr.tipo_red LIKE '%$buscar%' OR tfo.nombre_oracle LIKE '%$buscar%' OR tus.nombre LIKE '%$buscar%' OR tcm.descripcion LIKE '%$buscar%') GROUP BY tm.idtbl_mantenimientos ORDER BY tm.idtbl_mantenimientos ASC " . $limit);
        }else{
			$usuario = $this->session->userdata('id_usuario');
			$query = $this->db->query("SELECT tm.*, dm.*, tus.nombre AS autor, tfo.*, tcc.razon_social, tcm.descripcion AS descripcion_servicio, cum.unidad_medida_abr, ttr.tipo_red, tus.nombre, tu.nombres, tu.apellido_paterno, tu.apellido_materno, (SELECT DATE_FORMAT(MAX(fecha_justificacion),'%Y-%m-%d') FROM tbl_justificacion_generador LEFT JOIN tbl_mantenimientos ON tbl_mantenimientos.idtbl_mantenimientos = tbl_justificacion_generador.tbl_mantenimientos_idtbl_mantenimientos WHERE tbl_mantenimientos.tbl_segmentos_proyecto_idtbl_segmentos_proyecto = 322 AND tbl_mantenimientos.idtbl_mantenimientos = tm.idtbl_mantenimientos) AS ultima_fecha FROM tbl_mantenimientos tm LEFT JOIN dtl_mantenimientos dm ON dm.tbl_mantenimientos_idtbl_mantenimientos = tm.idtbl_mantenimientos LEFT JOIN tbl_tipo_red ttr ON ttr.idtbl_tipo_red = tm.tbl_tipo_red_idtbl_tipo_red LEFT JOIN tbl_catalogo_mantenimientos tcm ON tcm.idtbl_catalogo_mantenimientos = dm.tbl_catalogo_mantenimientos_idtbl_catalogo_mantenimientos LEFT JOIN tbl_users tus ON tus.idtbl_users = tm.tbl_users_idtbl_users_supervisor LEFT JOIN tbl_usuarios tu ON tu.idtbl_usuarios = tm.tbl_usuarios_idtbl_usuarios LEFT JOIN ctl_unidades_medida cum ON cum.idctl_unidades_medida = tcm.ctl_unidades_medida_idctl_unidades_medida LEFT JOIN tbl_tramo_fibra_optica tfo ON tfo.idtbl_tramo_fibra_optica = tm.tbl_tramo_fibra_optica_idtbl_tramo_fibra_optica LEFT JOIN tbl_clientes tcc ON tcc.idtbl_clientes = tm.tbl_clientes_idtbl_clientes LEFT JOIN tbl_solicitud_material ON tbl_solicitud_material.tbl_mantenimientos_idtbl_mantenimientos = tm.idtbl_mantenimientos WHERE tm.zte = 1 AND tm.tbl_segmentos_proyecto_idtbl_segmentos_proyecto = 311 AND tbl_solicitud_material.tbl_usuarios_idtbl_usuarios_supervisor = $usuario AND (tm.estatus = 'SV' || tm.estatus = 'SP') AND (ttr.tipo_red LIKE '%$buscar%' OR tfo.nombre_oracle LIKE '%$buscar%' OR tus.nombre LIKE '%$buscar%' OR tcm.descripcion LIKE '%$buscar%') GROUP BY tm.idtbl_mantenimientos ORDER BY tm.idtbl_mantenimientos ASC " . $limit);			
		}
        return $query->result();
    }

	//Trae todos los generadores zte de Bravo
	public function mostrarGeneradoresZteBravo($buscar = '', $inicio = false, $cantidadRegistro = false)
    {
        $user = $this->session->userdata('id');
        $limit = '';
        if ($inicio !== false && $cantidadRegistro !== false) {
            $limit = 'LIMIT ' . $inicio . "," . $cantidadRegistro;
        }
		if($this->session->userdata('tipo') == 18){
			$usuario = $this->session->userdata('id_usuario');
			$query = $this->db->query("SELECT tm.*, dm.*, tus.nombre AS autor, tfo.*, tcc.razon_social, ttr.tipo_red FROM tbl_mantenimientos tm LEFT JOIN dtl_mantenimientos dm ON dm.tbl_mantenimientos_idtbl_mantenimientos = tm.idtbl_mantenimientos LEFT JOIN tbl_tipo_red ttr ON ttr.idtbl_tipo_red = tm.tbl_tipo_red_idtbl_tipo_red LEFT JOIN tbl_solicitud_material tsm ON tsm.tbl_mantenimientos_idtbl_mantenimientos = tm.idtbl_mantenimientos LEFT JOIN tbl_users tus ON tus.idtbl_users = tm.tbl_users_idtbl_users_supervisor LEFT JOIN tbl_clientes tcc ON tcc.idtbl_clientes = tm.tbl_clientes_idtbl_clientes LEFT JOIN tbl_tramo_fibra_optica tfo ON tfo.idtbl_tramo_fibra_optica = tm.tbl_tramo_fibra_optica_idtbl_tramo_fibra_optica WHERE tsm.tbl_usuarios_idtbl_usuarios = $usuario AND tm.tbl_segmentos_proyecto_idtbl_segmentos_proyecto = 312 AND (ttr.tipo_red LIKE '%$buscar%' OR tfo.nombre_oracle LIKE '%$buscar%' OR tcm.descripcion LIKE '%$buscar%') GROUP BY tm.idtbl_mantenimientos ORDER BY tm.idtbl_mantenimientos DESC " . $limit);
        }elseif($this->session->userdata('tipo') == 17 || $this->session->userdata('tipo') == 19 || $this->session->userdata('tipo') == 21){
            $query = $this->db->query("SELECT tm.*, dm.*, tfo.*, tcm.descripcion AS descripcion_servicio, cum.unidad_medida_abr, ttr.tipo_red, SUM(tjg.kilometraje) AS kilometraje, tjg.fecha_justificacion, tus.nombre, tu.nombres, tu.apellido_paterno, tu.apellido_materno, (SELECT DATE_FORMAT(MAX(fecha_justificacion),'%Y-%m-%d') FROM tbl_justificacion_generador LEFT JOIN tbl_mantenimientos ON tbl_mantenimientos.idtbl_mantenimientos = tbl_justificacion_generador.tbl_mantenimientos_idtbl_mantenimientos WHERE tbl_mantenimientos.tbl_segmentos_proyecto_idtbl_segmentos_proyecto = 322 AND tbl_mantenimientos.idtbl_mantenimientos = tm.idtbl_mantenimientos) AS ultima_fecha FROM tbl_mantenimientos tm LEFT JOIN dtl_mantenimientos dm ON dm.tbl_mantenimientos_idtbl_mantenimientos = tm.idtbl_mantenimientos LEFT JOIN tbl_tipo_red ttr ON ttr.idtbl_tipo_red = tm.tbl_tipo_red_idtbl_tipo_red LEFT JOIN tbl_catalogo_mantenimientos tcm ON tcm.idtbl_catalogo_mantenimientos = dm.tbl_catalogo_mantenimientos_idtbl_catalogo_mantenimientos LEFT JOIN tbl_users tus ON tus.idtbl_users = tm.tbl_users_idtbl_users_supervisor LEFT JOIN tbl_usuarios tu ON tu.idtbl_usuarios = tm.tbl_usuarios_idtbl_usuarios LEFT JOIN ctl_unidades_medida cum ON cum.idctl_unidades_medida = tcm.ctl_unidades_medida_idctl_unidades_medida LEFT JOIN tbl_tramo_fibra_optica tfo ON tfo.idtbl_tramo_fibra_optica = tm.tbl_tramo_fibra_optica_idtbl_tramo_fibra_optica LEFT JOIN tbl_justificacion_generador tjg ON tjg.tbl_mantenimientos_idtbl_mantenimientos = tm.idtbl_mantenimientos WHERE tm.zte = 1 AND tm.tbl_segmentos_proyecto_idtbl_segmentos_proyecto = 312 AND (ttr.tipo_red LIKE '%$buscar%' OR tfo.nombre_oracle LIKE '%$buscar%' OR tus.nombre LIKE '%$buscar%' OR tcm.descripcion LIKE '%$buscar%') GROUP BY tm.idtbl_mantenimientos ORDER BY tm.idtbl_mantenimientos ASC " . $limit);
        }else{
			$usuario = $this->session->userdata('id_usuario');
			$query = $this->db->query("SELECT tm.*, dm.*, tus.nombre AS autor, tfo.*, tcc.razon_social, tcm.descripcion AS descripcion_servicio, cum.unidad_medida_abr, ttr.tipo_red, tus.nombre, tu.nombres, tu.apellido_paterno, tu.apellido_materno, (SELECT DATE_FORMAT(MAX(fecha_justificacion),'%Y-%m-%d') FROM tbl_justificacion_generador LEFT JOIN tbl_mantenimientos ON tbl_mantenimientos.idtbl_mantenimientos = tbl_justificacion_generador.tbl_mantenimientos_idtbl_mantenimientos WHERE tbl_mantenimientos.tbl_segmentos_proyecto_idtbl_segmentos_proyecto = 322 AND tbl_mantenimientos.idtbl_mantenimientos = tm.idtbl_mantenimientos) AS ultima_fecha FROM tbl_mantenimientos tm LEFT JOIN dtl_mantenimientos dm ON dm.tbl_mantenimientos_idtbl_mantenimientos = tm.idtbl_mantenimientos LEFT JOIN tbl_tipo_red ttr ON ttr.idtbl_tipo_red = tm.tbl_tipo_red_idtbl_tipo_red LEFT JOIN tbl_catalogo_mantenimientos tcm ON tcm.idtbl_catalogo_mantenimientos = dm.tbl_catalogo_mantenimientos_idtbl_catalogo_mantenimientos LEFT JOIN tbl_users tus ON tus.idtbl_users = tm.tbl_users_idtbl_users_supervisor LEFT JOIN tbl_usuarios tu ON tu.idtbl_usuarios = tm.tbl_usuarios_idtbl_usuarios LEFT JOIN ctl_unidades_medida cum ON cum.idctl_unidades_medida = tcm.ctl_unidades_medida_idctl_unidades_medida LEFT JOIN tbl_tramo_fibra_optica tfo ON tfo.idtbl_tramo_fibra_optica = tm.tbl_tramo_fibra_optica_idtbl_tramo_fibra_optica LEFT JOIN tbl_clientes tcc ON tcc.idtbl_clientes = tm.tbl_clientes_idtbl_clientes LEFT JOIN tbl_solicitud_material ON tbl_solicitud_material.tbl_mantenimientos_idtbl_mantenimientos = tm.idtbl_mantenimientos WHERE tm.zte = 1 AND tm.tbl_segmentos_proyecto_idtbl_segmentos_proyecto = 312 AND tbl_solicitud_material.tbl_usuarios_idtbl_usuarios_supervisor = $usuario AND (tm.estatus = 'SV' || tm.estatus = 'SP') AND (ttr.tipo_red LIKE '%$buscar%' OR tfo.nombre_oracle LIKE '%$buscar%' OR tus.nombre LIKE '%$buscar%' OR tcm.descripcion LIKE '%$buscar%') GROUP BY tm.idtbl_mantenimientos ORDER BY tm.idtbl_mantenimientos ASC " . $limit);			
		}
        return $query->result();
    }


	//Función para traer detalle de un mantenimiento por uid
    public function detalle_mantenimiento($uid)
    {
        $query = $this->db->query("SELECT tm.*, tm.uid AS uid_mantenimiento, dm.*, tfo.*, ts.nombre AS nombre_supervisor, tm.descripcion AS descripcion_mant, cu.unidad_medida_abr, tus.nombre AS autor, tc.idtbl_catalogo_mantenimientos, tc.descripcion, tc.ctl_unidades_medida_idctl_unidades_medida, tc.precio, tc.importe, tc.linea, tc.numero_parte,tp.nombre_proyecto, tp.numero_proyecto, tbl_solicitud_material.estatus_solicitud AS estatus_solicitud_material, tu.nombres, tu.apellido_paterno, tu.apellido_materno FROM tbl_mantenimientos tm LEFT JOIN dtl_mantenimientos dm ON dm.tbl_mantenimientos_idtbl_mantenimientos = tm.idtbl_mantenimientos LEFT JOIN tbl_users tus ON tus.idtbl_users = tm.tbl_users_idtbl_users_supervisor LEFT JOIN tbl_usuarios tu ON tu.idtbl_usuarios = tm.tbl_usuarios_idtbl_usuarios LEFT JOIN tbl_tramo_fibra_optica tfo ON tfo.idtbl_tramo_fibra_optica = tm.tbl_tramo_fibra_optica_idtbl_tramo_fibra_optica LEFT JOIN tbl_supervisor_att ts ON ts.idtbl_supervisor_att = tm.tbl_supervisor_att_idtbl_supervisor_att LEFT JOIN tbl_catalogo_mantenimientos tc ON tc.idtbl_catalogo_mantenimientos = dm.tbl_catalogo_mantenimientos_idtbl_catalogo_mantenimientos LEFT JOIN ctl_unidades_medida cu ON cu.idctl_unidades_medida = tc.ctl_unidades_medida_idctl_unidades_medida LEFT JOIN tbl_proyectos tp ON tp.idtbl_proyectos = tm.tbl_proyectos_idtbl_proyectos LEFT JOIN tbl_solicitud_material ON tbl_solicitud_material.tbl_mantenimientos_idtbl_mantenimientos = tm.idtbl_mantenimientos WHERE tm.uid = '$uid' GROUP BY tm.idtbl_mantenimientos ");
        
        return $query->result();
    }

	//Función para traer detalle de un mantenimiento por uid
    public function detalle_generador($uid)
    {
        $query = $this->db->query("SELECT tm.*, tm.uid AS uid_mantenimiento, dm.*, tfo.*, ts.nombre AS nombre_supervisor, tm.descripcion AS descripcion_mant, cu.unidad_medida_abr, tus.nombre AS autor, tc.idtbl_catalogo_mantenimientos, tc.descripcion, tc.ctl_unidades_medida_idctl_unidades_medida, tc.precio, tc.importe, tc.linea, tc.numero_parte,tp.nombre_proyecto, tp.numero_proyecto FROM tbl_mantenimientos tm LEFT JOIN dtl_mantenimientos dm ON dm.tbl_mantenimientos_idtbl_mantenimientos = tm.idtbl_mantenimientos LEFT JOIN tbl_users tus ON tus.idtbl_users = tm.tbl_users_idtbl_users_supervisor LEFT JOIN tbl_tramo_fibra_optica tfo ON tfo.idtbl_tramo_fibra_optica = tm.tbl_tramo_fibra_optica_idtbl_tramo_fibra_optica LEFT JOIN tbl_supervisor_att ts ON ts.idtbl_supervisor_att = tm.tbl_supervisor_att_idtbl_supervisor_att LEFT JOIN tbl_catalogo_mantenimientos tc ON tc.idtbl_catalogo_mantenimientos = dm.tbl_catalogo_mantenimientos_idtbl_catalogo_mantenimientos LEFT JOIN ctl_unidades_medida cu ON cu.idctl_unidades_medida = tc.ctl_unidades_medida_idctl_unidades_medida LEFT JOIN tbl_proyectos tp ON tp.idtbl_proyectos = tm.tbl_proyectos_idtbl_proyectos WHERE tm.uid = '$uid'");
        
        return $query->result();
    }

	//Función para traer detalle de un mantenimiento por uid
    public function detalle_mantenimientoById($id)
    {
        $query = $this->db->query("SELECT tm.*, tm.uid AS uid_mantenimiento, dm.*, tfo.*, ts.nombre AS nombre_supervisor, tm.descripcion AS descripcion_mant, cu.unidad_medida_abr, tus.nombre AS autor, tc.idtbl_catalogo_mantenimientos, tc.descripcion, tc.ctl_unidades_medida_idctl_unidades_medida, tc.precio, tc.importe, tc.linea, tc.numero_parte,tp.nombre_proyecto, tp.numero_proyecto, tbl_solicitud_material.estatus_solicitud AS estatus_solicitud_material, tsp.segmento, usuario.nombres AS nombre_lider, usuario.apellido_paterno AS paterno_lider, usuario.apellido_materno AS materno_lider FROM tbl_mantenimientos tm LEFT JOIN dtl_mantenimientos dm ON dm.tbl_mantenimientos_idtbl_mantenimientos = tm.idtbl_mantenimientos LEFT JOIN tbl_users tus ON tus.idtbl_users = tm.tbl_users_idtbl_users_supervisor LEFT JOIN tbl_tramo_fibra_optica tfo ON tfo.idtbl_tramo_fibra_optica = tm.tbl_tramo_fibra_optica_idtbl_tramo_fibra_optica LEFT JOIN tbl_supervisor_att ts ON ts.idtbl_supervisor_att = tm.tbl_supervisor_att_idtbl_supervisor_att LEFT JOIN tbl_catalogo_mantenimientos tc ON tc.idtbl_catalogo_mantenimientos = dm.tbl_catalogo_mantenimientos_idtbl_catalogo_mantenimientos LEFT JOIN ctl_unidades_medida cu ON cu.idctl_unidades_medida = tc.ctl_unidades_medida_idctl_unidades_medida LEFT JOIN tbl_proyectos tp ON tp.idtbl_proyectos = tm.tbl_proyectos_idtbl_proyectos LEFT JOIN tbl_solicitud_material ON tbl_solicitud_material.tbl_mantenimientos_idtbl_mantenimientos = tm.idtbl_mantenimientos LEFT JOIN tbl_segmentos_proyecto tsp ON tm.tbl_segmentos_proyecto_idtbl_segmentos_proyecto = tsp.idtbl_segmentos_proyecto LEFT JOIN tbl_usuarios usuario ON usuario.idtbl_usuarios = tm.tbl_usuarios_idtbl_usuarios WHERE tm.idtbl_mantenimientos = '$id' GROUP BY tm.idtbl_mantenimientos ");
        
        return $query->result();
    }

	//Busca las imagenes de un mantenimiento
    public function imagenes_mantenimiento($uid){
    	$archivos = scandir(getcwd() . DIRECTORY_SEPARATOR . 'uploads' . DIRECTORY_SEPARATOR . 'solicitud_servicio' . DIRECTORY_SEPARATOR . $uid);
    	foreach ($archivos as $key => $archivo) {
    		if(!is_file(getcwd() . DIRECTORY_SEPARATOR . 'uploads' . DIRECTORY_SEPARATOR . 'solicitud_servicio' . DIRECTORY_SEPARATOR . $uid . DIRECTORY_SEPARATOR . $archivo)){
    			unset($archivos[$key]);
    		}
    	}
    	return $archivos;
    }

	//Traer todos los tramos de fibra optica
	public function tramos_fibra_optica($buscar='', $inicio = false, $cantidadRegistro = false) {
		$limit = '';
    	if($inicio !== false && $cantidadRegistro !== false) {
      		$limit = 'LIMIT ' . $inicio . "," . $cantidadRegistro;
    	}
		$query = $this->db->query("SELECT * FROM tbl_tramo_fibra_optica WHERE nombre_oracle LIKE '%$buscar%' OR clave_oracle LIKE '%$buscar%' " . $limit);
		return $query->result();
	}


	//Traer todos los supervisores de at&t
	public function supervisores_att($buscar='', $inicio = false, $cantidadRegistro = false) {
		$limit = '';
    	if($inicio !== false && $cantidadRegistro !== false) {
      		$limit = 'LIMIT ' . $inicio . "," . $cantidadRegistro;
    	}
		$query = $this->db->query("SELECT * FROM tbl_supervisor_att WHERE nombre LIKE '%$buscar%' OR correo LIKE '%$buscar%' " . $limit);
		return $query->result();
	}

	public function getCatalogoPorNeodata($neodata, $tipo) {
		/*if($this->session->userdata('tipo') == 14){
        	$query = $this->db->query("SELECT * FROM tbl_catalogo WHERE (neodata LIKE '%" . $neodata . "%' OR descripcion LIKE '%" . $neodata . "%') AND (tbl_catalogo.ctl_categorias_idctl_categorias = 28 OR tbl_catalogo.ctl_categorias_idctl_categorias = 29 OR tbl_catalogo.ctl_categorias_idctl_categorias = 35)");
            return $query->result();
        }else{*/
        	$this->db->select('tbl_catalogo.*, tbl_catalogo.tipo as tipo_producto, ctl_categorias.categoria,ctl_categorias.idctl_categorias,ctl_categorias.tipo, ctl_unidades_medida.idctl_unidades_medida, ctl_unidades_medida.unidad_medida');
			$this->db->from('tbl_catalogo');
			$this->db->join('ctl_categorias', 'tbl_catalogo.ctl_categorias_idctl_categorias=ctl_categorias.idctl_categorias', 'left');
			$this->db->join('ctl_unidades_medida', 'tbl_catalogo.ctl_unidades_medida_idctl_unidades_medida=ctl_unidades_medida.idctl_unidades_medida', 'left');
			if((isset($_POST['tipo_almacen']) && ($_POST['tipo_almacen'] == 'Cliente')) && ($_POST['segmento'] != '' && $_POST['segmento'] != NULL)){
				$this->db->select('dtl_almacen.existencias');
				$this->db->join('dtl_almacen', 'dtl_almacen.tbl_catalogo_idtbl_catalogo=tbl_catalogo.idtbl_catalogo');
				$this->db->join('tbl_almacenes', 'tbl_almacenes.idtbl_almacenes=dtl_almacen.tbl_almacenes_idtbl_almacenes');
				$this->db->where('dtl_almacen.estatus', 'almacen');
				if(isset($_POST['uid_almacen'])){
					$this->db->where('tbl_almacenes.uid=', $this->input->post('uid_almacen'));
				}else{
					$this->db->where('tbl_almacenes.tbl_segmentos_proyecto_idtbl_segmentos_proyecto', $this->input->post('segmento'));
				}
				if($this->input->post('segmento') == 385 || $this->input->post('segmento') == 642 || $this->input->post('proyecto') == 228 || $this->input->post('proyecto') == 266 || $this->input->post('proyecto') == 293 || $this->input->post('proyecto') == 314 || $this->input->post('proyecto') == 326 || $this->input->post('proyecto') == 333 || $this->input->post('proyecto') == 334 || $this->input->post('proyecto') == 335 || $this->input->post('proyecto') == 336){
				$this->db->or_where('tbl_almacenes.tbl_proyectos_idtbl_proyectos=', $this->input->post('proyecto'));
				}

			}elseif((isset($_POST['tipo_almacen']) && ($_POST['tipo_almacen'] == 'Cliente')) && ($_POST['segmento'] == '' || $_POST['segmento'] == NULL)){
				$this->db->select('dtl_almacen.existencias');
				$this->db->join('dtl_almacen', 'dtl_almacen.tbl_catalogo_idtbl_catalogo=tbl_catalogo.idtbl_catalogo');
				$this->db->join('tbl_almacenes', 'tbl_almacenes.idtbl_almacenes=dtl_almacen.tbl_almacenes_idtbl_almacenes');
				$this->db->where('dtl_almacen.estatus', 'almacen');
				if(isset($_POST['uid_almacen'])){
					$this->db->where('tbl_almacenes.uid=', $this->input->post('uid_almacen'));
				}else{
					$this->db->where('tbl_almacenes.tbl_proyectos_idtbl_proyectos=', $this->input->post('proyecto'));
				}
				

			}else{
                if ($tipo != null) {
                    if ($tipo == "almacen_general") {
						if(isset($_POST['tipo_almacen']) && $_POST['tipo_almacen'] == 'Almacen General'){
						$this->db->select('dtl_almacen.existencias');
						$this->db->join('dtl_almacen', 'dtl_almacen.tbl_catalogo_idtbl_catalogo=tbl_catalogo.idtbl_catalogo');
						$this->db->where('dtl_almacen.tbl_almacenes_idtbl_almacenes', 1);
						$this->db->where('dtl_almacen.estatus', 'almacen');
						}
                        $this->db->group_start();
                        $this->db->where('tbl_catalogo.tipo=', null);
                        //$this->db->or_where('tbl_catalogo.tipo=', 1);
                        $this->db->or_where('tbl_catalogo.tipo=', 3);
                        $this->db->group_end();
                    } elseif ($tipo == "control_vehicular") {
                        $this->db->where('tbl_catalogo.tipo=', 4);
                    } elseif ($tipo == "refacciones_control_vehicular") {
                        $this->db->where('tbl_catalogo.tipo=', 5);
                    } elseif ($tipo == "alto_costo") {
                        $this->db->where('tbl_catalogo.tipo=', 2);
                    } elseif ($tipo == "area_medica") {
                        $this->db->where('tbl_catalogo.tipo=', 7);
                    } elseif ($tipo == "kuali_digital") {
                        //$this->db->join('dtl_almacen', 'tbl_catalogo.idtbl_catalogo=dtl_almacen.tbl_catalogo_idtbl_catalogo', 'left');
                        //$this->db->where('dtl_almacen.tbl_almacenes_idtbl_almacenes=', 16);
						$this->db->where('tbl_catalogo.producto_kuali', 1);
                    } elseif ($tipo == 'ZTE') {
                        $this->db->where('tbl_catalogo.producto_zte', 1);
                    } elseif ($tipo == 'sistemas') {
                        $this->db->where('tbl_catalogo.tipo=', 6);
                    } elseif ($tipo == 'seguridad_e_higiene') {
                        $this->db->where('tbl_catalogo.tipo=', 1);
                    }
                } else {
                    //$this->db->where('ctl_categorias.tipo!=', 1);
                }
            }
			if(isset($_POST['tipo_compra']) && $this->input->post('tipo_compra') == 'Servicio'){
				$this->db->where('tbl_catalogo.ctl_categorias_idctl_categorias', 14);
			}
			if ($tipo != "kuali_digital") {
			$this->db->where('tbl_catalogo.estatus_producto', 1);
			}
			$this->db->group_start();
			$this->db->like('tbl_catalogo.neodata', $neodata);
			$this->db->or_like('tbl_catalogo.descripcion', $neodata);
			if($tipo == "control_vehicular"){
				$this->db->or_like('tbl_catalogo.marca', $neodata);
				$this->db->or_like('tbl_catalogo.modelo', $neodata);
			}
			$this->db->group_end();
			$query = $this->db->get();
        	return $query->result();
        //}
    }

	//Trae el último mantenimiento
	public function last_id_mantenimiento()
    {                
            $query = $this->db->query("SELECT idtbl_mantenimientos FROM tbl_mantenimientos ORDER BY idtbl_mantenimientos DESC LIMIT 1");
        
        return $query->result();
    }

    public function productosAlmacenStock($id_almacen) {
    	$estatus = $this->input->post('estatus_stock_minimo');
    	$condition = "";
    	if($estatus == "menor"){
    		$condition = " AND DA.existencias < TC.minimo";
    	}else if($estatus == "minimo"){
    		$condition = " AND DA.existencias = TC.minimo";
    	}else if($estatus == "mayor"){
    		$condition = " AND DA.existencias > TC.minimo";
    	}
		$query = $this->db->query("SELECT TC.*, CC.*, CUM.*, DA.* FROM dtl_almacen DA LEFT JOIN tbl_catalogo TC ON TC.idtbl_catalogo = DA.tbl_catalogo_idtbl_catalogo LEFT JOIN ctl_categorias CC ON CC.idctl_categorias = TC.ctl_categorias_idctl_categorias LEFT JOIN ctl_unidades_medida CUM ON CUM.idctl_unidades_medida = TC.ctl_unidades_medida_idctl_unidades_medida WHERE DA.tbl_almacenes_idtbl_almacenes = $id_almacen" . $condition);
		return $query->result();
	}

	public function reporteSolicitudesRefacciones() {
		$condition = "";
    	if($this->input->post('fecha_creacion') != "" ){
    		$condition = " AND tbl_solicitud_material.fecha_creacion BETWEEN '" . $this->input->post('fecha_creacion') . " 00:00:00' AND '" . $this->input->post('fecha_creacion') . " 23:59:59'";
    	}
    	if($this->input->post('fecha_aprovacion_cv') != "" ){
    		$condition = $condition . " AND tbl_solicitud_material.fecha_aprobacion_rcv BETWEEN '" . $this->input->post('fecha_aprovacion_cv') . " 00:00:00' AND '" . $this->input->post('fecha_aprovacion_cv') . " 23:59:59'";
    	}
    	if($this->input->post('fecha_aprovacion_ag') != "" ){
    		$condition = $condition . " AND tbl_solicitud_material.fecha_aprobacion_ag BETWEEN '" . $this->input->post('fecha_aprovacion_ag') . " 00:00:00' AND '" . $this->input->post('fecha_aprovacion_ag') . " 23:59:59'";
    	}
    	if($this->input->post('estatus') != "" ){
			$condition = $condition . " AND tbl_solicitud_material.estatus_solicitud = '" . $this->input->post('estatus') . "'";
		}
    	if($this->input->post('modelo') != "" ){
    		$condition = $condition . " AND dtl_almacen.tbl_catalogo_idtbl_catalogo = '" . $this->input->post('modelo') . "'";
    	}
    	if($this->input->post('eco_reporte') != NULL && $this->input->post('eco_reporte') != "" ){
    		$condition = $condition . " AND dtl_almacen.iddtl_almacen = '" . $this->input->post('eco_reporte') . "'";
    	}
    	if($this->input->post('tipo_producto') == "Refacciones Control Vehicular"){
    		$query = $this->db->query("SELECT tbl_solicitud_material.idtbl_solicitud_material, tbl_solicitud_material.tbl_proyectos_idtbl_proyectos, tbl_proyectos.nombre_proyecto AS proyecto, tbl_solicitud_material.uid, tbl_solicitud_material.estatus_solicitud, tbl_solicitud_material.tbl_usuarios_idtbl_usuarios, tbl_usuarios.nombres AS recibe_nombre, tbl_usuarios.apellido_paterno AS recibe_paterno, tbl_usuarios.apellido_materno AS recibe_materno, tbl_solicitud_material.tbl_users_idtbl_users_ag AS entrego, dtl_almacen.numero_interno, dtl_almacen.km_actual, tbl_solicitud_material.comentarios, tbl_solicitud_material.fecha_creacion, tbl_users1.nombre AS nombre_autor, tbl_solicitud_material.fecha_aprobacion_rcv, tbl_users2.nombre AS nombre_rcv, tbl_users3.nombre AS nombre_ag, tbl_solicitud_material.fecha_aprobacion_ag, tbl_catalogo.neodata, tbl_catalogo.descripcion, tbl_catalogo.precio, tbl_catalogo.ctl_unidades_medida_idctl_unidades_medida, ctl_unidades_medida.unidad_medida AS unidad, tbl_catalogo.tipo_moneda, tbl_solicitud_material.tbl_tramites_vehiculares_idtbl_tramites_vehiculares, tbl_tramites_vehiculares.idtbl_tramites_vehiculares, tbl_tramites_vehiculares.uid AS tramite, dtl_solicitud_material.cantidad, tbl_catalogo.precio * dtl_solicitud_material.cantidad AS total FROM tbl_solicitud_material JOIN dtl_solicitud_material ON tbl_solicitud_material.idtbl_solicitud_material = dtl_solicitud_material.tbl_solicitud_material_idtbl_solicitud_material JOIN tbl_catalogo ON tbl_catalogo.idtbl_catalogo = dtl_solicitud_material.tbl_catalogo_idtbl_catalogo JOIN dtl_almacen ON dtl_almacen.iddtl_almacen = tbl_solicitud_material.dtl_almacen_iddtl_almacen LEFT JOIN tbl_tramites_vehiculares ON tbl_solicitud_material.tbl_tramites_vehiculares_idtbl_tramites_vehiculares = tbl_tramites_vehiculares.idtbl_tramites_vehiculares LEFT JOIN tbl_users AS tbl_users1 ON tbl_users1.idtbl_users = tbl_solicitud_material.tbl_users_idtbl_users_autor LEFT JOIN tbl_users AS tbl_users2 ON tbl_users2.idtbl_users = tbl_solicitud_material.tbl_users_idtbl_users_rcv LEFT JOIN tbl_users AS tbl_users3 ON tbl_users3.idtbl_users = tbl_solicitud_material.tbl_users_idtbl_users_ag LEFT JOIN tbl_usuarios ON tbl_solicitud_material.tbl_usuarios_idtbl_usuarios = tbl_usuarios.idtbl_usuarios LEFT JOIN tbl_proyectos ON tbl_solicitud_material.tbl_proyectos_idtbl_proyectos = tbl_proyectos.idtbl_proyectos LEFT JOIN ctl_unidades_medida ON tbl_catalogo.ctl_unidades_medida_idctl_unidades_medida = ctl_unidades_medida.idctl_unidades_medida WHERE tbl_solicitud_material.tipo_producto = 'Refacciones Control Vehicular' AND tbl_solicitud_material.estatus_solicitud != 'modificada AG' AND tbl_solicitud_material.estatus_solicitud != 'modificada CV'" . $condition);
    	}else{
    		$query = $this->db->query("SELECT tbl_solicitud_material.idtbl_solicitud_material, tbl_solicitud_material.uid, tbl_solicitud_material.estatus_solicitud, tbl_solicitud_material.comentarios, tbl_solicitud_material.fecha_creacion, tbl_users1.nombre AS nombre_autor, tbl_solicitud_material.fecha_aprobacion_rcv, tbl_users2.nombre AS nombre_rcv, tbl_users3.nombre AS nombre_ag, tbl_solicitud_material.fecha_aprobacion_ag, tbl_catalogo.marca, tbl_catalogo.modelo, tbl_catalogo.descripcion, tbl_catalogo.precio, dtl_solicitud_material.cantidad, tbl_catalogo.precio * dtl_solicitud_material.cantidad AS total FROM tbl_solicitud_material JOIN dtl_solicitud_material ON tbl_solicitud_material.idtbl_solicitud_material = dtl_solicitud_material.tbl_solicitud_material_idtbl_solicitud_material JOIN tbl_catalogo ON tbl_catalogo.idtbl_catalogo = dtl_solicitud_material.tbl_catalogo_idtbl_catalogo LEFT JOIN tbl_users AS tbl_users1 ON tbl_users1.idtbl_users = tbl_solicitud_material.tbl_users_idtbl_users_autor LEFT JOIN tbl_users AS tbl_users2 ON tbl_users2.idtbl_users = tbl_solicitud_material.tbl_users_idtbl_users_rcv LEFT JOIN tbl_users AS tbl_users3 ON tbl_users3.idtbl_users = tbl_solicitud_material.tbl_users_idtbl_users_ag WHERE tbl_solicitud_material.tipo_producto = 'Control Vehicular' AND tbl_solicitud_material.estatus_solicitud != 'modificada AG' AND tbl_solicitud_material.estatus_solicitud != 'modificada CV'" . $condition);
    	}
		return $query->result();
	}

	//Obtiene el catalogo por almacen
    public function catalogo_compra($almacen)
    {
		//El id de almacen no corresponde con el tipo en catalogo, AG 1 -> 3
		if($almacen == 16){
			$this->db->select('tbl_catalogo.*, tbl_catalogo.tipo as tipo_producto, ctl_categorias.categoria,ctl_categorias.idctl_categorias,ctl_categorias.tipo, ctl_unidades_medida.idctl_unidades_medida, ctl_unidades_medida.unidad_medida');
			$this->db->from('tbl_catalogo');
			$this->db->join('ctl_categorias', 'tbl_catalogo.ctl_categorias_idctl_categorias=ctl_categorias.idctl_categorias', 'left');
			$this->db->join('ctl_unidades_medida', 'tbl_catalogo.ctl_unidades_medida_idctl_unidades_medida=ctl_unidades_medida.idctl_unidades_medida', 'left');
			$this->db->where('tbl_catalogo.producto_kuali', 1);
			$this->db->where('tbl_catalogo.estatus_producto', 1);
		}elseif($almacen == 2){
			$this->db->select('tbl_catalogo.*, tbl_catalogo.tipo as tipo_producto, ctl_categorias.categoria,ctl_categorias.idctl_categorias,ctl_categorias.tipo, ctl_unidades_medida.idctl_unidades_medida, ctl_unidades_medida.unidad_medida');
			$this->db->from('tbl_catalogo');
			$this->db->join('ctl_categorias', 'tbl_catalogo.ctl_categorias_idctl_categorias=ctl_categorias.idctl_categorias', 'left');
			$this->db->join('ctl_unidades_medida', 'tbl_catalogo.ctl_unidades_medida_idctl_unidades_medida=ctl_unidades_medida.idctl_unidades_medida', 'left');
			$this->db->where('tbl_catalogo.tipo', 2);
			$this->db->where('tbl_catalogo.estatus_producto', 1);
		}else{
			$this->db->select('tbl_catalogo.*, tbl_catalogo.tipo as tipo_producto, ctl_categorias.categoria,ctl_categorias.idctl_categorias,ctl_categorias.tipo, ctl_unidades_medida.idctl_unidades_medida, ctl_unidades_medida.unidad_medida');
			$this->db->from('tbl_catalogo');
			$this->db->join('ctl_categorias', 'tbl_catalogo.ctl_categorias_idctl_categorias=ctl_categorias.idctl_categorias', 'left');
			$this->db->join('ctl_unidades_medida', 'tbl_catalogo.ctl_unidades_medida_idctl_unidades_medida=ctl_unidades_medida.idctl_unidades_medida', 'left');
			//$this->db->where('ctl_categorias.tipo!=1');
			$this->db->where('tbl_catalogo.estatus_producto', 1);
		}
        
        $query= $this->db->get();
        return $query->result();
    }

	//Obtiene el catalogo por tipo de servicio
    public function catalogo_servicios($servicio)
    {		
		
		$this->db->select('tbl_catalogo_mantenimientos.*, ctl_unidades_medida.idctl_unidades_medida, ctl_unidades_medida.unidad_medida');
		$this->db->from('tbl_catalogo_mantenimientos');			
		$this->db->join('ctl_unidades_medida', 'tbl_catalogo_mantenimientos.ctl_unidades_medida_idctl_unidades_medida=ctl_unidades_medida.idctl_unidades_medida', 'left');
		//$this->db->where('ctl_categorias.tipo!=1');
		$this->db->where('tbl_catalogo_mantenimientos.estatus_producto', 1);
		$this->db->where('tbl_catalogo_mantenimientos.tipo_servicio', $servicio);
		
        
        $query= $this->db->get();
        return $query->result();
    }

    public function verificacionArchivo(){
    	$this->db->set("verificacion_archivo", 1);
    	$this->db->where("idtbl_almacen_movimientos", $this->input->post('id'));
    	if($this->db->update("tbl_almacen_movimientos")){
    		return [
    			"error" => false,
    			"message" => "Verificacion de archivo exitoso"
    		];
    	}else{
    		return [
    			"error" => true,
    			"message" => "Error, inetentelo mas tarde."	
    		];
    	}
    }

    public function guardarSolicitudServicio(){
        if ($this->session->userdata('tipo') == 18) {
            foreach ($this->input->post("iddtl_solicitud_material") as $key => $value) {
                $values = [
                	"justificado" => $this->input->post("cantidad_justificacion")[$key],
					"observaciones" => $this->input->post("observacion")[$key]
            	];
                $this->db->where("iddtl_solicitud_material", $value);
                $this->db->update('dtl_solicitud_material', $values);
            }
            $array = [
				'latitud' => $this->input->post('latitud'),
				'longitud' => $this->input->post('longitud'),
				'estatus' => 'SV',
				'fecha_aprobacion_empalmador' => date('Y-m-d H:i:s'),
				'user_aprobacion_empalmador' => $this->session->userdata("id")
        	];
			$this->db->where('uid', $this->input->post('uid'));
    		$result = $this->db->update('tbl_mantenimientos', $array);
        }elseif($this->session->userdata('tipo') == 9 || $this->session->userdata('tipo') == 21){
            if (isset($_POST['iddtl_solicitud_material'])) {
                foreach ($this->input->post("iddtl_solicitud_material") as $key => $value) {
                    $values = [
                    //"justificado" => $this->input->post("cantidad_justificacion")[$key],
                    "observaciones" => $this->input->post("observacion")[$key]
                ];
                    $this->db->where("iddtl_solicitud_material", $value);
                    $this->db->update('dtl_solicitud_material', $values);

                    $this->db->set('justificado', 'justificado+' . $this->input->post('cantidad_justificacion')[$key], false);
                    $this->db->update('dtl_solicitud_material', $values);
                }
            }
			$array = [
				//'latitud' => $this->input->post('latitud'),
				//'longitud' => $this->input->post('longitud'),
				'estatus' => 'SP'
				//'fecha_aprobacion_supervisor' => date('Y-m-d H:i:s'),
				//'user_aprobacion_supervisor' => $this->session->userdata("id")
			];

			$this->db->where('uid', $this->input->post('uid'));
    		$this->db->update('tbl_mantenimientos', $array);

			$arrayJustificar = [
				'kilometraje' => $this->input->post('kilometraje'),
				'kilometraje_tendido' => isset($_POST['tendido']) ? $this->input->post('tendido') : '',
				'latitud' => $this->input->post('latitud'),
				'longitud' => $this->input->post('longitud'),
				'tbl_mantenimientos_idtbl_mantenimientos' => $this->input->post('idtbl_mantenimientos'),
				'tbl_users_idtbl_users_supervisor' => $this->session->userdata("id"),
				'tbl_usuarios_idtbl_usuarios' => $this->input->post('id_lider')
			];
			$result = $this->db->insert('tbl_justificacion_generador', $arrayJustificar);
			$insert_id = $this->db->insert_id();

            if (isset($_POST['iddtl_solicitud_material'])) {
                foreach ($this->input->post("iddtl_solicitud_material") as $key => $value) {
                    $arrayDetalle = [
                    'tbl_catalogo_idtbl_catalogo' => $this->input->post('producto')[$key],
                    "cantidad" => $this->input->post("cantidad_justificacion")[$key],
                    "observaciones" => $this->input->post("observacion")[$key],
                    'tbl_justificacion_generador_idtbl_justificacion_generador' => $insert_id
                ];
                    $this->db->insert('dtl_justificacion_generador', $arrayDetalle);
                }
            }

            if (isset($_POST['iddtl_asignacion'])) {
                foreach ($this->input->post("iddtl_asignacion") as $key => $value) {
                    //$query = $this->db->query("SELECT cantidad as total FROM `dtl_asignacion` WHERE `iddtl_asignacion` =" . $this->input->post('asignacion'));
                    $this->db->set('cantidad', 'cantidad-' . $this->input->post('cantidad_justificacion')[$key], false);
                    //$this->db->set('entregado', 'entregado+' . $this->input->post('cantidad_justificacion')[$key], FALSE);
                    $this->db->where('iddtl_asignacion', $value);
                    $this->db->update('dtl_asignacion');
                }
            }


		}elseif($this->session->userdata('tipo') == 17 || $this->session->userdata('tipo') == 19){
			foreach ($this->input->post("iddtl_solicitud_material") as $key => $value) {
                $values = [
                	"justificado" => $this->input->post("cantidad_justificacion")[$key]
            	];
                $this->db->where("iddtl_solicitud_material", $value);
                $this->db->update('dtl_solicitud_material', $values);
            }
			$array = [
				'estatus' => 'SPM',
				'fecha_aprobacion_pm' => date('Y-m-d H:i:s'),
				'user_aprobacion_pm' => $this->session->userdata("id"),
				'id_panda' => $this->input->post('id_panda')
			];
			$this->db->where('uid', $this->input->post('uid'));
    		$result = $this->db->update('tbl_mantenimientos', $array);
		}
    	
    	if($result){
    		return [
    			'error' => false,
    			'message' => "Se actualizo correctamente la solicitud de servicio."
    		];
    	}else{
    		return [
    			'error' => true,
    			'message' => "Error al actulizar la solicitud de servicio."
    		];
    	}
    }

	public function verificarGenerador(){
		
        if ($this->session->userdata('tipo') == 21 && $this->session->userdata('id') == 216) {
            $array = [
            	'estatus' => 'SPP'
            	//'fecha_aprobacion_pm' => date('Y-m-d H:i:s'),
            	//'user_aprobacion_pm' => $this->session->userdata("id")
        	];
        }elseif ($this->session->userdata('tipo') == 21 && $this->session->userdata('id') != 216) {
            $array = [
            	'estatus' => 'APM',
            	'fecha_aprobacion_superintendente' => date('Y-m-d H:i:s'),
            	'user_aprobacion_superintendente' => $this->session->userdata("id")
        	];
        }elseif ($this->session->userdata('tipo') == 19 || $this->session->userdata('tipo') == 17) {
            $array = [
            	'estatus' => 'SPM',
            	'fecha_aprobacion_pm' => date('Y-m-d H:i:s'),
            	'user_aprobacion_pm' => $this->session->userdata("id")
        	];
        }
		$this->db->where('uid', $this->input->post('uid'));
		$result = $this->db->update('tbl_mantenimientos', $array);
    	
    	if($result){
    		return [
    			'error' => false,
    			'message' => "Se verificó correctamente el generador."
    		];
    	}else{
    		return [
    			'error' => true,
    			'message' => "Error al finalizar el generador."
    		];
    	}
    }

	public function finalizarGenerador(){
		
        $array = [			
			'estatus' => 'SF',
			'fecha_finalizacion' => date('Y-m-d H:i:s')			
		];

		$this->db->where('uid', $this->input->post('uid'));
		$result = $this->db->update('tbl_mantenimientos', $array);
    	
    	if($result){
    		return [
    			'error' => false,
    			'message' => "Se finalizó correctamente el generador."
    		];
    	}else{
    		return [
    			'error' => true,
    			'message' => "Error al finalizar el generador."
    		];
    	}
    }

	public function comprobarGenerador(){
		

		foreach ($this->input->post("iddtl_solicitud_material") as $key => $value) {

			$values = [
				"comprobacion" => $this->input->post("comprobacion")[$key]
			];

			$this->db->where("iddtl_solicitud_material", $value);
			$result = $this->db->update('dtl_solicitud_material', $values);
			
		}
    	
    	if($result){
    		return [
    			'error' => false,
    			'message' => "Se comprobó correctamente el generador."
    		];
    	}else{
    		return [
    			'error' => true,
    			'message' => "Error al comprobar el generador."
    		];
    	}
    }

	public function materialesExtemporaneos($uid_mantenimiento){
    	$this->db->select("tbl_catalogo.descripcion, tbl_catalogo.neodata, dtl_material_extemporaneo.cantidad");
    	$this->db->from("dtl_material_extemporaneo");
    	$this->db->join("tbl_catalogo", "tbl_catalogo.idtbl_catalogo = dtl_material_extemporaneo.tbl_catalogo_idtbl_catalogo", "left");
    	$this->db->join("ctl_unidades_medida", "ctl_unidades_medida.idctl_unidades_medida = tbl_catalogo.ctl_unidades_medida_idctl_unidades_medida", "left");
		//$this->db->join("tbl_users", "tbl_users.tbl_usuarios_idtbl_usuarios = tbl_solicitud_material.tbl_usuarios_idtbl_usuarios_supervisor", "left");
    	$this->db->where("dtl_material_extemporaneo.tbl_mantenimientos_idtbl_mantenimientos", $uid_mantenimiento);
		$this->db->order_by("dtl_material_extemporaneo.tbl_catalogo_idtbl_catalogo ASC");
    	$query = $this->db->get();
    	return $query->result();
    }

    public function detalleSolicitudMaterial($uid_mantenimiento){
    	$this->db->select("dtl_solicitud_material.iddtl_solicitud_material, SUM(dtl_solicitud_material.cantidad) AS cantidad, dtl_solicitud_material.tbl_catalogo_idtbl_catalogo, SUM(dtl_solicitud_material.entregado) AS entregado, dtl_solicitud_material.comprobacion, tbl_catalogo.descripcion, tbl_solicitud_material.fecha_creacion, ctl_unidades_medida.unidad_medida_abr AS unidad");
    	$this->db->from("tbl_solicitud_material");
    	$this->db->join("dtl_solicitud_material", "tbl_solicitud_material.idtbl_solicitud_material = dtl_solicitud_material.tbl_solicitud_material_idtbl_solicitud_material", "left");
    	$this->db->join("tbl_catalogo", "tbl_catalogo.idtbl_catalogo = dtl_solicitud_material.tbl_catalogo_idtbl_catalogo", "left");
    	$this->db->join("ctl_unidades_medida", "ctl_unidades_medida.idctl_unidades_medida = tbl_catalogo.ctl_unidades_medida_idctl_unidades_medida", "left");
		$this->db->join("tbl_users", "tbl_users.tbl_usuarios_idtbl_usuarios = tbl_solicitud_material.tbl_usuarios_idtbl_usuarios_supervisor", "left");
    	$this->db->where("tbl_solicitud_material.tbl_mantenimientos_idtbl_mantenimientos", $uid_mantenimiento);
		$this->db->where("dtl_solicitud_material.entregado > 0");
		if($this->session->userdata('tipo') != 17 && $this->session->userdata('tipo') != 19 && $this->session->userdata('tipo') != 21){
			$this->db->where("tbl_users.idtbl_users", $this->session->userdata('id'));
		}
		$this->db->group_by("dtl_solicitud_material.tbl_catalogo_idtbl_catalogo");
		$this->db->order_by("dtl_solicitud_material.tbl_catalogo_idtbl_catalogo ASC");
    	$query = $this->db->get();
    	return $query->result();
    }

	public function observaciones_generador($uid_mantenimiento){
    	$this->db->select("dtl_justificacion_generador.*, tbl_justificacion_generador.*, tbl_users.nombre, tbl_catalogo.descripcion");
    	$this->db->from("tbl_justificacion_generador");
    	$this->db->join("dtl_justificacion_generador", "tbl_justificacion_generador.idtbl_justificacion_generador = dtl_justificacion_generador.tbl_justificacion_generador_idtbl_justificacion_generador");
		$this->db->join("tbl_users", "tbl_justificacion_generador.tbl_users_idtbl_users_supervisor = tbl_users.idtbl_users");
		$this->db->join("tbl_catalogo", "dtl_justificacion_generador.tbl_catalogo_idtbl_catalogo = tbl_catalogo.idtbl_catalogo");
    	$this->db->where("tbl_justificacion_generador.tbl_mantenimientos_idtbl_mantenimientos", $uid_mantenimiento);
		$this->db->where("dtl_justificacion_generador.observaciones <> ''");
		if($this->session->userdata('tipo') != 17 && $this->session->userdata('tipo') != 19 && $this->session->userdata('tipo') != 21){
			$this->db->where("tbl_justificacion_generador.tbl_users_idtbl_users_supervisor", $this->session->userdata('id'));			
		}		
		$this->db->order_by("tbl_justificacion_generador.fecha_justificacion ASC");
    	$query = $this->db->get();
    	return $query->result();
    }

	public function justificacion_generador($uid_mantenimiento){
    	$this->db->select("dtl_justificacion_generador.*, tbl_justificacion_generador.*, SUM(dtl_justificacion_generador.cantidad) AS cantidad_total");
    	$this->db->from("tbl_justificacion_generador");
    	$this->db->join("dtl_justificacion_generador", "tbl_justificacion_generador.idtbl_justificacion_generador = dtl_justificacion_generador.tbl_justificacion_generador_idtbl_justificacion_generador");		
    	$this->db->where("tbl_justificacion_generador.tbl_mantenimientos_idtbl_mantenimientos", $uid_mantenimiento);		
		if($this->session->userdata('tipo') != 17 && $this->session->userdata('tipo') != 19 && $this->session->userdata('tipo') != 21){
			$this->db->where("tbl_justificacion_generador.tbl_users_idtbl_users_supervisor", $this->session->userdata('id'));
			$this->db->group_by("dtl_justificacion_generador.tbl_catalogo_idtbl_catalogo, tbl_justificacion_generador.tbl_users_idtbl_users_supervisor");
		}else{
			$this->db->group_by("dtl_justificacion_generador.tbl_catalogo_idtbl_catalogo");
		}
		
		$this->db->order_by("dtl_justificacion_generador.tbl_catalogo_idtbl_catalogo ASC");
    	$query = $this->db->get();
    	return $query->result();
    }

	public function getMileage($uid_mantenimiento){
    	$this->db->select("tbl_justificacion_generador.*, tbl_users.nombre");
    	$this->db->from("tbl_justificacion_generador");
    	$this->db->join("tbl_users", "tbl_justificacion_generador.tbl_users_idtbl_users_supervisor = tbl_users.idtbl_users");
    	$this->db->where("tbl_justificacion_generador.tbl_mantenimientos_idtbl_mantenimientos", $uid_mantenimiento);				
    	$query = $this->db->get();
    	return $query->result();
    }

	public function detalleAsignacionMaterial($uid_mantenimiento){
    	$this->db->select("dtl_asignacion.*, dtl_almacen.tbl_catalogo_idtbl_catalogo, tbl_catalogo.descripcion, ctl_unidades_medida.unidad_medida_abr AS unidad");
    	$this->db->from("tbl_solicitud_material");    	
		$this->db->join("tbl_almacen_movimientos", "tbl_almacen_movimientos.parent = tbl_solicitud_material.idtbl_solicitud_material");
		$this->db->join("dtl_asignacion", "tbl_almacen_movimientos.idtbl_almacen_movimientos = dtl_asignacion.tbl_almacen_movimientos_idtbl_almacen_movimientos");
		$this->db->join("dtl_almacen", "dtl_asignacion.dtl_almacen_iddtl_almacen = dtl_almacen.iddtl_almacen");
		$this->db->join("tbl_catalogo", "tbl_catalogo.idtbl_catalogo = dtl_almacen.tbl_catalogo_idtbl_catalogo");
		$this->db->join("ctl_unidades_medida", "ctl_unidades_medida.idctl_unidades_medida = tbl_catalogo.ctl_unidades_medida_idctl_unidades_medida");
		$this->db->join("tbl_users", "tbl_users.tbl_usuarios_idtbl_usuarios = tbl_solicitud_material.tbl_usuarios_idtbl_usuarios_supervisor");
    	$this->db->where("tbl_solicitud_material.tbl_mantenimientos_idtbl_mantenimientos", $uid_mantenimiento);
		if($this->session->userdata('tipo') != 17 && $this->session->userdata('tipo') != 19 && $this->session->userdata('tipo') != 21){
			$this->db->where("tbl_users.idtbl_users", $this->session->userdata('id'));
		}
		$this->db->group_by("dtl_almacen.tbl_catalogo_idtbl_catalogo");
		$this->db->order_by("tbl_catalogo.idtbl_catalogo ASC");
    	$query = $this->db->get();
    	return $query->result();
    }

	//Detalle del generador
	public function detalleGenerador($id_mantenimiento){
    	$this->db->select("dtl_justificacion_generador.*, tbl_justificacion_generador.*, tbl_catalogo.descripcion, ctl_unidades_medida.unidad_medida_abr AS unidad");
    	$this->db->from("tbl_justificacion_generador");    	
		$this->db->join("dtl_justificacion_generador", "tbl_justificacion_generador.idtbl_justificacion_generador = dtl_justificacion_generador.tbl_justificacion_generador_idtbl_justificacion_generador");		
		$this->db->join("tbl_catalogo", "tbl_catalogo.idtbl_catalogo = dtl_justificacion_generador.tbl_catalogo_idtbl_catalogo");
		$this->db->join("ctl_unidades_medida", "ctl_unidades_medida.idctl_unidades_medida = tbl_catalogo.ctl_unidades_medida_idctl_unidades_medida");
    	$this->db->where("tbl_justificacion_generador.tbl_mantenimientos_idtbl_mantenimientos", $id_mantenimiento);
		//$this->db->group_by("dtl_asignacion.iddtl_asignacion");
    	$query = $this->db->get();
    	return $query->result();
    }

    public function combustible_km_cv(){
    	$iddtl_almacen = $this->input->post("eco_reporte");
    	$condition = "";
    	if($iddtl_almacen != ""){
    		$condition = " WHERE dtl_almacen.iddtl_almacen = " . $iddtl_almacen;
    	}
    	$query = $this->db->query("SELECT dtl_almacen.numero_interno , tbl_km_unidades_cv.* FROM tbl_km_unidades_cv JOIN dtl_almacen ON dtl_almacen.iddtl_almacen = dtl_almacen_iddtl_almacen" . $condition);
    	return $query->result();
    }

	public function procesar_csv() {

		$red = $this->input->post("tipo_red");
		$concepto = $this->input->post('concepto');
		$unidad = $this->input->post('unidad');
		$proyecto = $this->input->post('proyecto');
		$segmento = $this->input->post('segmento');
		$cliente = $this->input->post('cliente');

		$id_red = $this->db->query("SELECT idtbl_tipo_red FROM tbl_tipo_red WHERE tipo_red LIKE '%$red%'");

		$id_concepto = $this->db->query("SELECT idtbl_catalogo_mantenimientos FROM tbl_catalogo_mantenimientos WHERE descripcion LIKE '%$concepto%'");

		$id_unidad = $this->db->query("SELECT idctl_unidades_medida FROM ctl_unidades_medida WHERE unidad_medida LIKE '%$unidad%' OR unidad_medida_abr LIKE '%$unidad%'");

		$id_proyecto = $this->db->query("SELECT idtbl_proyectos FROM tbl_proyectos WHERE numero_proyecto = '$proyecto'");

		$id_segmento = $this->db->query("SELECT idtbl_segmentos_proyecto FROM tbl_segmentos_proyecto WHERE segmento LIKE '%$segmento%'");

		$id_cliente = $this->db->query("SELECT idtbl_clientes FROM tbl_clientes WHERE nombre_comercial LIKE '%$cliente%'");

		$len = count($id_segmento->result());        
        if($len > 0){
            $segmento = $id_segmento->result()[0]->idtbl_segmentos_proyecto;
        }

		$proyecto_final = $id_proyecto->result()[0]->idtbl_proyectos;
		$cliente_final = $id_cliente->result()[0]->idtbl_clientes;
		$red_final = $id_red->result()[0]->idtbl_tipo_red;
		$concepto_final = $id_concepto->result()[0]->idtbl_catalogo_mantenimientos;

		$dataTramo = array(
		        'nombre_oracle' => $this->input->post('tramo'),
		        'lat_a' => $this->input->post('lat_a'),
		        'lon_a' => $this->input->post('lon_a'),
				'lat_b' => $this->input->post('lat_b'),
				'lon_b' => $this->input->post('lon_b')
		);

		$this->db->insert('tbl_tramo_fibra_optica', $dataTramo);

		$id_tramo = $this->db->insert_id();

		$dataGenerador = array(
			'fecha' => date('Y-m-d H:i:s'),
			'uid' => uniqid(),
			'estatus' => 'SV',
			'tbl_tramo_fibra_optica_idtbl_tramo_fibra_optica' => $id_tramo,
			'tbl_proyectos_idtbl_proyectos' => $proyecto_final,
			'tbl_segmentos_proyecto_idtbl_segmentos_proyecto' => $segmento,
			'tbl_clientes_idtbl_clientes' => $cliente_final,
			'tipo_servicio' => 'construccion',
			'zte' => 1,
			'tbl_tipo_red_idtbl_tipo_red' => $red_final
		);


		$result=$this->db->insert('tbl_mantenimientos',$dataGenerador);

		$id_generador = $this->db->insert_id();

		$dataDtlGenerador = array(
			'cantidad' => $this->input->post('cantidad'),
			'tbl_mantenimientos_idtbl_mantenimientos' => $id_generador,
			'tbl_catalogo_mantenimientos_idtbl_catalogo_mantenimientos' => $concepto_final
		);

		$this->db->insert('dtl_mantenimientos', $dataDtlGenerador);

   		return  $result;
	}

	public function existe_tramo($id_tramo, $segmento, $tipo_red) {
		$this->db->select('tbl_tramo_fibra_optica.idtbl_tramo_fibra_optica');
		$this->db->from('tbl_tramo_fibra_optica');
		$this->db->join('tbl_mantenimientos', 'tbl_mantenimientos.tbl_tramo_fibra_optica_idtbl_tramo_fibra_optica = tbl_tramo_fibra_optica.idtbl_tramo_fibra_optica');
		$this->db->join('tbl_tipo_red', 'tbl_tipo_red.idtbl_tipo_red = tbl_mantenimientos.tbl_tipo_red_idtbl_tipo_red');
		$this->db->where('tbl_tramo_fibra_optica.nombre_oracle', $id_tramo);
		$this->db->where('tbl_tipo_red.tipo_red', $tipo_red);
		$this->db->where('tbl_mantenimientos.tbl_segmentos_proyecto_idtbl_segmentos_proyecto', $segmento);
		$query = $this->db->get();
		
		if($query->num_rows()>0)
			return $query->result()[0]->idtbl_tramo_fibra_optica;
		else
			return false;
	}


	public function existe_neodata($neodata) {
		$this->db->select('tbl_catalogo.idtbl_catalogo');
		$this->db->from('tbl_catalogo');
		$this->db->where('tbl_catalogo.neodata', $neodata);
		$query = $this->db->get();
		
		if($query->num_rows()>0)
			return $query->result()[0]->idtbl_catalogo;
		else
			return false;
	}

	public function obtenerEntrega($id_solicitud) {
		$this->db->select('ctl_autorizados_entrega.nombre');
		$this->db->from('tbl_solicitud_material');
		$this->db->join('tbl_almacen_movimientos', 'tbl_almacen_movimientos.parent = tbl_solicitud_material.idtbl_solicitud_material');
		$this->db->join('ctl_autorizados_entrega', 'tbl_almacen_movimientos.ctl_autorizados_entrega_idctl_autorizados_entrega = ctl_autorizados_entrega.idctl_autorizados_entrega');
		$this->db->where('tbl_solicitud_material.idtbl_solicitud_material', $id_solicitud);		
		$query = $this->db->get();
		
		if($query->num_rows()>0)
			return $query->result()[0]->nombre;
		else
			return false;
	}

	//Delete usuario de cuadrila
	public function quitar_usuario_cuadrilla($id) {
		
				
		$this->db->where('tbl_usuarios_cuadrillas.idtbl_usuarios_cuadrillas', $id);
        $result = $this->db->delete('tbl_usuarios_cuadrillas');
    
		
		return  $result;
	}

	//Cancelar generador de zte
	public function cancel_arm($id) {						
             
		$data = array(
			'estatus' => 'cancelado'
		);
        $this->db->where('idtbl_mantenimientos', $id);		
        $result = $this->db->update('tbl_mantenimientos', $data);
		
		return  $result;
	}

	//Traspasa material de un brazo a otro
	public function traspaso_brazo() {

		$segmento = $this->input->post('segmento');
		$queryalmacen = $this->db->query("SELECT idtbl_almacenes, uid FROM tbl_almacenes WHERE tbl_segmentos_proyecto_idtbl_segmentos_proyecto = $segmento");
				
		foreach($this->input->post('iddtl_solicitud_material') AS $key => $value){
            if ($this->input->post('cantidad_justificacion')[$key] > 0) {
                $this->db->set('cantidad', 'cantidad - ' . $this->input->post('cantidad_justificacion')[$key], false);
				$this->db->set('entregado', 'entregado - ' . $this->input->post('cantidad_justificacion')[$key], false);
				$this->db->where('iddtl_solicitud_material', $this->input->post('iddtl_solicitud_material')[$key]);
				$this->db->update('dtl_solicitud_material');

				$this->db->set('cantidad', 'cantidad - ' . $this->input->post('cantidad_justificacion')[$key], false);
				$this->db->where('iddtl_asignacion', $this->input->post('iddtl_asignacion')[$key]);
				$this->db->update('dtl_asignacion');
            }
		}
		
		$data = array(
			'estatus_solicitud' => 'S',
			'fecha_creacion' => date('Y-m-d H:i:s'),
			'uid' => uniqid(),
			'tbl_usuarios_idtbl_usuarios' => $this->session->userdata('id_usuario'),
			'tbl_users_idtbl_users_autor' => $this->session->userdata('id'),
			'tbl_proyectos_idtbl_proyectos' => $this->input->post('proyecto'),
			'tbl_segmentos_proyecto_idtbl_segmentos_proyecto' => $this->input->post('segmento'),
			'tbl_usuarios_idtbl_usuarios_supervisor' => $this->session->userdata('id_usuario'),
			'uid_almacen_seleccionado' => $queryalmacen->result()[0]->uid,
			'fecha_modificacion' => date('Y-m-d H:i:s'),
			'tipo_producto' => 'Almacen General',
			'tbl_mantenimientos_idtbl_mantenimientos' => $this->input->post('brazo_destino')
		);
		$this->db->insert('tbl_solicitud_material', $data);
		$insert_id = $this->db->insert_id();

		foreach($this->input->post('iddtl_solicitud_material') AS $key => $value){
            if ($this->input->post('cantidad_justificacion')[$key] > 0) {
                $data_dtl = array(
					'cantidad' => $this->input->post('cantidad_justificacion')[$key],
					'tbl_solicitud_material_idtbl_solicitud_material' => $insert_id,
					'tbl_catalogo_idtbl_catalogo' => $this->input->post('producto')[$key],
					'entregado' => $this->input->post('cantidad_justificacion')[$key]
				);
				$this->db->insert('dtl_solicitud_material', $data_dtl);
            }
		}

		$querysalida = $this->db->query("SELECT COUNT(idtbl_almacen_movimientos) as total FROM `tbl_almacen_movimientos` WHERE `tipo` = 'salida-almacen'");

		$data_almacen = array(
			'fecha' => date('Y-m-d H:i:s'),
			'tbl_almacenes_idtbl_almacenes' => $queryalmacen->result()[0]->idtbl_almacenes,
			'uid' => uniqid(),
			'tipo' => 'salida-almacen',
			'tbl_usuarios_idtbl_usuarios' => $this->session->userdata('id_usuario'),
			'estatus' => 1,
			'tbl_users_idtbl_users' => $this->session->userdata('id'),
			'folio' => $querysalida->result()[0]->total + 1,
			'tbl_proyectos_idtbl_proyectos' => $this->input->post('proyecto'),
			'tbl_segmentos_proyecto_idtbl_segmentos_proyecto' => $this->input->post('segmento'),
			'parent' => $insert_id,
			'movimiento_virtual' => 0			
		);

		$result = $this->db->insert('tbl_almacen_movimientos', $data_almacen);
		$insert_id_almacen = $this->db->insert_id();

		$idtbl_almacenes = $queryalmacen->result()[0]->idtbl_almacenes;
		foreach($this->input->post('iddtl_solicitud_material') AS $key => $value){
            if ($this->input->post('cantidad_justificacion')[$key] > 0) {
				$idtbl_catalogo = $this->input->post('producto')[$key];
				$querydtl = $this->db->query("SELECT iddtl_almacen FROM dtl_almacen WHERE tbl_almacenes_idtbl_almacenes = $idtbl_almacenes AND tbl_catalogo_idtbl_catalogo = $idtbl_catalogo AND estatus = 'almacen'");
                $data_dtl = array(
					'fecha_asignacion' => date('Y-m-d H:i:s'),
					'dtl_almacen_iddtl_almacen' => $querydtl->result()[0]->iddtl_almacen,
					'tbl_usuarios_idtbl_usuarios' => $this->session->userdata('id_usuario'),
					'tbl_almacen_movimientos_idtbl_almacen_movimientos' => $insert_id_almacen,
					'cantidad' => $this->input->post('cantidad_justificacion')[$key]
				);
				$this->db->insert('dtl_asignacion', $data_dtl);
            }
		}
		
		return  $result;
	}

	/*public function cuadre_materiales($idtbl_almacenes){
		$query = $this->db->query("SELECT result1.neodata, result1.descripcion, (result1.cantidad_entrada - result1.cantidad_salida + result1.cantidad_devolucion) AS existencias, result1.cantidad_entrada, result1.cantidad_salida, result1.cantidad_devolucion FROM (SELECT CASE WHEN neodata1 IS NOT NULL THEN neodata1 WHEN neodata2 IS NOT NULL THEN neodata2 WHEN neodata3 IS NOT NULL THEN neodata3 END AS neodata, CASE WHEN neodata1 IS NOT NULL THEN descripcion1 WHEN neodata2 IS NOT NULL THEN descripcion2 WHEN neodata3 IS NOT NULL THEN descripcion3 END AS descripcion, SUM(IF(tipo = 'entrada-almacen', cantidad1, 0)) AS cantidad_entrada, SUM(IF(tipo = 'salida-almacen', cantidad2, 0)) AS cantidad_salida, SUM(IF(tipo = 'devolucion-almacen', cantidad3, 0)) AS cantidad_devolucion FROM (SELECT tbl_almacen_movimientos.idtbl_almacen_movimientos, tbl_almacen_movimientos.uid, tbl_catalogo1.neodata AS neodata1, tbl_catalogo1.descripcion AS descripcion1, dtl_almacen_movimientos.cantidad as cantidad1, IF(tbl_almacen_movimientos.tipo = 'salida-almacen' AND tbl_almacen_movimientos.movimiento_virtual != 2, tbl_catalogo2.neodata, tbl_catalogo2_1.neodata) AS neodata2, IF(tbl_almacen_movimientos.tipo = 'salida-almacen' AND tbl_almacen_movimientos.movimiento_virtual != 2, tbl_catalogo2.descripcion, tbl_catalogo2_1.descripcion) AS descripcion2, IF(tbl_almacen_movimientos.tipo = 'salida-almacen' AND tbl_almacen_movimientos.movimiento_virtual != 2, dtl_solicitud_material.entregado, dtl_almacen_movimientos1.cantidad) as cantidad2, tbl_catalogo3.neodata AS neodata3, tbl_catalogo3.descripcion AS descripcion3, dtl_asignacion.entregado as cantidad3, tbl_almacen_movimientos.tipo FROM tbl_almacen_movimientos LEFT JOIN dtl_almacen_movimientos ON tbl_almacen_movimientos.idtbl_almacen_movimientos = dtl_almacen_movimientos.tbl_almacen_movimientos_idtbl_almacen_movimientos AND tbl_almacen_movimientos.tipo = 'entrada-almacen' LEFT JOIN tbl_catalogo AS tbl_catalogo1 ON tbl_catalogo1.idtbl_catalogo = dtl_almacen_movimientos.tbl_catalogo_idtbl_catalogo AND dtl_almacen_movimientos.tbl_catalogo_idtbl_catalogo IS NOT NULL LEFT JOIN tbl_solicitud_material ON tbl_solicitud_material.idtbl_solicitud_material = tbl_almacen_movimientos.parent AND tbl_almacen_movimientos.tipo = 'salida-almacen' AND tbl_almacen_movimientos.movimiento_virtual != 2 AND (tbl_solicitud_material.estatus_solicitud = 'S' OR tbl_solicitud_material.estatus_solicitud = 'SU') LEFT JOIN dtl_solicitud_material ON tbl_solicitud_material.idtbl_solicitud_material = dtl_solicitud_material.tbl_solicitud_material_idtbl_solicitud_material AND tbl_solicitud_material.idtbl_solicitud_material IS NOT NULL LEFT JOIN tbl_catalogo AS tbl_catalogo2 ON tbl_catalogo2.idtbl_catalogo = dtl_solicitud_material.tbl_catalogo_idtbl_catalogo AND dtl_solicitud_material.tbl_catalogo_idtbl_catalogo IS NOT NULL LEFT JOIN dtl_almacen_movimientos AS dtl_almacen_movimientos1 ON dtl_almacen_movimientos1.tbl_almacen_movimientos_idtbl_almacen_movimientos = tbl_almacen_movimientos.parent AND tbl_almacen_movimientos.tipo = 'salida-almacen' AND tbl_almacen_movimientos.movimiento_virtual = 2 LEFT JOIN tbl_catalogo AS tbl_catalogo2_1 ON  tbl_catalogo2_1.idtbl_catalogo = dtl_almacen_movimientos1.tbl_catalogo_idtbl_catalogo LEFT JOIN dtl_asignacion ON dtl_asignacion.tbl_almacen_movimientos_idtbl_almacen_movimientos = tbl_almacen_movimientos.idtbl_almacen_movimientos AND tbl_almacen_movimientos.tipo = 'devolucion-almacen' AND dtl_asignacion.estado_entrega = 'almacen' LEFT JOIN dtl_almacen ON dtl_almacen.iddtl_almacen = dtl_asignacion.dtl_almacen_iddtl_almacen AND dtl_asignacion.dtl_almacen_iddtl_almacen IS NOT NULL LEFT JOIN tbl_catalogo AS tbl_catalogo3 ON tbl_catalogo3.idtbl_catalogo = dtl_almacen.tbl_catalogo_idtbl_catalogo AND dtl_almacen.tbl_catalogo_idtbl_catalogo IS NOT NULL WHERE (tbl_almacen_movimientos.tipo = 'entrada-almacen' OR tbl_almacen_movimientos.tipo = 'salida-almacen' OR tbl_almacen_movimientos.tipo = 'devolucion-almacen') AND (tbl_catalogo1.neodata IS NOT NULL OR tbl_catalogo2.neodata IS NOT NULL OR tbl_catalogo2_1.neodata IS NOT NULL OR tbl_catalogo3.neodata IS NOT NULL) AND tbl_almacen_movimientos.tbl_almacenes_idtbl_almacenes = $idtbl_almacenes AND tbl_almacen_movimientos.estatus = 1) AS result GROUP BY neodata) AS result1 JOIN tbl_catalogo ON tbl_catalogo.neodata = result1.neodata JOIN dtl_almacen ON dtl_almacen.tbl_catalogo_idtbl_catalogo = tbl_catalogo.idtbl_catalogo AND dtl_almacen.tbl_almacenes_idtbl_almacenes = $idtbl_almacenes");
		return $query->result();
	}*/

	public function cuadre_materiales($idtbl_almacenes){
		//$query = $this->db->query("SELECT result1.neodata, result1.descripcion, (result1.cantidad_entrada - result1.cantidad_salida + result1.cantidad_devolucion + result1.cantidad_traspaso) AS existencias, result1.cantidad_entrada, result1.cantidad_salida, result1.cantidad_devolucion, result1.cantidad_traspaso FROM (SELECT CASE WHEN neodata1 IS NOT NULL THEN neodata1 WHEN neodata2 IS NOT NULL THEN neodata2 WHEN neodata3 IS NOT NULL THEN neodata3 END AS neodata, CASE WHEN neodata1 IS NOT NULL THEN descripcion1 WHEN neodata2 IS NOT NULL THEN descripcion2 WHEN neodata3 IS NOT NULL THEN descripcion3 END AS descripcion, SUM(IF((tipo = 'entrada-almacen' OR tipo = 'entrada') AND tipo_movimiento IS NULL, cantidad1, 0)) AS cantidad_entrada, SUM(IF(tipo = 'salida-almacen', cantidad2, 0)) AS cantidad_salida, SUM(IF(tipo = 'devolucion-almacen', cantidad3, 0)) AS cantidad_devolucion, SUM(IF(tipo_movimiento = 'traspaso', cantidad1, 0)) AS cantidad_traspaso FROM (SELECT tbl_almacen_movimientos.idtbl_almacen_movimientos, tbl_almacen_movimientos.uid, tbl_catalogo1.neodata AS neodata1, tbl_catalogo1.descripcion AS descripcion1, dtl_almacen_movimientos.cantidad as cantidad1, IF(tbl_almacen_movimientos.tipo = 'salida-almacen' AND tbl_almacen_movimientos.movimiento_virtual != 2, tbl_catalogo2.neodata, tbl_catalogo2_1.neodata) AS neodata2, IF(tbl_almacen_movimientos.tipo = 'salida-almacen' AND tbl_almacen_movimientos.movimiento_virtual != 2, tbl_catalogo2.descripcion, tbl_catalogo2_1.descripcion) AS descripcion2, IF(tbl_almacen_movimientos.tipo = 'salida-almacen' AND tbl_almacen_movimientos.movimiento_virtual != 2, dtl_solicitud_material.entregado, dtl_almacen_movimientos1.cantidad) as cantidad2, tbl_catalogo3.neodata AS neodata3, tbl_catalogo3.descripcion AS descripcion3, dtl_asignacion.entregado as cantidad3, tbl_almacen_movimientos.tipo, tbl_almacen_movimientos.tipo_movimiento FROM tbl_almacen_movimientos LEFT JOIN dtl_almacen_movimientos ON tbl_almacen_movimientos.idtbl_almacen_movimientos = dtl_almacen_movimientos.tbl_almacen_movimientos_idtbl_almacen_movimientos AND tbl_almacen_movimientos.tipo = 'entrada-almacen' LEFT JOIN tbl_catalogo AS tbl_catalogo1 ON tbl_catalogo1.idtbl_catalogo = dtl_almacen_movimientos.tbl_catalogo_idtbl_catalogo AND dtl_almacen_movimientos.tbl_catalogo_idtbl_catalogo IS NOT NULL LEFT JOIN tbl_solicitud_material ON tbl_solicitud_material.idtbl_solicitud_material = tbl_almacen_movimientos.parent AND tbl_almacen_movimientos.tipo = 'salida-almacen' AND tbl_almacen_movimientos.movimiento_virtual != 2 AND (tbl_solicitud_material.estatus_solicitud = 'S' OR tbl_solicitud_material.estatus_solicitud = 'SU') LEFT JOIN dtl_solicitud_material ON tbl_solicitud_material.idtbl_solicitud_material = dtl_solicitud_material.tbl_solicitud_material_idtbl_solicitud_material AND tbl_solicitud_material.idtbl_solicitud_material IS NOT NULL LEFT JOIN tbl_catalogo AS tbl_catalogo2 ON tbl_catalogo2.idtbl_catalogo = dtl_solicitud_material.tbl_catalogo_idtbl_catalogo AND dtl_solicitud_material.tbl_catalogo_idtbl_catalogo IS NOT NULL LEFT JOIN dtl_almacen_movimientos AS dtl_almacen_movimientos1 ON dtl_almacen_movimientos1.tbl_almacen_movimientos_idtbl_almacen_movimientos = tbl_almacen_movimientos.parent AND tbl_almacen_movimientos.tipo = 'salida-almacen' AND tbl_almacen_movimientos.movimiento_virtual = 2 LEFT JOIN tbl_catalogo AS tbl_catalogo2_1 ON  tbl_catalogo2_1.idtbl_catalogo = dtl_almacen_movimientos1.tbl_catalogo_idtbl_catalogo LEFT JOIN dtl_asignacion ON dtl_asignacion.tbl_almacen_movimientos_idtbl_almacen_movimientos = tbl_almacen_movimientos.idtbl_almacen_movimientos AND tbl_almacen_movimientos.tipo = 'devolucion-almacen' AND dtl_asignacion.estado_entrega = 'almacen' LEFT JOIN dtl_almacen ON dtl_almacen.iddtl_almacen = dtl_asignacion.dtl_almacen_iddtl_almacen AND dtl_asignacion.dtl_almacen_iddtl_almacen IS NOT NULL LEFT JOIN tbl_catalogo AS tbl_catalogo3 ON tbl_catalogo3.idtbl_catalogo = dtl_almacen.tbl_catalogo_idtbl_catalogo AND dtl_almacen.tbl_catalogo_idtbl_catalogo IS NOT NULL WHERE (tbl_almacen_movimientos.tipo = 'entrada-almacen' OR tbl_almacen_movimientos.tipo = 'salida-almacen' OR tbl_almacen_movimientos.tipo = 'devolucion-almacen') AND (tbl_catalogo1.neodata IS NOT NULL OR tbl_catalogo2.neodata IS NOT NULL OR tbl_catalogo2_1.neodata IS NOT NULL OR tbl_catalogo3.neodata IS NOT NULL) AND tbl_almacen_movimientos.tbl_almacenes_idtbl_almacenes = $idtbl_almacenes AND tbl_almacen_movimientos.estatus = 1) AS result GROUP BY neodata) AS result1 JOIN tbl_catalogo ON tbl_catalogo.neodata = result1.neodata JOIN dtl_almacen ON dtl_almacen.tbl_catalogo_idtbl_catalogo = tbl_catalogo.idtbl_catalogo AND dtl_almacen.tbl_almacenes_idtbl_almacenes = $idtbl_almacenes");
		$query = $this->db->query("SELECT result1.neodata, result1.descripcion, (result1.cantidad_entrada - result1.cantidad_salida + result1.cantidad_devolucion + result1.cantidad_traspaso - result1.cantidad_salida_traspaso) AS existencias, result1.cantidad_entrada, result1.cantidad_salida, result1.cantidad_devolucion, result1.cantidad_traspaso, result1.cantidad_salida_traspaso FROM (SELECT CASE WHEN neodata1 IS NOT NULL THEN neodata1 WHEN neodata2 IS NOT NULL THEN neodata2 WHEN neodata3 IS NOT NULL THEN neodata3 END AS neodata, CASE WHEN neodata1 IS NOT NULL THEN descripcion1 WHEN neodata2 IS NOT NULL THEN descripcion2 WHEN neodata3 IS NOT NULL THEN descripcion3 END AS descripcion, SUM(IF((tipo = 'entrada-almacen' OR tipo = 'entrada') AND tipo_movimiento IS NULL, cantidad1, 0)) AS cantidad_entrada, SUM(IF(tipo = 'salida-almacen' AND movimiento_virtual = 0, cantidad2, 0)) AS cantidad_salida, SUM(IF(tipo = 'devolucion-almacen', cantidad3, 0)) AS cantidad_devolucion, SUM(IF(tipo_movimiento = 'traspaso', cantidad1, 0)) AS cantidad_traspaso, SUM(IF(tipo = 'salida-almacen' AND movimiento_virtual = 2, cantidad2, 0)) AS cantidad_salida_traspaso FROM (SELECT tbl_almacen_movimientos.idtbl_almacen_movimientos, tbl_almacen_movimientos.uid, tbl_catalogo1.neodata AS neodata1, tbl_catalogo1.descripcion AS descripcion1, dtl_almacen_movimientos.cantidad as cantidad1, IF(tbl_almacen_movimientos.tipo = 'salida-almacen' AND tbl_almacen_movimientos.movimiento_virtual != 2, tbl_catalogo2.neodata, tbl_catalogo2_1.neodata) AS neodata2, IF(tbl_almacen_movimientos.tipo = 'salida-almacen' AND tbl_almacen_movimientos.movimiento_virtual != 2, tbl_catalogo2.descripcion, tbl_catalogo2_1.descripcion) AS descripcion2, IF(tbl_almacen_movimientos.tipo = 'salida-almacen' AND tbl_almacen_movimientos.movimiento_virtual != 2, dtl_solicitud_material.entregado, dtl_almacen_movimientos1.cantidad) as cantidad2, tbl_catalogo3.neodata AS neodata3, tbl_catalogo3.descripcion AS descripcion3, dtl_asignacion.entregado as cantidad3, tbl_almacen_movimientos.tipo, tbl_almacen_movimientos.tipo_movimiento, tbl_almacen_movimientos.movimiento_virtual FROM tbl_almacen_movimientos LEFT JOIN dtl_almacen_movimientos ON tbl_almacen_movimientos.idtbl_almacen_movimientos = dtl_almacen_movimientos.tbl_almacen_movimientos_idtbl_almacen_movimientos AND tbl_almacen_movimientos.tipo = 'entrada-almacen' LEFT JOIN tbl_catalogo AS tbl_catalogo1 ON tbl_catalogo1.idtbl_catalogo = dtl_almacen_movimientos.tbl_catalogo_idtbl_catalogo AND dtl_almacen_movimientos.tbl_catalogo_idtbl_catalogo IS NOT NULL LEFT JOIN tbl_solicitud_material ON tbl_solicitud_material.idtbl_solicitud_material = tbl_almacen_movimientos.parent AND tbl_almacen_movimientos.tipo = 'salida-almacen' AND tbl_almacen_movimientos.movimiento_virtual != 2 AND (tbl_solicitud_material.estatus_solicitud = 'S' OR tbl_solicitud_material.estatus_solicitud = 'SU') LEFT JOIN dtl_solicitud_material ON tbl_solicitud_material.idtbl_solicitud_material = dtl_solicitud_material.tbl_solicitud_material_idtbl_solicitud_material AND tbl_solicitud_material.idtbl_solicitud_material IS NOT NULL LEFT JOIN tbl_catalogo AS tbl_catalogo2 ON tbl_catalogo2.idtbl_catalogo = dtl_solicitud_material.tbl_catalogo_idtbl_catalogo AND dtl_solicitud_material.tbl_catalogo_idtbl_catalogo IS NOT NULL LEFT JOIN dtl_almacen_movimientos AS dtl_almacen_movimientos1 ON dtl_almacen_movimientos1.tbl_almacen_movimientos_idtbl_almacen_movimientos = tbl_almacen_movimientos.parent AND tbl_almacen_movimientos.tipo = 'salida-almacen' AND tbl_almacen_movimientos.movimiento_virtual = 2 LEFT JOIN tbl_catalogo AS tbl_catalogo2_1 ON  tbl_catalogo2_1.idtbl_catalogo = dtl_almacen_movimientos1.tbl_catalogo_idtbl_catalogo LEFT JOIN dtl_asignacion ON dtl_asignacion.tbl_almacen_movimientos_idtbl_almacen_movimientos = tbl_almacen_movimientos.idtbl_almacen_movimientos AND tbl_almacen_movimientos.tipo = 'devolucion-almacen' AND dtl_asignacion.estado_entrega = 'almacen' LEFT JOIN dtl_almacen ON dtl_almacen.iddtl_almacen = dtl_asignacion.dtl_almacen_iddtl_almacen AND dtl_asignacion.dtl_almacen_iddtl_almacen IS NOT NULL LEFT JOIN tbl_catalogo AS tbl_catalogo3 ON tbl_catalogo3.idtbl_catalogo = dtl_almacen.tbl_catalogo_idtbl_catalogo AND dtl_almacen.tbl_catalogo_idtbl_catalogo IS NOT NULL WHERE (tbl_almacen_movimientos.tipo = 'entrada-almacen' OR tbl_almacen_movimientos.tipo = 'salida-almacen' OR tbl_almacen_movimientos.tipo = 'devolucion-almacen') AND (tbl_catalogo1.neodata IS NOT NULL OR tbl_catalogo2.neodata IS NOT NULL OR tbl_catalogo2_1.neodata IS NOT NULL OR tbl_catalogo3.neodata IS NOT NULL) AND tbl_almacen_movimientos.tbl_almacenes_idtbl_almacenes = $idtbl_almacenes AND tbl_almacen_movimientos.estatus = 1) AS result GROUP BY neodata) AS result1 JOIN tbl_catalogo ON tbl_catalogo.neodata = result1.neodata JOIN dtl_almacen ON dtl_almacen.tbl_catalogo_idtbl_catalogo = tbl_catalogo.idtbl_catalogo AND dtl_almacen.tbl_almacenes_idtbl_almacenes = $idtbl_almacenes");
		return $query->result();
	}

	public function cuadre_materiales_inventario($idtbl_almacenes, $buscar = '', $inicio = false, $cantidadRegistro = false){
		$limit = '';
		if ($inicio !== false && $cantidadRegistro !== false) {
			$limit = 'LIMIT ' . $inicio . "," . $cantidadRegistro;
		}
		//$query = $this->db->query("SELECT result1.neodata, result1.descripcion, (result1.cantidad_entrada - result1.cantidad_salida + result1.cantidad_devolucion + result1.cantidad_traspaso) AS existencias, result1.cantidad_entrada, result1.cantidad_salida, result1.cantidad_devolucion, result1.cantidad_traspaso FROM (SELECT CASE WHEN neodata1 IS NOT NULL THEN neodata1 WHEN neodata2 IS NOT NULL THEN neodata2 WHEN neodata3 IS NOT NULL THEN neodata3 END AS neodata, CASE WHEN neodata1 IS NOT NULL THEN descripcion1 WHEN neodata2 IS NOT NULL THEN descripcion2 WHEN neodata3 IS NOT NULL THEN descripcion3 END AS descripcion, SUM(IF((tipo = 'entrada-almacen' OR tipo = 'entrada') AND tipo_movimiento IS NULL, cantidad1, 0)) AS cantidad_entrada, SUM(IF(tipo = 'salida-almacen', cantidad2, 0)) AS cantidad_salida, SUM(IF(tipo = 'devolucion-almacen', cantidad3, 0)) AS cantidad_devolucion, SUM(IF(tipo_movimiento = 'traspaso', cantidad1, 0)) AS cantidad_traspaso FROM (SELECT tbl_almacen_movimientos.idtbl_almacen_movimientos, tbl_almacen_movimientos.uid, tbl_catalogo1.neodata AS neodata1, tbl_catalogo1.descripcion AS descripcion1, dtl_almacen_movimientos.cantidad as cantidad1, IF(tbl_almacen_movimientos.tipo = 'salida-almacen' AND tbl_almacen_movimientos.movimiento_virtual != 2, tbl_catalogo2.neodata, tbl_catalogo2_1.neodata) AS neodata2, IF(tbl_almacen_movimientos.tipo = 'salida-almacen' AND tbl_almacen_movimientos.movimiento_virtual != 2, tbl_catalogo2.descripcion, tbl_catalogo2_1.descripcion) AS descripcion2, IF(tbl_almacen_movimientos.tipo = 'salida-almacen' AND tbl_almacen_movimientos.movimiento_virtual != 2, dtl_solicitud_material.entregado, dtl_almacen_movimientos1.cantidad) as cantidad2, tbl_catalogo3.neodata AS neodata3, tbl_catalogo3.descripcion AS descripcion3, dtl_asignacion.entregado as cantidad3, tbl_almacen_movimientos.tipo, tbl_almacen_movimientos.tipo_movimiento FROM tbl_almacen_movimientos LEFT JOIN dtl_almacen_movimientos ON tbl_almacen_movimientos.idtbl_almacen_movimientos = dtl_almacen_movimientos.tbl_almacen_movimientos_idtbl_almacen_movimientos AND tbl_almacen_movimientos.tipo = 'entrada-almacen' LEFT JOIN tbl_catalogo AS tbl_catalogo1 ON tbl_catalogo1.idtbl_catalogo = dtl_almacen_movimientos.tbl_catalogo_idtbl_catalogo AND dtl_almacen_movimientos.tbl_catalogo_idtbl_catalogo IS NOT NULL LEFT JOIN tbl_solicitud_material ON tbl_solicitud_material.idtbl_solicitud_material = tbl_almacen_movimientos.parent AND tbl_almacen_movimientos.tipo = 'salida-almacen' AND tbl_almacen_movimientos.movimiento_virtual != 2 AND (tbl_solicitud_material.estatus_solicitud = 'S' OR tbl_solicitud_material.estatus_solicitud = 'SU') LEFT JOIN dtl_solicitud_material ON tbl_solicitud_material.idtbl_solicitud_material = dtl_solicitud_material.tbl_solicitud_material_idtbl_solicitud_material AND tbl_solicitud_material.idtbl_solicitud_material IS NOT NULL LEFT JOIN tbl_catalogo AS tbl_catalogo2 ON tbl_catalogo2.idtbl_catalogo = dtl_solicitud_material.tbl_catalogo_idtbl_catalogo AND dtl_solicitud_material.tbl_catalogo_idtbl_catalogo IS NOT NULL LEFT JOIN dtl_almacen_movimientos AS dtl_almacen_movimientos1 ON dtl_almacen_movimientos1.tbl_almacen_movimientos_idtbl_almacen_movimientos = tbl_almacen_movimientos.parent AND tbl_almacen_movimientos.tipo = 'salida-almacen' AND tbl_almacen_movimientos.movimiento_virtual = 2 LEFT JOIN tbl_catalogo AS tbl_catalogo2_1 ON  tbl_catalogo2_1.idtbl_catalogo = dtl_almacen_movimientos1.tbl_catalogo_idtbl_catalogo LEFT JOIN dtl_asignacion ON dtl_asignacion.tbl_almacen_movimientos_idtbl_almacen_movimientos = tbl_almacen_movimientos.idtbl_almacen_movimientos AND tbl_almacen_movimientos.tipo = 'devolucion-almacen' AND dtl_asignacion.estado_entrega = 'almacen' LEFT JOIN dtl_almacen ON dtl_almacen.iddtl_almacen = dtl_asignacion.dtl_almacen_iddtl_almacen AND dtl_asignacion.dtl_almacen_iddtl_almacen IS NOT NULL LEFT JOIN tbl_catalogo AS tbl_catalogo3 ON tbl_catalogo3.idtbl_catalogo = dtl_almacen.tbl_catalogo_idtbl_catalogo AND dtl_almacen.tbl_catalogo_idtbl_catalogo IS NOT NULL WHERE (tbl_almacen_movimientos.tipo = 'entrada-almacen' OR tbl_almacen_movimientos.tipo = 'salida-almacen' OR tbl_almacen_movimientos.tipo = 'devolucion-almacen') AND (tbl_catalogo1.neodata IS NOT NULL OR tbl_catalogo2.neodata IS NOT NULL OR tbl_catalogo2_1.neodata IS NOT NULL OR tbl_catalogo3.neodata IS NOT NULL) AND tbl_almacen_movimientos.tbl_almacenes_idtbl_almacenes = $idtbl_almacenes AND tbl_almacen_movimientos.estatus = 1) AS result GROUP BY neodata) AS result1 JOIN tbl_catalogo ON tbl_catalogo.neodata = result1.neodata JOIN dtl_almacen ON dtl_almacen.tbl_catalogo_idtbl_catalogo = tbl_catalogo.idtbl_catalogo AND dtl_almacen.tbl_almacenes_idtbl_almacenes = $idtbl_almacenes");
		$query = $this->db->query("SELECT result1.neodata, result1.descripcion, result1.marca, result1.modelo, (result1.cantidad_entrada - result1.cantidad_salida + result1.cantidad_devolucion + result1.cantidad_traspaso - result1.cantidad_salida_traspaso) AS existencias FROM (SELECT CASE WHEN neodata1 IS NOT NULL THEN neodata1 WHEN neodata2 IS NOT NULL THEN neodata2 WHEN neodata3 IS NOT NULL THEN neodata3 END AS neodata, CASE WHEN neodata1 IS NOT NULL THEN descripcion1 WHEN neodata2 IS NOT NULL THEN descripcion2 WHEN neodata3 IS NOT NULL THEN descripcion3 END AS descripcion, CASE WHEN neodata1 IS NOT NULL THEN marca1 WHEN neodata2 IS NOT NULL THEN marca2 WHEN neodata3 IS NOT NULL THEN marca3 END AS marca, CASE WHEN neodata1 IS NOT NULL THEN modelo1 WHEN neodata2 IS NOT NULL THEN modelo2 WHEN neodata3 IS NOT NULL THEN modelo3 END AS modelo, SUM(IF((tipo = 'entrada-almacen' OR tipo = 'entrada') AND tipo_movimiento IS NULL, cantidad1, 0)) AS cantidad_entrada, SUM(IF(tipo = 'salida-almacen' AND movimiento_virtual = 0, cantidad2, 0)) AS cantidad_salida, SUM(IF(tipo = 'devolucion-almacen', cantidad3, 0)) AS cantidad_devolucion, SUM(IF(tipo_movimiento = 'traspaso', cantidad1, 0)) AS cantidad_traspaso, SUM(IF(tipo = 'salida-almacen' AND movimiento_virtual = 2, cantidad2, 0)) AS cantidad_salida_traspaso FROM (SELECT tbl_almacen_movimientos.idtbl_almacen_movimientos, tbl_almacen_movimientos.uid, tbl_catalogo1.neodata AS neodata1, tbl_catalogo1.descripcion AS descripcion1, tbl_catalogo1.marca AS marca1, tbl_catalogo1.modelo AS modelo1, dtl_almacen_movimientos.cantidad as cantidad1, IF(tbl_almacen_movimientos.tipo = 'salida-almacen' AND tbl_almacen_movimientos.movimiento_virtual != 2, tbl_catalogo2.neodata, tbl_catalogo2_1.neodata) AS neodata2, IF(tbl_almacen_movimientos.tipo = 'salida-almacen' AND tbl_almacen_movimientos.movimiento_virtual != 2, tbl_catalogo2.descripcion, tbl_catalogo2_1.descripcion) AS descripcion2, IF(tbl_almacen_movimientos.tipo = 'salida-almacen' AND tbl_almacen_movimientos.movimiento_virtual != 2, tbl_catalogo2.marca, tbl_catalogo2_1.marca) AS marca2, IF(tbl_almacen_movimientos.tipo = 'salida-almacen' AND tbl_almacen_movimientos.movimiento_virtual != 2, tbl_catalogo2.modelo, tbl_catalogo2_1.modelo) AS modelo2, IF(tbl_almacen_movimientos.tipo = 'salida-almacen' AND tbl_almacen_movimientos.movimiento_virtual != 2, dtl_solicitud_material.entregado, dtl_almacen_movimientos1.cantidad) as cantidad2, tbl_catalogo3.neodata AS neodata3, tbl_catalogo3.descripcion AS descripcion3, tbl_catalogo3.marca AS marca3, tbl_catalogo3.modelo AS modelo3, dtl_asignacion.entregado as cantidad3, tbl_almacen_movimientos.tipo, tbl_almacen_movimientos.tipo_movimiento, tbl_almacen_movimientos.movimiento_virtual FROM tbl_almacen_movimientos LEFT JOIN dtl_almacen_movimientos ON tbl_almacen_movimientos.idtbl_almacen_movimientos = dtl_almacen_movimientos.tbl_almacen_movimientos_idtbl_almacen_movimientos AND tbl_almacen_movimientos.tipo = 'entrada-almacen' LEFT JOIN tbl_catalogo AS tbl_catalogo1 ON tbl_catalogo1.idtbl_catalogo = dtl_almacen_movimientos.tbl_catalogo_idtbl_catalogo AND dtl_almacen_movimientos.tbl_catalogo_idtbl_catalogo IS NOT NULL LEFT JOIN tbl_solicitud_material ON tbl_solicitud_material.idtbl_solicitud_material = tbl_almacen_movimientos.parent AND tbl_almacen_movimientos.tipo = 'salida-almacen' AND tbl_almacen_movimientos.movimiento_virtual != 2 AND (tbl_solicitud_material.estatus_solicitud = 'S' OR tbl_solicitud_material.estatus_solicitud = 'SU') LEFT JOIN dtl_solicitud_material ON tbl_solicitud_material.idtbl_solicitud_material = dtl_solicitud_material.tbl_solicitud_material_idtbl_solicitud_material AND tbl_solicitud_material.idtbl_solicitud_material IS NOT NULL LEFT JOIN tbl_catalogo AS tbl_catalogo2 ON tbl_catalogo2.idtbl_catalogo = dtl_solicitud_material.tbl_catalogo_idtbl_catalogo AND dtl_solicitud_material.tbl_catalogo_idtbl_catalogo IS NOT NULL LEFT JOIN dtl_almacen_movimientos AS dtl_almacen_movimientos1 ON dtl_almacen_movimientos1.tbl_almacen_movimientos_idtbl_almacen_movimientos = tbl_almacen_movimientos.parent AND tbl_almacen_movimientos.tipo = 'salida-almacen' AND tbl_almacen_movimientos.movimiento_virtual = 2 LEFT JOIN tbl_catalogo AS tbl_catalogo2_1 ON tbl_catalogo2_1.idtbl_catalogo = dtl_almacen_movimientos1.tbl_catalogo_idtbl_catalogo LEFT JOIN dtl_asignacion ON dtl_asignacion.tbl_almacen_movimientos_idtbl_almacen_movimientos = tbl_almacen_movimientos.idtbl_almacen_movimientos AND tbl_almacen_movimientos.tipo = 'devolucion-almacen' AND dtl_asignacion.estado_entrega = 'almacen' LEFT JOIN dtl_almacen ON dtl_almacen.iddtl_almacen = dtl_asignacion.dtl_almacen_iddtl_almacen AND dtl_asignacion.dtl_almacen_iddtl_almacen IS NOT NULL LEFT JOIN tbl_catalogo AS tbl_catalogo3 ON tbl_catalogo3.idtbl_catalogo = dtl_almacen.tbl_catalogo_idtbl_catalogo AND dtl_almacen.tbl_catalogo_idtbl_catalogo IS NOT NULL WHERE (tbl_almacen_movimientos.tipo = 'entrada-almacen' OR tbl_almacen_movimientos.tipo = 'salida-almacen' OR tbl_almacen_movimientos.tipo = 'devolucion-almacen') AND (tbl_catalogo1.neodata IS NOT NULL OR tbl_catalogo2.neodata IS NOT NULL OR tbl_catalogo2_1.neodata IS NOT NULL OR tbl_catalogo3.neodata IS NOT NULL) AND tbl_almacen_movimientos.tbl_almacenes_idtbl_almacenes = $idtbl_almacenes AND tbl_almacen_movimientos.estatus = 1) AS result GROUP BY neodata) AS result1 JOIN tbl_catalogo ON tbl_catalogo.neodata = result1.neodata JOIN dtl_almacen ON dtl_almacen.tbl_catalogo_idtbl_catalogo = tbl_catalogo.idtbl_catalogo AND dtl_almacen.tbl_almacenes_idtbl_almacenes = $idtbl_almacenes AND (result1.neodata LIKE '%$buscar%' OR result1.descripcion LIKE '%$buscar%')". $limit);
		return $query->result();
	}

	public function actualizar_existencias_cuadre($idtbl_almacenes){
		//$query = $this->db->query("SELECT result1.neodata, result1.descripcion, (result1.cantidad_entrada - result1.cantidad_salida + result1.cantidad_devolucion + result1.cantidad_traspaso) AS existencias, result1.cantidad_entrada, result1.cantidad_salida, result1.cantidad_devolucion, result1.cantidad_traspaso FROM (SELECT CASE WHEN neodata1 IS NOT NULL THEN neodata1 WHEN neodata2 IS NOT NULL THEN neodata2 WHEN neodata3 IS NOT NULL THEN neodata3 END AS neodata, CASE WHEN neodata1 IS NOT NULL THEN descripcion1 WHEN neodata2 IS NOT NULL THEN descripcion2 WHEN neodata3 IS NOT NULL THEN descripcion3 END AS descripcion, SUM(IF((tipo = 'entrada-almacen' OR tipo = 'entrada') AND tipo_movimiento IS NULL, cantidad1, 0)) AS cantidad_entrada, SUM(IF(tipo = 'salida-almacen', cantidad2, 0)) AS cantidad_salida, SUM(IF(tipo = 'devolucion-almacen', cantidad3, 0)) AS cantidad_devolucion, SUM(IF(tipo_movimiento = 'traspaso', cantidad1, 0)) AS cantidad_traspaso FROM (SELECT tbl_almacen_movimientos.idtbl_almacen_movimientos, tbl_almacen_movimientos.uid, tbl_catalogo1.neodata AS neodata1, tbl_catalogo1.descripcion AS descripcion1, dtl_almacen_movimientos.cantidad as cantidad1, IF(tbl_almacen_movimientos.tipo = 'salida-almacen' AND tbl_almacen_movimientos.movimiento_virtual != 2, tbl_catalogo2.neodata, tbl_catalogo2_1.neodata) AS neodata2, IF(tbl_almacen_movimientos.tipo = 'salida-almacen' AND tbl_almacen_movimientos.movimiento_virtual != 2, tbl_catalogo2.descripcion, tbl_catalogo2_1.descripcion) AS descripcion2, IF(tbl_almacen_movimientos.tipo = 'salida-almacen' AND tbl_almacen_movimientos.movimiento_virtual != 2, dtl_solicitud_material.entregado, dtl_almacen_movimientos1.cantidad) as cantidad2, tbl_catalogo3.neodata AS neodata3, tbl_catalogo3.descripcion AS descripcion3, dtl_asignacion.entregado as cantidad3, tbl_almacen_movimientos.tipo, tbl_almacen_movimientos.tipo_movimiento FROM tbl_almacen_movimientos LEFT JOIN dtl_almacen_movimientos ON tbl_almacen_movimientos.idtbl_almacen_movimientos = dtl_almacen_movimientos.tbl_almacen_movimientos_idtbl_almacen_movimientos AND tbl_almacen_movimientos.tipo = 'entrada-almacen' LEFT JOIN tbl_catalogo AS tbl_catalogo1 ON tbl_catalogo1.idtbl_catalogo = dtl_almacen_movimientos.tbl_catalogo_idtbl_catalogo AND dtl_almacen_movimientos.tbl_catalogo_idtbl_catalogo IS NOT NULL LEFT JOIN tbl_solicitud_material ON tbl_solicitud_material.idtbl_solicitud_material = tbl_almacen_movimientos.parent AND tbl_almacen_movimientos.tipo = 'salida-almacen' AND tbl_almacen_movimientos.movimiento_virtual != 2 AND (tbl_solicitud_material.estatus_solicitud = 'S' OR tbl_solicitud_material.estatus_solicitud = 'SU') LEFT JOIN dtl_solicitud_material ON tbl_solicitud_material.idtbl_solicitud_material = dtl_solicitud_material.tbl_solicitud_material_idtbl_solicitud_material AND tbl_solicitud_material.idtbl_solicitud_material IS NOT NULL LEFT JOIN tbl_catalogo AS tbl_catalogo2 ON tbl_catalogo2.idtbl_catalogo = dtl_solicitud_material.tbl_catalogo_idtbl_catalogo AND dtl_solicitud_material.tbl_catalogo_idtbl_catalogo IS NOT NULL LEFT JOIN dtl_almacen_movimientos AS dtl_almacen_movimientos1 ON dtl_almacen_movimientos1.tbl_almacen_movimientos_idtbl_almacen_movimientos = tbl_almacen_movimientos.parent AND tbl_almacen_movimientos.tipo = 'salida-almacen' AND tbl_almacen_movimientos.movimiento_virtual = 2 LEFT JOIN tbl_catalogo AS tbl_catalogo2_1 ON  tbl_catalogo2_1.idtbl_catalogo = dtl_almacen_movimientos1.tbl_catalogo_idtbl_catalogo LEFT JOIN dtl_asignacion ON dtl_asignacion.tbl_almacen_movimientos_idtbl_almacen_movimientos = tbl_almacen_movimientos.idtbl_almacen_movimientos AND tbl_almacen_movimientos.tipo = 'devolucion-almacen' AND dtl_asignacion.estado_entrega = 'almacen' LEFT JOIN dtl_almacen ON dtl_almacen.iddtl_almacen = dtl_asignacion.dtl_almacen_iddtl_almacen AND dtl_asignacion.dtl_almacen_iddtl_almacen IS NOT NULL LEFT JOIN tbl_catalogo AS tbl_catalogo3 ON tbl_catalogo3.idtbl_catalogo = dtl_almacen.tbl_catalogo_idtbl_catalogo AND dtl_almacen.tbl_catalogo_idtbl_catalogo IS NOT NULL WHERE (tbl_almacen_movimientos.tipo = 'entrada-almacen' OR tbl_almacen_movimientos.tipo = 'salida-almacen' OR tbl_almacen_movimientos.tipo = 'devolucion-almacen') AND (tbl_catalogo1.neodata IS NOT NULL OR tbl_catalogo2.neodata IS NOT NULL OR tbl_catalogo2_1.neodata IS NOT NULL OR tbl_catalogo3.neodata IS NOT NULL) AND tbl_almacen_movimientos.tbl_almacenes_idtbl_almacenes = $idtbl_almacenes AND tbl_almacen_movimientos.estatus = 1) AS result GROUP BY neodata) AS result1 JOIN tbl_catalogo ON tbl_catalogo.neodata = result1.neodata JOIN dtl_almacen ON dtl_almacen.tbl_catalogo_idtbl_catalogo = tbl_catalogo.idtbl_catalogo AND dtl_almacen.tbl_almacenes_idtbl_almacenes = $idtbl_almacenes");
		$query = $this->db->query("SELECT result1.neodata, result1.descripcion, (result1.cantidad_entrada - result1.cantidad_salida + result1.cantidad_devolucion + result1.cantidad_traspaso - result1.cantidad_salida_traspaso) AS existencias, result1.cantidad_entrada, result1.cantidad_salida, result1.cantidad_devolucion, result1.cantidad_traspaso, result1.cantidad_salida_traspaso FROM (SELECT CASE WHEN neodata1 IS NOT NULL THEN neodata1 WHEN neodata2 IS NOT NULL THEN neodata2 WHEN neodata3 IS NOT NULL THEN neodata3 END AS neodata, CASE WHEN neodata1 IS NOT NULL THEN descripcion1 WHEN neodata2 IS NOT NULL THEN descripcion2 WHEN neodata3 IS NOT NULL THEN descripcion3 END AS descripcion, SUM(IF((tipo = 'entrada-almacen' OR tipo = 'entrada') AND tipo_movimiento IS NULL, cantidad1, 0)) AS cantidad_entrada, SUM(IF(tipo = 'salida-almacen' AND movimiento_virtual = 0, cantidad2, 0)) AS cantidad_salida, SUM(IF(tipo = 'devolucion-almacen', cantidad3, 0)) AS cantidad_devolucion, SUM(IF(tipo_movimiento = 'traspaso', cantidad1, 0)) AS cantidad_traspaso, SUM(IF(tipo = 'salida-almacen' AND movimiento_virtual = 2, cantidad2, 0)) AS cantidad_salida_traspaso FROM (SELECT tbl_almacen_movimientos.idtbl_almacen_movimientos, tbl_almacen_movimientos.uid, tbl_catalogo1.neodata AS neodata1, tbl_catalogo1.descripcion AS descripcion1, dtl_almacen_movimientos.cantidad as cantidad1, IF(tbl_almacen_movimientos.tipo = 'salida-almacen' AND tbl_almacen_movimientos.movimiento_virtual != 2, tbl_catalogo2.neodata, tbl_catalogo2_1.neodata) AS neodata2, IF(tbl_almacen_movimientos.tipo = 'salida-almacen' AND tbl_almacen_movimientos.movimiento_virtual != 2, tbl_catalogo2.descripcion, tbl_catalogo2_1.descripcion) AS descripcion2, IF(tbl_almacen_movimientos.tipo = 'salida-almacen' AND tbl_almacen_movimientos.movimiento_virtual != 2, dtl_solicitud_material.entregado, dtl_almacen_movimientos1.cantidad) as cantidad2, tbl_catalogo3.neodata AS neodata3, tbl_catalogo3.descripcion AS descripcion3, dtl_asignacion.entregado as cantidad3, tbl_almacen_movimientos.tipo, tbl_almacen_movimientos.tipo_movimiento, tbl_almacen_movimientos.movimiento_virtual FROM tbl_almacen_movimientos LEFT JOIN dtl_almacen_movimientos ON tbl_almacen_movimientos.idtbl_almacen_movimientos = dtl_almacen_movimientos.tbl_almacen_movimientos_idtbl_almacen_movimientos AND tbl_almacen_movimientos.tipo = 'entrada-almacen' LEFT JOIN tbl_catalogo AS tbl_catalogo1 ON tbl_catalogo1.idtbl_catalogo = dtl_almacen_movimientos.tbl_catalogo_idtbl_catalogo AND dtl_almacen_movimientos.tbl_catalogo_idtbl_catalogo IS NOT NULL LEFT JOIN tbl_solicitud_material ON tbl_solicitud_material.idtbl_solicitud_material = tbl_almacen_movimientos.parent AND tbl_almacen_movimientos.tipo = 'salida-almacen' AND tbl_almacen_movimientos.movimiento_virtual != 2 AND (tbl_solicitud_material.estatus_solicitud = 'S' OR tbl_solicitud_material.estatus_solicitud = 'SU' OR tbl_solicitud_material.estatus_solicitud = 'SK' OR tbl_solicitud_material.estatus_solicitud = 'SU K') LEFT JOIN dtl_solicitud_material ON tbl_solicitud_material.idtbl_solicitud_material = dtl_solicitud_material.tbl_solicitud_material_idtbl_solicitud_material AND tbl_solicitud_material.idtbl_solicitud_material IS NOT NULL LEFT JOIN tbl_catalogo AS tbl_catalogo2 ON tbl_catalogo2.idtbl_catalogo = dtl_solicitud_material.tbl_catalogo_idtbl_catalogo AND dtl_solicitud_material.tbl_catalogo_idtbl_catalogo IS NOT NULL LEFT JOIN dtl_almacen_movimientos AS dtl_almacen_movimientos1 ON dtl_almacen_movimientos1.tbl_almacen_movimientos_idtbl_almacen_movimientos = tbl_almacen_movimientos.parent AND tbl_almacen_movimientos.tipo = 'salida-almacen' AND tbl_almacen_movimientos.movimiento_virtual = 2 LEFT JOIN tbl_catalogo AS tbl_catalogo2_1 ON  tbl_catalogo2_1.idtbl_catalogo = dtl_almacen_movimientos1.tbl_catalogo_idtbl_catalogo LEFT JOIN dtl_asignacion ON dtl_asignacion.tbl_almacen_movimientos_idtbl_almacen_movimientos = tbl_almacen_movimientos.idtbl_almacen_movimientos AND tbl_almacen_movimientos.tipo = 'devolucion-almacen' AND dtl_asignacion.estado_entrega = 'almacen' LEFT JOIN dtl_almacen ON dtl_almacen.iddtl_almacen = dtl_asignacion.dtl_almacen_iddtl_almacen AND dtl_asignacion.dtl_almacen_iddtl_almacen IS NOT NULL LEFT JOIN tbl_catalogo AS tbl_catalogo3 ON tbl_catalogo3.idtbl_catalogo = dtl_almacen.tbl_catalogo_idtbl_catalogo AND dtl_almacen.tbl_catalogo_idtbl_catalogo IS NOT NULL WHERE (tbl_almacen_movimientos.tipo = 'entrada-almacen' OR tbl_almacen_movimientos.tipo = 'salida-almacen' OR tbl_almacen_movimientos.tipo = 'devolucion-almacen') AND (tbl_catalogo1.neodata IS NOT NULL OR tbl_catalogo2.neodata IS NOT NULL OR tbl_catalogo2_1.neodata IS NOT NULL OR tbl_catalogo3.neodata IS NOT NULL) AND tbl_almacen_movimientos.tbl_almacenes_idtbl_almacenes = $idtbl_almacenes AND tbl_almacen_movimientos.estatus = 1) AS result GROUP BY neodata) AS result1 JOIN tbl_catalogo ON tbl_catalogo.neodata = result1.neodata JOIN dtl_almacen ON dtl_almacen.tbl_catalogo_idtbl_catalogo = tbl_catalogo.idtbl_catalogo AND dtl_almacen.tbl_almacenes_idtbl_almacenes = $idtbl_almacenes");
		foreach($query->result() AS $key => $value){
			$existencias = $value->existencias;
			$neodata = $value->neodata;
			$this->db->query("UPDATE dtl_almacen JOIN tbl_catalogo ON dtl_almacen.tbl_catalogo_idtbl_catalogo = tbl_catalogo.idtbl_catalogo SET dtl_almacen.existencias = $existencias WHERE dtl_almacen.tbl_almacenes_idtbl_almacenes=$idtbl_almacenes AND dtl_almacen.estatus='almacen' AND tbl_catalogo.neodata='$neodata' AND tbl_catalogo.ctl_categorias_idctl_categorias <> 16");
		}
		return $query->result();
	}

	public function cuadre_materiales_proyecto($idtbl_almacen){
		
		$id_almacenes = '';
			$almacenes_proyecto = $this->db->query("SELECT tbl_almacenes.idtbl_almacenes FROM tbl_almacenes WHERE tbl_almacenes.tbl_almacenes_idtbl_almacenes = $idtbl_almacen");
			foreach($almacenes_proyecto->result() AS $key => $value){
                if (isset($almacenes_proyecto->result()[$key+1]->idtbl_almacenes)) {
                    	$id_almacenes .= $value->idtbl_almacenes.', ';
                }else{
					$id_almacenes .= $value->idtbl_almacenes;
				}
			}
			

		
		//$query = $this->db->query("SELECT result1.neodata, result1.descripcion, (result1.cantidad_entrada - result1.cantidad_salida + result1.cantidad_devolucion + result1.cantidad_traspaso) AS existencias, result1.cantidad_entrada, result1.cantidad_salida, result1.cantidad_devolucion, result1.cantidad_traspaso FROM (SELECT CASE WHEN neodata1 IS NOT NULL THEN neodata1 WHEN neodata2 IS NOT NULL THEN neodata2 WHEN neodata3 IS NOT NULL THEN neodata3 END AS neodata, CASE WHEN neodata1 IS NOT NULL THEN descripcion1 WHEN neodata2 IS NOT NULL THEN descripcion2 WHEN neodata3 IS NOT NULL THEN descripcion3 END AS descripcion, SUM(IF((tipo = 'entrada-almacen' OR tipo = 'entrada') AND tipo_movimiento IS NULL, cantidad1, 0)) AS cantidad_entrada, SUM(IF(tipo = 'salida-almacen', cantidad2, 0)) AS cantidad_salida, SUM(IF(tipo = 'devolucion-almacen', cantidad3, 0)) AS cantidad_devolucion, SUM(IF(tipo_movimiento = 'traspaso', cantidad1, 0)) AS cantidad_traspaso FROM (SELECT tbl_almacen_movimientos.idtbl_almacen_movimientos, tbl_almacen_movimientos.uid, tbl_catalogo1.neodata AS neodata1, tbl_catalogo1.descripcion AS descripcion1, dtl_almacen_movimientos.cantidad as cantidad1, IF(tbl_almacen_movimientos.tipo = 'salida-almacen' AND tbl_almacen_movimientos.movimiento_virtual != 2, tbl_catalogo2.neodata, tbl_catalogo2_1.neodata) AS neodata2, IF(tbl_almacen_movimientos.tipo = 'salida-almacen' AND tbl_almacen_movimientos.movimiento_virtual != 2, tbl_catalogo2.descripcion, tbl_catalogo2_1.descripcion) AS descripcion2, IF(tbl_almacen_movimientos.tipo = 'salida-almacen' AND tbl_almacen_movimientos.movimiento_virtual != 2, dtl_solicitud_material.entregado, dtl_almacen_movimientos1.cantidad) as cantidad2, tbl_catalogo3.neodata AS neodata3, tbl_catalogo3.descripcion AS descripcion3, dtl_asignacion.entregado as cantidad3, tbl_almacen_movimientos.tipo, tbl_almacen_movimientos.tipo_movimiento FROM tbl_almacen_movimientos LEFT JOIN dtl_almacen_movimientos ON tbl_almacen_movimientos.idtbl_almacen_movimientos = dtl_almacen_movimientos.tbl_almacen_movimientos_idtbl_almacen_movimientos AND tbl_almacen_movimientos.tipo = 'entrada-almacen' LEFT JOIN tbl_catalogo AS tbl_catalogo1 ON tbl_catalogo1.idtbl_catalogo = dtl_almacen_movimientos.tbl_catalogo_idtbl_catalogo AND dtl_almacen_movimientos.tbl_catalogo_idtbl_catalogo IS NOT NULL LEFT JOIN tbl_solicitud_material ON tbl_solicitud_material.idtbl_solicitud_material = tbl_almacen_movimientos.parent AND tbl_almacen_movimientos.tipo = 'salida-almacen' AND tbl_almacen_movimientos.movimiento_virtual != 2 AND (tbl_solicitud_material.estatus_solicitud = 'S' OR tbl_solicitud_material.estatus_solicitud = 'SU') LEFT JOIN dtl_solicitud_material ON tbl_solicitud_material.idtbl_solicitud_material = dtl_solicitud_material.tbl_solicitud_material_idtbl_solicitud_material AND tbl_solicitud_material.idtbl_solicitud_material IS NOT NULL LEFT JOIN tbl_catalogo AS tbl_catalogo2 ON tbl_catalogo2.idtbl_catalogo = dtl_solicitud_material.tbl_catalogo_idtbl_catalogo AND dtl_solicitud_material.tbl_catalogo_idtbl_catalogo IS NOT NULL LEFT JOIN dtl_almacen_movimientos AS dtl_almacen_movimientos1 ON dtl_almacen_movimientos1.tbl_almacen_movimientos_idtbl_almacen_movimientos = tbl_almacen_movimientos.parent AND tbl_almacen_movimientos.tipo = 'salida-almacen' AND tbl_almacen_movimientos.movimiento_virtual = 2 LEFT JOIN tbl_catalogo AS tbl_catalogo2_1 ON  tbl_catalogo2_1.idtbl_catalogo = dtl_almacen_movimientos1.tbl_catalogo_idtbl_catalogo LEFT JOIN dtl_asignacion ON dtl_asignacion.tbl_almacen_movimientos_idtbl_almacen_movimientos = tbl_almacen_movimientos.idtbl_almacen_movimientos AND tbl_almacen_movimientos.tipo = 'devolucion-almacen' AND dtl_asignacion.estado_entrega = 'almacen' LEFT JOIN dtl_almacen ON dtl_almacen.iddtl_almacen = dtl_asignacion.dtl_almacen_iddtl_almacen AND dtl_asignacion.dtl_almacen_iddtl_almacen IS NOT NULL LEFT JOIN tbl_catalogo AS tbl_catalogo3 ON tbl_catalogo3.idtbl_catalogo = dtl_almacen.tbl_catalogo_idtbl_catalogo AND dtl_almacen.tbl_catalogo_idtbl_catalogo IS NOT NULL WHERE (tbl_almacen_movimientos.tipo = 'entrada-almacen' OR tbl_almacen_movimientos.tipo = 'salida-almacen' OR tbl_almacen_movimientos.tipo = 'devolucion-almacen') AND (tbl_catalogo1.neodata IS NOT NULL OR tbl_catalogo2.neodata IS NOT NULL OR tbl_catalogo2_1.neodata IS NOT NULL OR tbl_catalogo3.neodata IS NOT NULL) AND tbl_almacen_movimientos.tbl_almacenes_idtbl_almacenes = $idtbl_almacenes AND tbl_almacen_movimientos.estatus = 1) AS result GROUP BY neodata) AS result1 JOIN tbl_catalogo ON tbl_catalogo.neodata = result1.neodata JOIN dtl_almacen ON dtl_almacen.tbl_catalogo_idtbl_catalogo = tbl_catalogo.idtbl_catalogo AND dtl_almacen.tbl_almacenes_idtbl_almacenes = $idtbl_almacenes");
		$query = $this->db->query("SELECT result1.neodata, result1.descripcion, (result1.cantidad_entrada - result1.cantidad_salida + result1.cantidad_devolucion + result1.cantidad_traspaso - result1.cantidad_salida_traspaso) AS existencias, result1.cantidad_entrada, result1.cantidad_salida, result1.cantidad_devolucion, result1.cantidad_traspaso, result1.cantidad_salida_traspaso FROM (SELECT CASE WHEN neodata1 IS NOT NULL THEN neodata1 WHEN neodata2 IS NOT NULL THEN neodata2 WHEN neodata3 IS NOT NULL THEN neodata3 END AS neodata, CASE WHEN neodata1 IS NOT NULL THEN descripcion1 WHEN neodata2 IS NOT NULL THEN descripcion2 WHEN neodata3 IS NOT NULL THEN descripcion3 END AS descripcion, SUM(IF((tipo = 'entrada-almacen' OR tipo = 'entrada') AND tipo_movimiento IS NULL, cantidad1, 0)) AS cantidad_entrada, SUM(IF(tipo = 'salida-almacen' AND movimiento_virtual = 0, cantidad2, 0)) AS cantidad_salida, SUM(IF(tipo = 'devolucion-almacen', cantidad3, 0)) AS cantidad_devolucion, SUM(IF(tipo_movimiento = 'traspaso', cantidad1, 0)) AS cantidad_traspaso, SUM(IF(tipo = 'salida-almacen' AND movimiento_virtual = 2, cantidad2, 0)) AS cantidad_salida_traspaso FROM (SELECT tbl_almacen_movimientos.idtbl_almacen_movimientos, tbl_almacen_movimientos.uid, tbl_catalogo1.neodata AS neodata1, tbl_catalogo1.descripcion AS descripcion1, dtl_almacen_movimientos.cantidad as cantidad1, IF(tbl_almacen_movimientos.tipo = 'salida-almacen' AND tbl_almacen_movimientos.movimiento_virtual != 2, tbl_catalogo2.neodata, tbl_catalogo2_1.neodata) AS neodata2, IF(tbl_almacen_movimientos.tipo = 'salida-almacen' AND tbl_almacen_movimientos.movimiento_virtual != 2, tbl_catalogo2.descripcion, tbl_catalogo2_1.descripcion) AS descripcion2, IF(tbl_almacen_movimientos.tipo = 'salida-almacen' AND tbl_almacen_movimientos.movimiento_virtual != 2, dtl_solicitud_material.entregado, dtl_almacen_movimientos1.cantidad) as cantidad2, tbl_catalogo3.neodata AS neodata3, tbl_catalogo3.descripcion AS descripcion3, dtl_asignacion.entregado as cantidad3, tbl_almacen_movimientos.tipo, tbl_almacen_movimientos.tipo_movimiento, tbl_almacen_movimientos.movimiento_virtual FROM tbl_almacen_movimientos LEFT JOIN dtl_almacen_movimientos ON tbl_almacen_movimientos.idtbl_almacen_movimientos = dtl_almacen_movimientos.tbl_almacen_movimientos_idtbl_almacen_movimientos AND tbl_almacen_movimientos.tipo = 'entrada-almacen' LEFT JOIN tbl_catalogo AS tbl_catalogo1 ON tbl_catalogo1.idtbl_catalogo = dtl_almacen_movimientos.tbl_catalogo_idtbl_catalogo AND dtl_almacen_movimientos.tbl_catalogo_idtbl_catalogo IS NOT NULL LEFT JOIN tbl_solicitud_material ON tbl_solicitud_material.idtbl_solicitud_material = tbl_almacen_movimientos.parent AND tbl_almacen_movimientos.tipo = 'salida-almacen' AND tbl_almacen_movimientos.movimiento_virtual != 2 AND (tbl_solicitud_material.estatus_solicitud = 'S' OR tbl_solicitud_material.estatus_solicitud = 'SU') LEFT JOIN dtl_solicitud_material ON tbl_solicitud_material.idtbl_solicitud_material = dtl_solicitud_material.tbl_solicitud_material_idtbl_solicitud_material AND tbl_solicitud_material.idtbl_solicitud_material IS NOT NULL LEFT JOIN tbl_catalogo AS tbl_catalogo2 ON tbl_catalogo2.idtbl_catalogo = dtl_solicitud_material.tbl_catalogo_idtbl_catalogo AND dtl_solicitud_material.tbl_catalogo_idtbl_catalogo IS NOT NULL LEFT JOIN dtl_almacen_movimientos AS dtl_almacen_movimientos1 ON dtl_almacen_movimientos1.tbl_almacen_movimientos_idtbl_almacen_movimientos = tbl_almacen_movimientos.parent AND tbl_almacen_movimientos.tipo = 'salida-almacen' AND tbl_almacen_movimientos.movimiento_virtual = 2 LEFT JOIN tbl_catalogo AS tbl_catalogo2_1 ON  tbl_catalogo2_1.idtbl_catalogo = dtl_almacen_movimientos1.tbl_catalogo_idtbl_catalogo LEFT JOIN dtl_asignacion ON dtl_asignacion.tbl_almacen_movimientos_idtbl_almacen_movimientos = tbl_almacen_movimientos.idtbl_almacen_movimientos AND tbl_almacen_movimientos.tipo = 'devolucion-almacen' AND dtl_asignacion.estado_entrega = 'almacen' LEFT JOIN dtl_almacen ON dtl_almacen.iddtl_almacen = dtl_asignacion.dtl_almacen_iddtl_almacen AND dtl_asignacion.dtl_almacen_iddtl_almacen IS NOT NULL LEFT JOIN tbl_catalogo AS tbl_catalogo3 ON tbl_catalogo3.idtbl_catalogo = dtl_almacen.tbl_catalogo_idtbl_catalogo AND dtl_almacen.tbl_catalogo_idtbl_catalogo IS NOT NULL WHERE (tbl_almacen_movimientos.tipo = 'entrada-almacen' OR tbl_almacen_movimientos.tipo = 'salida-almacen' OR tbl_almacen_movimientos.tipo = 'devolucion-almacen') AND (tbl_catalogo1.neodata IS NOT NULL OR tbl_catalogo2.neodata IS NOT NULL OR tbl_catalogo2_1.neodata IS NOT NULL OR tbl_catalogo3.neodata IS NOT NULL) AND tbl_almacen_movimientos.tbl_almacenes_idtbl_almacenes IN ($id_almacenes) AND tbl_almacen_movimientos.estatus = 1) AS result GROUP BY neodata) AS result1 JOIN tbl_catalogo ON tbl_catalogo.neodata = result1.neodata JOIN dtl_almacen ON dtl_almacen.tbl_catalogo_idtbl_catalogo = tbl_catalogo.idtbl_catalogo AND dtl_almacen.tbl_almacenes_idtbl_almacenes IN ($id_almacenes) GROUP BY tbl_catalogo.neodata");
		return $query->result();
	}

	public function balance_general($idtbl_almacen){
		
		$id_almacenes = '';
			$almacenes_proyecto = $this->db->query("SELECT ta.*, tps.numero_proyecto AS almacen_subp FROM tbl_proyectos tp JOIN tbl_proyectos tpp ON tpp.tbl_proyectos_idtbl_proyectos = tp.idtbl_proyectos JOIN tbl_almacenes ta ON ta.tbl_proyectos_idtbl_proyectos = tpp.idtbl_proyectos JOIN tbl_almacenes tas ON tas.idtbl_almacenes = ta.tbl_almacenes_idtbl_almacenes JOIN tbl_proyectos tps ON tps.idtbl_proyectos = tas.tbl_proyectos_idtbl_proyectos WHERE tpp.tbl_proyectos_idtbl_proyectos = (SELECT tbl_proyectos_idtbl_proyectos FROM tbl_almacenes WHERE idtbl_almacenes='$idtbl_almacen') AND ta.tbl_almacenes_idtbl_almacenes IS NOT NULL");
			foreach($almacenes_proyecto->result() AS $key => $value){
                if (isset($almacenes_proyecto->result()[$key+1]->idtbl_almacenes)) {
                    	$id_almacenes .= $value->idtbl_almacenes.', ';
                }else{
					$id_almacenes .= $value->idtbl_almacenes;
				}
			}
			

		
		//$query = $this->db->query("SELECT result1.neodata, result1.descripcion, (result1.cantidad_entrada - result1.cantidad_salida + result1.cantidad_devolucion + result1.cantidad_traspaso) AS existencias, result1.cantidad_entrada, result1.cantidad_salida, result1.cantidad_devolucion, result1.cantidad_traspaso FROM (SELECT CASE WHEN neodata1 IS NOT NULL THEN neodata1 WHEN neodata2 IS NOT NULL THEN neodata2 WHEN neodata3 IS NOT NULL THEN neodata3 END AS neodata, CASE WHEN neodata1 IS NOT NULL THEN descripcion1 WHEN neodata2 IS NOT NULL THEN descripcion2 WHEN neodata3 IS NOT NULL THEN descripcion3 END AS descripcion, SUM(IF((tipo = 'entrada-almacen' OR tipo = 'entrada') AND tipo_movimiento IS NULL, cantidad1, 0)) AS cantidad_entrada, SUM(IF(tipo = 'salida-almacen', cantidad2, 0)) AS cantidad_salida, SUM(IF(tipo = 'devolucion-almacen', cantidad3, 0)) AS cantidad_devolucion, SUM(IF(tipo_movimiento = 'traspaso', cantidad1, 0)) AS cantidad_traspaso FROM (SELECT tbl_almacen_movimientos.idtbl_almacen_movimientos, tbl_almacen_movimientos.uid, tbl_catalogo1.neodata AS neodata1, tbl_catalogo1.descripcion AS descripcion1, dtl_almacen_movimientos.cantidad as cantidad1, IF(tbl_almacen_movimientos.tipo = 'salida-almacen' AND tbl_almacen_movimientos.movimiento_virtual != 2, tbl_catalogo2.neodata, tbl_catalogo2_1.neodata) AS neodata2, IF(tbl_almacen_movimientos.tipo = 'salida-almacen' AND tbl_almacen_movimientos.movimiento_virtual != 2, tbl_catalogo2.descripcion, tbl_catalogo2_1.descripcion) AS descripcion2, IF(tbl_almacen_movimientos.tipo = 'salida-almacen' AND tbl_almacen_movimientos.movimiento_virtual != 2, dtl_solicitud_material.entregado, dtl_almacen_movimientos1.cantidad) as cantidad2, tbl_catalogo3.neodata AS neodata3, tbl_catalogo3.descripcion AS descripcion3, dtl_asignacion.entregado as cantidad3, tbl_almacen_movimientos.tipo, tbl_almacen_movimientos.tipo_movimiento FROM tbl_almacen_movimientos LEFT JOIN dtl_almacen_movimientos ON tbl_almacen_movimientos.idtbl_almacen_movimientos = dtl_almacen_movimientos.tbl_almacen_movimientos_idtbl_almacen_movimientos AND tbl_almacen_movimientos.tipo = 'entrada-almacen' LEFT JOIN tbl_catalogo AS tbl_catalogo1 ON tbl_catalogo1.idtbl_catalogo = dtl_almacen_movimientos.tbl_catalogo_idtbl_catalogo AND dtl_almacen_movimientos.tbl_catalogo_idtbl_catalogo IS NOT NULL LEFT JOIN tbl_solicitud_material ON tbl_solicitud_material.idtbl_solicitud_material = tbl_almacen_movimientos.parent AND tbl_almacen_movimientos.tipo = 'salida-almacen' AND tbl_almacen_movimientos.movimiento_virtual != 2 AND (tbl_solicitud_material.estatus_solicitud = 'S' OR tbl_solicitud_material.estatus_solicitud = 'SU') LEFT JOIN dtl_solicitud_material ON tbl_solicitud_material.idtbl_solicitud_material = dtl_solicitud_material.tbl_solicitud_material_idtbl_solicitud_material AND tbl_solicitud_material.idtbl_solicitud_material IS NOT NULL LEFT JOIN tbl_catalogo AS tbl_catalogo2 ON tbl_catalogo2.idtbl_catalogo = dtl_solicitud_material.tbl_catalogo_idtbl_catalogo AND dtl_solicitud_material.tbl_catalogo_idtbl_catalogo IS NOT NULL LEFT JOIN dtl_almacen_movimientos AS dtl_almacen_movimientos1 ON dtl_almacen_movimientos1.tbl_almacen_movimientos_idtbl_almacen_movimientos = tbl_almacen_movimientos.parent AND tbl_almacen_movimientos.tipo = 'salida-almacen' AND tbl_almacen_movimientos.movimiento_virtual = 2 LEFT JOIN tbl_catalogo AS tbl_catalogo2_1 ON  tbl_catalogo2_1.idtbl_catalogo = dtl_almacen_movimientos1.tbl_catalogo_idtbl_catalogo LEFT JOIN dtl_asignacion ON dtl_asignacion.tbl_almacen_movimientos_idtbl_almacen_movimientos = tbl_almacen_movimientos.idtbl_almacen_movimientos AND tbl_almacen_movimientos.tipo = 'devolucion-almacen' AND dtl_asignacion.estado_entrega = 'almacen' LEFT JOIN dtl_almacen ON dtl_almacen.iddtl_almacen = dtl_asignacion.dtl_almacen_iddtl_almacen AND dtl_asignacion.dtl_almacen_iddtl_almacen IS NOT NULL LEFT JOIN tbl_catalogo AS tbl_catalogo3 ON tbl_catalogo3.idtbl_catalogo = dtl_almacen.tbl_catalogo_idtbl_catalogo AND dtl_almacen.tbl_catalogo_idtbl_catalogo IS NOT NULL WHERE (tbl_almacen_movimientos.tipo = 'entrada-almacen' OR tbl_almacen_movimientos.tipo = 'salida-almacen' OR tbl_almacen_movimientos.tipo = 'devolucion-almacen') AND (tbl_catalogo1.neodata IS NOT NULL OR tbl_catalogo2.neodata IS NOT NULL OR tbl_catalogo2_1.neodata IS NOT NULL OR tbl_catalogo3.neodata IS NOT NULL) AND tbl_almacen_movimientos.tbl_almacenes_idtbl_almacenes = $idtbl_almacenes AND tbl_almacen_movimientos.estatus = 1) AS result GROUP BY neodata) AS result1 JOIN tbl_catalogo ON tbl_catalogo.neodata = result1.neodata JOIN dtl_almacen ON dtl_almacen.tbl_catalogo_idtbl_catalogo = tbl_catalogo.idtbl_catalogo AND dtl_almacen.tbl_almacenes_idtbl_almacenes = $idtbl_almacenes");
		$query = $this->db->query("SELECT result1.neodata, result1.descripcion, (result1.cantidad_entrada - result1.cantidad_salida + result1.cantidad_devolucion + result1.cantidad_traspaso - result1.cantidad_salida_traspaso) AS existencias, result1.cantidad_entrada, result1.cantidad_salida, result1.cantidad_devolucion, result1.cantidad_traspaso, result1.cantidad_salida_traspaso FROM (SELECT CASE WHEN neodata1 IS NOT NULL THEN neodata1 WHEN neodata2 IS NOT NULL THEN neodata2 WHEN neodata3 IS NOT NULL THEN neodata3 END AS neodata, CASE WHEN neodata1 IS NOT NULL THEN descripcion1 WHEN neodata2 IS NOT NULL THEN descripcion2 WHEN neodata3 IS NOT NULL THEN descripcion3 END AS descripcion, SUM(IF((tipo = 'entrada-almacen' OR tipo = 'entrada') AND tipo_movimiento IS NULL, cantidad1, 0)) AS cantidad_entrada, SUM(IF(tipo = 'salida-almacen' AND movimiento_virtual = 0, cantidad2, 0)) AS cantidad_salida, SUM(IF(tipo = 'devolucion-almacen', cantidad3, 0)) AS cantidad_devolucion, SUM(IF(tipo_movimiento = 'traspaso', cantidad1, 0)) AS cantidad_traspaso, SUM(IF(tipo = 'salida-almacen' AND movimiento_virtual = 2, cantidad2, 0)) AS cantidad_salida_traspaso FROM (SELECT tbl_almacen_movimientos.idtbl_almacen_movimientos, tbl_almacen_movimientos.uid, tbl_catalogo1.neodata AS neodata1, tbl_catalogo1.descripcion AS descripcion1, dtl_almacen_movimientos.cantidad as cantidad1, IF(tbl_almacen_movimientos.tipo = 'salida-almacen' AND tbl_almacen_movimientos.movimiento_virtual != 2, tbl_catalogo2.neodata, tbl_catalogo2_1.neodata) AS neodata2, IF(tbl_almacen_movimientos.tipo = 'salida-almacen' AND tbl_almacen_movimientos.movimiento_virtual != 2, tbl_catalogo2.descripcion, tbl_catalogo2_1.descripcion) AS descripcion2, IF(tbl_almacen_movimientos.tipo = 'salida-almacen' AND tbl_almacen_movimientos.movimiento_virtual != 2, dtl_solicitud_material.entregado, dtl_almacen_movimientos1.cantidad) as cantidad2, tbl_catalogo3.neodata AS neodata3, tbl_catalogo3.descripcion AS descripcion3, dtl_asignacion.entregado as cantidad3, tbl_almacen_movimientos.tipo, tbl_almacen_movimientos.tipo_movimiento, tbl_almacen_movimientos.movimiento_virtual FROM tbl_almacen_movimientos LEFT JOIN dtl_almacen_movimientos ON tbl_almacen_movimientos.idtbl_almacen_movimientos = dtl_almacen_movimientos.tbl_almacen_movimientos_idtbl_almacen_movimientos AND tbl_almacen_movimientos.tipo = 'entrada-almacen' LEFT JOIN tbl_catalogo AS tbl_catalogo1 ON tbl_catalogo1.idtbl_catalogo = dtl_almacen_movimientos.tbl_catalogo_idtbl_catalogo AND dtl_almacen_movimientos.tbl_catalogo_idtbl_catalogo IS NOT NULL LEFT JOIN tbl_solicitud_material ON tbl_solicitud_material.idtbl_solicitud_material = tbl_almacen_movimientos.parent AND tbl_almacen_movimientos.tipo = 'salida-almacen' AND tbl_almacen_movimientos.movimiento_virtual != 2 AND (tbl_solicitud_material.estatus_solicitud = 'S' OR tbl_solicitud_material.estatus_solicitud = 'SU') LEFT JOIN dtl_solicitud_material ON tbl_solicitud_material.idtbl_solicitud_material = dtl_solicitud_material.tbl_solicitud_material_idtbl_solicitud_material AND tbl_solicitud_material.idtbl_solicitud_material IS NOT NULL LEFT JOIN tbl_catalogo AS tbl_catalogo2 ON tbl_catalogo2.idtbl_catalogo = dtl_solicitud_material.tbl_catalogo_idtbl_catalogo AND dtl_solicitud_material.tbl_catalogo_idtbl_catalogo IS NOT NULL LEFT JOIN dtl_almacen_movimientos AS dtl_almacen_movimientos1 ON dtl_almacen_movimientos1.tbl_almacen_movimientos_idtbl_almacen_movimientos = tbl_almacen_movimientos.parent AND tbl_almacen_movimientos.tipo = 'salida-almacen' AND tbl_almacen_movimientos.movimiento_virtual = 2 LEFT JOIN tbl_catalogo AS tbl_catalogo2_1 ON  tbl_catalogo2_1.idtbl_catalogo = dtl_almacen_movimientos1.tbl_catalogo_idtbl_catalogo LEFT JOIN dtl_asignacion ON dtl_asignacion.tbl_almacen_movimientos_idtbl_almacen_movimientos = tbl_almacen_movimientos.idtbl_almacen_movimientos AND tbl_almacen_movimientos.tipo = 'devolucion-almacen' AND dtl_asignacion.estado_entrega = 'almacen' LEFT JOIN dtl_almacen ON dtl_almacen.iddtl_almacen = dtl_asignacion.dtl_almacen_iddtl_almacen AND dtl_asignacion.dtl_almacen_iddtl_almacen IS NOT NULL LEFT JOIN tbl_catalogo AS tbl_catalogo3 ON tbl_catalogo3.idtbl_catalogo = dtl_almacen.tbl_catalogo_idtbl_catalogo AND dtl_almacen.tbl_catalogo_idtbl_catalogo IS NOT NULL WHERE (tbl_almacen_movimientos.tipo = 'entrada-almacen' OR tbl_almacen_movimientos.tipo = 'salida-almacen' OR tbl_almacen_movimientos.tipo = 'devolucion-almacen') AND (tbl_catalogo1.neodata IS NOT NULL OR tbl_catalogo2.neodata IS NOT NULL OR tbl_catalogo2_1.neodata IS NOT NULL OR tbl_catalogo3.neodata IS NOT NULL) AND tbl_almacen_movimientos.tbl_almacenes_idtbl_almacenes IN ($id_almacenes) AND tbl_almacen_movimientos.estatus = 1) AS result GROUP BY neodata) AS result1 JOIN tbl_catalogo ON tbl_catalogo.neodata = result1.neodata JOIN dtl_almacen ON dtl_almacen.tbl_catalogo_idtbl_catalogo = tbl_catalogo.idtbl_catalogo AND dtl_almacen.tbl_almacenes_idtbl_almacenes IN ($id_almacenes) GROUP BY tbl_catalogo.neodata");
		return $query->result();
	}

	public function balance_movimientos($idtbl_almacen){
		
		$id_almacenes = '';
			$almacenes_proyecto = $this->db->query("SELECT ta.*, tps.numero_proyecto AS almacen_subp FROM tbl_proyectos tp JOIN tbl_proyectos tpp ON tpp.tbl_proyectos_idtbl_proyectos = tp.idtbl_proyectos JOIN tbl_almacenes ta ON ta.tbl_proyectos_idtbl_proyectos = tpp.idtbl_proyectos JOIN tbl_almacenes tas ON tas.idtbl_almacenes = ta.tbl_almacenes_idtbl_almacenes JOIN tbl_proyectos tps ON tps.idtbl_proyectos = tas.tbl_proyectos_idtbl_proyectos WHERE tpp.tbl_proyectos_idtbl_proyectos = (SELECT tbl_proyectos_idtbl_proyectos FROM tbl_almacenes WHERE idtbl_almacenes='$idtbl_almacen') AND ta.tbl_almacenes_idtbl_almacenes IS NOT NULL");
			foreach($almacenes_proyecto->result() AS $key => $value){
                if (isset($almacenes_proyecto->result()[$key+1]->idtbl_almacenes)) {
                    	$id_almacenes .= $value->idtbl_almacenes.', ';
                }else{
					$id_almacenes .= $value->idtbl_almacenes;
				}
			}

		//$query = $this->db->query("SELECT result1.neodata, result1.descripcion, (result1.cantidad_entrada - result1.cantidad_salida + result1.cantidad_devolucion + result1.cantidad_traspaso) AS existencias, result1.cantidad_entrada, result1.cantidad_salida, result1.cantidad_devolucion, result1.cantidad_traspaso FROM (SELECT CASE WHEN neodata1 IS NOT NULL THEN neodata1 WHEN neodata2 IS NOT NULL THEN neodata2 WHEN neodata3 IS NOT NULL THEN neodata3 END AS neodata, CASE WHEN neodata1 IS NOT NULL THEN descripcion1 WHEN neodata2 IS NOT NULL THEN descripcion2 WHEN neodata3 IS NOT NULL THEN descripcion3 END AS descripcion, SUM(IF((tipo = 'entrada-almacen' OR tipo = 'entrada') AND tipo_movimiento IS NULL, cantidad1, 0)) AS cantidad_entrada, SUM(IF(tipo = 'salida-almacen', cantidad2, 0)) AS cantidad_salida, SUM(IF(tipo = 'devolucion-almacen', cantidad3, 0)) AS cantidad_devolucion, SUM(IF(tipo_movimiento = 'traspaso', cantidad1, 0)) AS cantidad_traspaso FROM (SELECT tbl_almacen_movimientos.idtbl_almacen_movimientos, tbl_almacen_movimientos.uid, tbl_catalogo1.neodata AS neodata1, tbl_catalogo1.descripcion AS descripcion1, dtl_almacen_movimientos.cantidad as cantidad1, IF(tbl_almacen_movimientos.tipo = 'salida-almacen' AND tbl_almacen_movimientos.movimiento_virtual != 2, tbl_catalogo2.neodata, tbl_catalogo2_1.neodata) AS neodata2, IF(tbl_almacen_movimientos.tipo = 'salida-almacen' AND tbl_almacen_movimientos.movimiento_virtual != 2, tbl_catalogo2.descripcion, tbl_catalogo2_1.descripcion) AS descripcion2, IF(tbl_almacen_movimientos.tipo = 'salida-almacen' AND tbl_almacen_movimientos.movimiento_virtual != 2, dtl_solicitud_material.entregado, dtl_almacen_movimientos1.cantidad) as cantidad2, tbl_catalogo3.neodata AS neodata3, tbl_catalogo3.descripcion AS descripcion3, dtl_asignacion.entregado as cantidad3, tbl_almacen_movimientos.tipo, tbl_almacen_movimientos.tipo_movimiento FROM tbl_almacen_movimientos LEFT JOIN dtl_almacen_movimientos ON tbl_almacen_movimientos.idtbl_almacen_movimientos = dtl_almacen_movimientos.tbl_almacen_movimientos_idtbl_almacen_movimientos AND tbl_almacen_movimientos.tipo = 'entrada-almacen' LEFT JOIN tbl_catalogo AS tbl_catalogo1 ON tbl_catalogo1.idtbl_catalogo = dtl_almacen_movimientos.tbl_catalogo_idtbl_catalogo AND dtl_almacen_movimientos.tbl_catalogo_idtbl_catalogo IS NOT NULL LEFT JOIN tbl_solicitud_material ON tbl_solicitud_material.idtbl_solicitud_material = tbl_almacen_movimientos.parent AND tbl_almacen_movimientos.tipo = 'salida-almacen' AND tbl_almacen_movimientos.movimiento_virtual != 2 AND (tbl_solicitud_material.estatus_solicitud = 'S' OR tbl_solicitud_material.estatus_solicitud = 'SU') LEFT JOIN dtl_solicitud_material ON tbl_solicitud_material.idtbl_solicitud_material = dtl_solicitud_material.tbl_solicitud_material_idtbl_solicitud_material AND tbl_solicitud_material.idtbl_solicitud_material IS NOT NULL LEFT JOIN tbl_catalogo AS tbl_catalogo2 ON tbl_catalogo2.idtbl_catalogo = dtl_solicitud_material.tbl_catalogo_idtbl_catalogo AND dtl_solicitud_material.tbl_catalogo_idtbl_catalogo IS NOT NULL LEFT JOIN dtl_almacen_movimientos AS dtl_almacen_movimientos1 ON dtl_almacen_movimientos1.tbl_almacen_movimientos_idtbl_almacen_movimientos = tbl_almacen_movimientos.parent AND tbl_almacen_movimientos.tipo = 'salida-almacen' AND tbl_almacen_movimientos.movimiento_virtual = 2 LEFT JOIN tbl_catalogo AS tbl_catalogo2_1 ON  tbl_catalogo2_1.idtbl_catalogo = dtl_almacen_movimientos1.tbl_catalogo_idtbl_catalogo LEFT JOIN dtl_asignacion ON dtl_asignacion.tbl_almacen_movimientos_idtbl_almacen_movimientos = tbl_almacen_movimientos.idtbl_almacen_movimientos AND tbl_almacen_movimientos.tipo = 'devolucion-almacen' AND dtl_asignacion.estado_entrega = 'almacen' LEFT JOIN dtl_almacen ON dtl_almacen.iddtl_almacen = dtl_asignacion.dtl_almacen_iddtl_almacen AND dtl_asignacion.dtl_almacen_iddtl_almacen IS NOT NULL LEFT JOIN tbl_catalogo AS tbl_catalogo3 ON tbl_catalogo3.idtbl_catalogo = dtl_almacen.tbl_catalogo_idtbl_catalogo AND dtl_almacen.tbl_catalogo_idtbl_catalogo IS NOT NULL WHERE (tbl_almacen_movimientos.tipo = 'entrada-almacen' OR tbl_almacen_movimientos.tipo = 'salida-almacen' OR tbl_almacen_movimientos.tipo = 'devolucion-almacen') AND (tbl_catalogo1.neodata IS NOT NULL OR tbl_catalogo2.neodata IS NOT NULL OR tbl_catalogo2_1.neodata IS NOT NULL OR tbl_catalogo3.neodata IS NOT NULL) AND tbl_almacen_movimientos.tbl_almacenes_idtbl_almacenes = $idtbl_almacenes AND tbl_almacen_movimientos.estatus = 1) AS result GROUP BY neodata) AS result1 JOIN tbl_catalogo ON tbl_catalogo.neodata = result1.neodata JOIN dtl_almacen ON dtl_almacen.tbl_catalogo_idtbl_catalogo = tbl_catalogo.idtbl_catalogo AND dtl_almacen.tbl_almacenes_idtbl_almacenes = $idtbl_almacenes");
		if($this->input->post('tipo_reporte') == 'balance_entrada'){
			$query = $this->db->query("SELECT tbl_almacen_movimientos.fecha, tbl_proyectos1.numero_proyecto, tbl_proyectos1.nombre_proyecto, tbl_segmentos_proyecto.segmento, tbl_almacenes.almacen, catalogo_dtl_almacen_movimientos.neodata, catalogo_dtl_almacen_movimientos.descripcion, unidades_medida_dtl_almacen_movimientos.unidad_medida_abr, dtl_almacen_movimientos.cantidad FROM tbl_almacen_movimientos LEFT JOIN tbl_users AS relizo_movimiento ON relizo_movimiento.idtbl_users = tbl_almacen_movimientos.tbl_users_idtbl_users LEFT JOIN dtl_almacen_movimientos ON dtl_almacen_movimientos.tbl_almacen_movimientos_idtbl_almacen_movimientos = tbl_almacen_movimientos.idtbl_almacen_movimientos LEFT JOIN tbl_proyectos ON tbl_proyectos.idtbl_proyectos = tbl_almacen_movimientos.tbl_proyectos_idtbl_proyectos LEFT JOIN tbl_almacenes ON tbl_almacenes.idtbl_almacenes = tbl_almacen_movimientos.tbl_almacenes_idtbl_almacenes LEFT JOIN tbl_segmentos_proyecto ON tbl_segmentos_proyecto.idtbl_segmentos_proyecto = tbl_almacen_movimientos.tbl_segmentos_proyecto_idtbl_segmentos_proyecto LEFT JOIN tbl_catalogo AS catalogo_dtl_almacen_movimientos ON catalogo_dtl_almacen_movimientos.idtbl_catalogo = dtl_almacen_movimientos.tbl_catalogo_idtbl_catalogo LEFT JOIN ctl_unidades_medida AS unidades_medida_dtl_almacen_movimientos ON unidades_medida_dtl_almacen_movimientos.idctl_unidades_medida = catalogo_dtl_almacen_movimientos.ctl_unidades_medida_idctl_unidades_medida LEFT JOIN dtl_almacen ON dtl_almacen.tbl_catalogo_idtbl_catalogo = catalogo_dtl_almacen_movimientos.idtbl_catalogo LEFT JOIN tbl_proyectos AS tbl_proyectos1 ON tbl_proyectos1.idtbl_proyectos = tbl_almacenes.tbl_proyectos_idtbl_proyectos LEFT JOIN tbl_pedidos ON tbl_pedidos.idtbl_pedidos = tbl_almacen_movimientos.parent WHERE tbl_almacen_movimientos.tipo_movimiento IS NULL AND tbl_almacen_movimientos.tbl_almacenes_idtbl_almacenes IN($id_almacenes) AND tbl_almacen_movimientos.tipo = 'entrada-almacen' AND tbl_almacen_movimientos.estatus = 1 GROUP BY dtl_almacen_movimientos.iddtl_almacen_entradas");
		}else{
			$query = $this->db->query("SELECT tbl_almacen_movimientos.fecha, solicitud_proyectos.numero_proyecto, solicitud_proyectos.nombre_proyecto, solicitud_segmentos_proyecto.segmento, tbl_almacenes.almacen, catalogo_dtl_solicitud_material.neodata, catalogo_dtl_solicitud_material.descripcion, unidades_medida_dtl_solicitud_material.unidad_medida_abr, dtl_solicitud_material.entregado AS cantidad, CONCAT(recibe_material.nombres, ' ', recibe_material.apellido_paterno, ' ', recibe_material.apellido_materno) as recibe_material, relizo_movimiento.nombre FROM tbl_almacen_movimientos LEFT JOIN tbl_users AS relizo_movimiento ON relizo_movimiento.idtbl_users = tbl_almacen_movimientos.tbl_users_idtbl_users LEFT JOIN tbl_almacenes ON tbl_almacenes.idtbl_almacenes = tbl_almacen_movimientos.tbl_almacenes_idtbl_almacenes LEFT JOIN tbl_solicitud_material ON tbl_solicitud_material.idtbl_solicitud_material = tbl_almacen_movimientos.parent LEFT JOIN tbl_users AS autor_solicitud ON tbl_solicitud_material.tbl_users_idtbl_users_autor = autor_solicitud.idtbl_users LEFT JOIN tbl_proyectos AS solicitud_proyectos ON solicitud_proyectos.idtbl_proyectos = tbl_solicitud_material.tbl_proyectos_idtbl_proyectos LEFT JOIN tbl_segmentos_proyecto AS solicitud_segmentos_proyecto ON solicitud_segmentos_proyecto.idtbl_segmentos_proyecto = tbl_solicitud_material.tbl_segmentos_proyecto_idtbl_segmentos_proyecto LEFT JOIN tbl_usuarios AS recibe_material ON recibe_material.idtbl_usuarios = tbl_almacen_movimientos.tbl_usuarios_idtbl_usuarios LEFT JOIN dtl_solicitud_material ON dtl_solicitud_material.tbl_solicitud_material_idtbl_solicitud_material = tbl_almacen_movimientos.parent LEFT JOIN tbl_catalogo AS catalogo_dtl_solicitud_material ON catalogo_dtl_solicitud_material.idtbl_catalogo = dtl_solicitud_material.tbl_catalogo_idtbl_catalogo LEFT JOIN ctl_unidades_medida AS unidades_medida_dtl_solicitud_material ON unidades_medida_dtl_solicitud_material.idctl_unidades_medida = catalogo_dtl_solicitud_material.ctl_unidades_medida_idctl_unidades_medida LEFT JOIN dtl_almacen ON dtl_almacen.tbl_catalogo_idtbl_catalogo = catalogo_dtl_solicitud_material.idtbl_catalogo LEFT JOIN tbl_contratistas ON tbl_contratistas.idtbl_contratistas = recibe_material.tbl_contratistas_idtbl_contratistas WHERE tbl_almacen_movimientos.movimiento_virtual != 1 AND tbl_almacen_movimientos.tbl_almacenes_idtbl_almacenes != 1 AND tbl_almacen_movimientos.tbl_almacenes_idtbl_almacenes IN ($id_almacenes) AND tbl_almacen_movimientos.tipo = 'salida-almacen' AND tbl_almacen_movimientos.estatus = 1 GROUP BY dtl_solicitud_material.iddtl_solicitud_material");
		}
		return $query->result();
	}

	public function cuadre_inventario($idtbl_almacen){
		
		$id_almacenes = '';
		$subconsulta = '';
			$almacenes_proyecto = $this->db->query("SELECT tbl_almacenes.idtbl_almacenes, tbl_almacenes.almacen FROM tbl_almacenes WHERE tbl_almacenes.tbl_almacenes_idtbl_almacenes = $idtbl_almacen");
			foreach($almacenes_proyecto->result() AS $key => $value){
                if (isset($almacenes_proyecto->result()[$key+1]->idtbl_almacenes)) {
                    	$id_almacenes .= $value->idtbl_almacenes.', ';
						$subconsulta .= "(SELECT dtl_almacen.existencias FROM dtl_almacen WHERE dtl_almacen.tbl_almacenes_idtbl_almacenes=".$value->idtbl_almacenes." AND dtl_almacen.estatus='almacen' AND dtl_almacen.tbl_catalogo_idtbl_catalogo=tc.idtbl_catalogo) AS '".$value->almacen."', ";
                }else{
					$id_almacenes .= $value->idtbl_almacenes;
					$subconsulta .= "(SELECT dtl_almacen.existencias FROM dtl_almacen WHERE dtl_almacen.tbl_almacenes_idtbl_almacenes=".$value->idtbl_almacenes." AND dtl_almacen.estatus='almacen' AND dtl_almacen.tbl_catalogo_idtbl_catalogo=tc.idtbl_catalogo) AS '".$value->almacen."'";

				}
			}

		//$query = $this->db->query("SELECT result1.neodata, result1.descripcion, (result1.cantidad_entrada - result1.cantidad_salida + result1.cantidad_devolucion + result1.cantidad_traspaso) AS existencias, result1.cantidad_entrada, result1.cantidad_salida, result1.cantidad_devolucion, result1.cantidad_traspaso FROM (SELECT CASE WHEN neodata1 IS NOT NULL THEN neodata1 WHEN neodata2 IS NOT NULL THEN neodata2 WHEN neodata3 IS NOT NULL THEN neodata3 END AS neodata, CASE WHEN neodata1 IS NOT NULL THEN descripcion1 WHEN neodata2 IS NOT NULL THEN descripcion2 WHEN neodata3 IS NOT NULL THEN descripcion3 END AS descripcion, SUM(IF((tipo = 'entrada-almacen' OR tipo = 'entrada') AND tipo_movimiento IS NULL, cantidad1, 0)) AS cantidad_entrada, SUM(IF(tipo = 'salida-almacen', cantidad2, 0)) AS cantidad_salida, SUM(IF(tipo = 'devolucion-almacen', cantidad3, 0)) AS cantidad_devolucion, SUM(IF(tipo_movimiento = 'traspaso', cantidad1, 0)) AS cantidad_traspaso FROM (SELECT tbl_almacen_movimientos.idtbl_almacen_movimientos, tbl_almacen_movimientos.uid, tbl_catalogo1.neodata AS neodata1, tbl_catalogo1.descripcion AS descripcion1, dtl_almacen_movimientos.cantidad as cantidad1, IF(tbl_almacen_movimientos.tipo = 'salida-almacen' AND tbl_almacen_movimientos.movimiento_virtual != 2, tbl_catalogo2.neodata, tbl_catalogo2_1.neodata) AS neodata2, IF(tbl_almacen_movimientos.tipo = 'salida-almacen' AND tbl_almacen_movimientos.movimiento_virtual != 2, tbl_catalogo2.descripcion, tbl_catalogo2_1.descripcion) AS descripcion2, IF(tbl_almacen_movimientos.tipo = 'salida-almacen' AND tbl_almacen_movimientos.movimiento_virtual != 2, dtl_solicitud_material.entregado, dtl_almacen_movimientos1.cantidad) as cantidad2, tbl_catalogo3.neodata AS neodata3, tbl_catalogo3.descripcion AS descripcion3, dtl_asignacion.entregado as cantidad3, tbl_almacen_movimientos.tipo, tbl_almacen_movimientos.tipo_movimiento FROM tbl_almacen_movimientos LEFT JOIN dtl_almacen_movimientos ON tbl_almacen_movimientos.idtbl_almacen_movimientos = dtl_almacen_movimientos.tbl_almacen_movimientos_idtbl_almacen_movimientos AND tbl_almacen_movimientos.tipo = 'entrada-almacen' LEFT JOIN tbl_catalogo AS tbl_catalogo1 ON tbl_catalogo1.idtbl_catalogo = dtl_almacen_movimientos.tbl_catalogo_idtbl_catalogo AND dtl_almacen_movimientos.tbl_catalogo_idtbl_catalogo IS NOT NULL LEFT JOIN tbl_solicitud_material ON tbl_solicitud_material.idtbl_solicitud_material = tbl_almacen_movimientos.parent AND tbl_almacen_movimientos.tipo = 'salida-almacen' AND tbl_almacen_movimientos.movimiento_virtual != 2 AND (tbl_solicitud_material.estatus_solicitud = 'S' OR tbl_solicitud_material.estatus_solicitud = 'SU') LEFT JOIN dtl_solicitud_material ON tbl_solicitud_material.idtbl_solicitud_material = dtl_solicitud_material.tbl_solicitud_material_idtbl_solicitud_material AND tbl_solicitud_material.idtbl_solicitud_material IS NOT NULL LEFT JOIN tbl_catalogo AS tbl_catalogo2 ON tbl_catalogo2.idtbl_catalogo = dtl_solicitud_material.tbl_catalogo_idtbl_catalogo AND dtl_solicitud_material.tbl_catalogo_idtbl_catalogo IS NOT NULL LEFT JOIN dtl_almacen_movimientos AS dtl_almacen_movimientos1 ON dtl_almacen_movimientos1.tbl_almacen_movimientos_idtbl_almacen_movimientos = tbl_almacen_movimientos.parent AND tbl_almacen_movimientos.tipo = 'salida-almacen' AND tbl_almacen_movimientos.movimiento_virtual = 2 LEFT JOIN tbl_catalogo AS tbl_catalogo2_1 ON  tbl_catalogo2_1.idtbl_catalogo = dtl_almacen_movimientos1.tbl_catalogo_idtbl_catalogo LEFT JOIN dtl_asignacion ON dtl_asignacion.tbl_almacen_movimientos_idtbl_almacen_movimientos = tbl_almacen_movimientos.idtbl_almacen_movimientos AND tbl_almacen_movimientos.tipo = 'devolucion-almacen' AND dtl_asignacion.estado_entrega = 'almacen' LEFT JOIN dtl_almacen ON dtl_almacen.iddtl_almacen = dtl_asignacion.dtl_almacen_iddtl_almacen AND dtl_asignacion.dtl_almacen_iddtl_almacen IS NOT NULL LEFT JOIN tbl_catalogo AS tbl_catalogo3 ON tbl_catalogo3.idtbl_catalogo = dtl_almacen.tbl_catalogo_idtbl_catalogo AND dtl_almacen.tbl_catalogo_idtbl_catalogo IS NOT NULL WHERE (tbl_almacen_movimientos.tipo = 'entrada-almacen' OR tbl_almacen_movimientos.tipo = 'salida-almacen' OR tbl_almacen_movimientos.tipo = 'devolucion-almacen') AND (tbl_catalogo1.neodata IS NOT NULL OR tbl_catalogo2.neodata IS NOT NULL OR tbl_catalogo2_1.neodata IS NOT NULL OR tbl_catalogo3.neodata IS NOT NULL) AND tbl_almacen_movimientos.tbl_almacenes_idtbl_almacenes = $idtbl_almacenes AND tbl_almacen_movimientos.estatus = 1) AS result GROUP BY neodata) AS result1 JOIN tbl_catalogo ON tbl_catalogo.neodata = result1.neodata JOIN dtl_almacen ON dtl_almacen.tbl_catalogo_idtbl_catalogo = tbl_catalogo.idtbl_catalogo AND dtl_almacen.tbl_almacenes_idtbl_almacenes = $idtbl_almacenes");
		$query = $this->db->query("SELECT tc.neodata, tc.descripcion, da.existencias AS total, $subconsulta FROM dtl_almacen da JOIN tbl_catalogo tc ON tc.idtbl_catalogo = da.tbl_catalogo_idtbl_catalogo WHERE da.tbl_almacenes_idtbl_almacenes IN($id_almacenes) GROUP BY tc.idtbl_catalogo");
		//$query= $this->db->get();
        $result = [];
        foreach ($query->result_array() as $row) {
            $result[]=$row;
		}
            return $result;
		//return $query->result();
	}

	public function cuadre_explosion($idtbl_almacen){
		
		$id_almacenes = '';
		$subconsulta = '';
			$almacenes_proyecto = $this->db->query("SELECT ta.*, tps.numero_proyecto AS almacen_subp FROM tbl_proyectos tp JOIN tbl_proyectos tpp ON tpp.tbl_proyectos_idtbl_proyectos = tp.idtbl_proyectos JOIN tbl_almacenes ta ON ta.tbl_proyectos_idtbl_proyectos = tpp.idtbl_proyectos JOIN tbl_almacenes tas ON tas.idtbl_almacenes = ta.tbl_almacenes_idtbl_almacenes JOIN tbl_proyectos tps ON tps.idtbl_proyectos = tas.tbl_proyectos_idtbl_proyectos WHERE tpp.tbl_proyectos_idtbl_proyectos = (SELECT tbl_proyectos_idtbl_proyectos FROM tbl_almacenes WHERE idtbl_almacenes='$idtbl_almacen') AND ta.tbl_almacenes_idtbl_almacenes IS NOT NULL");
		
			foreach($almacenes_proyecto->result() AS $key => $value){
                if (isset($almacenes_proyecto->result()[$key+1]->idtbl_almacenes)) {
                    	$id_almacenes .= $value->idtbl_almacenes.', ';
						$subconsulta .= "(SELECT dtl_almacen_movimientos.cantidad FROM dtl_almacen_movimientos JOIN tbl_almacen_movimientos ON tbl_almacen_movimientos.idtbl_almacen_movimientos = dtl_almacen_movimientos.tbl_almacen_movimientos_idtbl_almacen_movimientos WHERE tbl_almacen_movimientos.tbl_almacenes_idtbl_almacenes=".$value->idtbl_almacenes." AND tbl_almacen_movimientos.movimiento_virtual=3 AND tbl_almacen_movimientos.estatus=1 AND dtl_almacen_movimientos.tbl_catalogo_idtbl_catalogo=tc.idtbl_catalogo GROUP BY dtl_almacen_movimientos.tbl_catalogo_idtbl_catalogo) AS '".$value->almacen."',";
                }else{
					$id_almacenes .= $value->idtbl_almacenes;
					$subconsulta .= "(SELECT dtl_almacen_movimientos.cantidad FROM dtl_almacen_movimientos JOIN tbl_almacen_movimientos ON tbl_almacen_movimientos.idtbl_almacen_movimientos = dtl_almacen_movimientos.tbl_almacen_movimientos_idtbl_almacen_movimientos WHERE tbl_almacen_movimientos.tbl_almacenes_idtbl_almacenes=".$value->idtbl_almacenes." AND tbl_almacen_movimientos.movimiento_virtual=3 AND tbl_almacen_movimientos.estatus=1 AND dtl_almacen_movimientos.tbl_catalogo_idtbl_catalogo=tc.idtbl_catalogo GROUP BY dtl_almacen_movimientos.tbl_catalogo_idtbl_catalogo) AS '".$value->almacen."'";

				}
			}

		//$query = $this->db->query("SELECT result1.neodata, result1.descripcion, (result1.cantidad_entrada - result1.cantidad_salida + result1.cantidad_devolucion + result1.cantidad_traspaso) AS existencias, result1.cantidad_entrada, result1.cantidad_salida, result1.cantidad_devolucion, result1.cantidad_traspaso FROM (SELECT CASE WHEN neodata1 IS NOT NULL THEN neodata1 WHEN neodata2 IS NOT NULL THEN neodata2 WHEN neodata3 IS NOT NULL THEN neodata3 END AS neodata, CASE WHEN neodata1 IS NOT NULL THEN descripcion1 WHEN neodata2 IS NOT NULL THEN descripcion2 WHEN neodata3 IS NOT NULL THEN descripcion3 END AS descripcion, SUM(IF((tipo = 'entrada-almacen' OR tipo = 'entrada') AND tipo_movimiento IS NULL, cantidad1, 0)) AS cantidad_entrada, SUM(IF(tipo = 'salida-almacen', cantidad2, 0)) AS cantidad_salida, SUM(IF(tipo = 'devolucion-almacen', cantidad3, 0)) AS cantidad_devolucion, SUM(IF(tipo_movimiento = 'traspaso', cantidad1, 0)) AS cantidad_traspaso FROM (SELECT tbl_almacen_movimientos.idtbl_almacen_movimientos, tbl_almacen_movimientos.uid, tbl_catalogo1.neodata AS neodata1, tbl_catalogo1.descripcion AS descripcion1, dtl_almacen_movimientos.cantidad as cantidad1, IF(tbl_almacen_movimientos.tipo = 'salida-almacen' AND tbl_almacen_movimientos.movimiento_virtual != 2, tbl_catalogo2.neodata, tbl_catalogo2_1.neodata) AS neodata2, IF(tbl_almacen_movimientos.tipo = 'salida-almacen' AND tbl_almacen_movimientos.movimiento_virtual != 2, tbl_catalogo2.descripcion, tbl_catalogo2_1.descripcion) AS descripcion2, IF(tbl_almacen_movimientos.tipo = 'salida-almacen' AND tbl_almacen_movimientos.movimiento_virtual != 2, dtl_solicitud_material.entregado, dtl_almacen_movimientos1.cantidad) as cantidad2, tbl_catalogo3.neodata AS neodata3, tbl_catalogo3.descripcion AS descripcion3, dtl_asignacion.entregado as cantidad3, tbl_almacen_movimientos.tipo, tbl_almacen_movimientos.tipo_movimiento FROM tbl_almacen_movimientos LEFT JOIN dtl_almacen_movimientos ON tbl_almacen_movimientos.idtbl_almacen_movimientos = dtl_almacen_movimientos.tbl_almacen_movimientos_idtbl_almacen_movimientos AND tbl_almacen_movimientos.tipo = 'entrada-almacen' LEFT JOIN tbl_catalogo AS tbl_catalogo1 ON tbl_catalogo1.idtbl_catalogo = dtl_almacen_movimientos.tbl_catalogo_idtbl_catalogo AND dtl_almacen_movimientos.tbl_catalogo_idtbl_catalogo IS NOT NULL LEFT JOIN tbl_solicitud_material ON tbl_solicitud_material.idtbl_solicitud_material = tbl_almacen_movimientos.parent AND tbl_almacen_movimientos.tipo = 'salida-almacen' AND tbl_almacen_movimientos.movimiento_virtual != 2 AND (tbl_solicitud_material.estatus_solicitud = 'S' OR tbl_solicitud_material.estatus_solicitud = 'SU') LEFT JOIN dtl_solicitud_material ON tbl_solicitud_material.idtbl_solicitud_material = dtl_solicitud_material.tbl_solicitud_material_idtbl_solicitud_material AND tbl_solicitud_material.idtbl_solicitud_material IS NOT NULL LEFT JOIN tbl_catalogo AS tbl_catalogo2 ON tbl_catalogo2.idtbl_catalogo = dtl_solicitud_material.tbl_catalogo_idtbl_catalogo AND dtl_solicitud_material.tbl_catalogo_idtbl_catalogo IS NOT NULL LEFT JOIN dtl_almacen_movimientos AS dtl_almacen_movimientos1 ON dtl_almacen_movimientos1.tbl_almacen_movimientos_idtbl_almacen_movimientos = tbl_almacen_movimientos.parent AND tbl_almacen_movimientos.tipo = 'salida-almacen' AND tbl_almacen_movimientos.movimiento_virtual = 2 LEFT JOIN tbl_catalogo AS tbl_catalogo2_1 ON  tbl_catalogo2_1.idtbl_catalogo = dtl_almacen_movimientos1.tbl_catalogo_idtbl_catalogo LEFT JOIN dtl_asignacion ON dtl_asignacion.tbl_almacen_movimientos_idtbl_almacen_movimientos = tbl_almacen_movimientos.idtbl_almacen_movimientos AND tbl_almacen_movimientos.tipo = 'devolucion-almacen' AND dtl_asignacion.estado_entrega = 'almacen' LEFT JOIN dtl_almacen ON dtl_almacen.iddtl_almacen = dtl_asignacion.dtl_almacen_iddtl_almacen AND dtl_asignacion.dtl_almacen_iddtl_almacen IS NOT NULL LEFT JOIN tbl_catalogo AS tbl_catalogo3 ON tbl_catalogo3.idtbl_catalogo = dtl_almacen.tbl_catalogo_idtbl_catalogo AND dtl_almacen.tbl_catalogo_idtbl_catalogo IS NOT NULL WHERE (tbl_almacen_movimientos.tipo = 'entrada-almacen' OR tbl_almacen_movimientos.tipo = 'salida-almacen' OR tbl_almacen_movimientos.tipo = 'devolucion-almacen') AND (tbl_catalogo1.neodata IS NOT NULL OR tbl_catalogo2.neodata IS NOT NULL OR tbl_catalogo2_1.neodata IS NOT NULL OR tbl_catalogo3.neodata IS NOT NULL) AND tbl_almacen_movimientos.tbl_almacenes_idtbl_almacenes = $idtbl_almacenes AND tbl_almacen_movimientos.estatus = 1) AS result GROUP BY neodata) AS result1 JOIN tbl_catalogo ON tbl_catalogo.neodata = result1.neodata JOIN dtl_almacen ON dtl_almacen.tbl_catalogo_idtbl_catalogo = tbl_catalogo.idtbl_catalogo AND dtl_almacen.tbl_almacenes_idtbl_almacenes = $idtbl_almacenes");
		$query = $this->db->query("SELECT tc.neodata, tc.descripcion, dam.cantidad AS total, $subconsulta, (SELECT dtl_solicitud_material.entregado FROM tbl_almacen_movimientos JOIN tbl_solicitud_material ON tbl_solicitud_material.idtbl_solicitud_material = tbl_almacen_movimientos.parent JOIN dtl_solicitud_material ON dtl_solicitud_material.tbl_solicitud_material_idtbl_solicitud_material = tbl_solicitud_material.idtbl_solicitud_material WHERE tbl_almacen_movimientos.tbl_almacenes_idtbl_almacenes IN($id_almacenes) AND tbl_solicitud_material.estatus_solicitud='S' AND dtl_solicitud_material.tbl_catalogo_idtbl_catalogo=tc.idtbl_catalogo GROUP BY dtl_solicitud_material.tbl_catalogo_idtbl_catalogo) AS 'Surtido' FROM dtl_almacen_movimientos dam JOIN tbl_almacen_movimientos tam ON tam.idtbl_almacen_movimientos = dam.tbl_almacen_movimientos_idtbl_almacen_movimientos JOIN tbl_catalogo tc ON tc.idtbl_catalogo = dam.tbl_catalogo_idtbl_catalogo WHERE tam.tbl_almacenes_idtbl_almacenes = $idtbl_almacen AND tam.movimiento_virtual = 3 AND tam.estatus = 1 GROUP BY tc.idtbl_catalogo");
		//$query= $this->db->get();
        $result = [];
        foreach ($query->result_array() as $row) {
            $result[]=$row;
		}
            return $result;
		//return $query->result();
	}

	public function excel_generador($idtbl_segmento){
		$query = $this->db->query("SELECT tbl_catalogo.neodata, tbl_catalogo.descripcion, SUM(dtl_solicitud_material.entregado) AS TOTAL, (SELECT SUM(dtl_justificacion_generador.cantidad) FROM tbl_justificacion_generador LEFT JOIN dtl_justificacion_generador ON dtl_justificacion_generador.tbl_justificacion_generador_idtbl_justificacion_generador = tbl_justificacion_generador.idtbl_justificacion_generador WHERE tbl_justificacion_generador.tbl_mantenimientos_idtbl_mantenimientos = tbl_mantenimientos.idtbl_mantenimientos AND dtl_justificacion_generador.tbl_catalogo_idtbl_catalogo = tbl_catalogo.idtbl_catalogo) AS justificado FROM tbl_mantenimientos LEFT JOIN tbl_solicitud_material ON tbl_mantenimientos.idtbl_mantenimientos = tbl_solicitud_material.tbl_mantenimientos_idtbl_mantenimientos LEFT JOIN dtl_solicitud_material ON dtl_solicitud_material.tbl_solicitud_material_idtbl_solicitud_material = tbl_solicitud_material.idtbl_solicitud_material JOIN tbl_catalogo ON tbl_catalogo.idtbl_catalogo = dtl_solicitud_material.tbl_catalogo_idtbl_catalogo WHERE tbl_mantenimientos.tbl_segmentos_proyecto_idtbl_segmentos_proyecto = $idtbl_segmento GROUP BY dtl_solicitud_material.tbl_catalogo_idtbl_catalogo ORDER BY dtl_solicitud_material.tbl_catalogo_idtbl_catalogo");
		return $query->result();
	}

	public function excel_justificado($idtbl_segmento){
		$query = $this->db->query("SELECT tbl_catalogo.neodata, tbl_catalogo.descripcion, SUM(dtl_justificacion_generador.cantidad) AS TOTAL FROM tbl_mantenimientos LEFT JOIN tbl_justificacion_generador ON tbl_justificacion_generador.tbl_mantenimientos_idtbl_mantenimientos = tbl_mantenimientos.idtbl_mantenimientos LEFT JOIN dtl_justificacion_generador ON dtl_justificacion_generador.tbl_justificacion_generador_idtbl_justificacion_generador = tbl_justificacion_generador.idtbl_justificacion_generador LEFT JOIN tbl_catalogo ON tbl_catalogo.idtbl_catalogo = dtl_justificacion_generador.tbl_catalogo_idtbl_catalogo WHERE tbl_mantenimientos.tbl_segmentos_proyecto_idtbl_segmentos_proyecto = $idtbl_segmento AND tbl_catalogo.descripcion IS NOT NULL GROUP BY dtl_justificacion_generador.tbl_catalogo_idtbl_catalogo ORDER BY dtl_justificacion_generador.tbl_catalogo_idtbl_catalogo");
		return $query->result();
	}

	public function excel_devolucion($idtbl_segmento){
		$this->db->select("tbl_catalogo.neodata, tbl_catalogo.descripcion, SUM(dtl_asignacion.entregado) AS TOTAL");
    	$this->db->from("tbl_solicitud_material");    	
		$this->db->join("tbl_almacen_movimientos", "tbl_almacen_movimientos.parent = tbl_solicitud_material.idtbl_solicitud_material");
		$this->db->join("dtl_asignacion", "tbl_almacen_movimientos.idtbl_almacen_movimientos = dtl_asignacion.tbl_almacen_movimientos_idtbl_almacen_movimientos");
		$this->db->join("dtl_almacen", "dtl_asignacion.dtl_almacen_iddtl_almacen = dtl_almacen.iddtl_almacen");
		$this->db->join("tbl_catalogo", "tbl_catalogo.idtbl_catalogo = dtl_almacen.tbl_catalogo_idtbl_catalogo");
		$this->db->join("ctl_unidades_medida", "ctl_unidades_medida.idctl_unidades_medida = tbl_catalogo.ctl_unidades_medida_idctl_unidades_medida");
		$this->db->join("tbl_users", "tbl_users.tbl_usuarios_idtbl_usuarios = tbl_solicitud_material.tbl_usuarios_idtbl_usuarios_supervisor");
		$this->db->join("tbl_mantenimientos", "tbl_mantenimientos.idtbl_mantenimientos = tbl_solicitud_material.tbl_mantenimientos_idtbl_mantenimientos");
    	$this->db->where("tbl_mantenimientos.tbl_segmentos_proyecto_idtbl_segmentos_proyecto", $idtbl_segmento);		
		$this->db->group_by("dtl_almacen.tbl_catalogo_idtbl_catalogo");
		$this->db->order_by("tbl_catalogo.idtbl_catalogo ASC");
		$query = $this->db->get();
		return $query->result();
	}

	public function reporte_diferencia($idtbl_mantenimientos){
		$query = $this->db->query("SELECT tbl_catalogo.neodata, tbl_catalogo.descripcion, SUM(dtl_solicitud_material.entregado) AS TOTAL, (SELECT SUM(dtl_justificacion_generador.cantidad) FROM tbl_justificacion_generador LEFT JOIN dtl_justificacion_generador ON dtl_justificacion_generador.tbl_justificacion_generador_idtbl_justificacion_generador = tbl_justificacion_generador.idtbl_justificacion_generador WHERE tbl_justificacion_generador.tbl_mantenimientos_idtbl_mantenimientos = tbl_mantenimientos.idtbl_mantenimientos AND dtl_justificacion_generador.tbl_catalogo_idtbl_catalogo = tbl_catalogo.idtbl_catalogo) AS justificado, (SELECT SUM(dtl_asignacion.entregado) FROM `tbl_solicitud_material` JOIN `tbl_almacen_movimientos` ON `tbl_almacen_movimientos`.`parent` = `tbl_solicitud_material`.`idtbl_solicitud_material` JOIN `dtl_asignacion` ON `tbl_almacen_movimientos`.`idtbl_almacen_movimientos` = `dtl_asignacion`.`tbl_almacen_movimientos_idtbl_almacen_movimientos` JOIN `dtl_almacen` ON `dtl_asignacion`.`dtl_almacen_iddtl_almacen` = `dtl_almacen`.`iddtl_almacen` JOIN tbl_catalogo tc ON tc.idtbl_catalogo = `dtl_almacen`.`tbl_catalogo_idtbl_catalogo` JOIN `tbl_users` ON `tbl_users`.`tbl_usuarios_idtbl_usuarios` = `tbl_solicitud_material`.`tbl_usuarios_idtbl_usuarios_supervisor` JOIN `tbl_mantenimientos` tm ON tm.idtbl_mantenimientos = `tbl_solicitud_material`.`tbl_mantenimientos_idtbl_mantenimientos` WHERE tm.idtbl_mantenimientos = tbl_mantenimientos.idtbl_mantenimientos AND tc.idtbl_catalogo = tbl_catalogo.idtbl_catalogo GROUP BY `dtl_almacen`.`tbl_catalogo_idtbl_catalogo` ORDER BY `tbl_catalogo`.`idtbl_catalogo` ASC) AS devuelto FROM tbl_mantenimientos LEFT JOIN tbl_solicitud_material ON tbl_mantenimientos.idtbl_mantenimientos = tbl_solicitud_material.tbl_mantenimientos_idtbl_mantenimientos LEFT JOIN dtl_solicitud_material ON dtl_solicitud_material.tbl_solicitud_material_idtbl_solicitud_material = tbl_solicitud_material.idtbl_solicitud_material JOIN tbl_catalogo ON tbl_catalogo.idtbl_catalogo = dtl_solicitud_material.tbl_catalogo_idtbl_catalogo WHERE tbl_mantenimientos.idtbl_mantenimientos = $idtbl_mantenimientos GROUP BY dtl_solicitud_material.tbl_catalogo_idtbl_catalogo ORDER BY dtl_solicitud_material.tbl_catalogo_idtbl_catalogo");
		return $query->result();
	}

	public function estado_almacen(){
		$index = 0;
		$lon = count($this->session->userdata('encargado_almacen'));
		$id_almacenes = '';
		foreach($this->session->userdata('encargado_almacen') AS $key => $value){
			if ($index == $lon - 1) {
					$id_almacenes .= $value;
			}else{
				$id_almacenes .= $value. ', ';
			}
			$index++;
		}
		if($id_almacenes != ''){
			$in = "IN ($id_almacenes)";
		}else{
			$in = '';
		}
		
		$query = $this->db->query("SELECT tbl_almacenes.*, tbl_proyectos.direccion FROM tbl_almacenes JOIN tbl_proyectos ON tbl_proyectos.idtbl_proyectos = tbl_almacenes.tbl_proyectos_idtbl_proyectos WHERE idtbl_almacenes $in  AND tbl_almacenes.tbl_almacenes_idtbl_almacenes IS NULL");

		return $query->result()[0]->direccion;
	}

	public function brazos_asignados(){
						
		$supervisor = $this->session->userdata('id');
		$this->db->select("tbl_tramo_fibra_optica.idtbl_tramo_fibra_optica, tbl_tramo_fibra_optica.nombre_oracle, tbl_mantenimientos.idtbl_mantenimientos");
		$this->db->from("tbl_tramo_fibra_optica");
		$this->db->join("tbl_mantenimientos", "tbl_mantenimientos.tbl_tramo_fibra_optica_idtbl_tramo_fibra_optica = tbl_tramo_fibra_optica.idtbl_tramo_fibra_optica");
		$this->db->where("tbl_mantenimientos.tbl_users_idtbl_users_supervisor", $supervisor);
		$this->db->where("tbl_mantenimientos.estatus", 'SP');
		$query = $this->db->get();

		return $query->result();

	}

	//Función para verificar si existe el Neodata
    public function checkNeodata(){
        $query = $this->db->query("SELECT * FROM tbl_catalogo WHERE neodata = '" . $this->input->post('neodata') . "'");
        if ($query->num_rows() > 0) {
            return true;
        }else{
            return false;
        }
    }

	//Función para verificar existencias en almacén
    public function check_exist(){
        $query = $this->db->query("SELECT * FROM tbl_catalogo WHERE neodata = '" . $this->input->post('neodata') . "'");
        if ($query->num_rows() > 0) {
            return true;
        }else{
            return false;
        }
    }

    public function justificar_asignacion_rh($uid){
        $this->db->trans_begin();
        $this->db->set("estatus_devolucion_rh", $this->input->post("estatus_devolucion_rh"));
        $this->db->set("fecha_devolucion_rh", "NOW()", false);
        $this->db->set("uid_rh", $uid);
        $this->db->set("tbl_users_idtbl_users_rh", $this->session->userdata('id'));
        $this->db->where("iddtl_asignacion", $this->input->post("iddtl_asignacion"));
        $this->db->update("dtl_asignacion");
        if ($this->db->trans_status() === FALSE) {
            $this->db->trans_rollback();
            return false;
        } else {
            $this->db->trans_commit();
            return true;
        }
    }

    public function verificarJustificacionAsignacionRH(){
    	$this->db->trans_begin();
        $this->db->set("estatus_devolucion_rh", "Finalizada");
        $this->db->where("iddtl_asignacion", $this->input->post("iddtl_asignacion"));
        $this->db->update("dtl_asignacion");
        if ($this->db->trans_status() === FALSE) {
            $this->db->trans_rollback();
            return false;
        } else {
            $this->db->trans_commit();
            return true;
        }
    }

    function updateSolicitudDevolucion($datas, $idtbl_dev) {
    	$this->db->set($datas);
        $this->db->where('idtbl_solicitud_devolucion', $idtbl_dev);
        $result = $this->db->update('tbl_solicitud_devolucion');
    }

    function insertDtlSolicitudDevolucion($parametros) {
        $this->db->trans_begin();
        $this->db->insert('dtl_solicitud_devolucion', $parametros);
        if ($this->db->trans_status() === FALSE) {
            $this->db->trans_rollback();
            return false;
        } else {
            $this->db->trans_commit();
            return true;
        }
    }	

    function deleteDtlSolicitudDevolucion($id) {
    	$this->db->where('iddtl_solicitud_devolucion', $id);
		$query = $this->db->delete('dtl_solicitud_devolucion');
		$ret = false;
		if($query) {
			$ret = true;
		}
		return $ret;
    }

    function deleteDtlSolicitudDevolucionBy($id) {
    	$this->db->where('tbl_solicitud_devolucion_idtbl_solicitud_devolucion', $id);
    	$this->db->where('estado IS NOT NULL');
		$query = $this->db->delete('dtl_solicitud_devolucion');
		$ret = false;
		if($query) {
			$ret = true;
		}
		return $ret;
    }

    function getPersonalControlVehicular() {
    	$query = $this->db->query("(SELECT CONCAT(tbl_usuarios.nombres, ' ',tbl_usuarios.apellido_paterno, ' ',tbl_usuarios.apellido_materno) AS nombre, tbl_perfiles.perfil FROM `tbl_usuarios` INNER JOIN tbl_perfiles ON tbl_perfiles.idtbl_perfiles = tbl_usuarios.tbl_perfiles_idtbl_perfiles WHERE (tbl_usuarios.tbl_perfiles_idtbl_perfiles = 149 OR tbl_usuarios.tbl_perfiles_idtbl_perfiles = 32 OR tbl_usuarios.tbl_perfiles_idtbl_perfiles = 295) AND estatus = 1) UNION (SELECT CONCAT(tbl_usuarios.nombres, ' ',tbl_usuarios.apellido_paterno, ' ',tbl_usuarios.apellido_materno) AS nombre, tbl_perfiles.perfil FROM `tbl_usuarios` INNER JOIN tbl_perfiles ON tbl_perfiles.idtbl_perfiles = tbl_usuarios.tbl_perfiles_idtbl_perfiles WHERE tbl_usuarios.tbl_perfiles_idtbl_perfiles = 174 LIMIT 1)");
    	//$query .= $this->db->query("SELECT CONCAT(tbl_usuarios.nombres, ' ',tbl_usuarios.apellido_paterno, ' ',tbl_usuarios.apellido_materno) AS nombre, tbl_perfiles.perfil FROM `tbl_usuarios` INNER JOIN tbl_perfiles ON tbl_perfiles.idtbl_perfiles = tbl_usuarios.tbl_perfiles_idtbl_perfiles WHERE tbl_usuarios.tbl_perfiles_idtbl_perfiles = 174 LIMIT 1");
    	return $query->result_array();
    }

    function getAutosControlVehicular() {
    	$query = $this->db->query("SELECT dtl_almacen.numero_interno, dtl_almacen.iddtl_almacen FROM `tbl_catalogo` INNER JOIN dtl_almacen ON dtl_almacen.tbl_catalogo_idtbl_catalogo = tbl_catalogo.idtbl_catalogo WHERE tbl_catalogo.tipo = 4 and tbl_catalogo.ctl_categorias_idctl_categorias = 16 ORDER BY dtl_almacen.numero_interno ASC");
    	return $query->result_array();
    }
	
	function getReporteCombustible($parametro, $rango) {
		$string = '';
		if($parametro != 'todos') {
			$string = 'AND tbl_km_unidades_cv.dtl_almacen_iddtl_almacen = '.$parametro;
		}
		if($rango == 'diario') {
			$query = $this->db->query("SELECT SUM(tbl_km_unidades_cv.litros_combustible) as litros_combustible, SUM(tbl_km_unidades_cv.precio) as precio, dtl_almacen.numero_interno, date(tbl_km_unidades_cv.fecha_carga) as fecha FROM tbl_km_unidades_cv INNER JOIN dtl_almacen ON dtl_almacen.iddtl_almacen = tbl_km_unidades_cv.dtl_almacen_iddtl_almacen WHERE YEAR(tbl_km_unidades_cv.fecha_carga) = " . $_POST['anio'] . " AND MONTH(tbl_km_unidades_cv.fecha_carga) = " . $_POST['mes'] . " $string GROUP BY tbl_km_unidades_cv.dtl_almacen_iddtl_almacen, DAY(tbl_km_unidades_cv.fecha_carga) ORDER BY tbl_km_unidades_cv.fecha_carga ASC, tbl_km_unidades_cv.dtl_almacen_iddtl_almacen ASC");
			return $query->result_array();
		} elseif($rango == 'semanal') {
			$query = $this->db->query("SELECT SUM(tbl_km_unidades_cv.litros_combustible) as litros_combustible, SUM(tbl_km_unidades_cv.precio) as precio, dtl_almacen.numero_interno, WEEKOFYEAR(tbl_km_unidades_cv.fecha_carga) as semana FROM tbl_km_unidades_cv INNER JOIN dtl_almacen ON dtl_almacen.iddtl_almacen = tbl_km_unidades_cv.dtl_almacen_iddtl_almacen WHERE YEAR(tbl_km_unidades_cv.fecha_carga) = " . $_POST['anio'] . " AND MONTH(tbl_km_unidades_cv.fecha_carga) = " . $_POST['mes'] . " $string GROUP BY tbl_km_unidades_cv.dtl_almacen_iddtl_almacen, WEEKOFYEAR(tbl_km_unidades_cv.fecha_carga) ORDER BY WEEKOFYEAR(tbl_km_unidades_cv.fecha_carga) ASC, tbl_km_unidades_cv.dtl_almacen_iddtl_almacen ASC");
		} elseif($rango == 'mensual') {
			$query = $this->db->query("SELECT SUM(tbl_km_unidades_cv.litros_combustible) as litros_combustible, SUM(tbl_km_unidades_cv.precio) as precio, dtl_almacen.numero_interno, MONTH(tbl_km_unidades_cv.fecha_carga) AS mes FROM tbl_km_unidades_cv INNER JOIN dtl_almacen ON dtl_almacen.iddtl_almacen = tbl_km_unidades_cv.dtl_almacen_iddtl_almacen WHERE YEAR(tbl_km_unidades_cv.fecha_carga) = " . $_POST['anio'] . " $string GROUP BY MONTH(tbl_km_unidades_cv.fecha_carga), tbl_km_unidades_cv.dtl_almacen_iddtl_almacen ORDER BY MONTH(tbl_km_unidades_cv.fecha_carga) ASC, tbl_km_unidades_cv.dtl_almacen_iddtl_almacen ASC");
		}
		return $query->result_array();
	}

	public function activar_almacen(){
		$data = array(
			'estatus' => 1
		);
		$this->db->set($data);
		$this->db->where('uid', $this->input->post('uid'));
		$result = $this->db->update('tbl_almacenes');
		return  $result;

	}

	public function desactivar_almacen(){		
		$data = array(
			'estatus' => 0
		);
		$this->db->set($data);
		$this->db->where('uid', $this->input->post('uid'));
		$result = $this->db->update('tbl_almacenes');
		return  $result;

	}

	public function verificar_almacen($id) {
		$this->db->select('*');
		$this->db->from('tbl_almacenes');
		$this->db->where('tbl_almacenes.tbl_proyectos_idtbl_proyectos', $id);
		$this->db->where('tbl_almacenes.tbl_segmentos_proyecto_idtbl_segmentos_proyecto IS NULL');
		$query = $this->db->get();
		if ($query->num_rows() > 0) {
			return TRUE;
		} else {
			return FALSE;
		}
	}
	public function verificar_subalmacen($id, $id_segmento) {
		$this->db->select('*');
		$this->db->from('tbl_almacenes');
		$this->db->where('tbl_almacenes.tbl_proyectos_idtbl_proyectos', $id);
		$this->db->where('tbl_almacenes.tbl_segmentos_proyecto_idtbl_segmentos_proyecto', $id_segmento);
		$query = $this->db->get();
		if ($query->num_rows() > 0) {
			return TRUE;
		} else {
			return FALSE;
		}
	}

	public function obtener_caja_chica_solicitud($fecha_inicial = '', $fecha_final = '', $inicio = false, $cantidadRegistro = false, $totalSum = false){
        $uid = $this->input->post('uid');
		$ciclo = $this->input->post('ciclo');
		if($this->input->post('idtbl_tramites_vehiculares') != NULL){
            $columns = "tbl_caja_chica.*, tbl_proyectos.numero_proyecto, tbl_proyectos.nombre_proyecto, dtl_almacen.numero_interno";
            $condition = "";
            if($totalSum){
                $columns = "SUM(tbl_caja_chica.monto) AS monto";
                $condition = "AND tbl_caja_chica.confirmacion != 3 AND uid_solicitud_recursos = '$uid'";
            }
            $query = $this->db->query("SELECT $columns FROM tbl_caja_chica LEFT JOIN dtl_almacen ON tbl_caja_chica.dtl_almacen_iddtl_almacen = dtl_almacen.iddtl_almacen LEFT JOIN tbl_proyectos ON tbl_proyectos.idtbl_proyectos = tbl_caja_chica.tbl_proyectos_idtbl_proyectos WHERE tbl_tramites_vehiculares_idtbl_tramites_vehiculares = " . $this->input->post('idtbl_tramites_vehiculares') . " $condition ORDER BY tbl_caja_chica.fecha_compra DESC, tbl_caja_chica.idtbl_caja_chica DESC ");
        }else{
            $buscar = "";
            if($this->input->post('iddtl_almacen') != NULL){
                $buscar = " dtl_almacen_iddtl_almacen = " . $this->input->post('iddtl_almacen') . " ";
            }
            if($fecha_inicial != "" && $fecha_final != ""){
                if($buscar != ""){
                    $buscar = $buscar . " AND ";
                }
                $buscar = $buscar . " fecha_compra BETWEEN '$fecha_inicial' AND '$fecha_final' ";
            }
            if($this->session->userdata("tipo") == 16){
                if($buscar != ""){
                    $buscar = $buscar . " AND ";
                }
                $buscar = $buscar . " (confirmacion > 0) AND confirmacion_direccion = 1 ";
            }
			if($this->session->userdata("id") == 86){
                if($buscar != ""){
                    $buscar = $buscar . " AND ";
                }
                $buscar = $buscar . " (confirmacion > 0) ";
            }
            if($this->session->userdata('tipo') == 19 || $this->session->userdata('tipo') == 17){
                if($buscar != ""){
                    $buscar = $buscar . " AND ";
                }
                $user = $this->session->userdata('id');
                $buscar = $buscar . " tbl_caja_chica.tbl_users_idtbl_users_aprobacion =  $user";
                
            }
            if($this->input->post("tipo") != NULL){
                if($buscar != ""){
                    $buscar = $buscar . " AND ";
                }
                if($this->input->post("tipo") == "contable"){
                    $buscar = $buscar . " comprobante = 'factura' ";
                }else{
                    $buscar = $buscar . " comprobante != 'factura' ";
                }
            }
            $limit = '';
            if ($inicio !== false && $cantidadRegistro !== false) {
                $limit = ' LIMIT ' . $inicio . "," . $cantidadRegistro;
            }
            $columns = "tbl_caja_chica.*, tbl_proyectos.numero_proyecto, tbl_users.nombre, tbl_solicitud_recursos.cantidad, tbl_proyectos.nombre_proyecto, dtl_almacen.numero_interno";
            $condition = "";
            if($totalSum){
                $columns = "SUM(IF(tbl_caja_chica.reembolsado = 0, tbl_caja_chica.monto, 0)) AS monto, SUM(tbl_caja_chica.monto) AS monto_total";
		
                $condition = "AND tbl_caja_chica.confirmacion != 3";
            }
            $query = $this->db->query("SELECT $columns FROM tbl_caja_chica LEFT JOIN tbl_proyectos ON tbl_proyectos.idtbl_proyectos = tbl_caja_chica.tbl_proyectos_idtbl_proyectos LEFT JOIN dtl_almacen ON tbl_caja_chica.dtl_almacen_iddtl_almacen = dtl_almacen.iddtl_almacen LEFT JOIN tbl_users ON tbl_users.idtbl_users = tbl_caja_chica.tbl_users_idtbl_users_aprobacion LEFT JOIN tbl_solicitud_recursos ON tbl_solicitud_recursos.uid = tbl_caja_chica.uid_solicitud_recursos" . ($buscar != "" ? " WHERE " . $buscar : "") . " AND uid_solicitud_recursos = '$uid' AND tbl_caja_chica.ciclo = $ciclo $condition ORDER BY tbl_caja_chica.fecha_compra DESC, tbl_caja_chica.idtbl_caja_chica DESC " . $limit);
        }
        return $query->result();
    }


	public function obtener_caja_chica_personal($fecha_inicial = '', $fecha_final = '', $inicio = false, $cantidadRegistro = false, $totalSum = false){
        $uid = $this->input->post('uid');
		if($this->input->post('idtbl_tramites_vehiculares') != NULL){
            $columns = "tbl_caja_chica.*, tbl_proyectos.numero_proyecto, tbl_proyectos.nombre_proyecto, dtl_almacen.numero_interno";
            $condition = "";
            if($totalSum){
                $columns = "FORMAT(SUM(tbl_caja_chica.monto), 2) AS monto";
                $condition = "AND tbl_caja_chica.confirmacion != 3 AND uid_solicitud_recursos = '$uid'";
            }
            $query = $this->db->query("SELECT $columns FROM tbl_caja_chica LEFT JOIN dtl_almacen ON tbl_caja_chica.dtl_almacen_iddtl_almacen = dtl_almacen.iddtl_almacen LEFT JOIN tbl_proyectos ON tbl_proyectos.idtbl_proyectos = tbl_caja_chica.tbl_proyectos_idtbl_proyectos WHERE tbl_tramites_vehiculares_idtbl_tramites_vehiculares = " . $this->input->post('idtbl_tramites_vehiculares') . " $condition ORDER BY tbl_caja_chica.fecha_compra DESC, tbl_caja_chica.idtbl_caja_chica DESC ");
        }else{
            $buscar = "";
            if($this->input->post('iddtl_almacen') != NULL){
                $buscar = " dtl_almacen_iddtl_almacen = " . $this->input->post('iddtl_almacen') . " ";
            }
            if($fecha_inicial != "" && $fecha_final != ""){
                if($buscar != ""){
                    $buscar = $buscar . " AND ";
                }
                $buscar = $buscar . " fecha_compra BETWEEN '$fecha_inicial' AND '$fecha_final' ";
            }
            if($this->session->userdata("tipo") == 16){
                if($buscar != ""){
                    $buscar = $buscar . " AND ";
                }
                $buscar = $buscar . " (confirmacion > 0) ";
            }
            if($this->session->userdata('tipo') == 19 || $this->session->userdata('tipo') == 17){
                if($buscar != ""){
                    $buscar = $buscar . " AND ";
                }
                $user = $this->session->userdata('id');
                $buscar = $buscar . " tbl_users_idtbl_users_aprobacion =  $user";
                
            }
            if($this->input->post("tipo") != NULL){
                if($buscar != ""){
                    $buscar = $buscar . " AND ";
                }
                if($this->input->post("tipo") == "contable"){
                    $buscar = $buscar . " comprobante = 'factura' ";
                }else{
                    $buscar = $buscar . " comprobante != 'factura' ";
                }
            }
            $limit = '';
            if ($inicio !== false && $cantidadRegistro !== false) {
                $limit = ' LIMIT ' . $inicio . "," . $cantidadRegistro;
            }
            $columns = "tbl_caja_chica.*, tbl_proyectos.numero_proyecto, tbl_proyectos.nombre_proyecto, dtl_almacen.numero_interno";
            $condition = "";
            if($totalSum){
                $columns = "FORMAT(SUM(tbl_caja_chica.monto), 2) AS monto";
                $condition = "AND tbl_caja_chica.confirmacion != 3";
            }
            $query = $this->db->query("SELECT $columns FROM tbl_caja_chica JOIN tbl_solicitud_recursos ON tbl_solicitud_recursos.uid = tbl_caja_chica.uid_solicitud_recursos LEFT JOIN tbl_usuarios ON tbl_usuarios.idtbl_usuarios = tbl_solicitud_recursos.tbl_usuarios_idtbl_usuarios LEFT JOIN tbl_proyectos ON tbl_proyectos.idtbl_proyectos = tbl_caja_chica.tbl_proyectos_idtbl_proyectos LEFT JOIN dtl_almacen ON tbl_caja_chica.dtl_almacen_iddtl_almacen = dtl_almacen.iddtl_almacen " . ($buscar != "" ? " WHERE " . $buscar : "") . " AND tbl_usuarios.uid = '$uid' $condition ORDER BY tbl_caja_chica.fecha_compra DESC, tbl_caja_chica.idtbl_caja_chica DESC " . $limit);
        }
        return $query->result();
    }
}